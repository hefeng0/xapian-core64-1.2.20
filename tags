!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCEPT	queryparser/lemon.c	/^    ACCEPT,$/;"	e	enum:action::e_action	file:
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run aclocal-1.11 $/;"	m
ACLOCAL	docs/Makefile	/^ACLOCAL = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run aclocal-1.11 $/;"	m
ACLOCAL	tests/Makefile	/^ACLOCAL = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run aclocal-1.11 $/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	docs/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	tests/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADDED	matcher/collapser.h	/^    ADDED,$/;"	e	enum:__anon21
ADJ	queryparser/queryparser_token.h	/^#define ADJ /;"	d
AE	languages/compiler/header.h	/^    struct node * AE;$/;"	m	struct:node	typeref:struct:node::node
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	docs/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	tests/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/common -I$(top_srcdir)\/include \\$/;"	m
AM_CPPFLAGS	tests/Makefile	/^AM_CPPFLAGS = -I$(top_srcdir)\/common -I$(top_srcdir)\/include \\$/;"	m
AM_CXXFLAGS	Makefile	/^AM_CXXFLAGS =  -Wall -W -Wredundant-decls -Wpointer-arith -Wcast-qual -Wcast-align -Wno-long-long -Wformat-security -fno-gnu-keywords -Wundef -Woverloaded-virtual -Wshadow -Wstrict-overflow=1 -Winit-self -Wmissing-declarations -fvisibility=hidden$/;"	m
AM_CXXFLAGS	docs/Makefile	/^AM_CXXFLAGS =  -Wall -W -Wredundant-decls -Wpointer-arith -Wcast-qual -Wcast-align -Wno-long-long -Wformat-security -fno-gnu-keywords -Wundef -Woverloaded-virtual -Wshadow -Wstrict-overflow=1 -Winit-self -Wmissing-declarations -fvisibility=hidden$/;"	m
AM_CXXFLAGS	tests/Makefile	/^AM_CXXFLAGS =  -Wall -W -Wredundant-decls -Wpointer-arith -Wcast-qual -Wcast-align -Wno-long-long -Wformat-security -fno-gnu-keywords -Wundef -Woverloaded-virtual -Wshadow -Wstrict-overflow=1 -Winit-self -Wmissing-declarations -fvisibility=hidden$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AND	queryparser/queryparser_token.h	/^#define AND /;"	d
ANSI_CXXFLAGS	Makefile	/^ANSI_CXXFLAGS = $/;"	m
ANSI_CXXFLAGS	docs/Makefile	/^ANSI_CXXFLAGS = $/;"	m
ANSI_CXXFLAGS	tests/Makefile	/^ANSI_CXXFLAGS = $/;"	m
APIDOC_SRC	docs/docsource.mk	/^APIDOC_SRC=\\$/;"	m
AR	Makefile	/^AR = ar$/;"	m
AR	docs/Makefile	/^AR = ar$/;"	m
AR	tests/Makefile	/^AR = ar$/;"	m
ASCENDING	include/xapian/enquire.h	/^	    ASCENDING = 1,$/;"	e	enum:Xapian::Enquire::__anon13
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run autoconf$/;"	m
AUTOCONF	docs/Makefile	/^AUTOCONF = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run autoconf$/;"	m
AUTOCONF	tests/Makefile	/^AUTOCONF = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run autoheader$/;"	m
AUTOHEADER	docs/Makefile	/^AUTOHEADER = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run autoheader$/;"	m
AUTOHEADER	tests/Makefile	/^AUTOHEADER = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run autoheader$/;"	m
AUTOM4TE	Makefile	/^AUTOM4TE = $/;"	m
AUTOM4TE	docs/Makefile	/^AUTOM4TE = $/;"	m
AUTOM4TE	tests/Makefile	/^AUTOM4TE = $/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run automake-1.11$/;"	m
AUTOMAKE	docs/Makefile	/^AUTOMAKE = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run automake-1.11$/;"	m
AUTOMAKE	tests/Makefile	/^AUTOMAKE = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run automake-1.11$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = 1.5 subdir-objects$/;"	m
AUTOMAKE_OPTIONS	tests/Makefile	/^AUTOMAKE_OPTIONS = 1.5 subdir-objects$/;"	m
AVERAGE_LENGTH	include/xapian/weight.h	/^	AVERAGE_LENGTH = 4,$/;"	e	enum:Xapian::Weight::__anon19
AWK	Makefile	/^AWK = awk$/;"	m
AWK	docs/Makefile	/^AWK = awk$/;"	m
AWK	tests/Makefile	/^AWK = awk$/;"	m
Action_add	queryparser/lemon.c	/^void Action_add(app,type,sp,arg)$/;"	f
Action_new	queryparser/lemon.c	/^static struct action *Action_new(void){$/;"	f	file:
Action_sort	queryparser/lemon.c	/^static struct action *Action_sort($/;"	f	file:
AllTermsList	common/alltermslist.h	/^    AllTermsList() { }$/;"	f	class:AllTermsList
AllTermsList	common/alltermslist.h	/^class AllTermsList : public TermList {$/;"	c
AndMaybePostList	matcher/andmaybepostlist.h	/^        AndMaybePostList(PostList *left_,$/;"	f	class:AndMaybePostList
AndMaybePostList	matcher/andmaybepostlist.h	/^class AndMaybePostList : public BranchPostList {$/;"	c
AndNotPostList	matcher/andnotpostlist.cc	/^AndNotPostList::AndNotPostList(PostList *left_,$/;"	f	class:AndNotPostList
AndNotPostList	matcher/andnotpostlist.h	/^class AndNotPostList : public BranchPostList {$/;"	c
ApiTestRunner	tests/apitest.cc	/^class ApiTestRunner : public TestRunner$/;"	c	file:
Assert	common/omassert.h	/^# define Assert(/;"	d
Assert	common/omassert.h	/^#define Assert(/;"	d
AssertEq	common/omassert.h	/^# define AssertEq(/;"	d
AssertEq	common/omassert.h	/^#define AssertEq(/;"	d
AssertEqDouble	common/omassert.h	/^# define AssertEqDouble(/;"	d
AssertEqDouble	common/omassert.h	/^#define AssertEqDouble(/;"	d
AssertEqDoubleParanoid	common/omassert.h	/^# define AssertEqDoubleParanoid(/;"	d
AssertEqParanoid	common/omassert.h	/^# define AssertEqParanoid(/;"	d
AssertParanoid	common/omassert.h	/^# define AssertParanoid(/;"	d
AssertRel	common/omassert.h	/^# define AssertRel(/;"	d
AssertRel	common/omassert.h	/^#define AssertRel(/;"	d
AssertRelParanoid	common/omassert.h	/^# define AssertRelParanoid(/;"	d
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    AssertionError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^    explicit AssertionError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::AssertionError
AssertionError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT AssertionError : public LogicError {$/;"	c	namespace:Xapian
AuthorValueRangeProcessor	tests/queryparsertest.cc	/^    AuthorValueRangeProcessor() {}$/;"	f	struct:AuthorValueRangeProcessor
AuthorValueRangeProcessor	tests/queryparsertest.cc	/^struct AuthorValueRangeProcessor : public Xapian::ValueRangeProcessor {$/;"	s	file:
Auto	include/xapian/dbfactory.h	/^namespace Auto {$/;"	n	namespace:Xapian
AutoPtr	common/autoptr.h	/^# define AutoPtr /;"	d
B	backends/brass/brass_cursor.h	/^	const BrassTable * B;$/;"	m	class:BrassCursor
B	backends/chert/chert_cursor.h	/^	const ChertTable * B;$/;"	m	class:ChertCursor
B	backends/flint/flint_cursor.h	/^	FlintTable * B;$/;"	m	class:FlintCursor
B	languages/compiler/header.h	/^    symbol * B[10];      \/* blocks *\/$/;"	m	struct:generator
BAD_VALUENO	include/xapian/types.h	/^const valueno BAD_VALUENO = static_cast<valueno>(-1);$/;"	m	namespace:Xapian
BIT_MAP_INC	backends/brass/brass_btreebase.cc	/^#define BIT_MAP_INC /;"	d	file:
BIT_MAP_INC	backends/chert/chert_btreebase.cc	/^#define BIT_MAP_INC /;"	d	file:
BIT_MAP_INC	backends/flint/flint_btreebase.cc	/^#define BIT_MAP_INC /;"	d	file:
BLK_UNUSED	backends/brass/brass_cursor.h	/^#define BLK_UNUSED /;"	d
BLK_UNUSED	backends/chert/chert_cursor.h	/^#define BLK_UNUSED /;"	d
BLK_UNUSED	backends/flint/flint_cursor.h	/^#define BLK_UNUSED /;"	d
BLOCK_CAPACITY	backends/brass/brass_table.h	/^#define BLOCK_CAPACITY /;"	d
BLOCK_CAPACITY	backends/chert/chert_table.h	/^#define BLOCK_CAPACITY /;"	d
BLOCK_CAPACITY	backends/flint/flint_table.h	/^#define BLOCK_CAPACITY /;"	d
BM25Weight	include/xapian/weight.h	/^    BM25Weight()$/;"	f	class:Xapian::BM25Weight
BM25Weight	include/xapian/weight.h	/^    BM25Weight(double k1, double k2, double k3, double b, double min_normlen)$/;"	f	class:Xapian::BM25Weight
BM25Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT BM25Weight : public Weight {$/;"	c	namespace:Xapian
BOOLEAN	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	e	enum:__anon30
BOOLEAN_EXCLUSIVE	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	e	enum:__anon30
BOOLEAN_FILTER	queryparser/queryparser_token.h	/^#define BOOLEAN_FILTER /;"	d
BOOL_OP_TO_QUERY	queryparser/queryparser_internal.cc	/^#define BOOL_OP_TO_QUERY(/;"	d	file:
BRA	queryparser/queryparser_token.h	/^#define BRA /;"	d
BRASS	api/compactor.cc	/^    enum { UNKNOWN, BRASS, CHERT, FLINT } backend;$/;"	e	enum:Xapian::Compactor::Internal::__anon2	file:
BRASS_BTREE_MAX_KEY_LEN	backends/brass/brass_table.h	/^#define BRASS_BTREE_MAX_KEY_LEN /;"	d
BRASS_DEFAULT_BLOCK_SIZE	backends/brass/brass_types.h	/^#define BRASS_DEFAULT_BLOCK_SIZE /;"	d
BRASS_VERSION	backends/brass/brass_version.cc	/^#define BRASS_VERSION /;"	d	file:
BTREE_CURSOR_LEVELS	backends/brass/brass_table.h	/^#define BTREE_CURSOR_LEVELS /;"	d
BTREE_CURSOR_LEVELS	backends/chert/chert_table.h	/^#define BTREE_CURSOR_LEVELS /;"	d
BTREE_CURSOR_LEVELS	backends/flint/flint_table.h	/^#define BTREE_CURSOR_LEVELS /;"	d
BTREE_DEBUG_FULL	backends/brass/brass_table.cc	/^#undef BTREE_DEBUG_FULL$/;"	d	file:
BTREE_DEBUG_FULL	backends/chert/chert_table.cc	/^#undef BTREE_DEBUG_FULL$/;"	d	file:
BTREE_DEBUG_FULL	backends/flint/flint_table.cc	/^#undef BTREE_DEBUG_FULL$/;"	d	file:
BUFSIZE	tests/api_replicate.cc	/^#define BUFSIZE /;"	d	file:
BUFSIZE	tests/api_replicate.cc	/^#undef BUFSIZE$/;"	d	file:
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = $(am__append_34)$/;"	m
BUILT_SOURCES	tests/Makefile	/^BUILT_SOURCES = $(am__append_1)$/;"	m
BYTES_PER_BLOCK_NUMBER	backends/brass/brass_table.h	/^#define BYTES_PER_BLOCK_NUMBER /;"	d
BYTES_PER_BLOCK_NUMBER	backends/chert/chert_table.h	/^#define BYTES_PER_BLOCK_NUMBER /;"	d
BYTES_PER_BLOCK_NUMBER	backends/flint/flint_table.h	/^#define BYTES_PER_BLOCK_NUMBER /;"	d
BYTE_PAIR_RANGE	backends/brass/brass_table.cc	/^#define BYTE_PAIR_RANGE /;"	d	file:
BYTE_PAIR_RANGE	backends/chert/chert_table.cc	/^#define BYTE_PAIR_RANGE /;"	d	file:
BYTE_PAIR_RANGE	backends/flint/flint_table.cc	/^#define BYTE_PAIR_RANGE /;"	d	file:
B_GE_removed	languages/kraaij_pohlmann.h	/^    unsigned char B_GE_removed;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
B_Y_found	languages/english.h	/^    unsigned char B_Y_found;$/;"	m	class:Xapian::InternalStemEnglish
B_Y_found	languages/kraaij_pohlmann.h	/^    unsigned char B_Y_found;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
B_Y_found	languages/porter.h	/^    unsigned char B_Y_found;$/;"	m	class:Xapian::InternalStemPorter
B_continue_stemming_noun_suffixes	languages/turkish.h	/^    unsigned char B_continue_stemming_noun_suffixes;$/;"	m	class:Xapian::InternalStemTurkish
B_e_found	languages/dutch.h	/^    unsigned char B_e_found;$/;"	m	class:Xapian::InternalStemDutch
B_ending_removed	languages/finnish.h	/^    unsigned char B_ending_removed;$/;"	m	class:Xapian::InternalStemFinnish
B_standard_suffix_removed	languages/romanian.h	/^    unsigned char B_standard_suffix_removed;$/;"	m	class:Xapian::InternalStemRomanian
B_stemmed	languages/kraaij_pohlmann.h	/^    unsigned char B_stemmed;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
BackendManager	tests/harness/backendmanager.h	/^    BackendManager() { }$/;"	f	class:BackendManager
BackendManager	tests/harness/backendmanager.h	/^class BackendManager {$/;"	c
BackendManagerBrass	tests/harness/backendmanager_brass.h	/^    BackendManagerBrass() { }$/;"	f	class:BackendManagerBrass
BackendManagerBrass	tests/harness/backendmanager_brass.h	/^class BackendManagerBrass : public BackendManager {$/;"	c
BackendManagerChert	tests/harness/backendmanager_chert.h	/^    BackendManagerChert() { }$/;"	f	class:BackendManagerChert
BackendManagerChert	tests/harness/backendmanager_chert.h	/^class BackendManagerChert : public BackendManager {$/;"	c
BackendManagerFlint	tests/harness/backendmanager_flint.h	/^    BackendManagerFlint() { }$/;"	f	class:BackendManagerFlint
BackendManagerFlint	tests/harness/backendmanager_flint.h	/^class BackendManagerFlint : public BackendManager {$/;"	c
BackendManagerInMemory	tests/harness/backendmanager_inmemory.h	/^    BackendManagerInMemory() { }$/;"	f	class:BackendManagerInMemory
BackendManagerInMemory	tests/harness/backendmanager_inmemory.h	/^class BackendManagerInMemory : public BackendManager {$/;"	c
BackendManagerLocal	tests/harness/backendmanager_local.h	/^    BackendManagerLocal() {$/;"	f	class:BackendManagerLocal
BackendManagerLocal	tests/harness/backendmanager_local.h	/^# define BackendManagerLocal /;"	d
BackendManagerLocal	tests/harness/backendmanager_local.h	/^class BackendManagerLocal : public BackendManager {$/;"	c
BackendManagerMulti	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::BackendManagerMulti(const std::string & subtype_)$/;"	f	class:BackendManagerMulti
BackendManagerMulti	tests/harness/backendmanager_multi.h	/^class BackendManagerMulti : public BackendManager {$/;"	c
BackendManagerRemote	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::BackendManagerRemote(const std::string & remote_type_)$/;"	f	class:BackendManagerRemote
BackendManagerRemote	tests/harness/backendmanager_remote.h	/^class BackendManagerRemote : public BackendManager {$/;"	c
BackendManagerRemoteProg	tests/harness/backendmanager_remoteprog.h	/^    BackendManagerRemoteProg(const std::string & remote_type_)$/;"	f	class:BackendManagerRemoteProg
BackendManagerRemoteProg	tests/harness/backendmanager_remoteprog.h	/^class BackendManagerRemoteProg : public BackendManagerRemote {$/;"	c
BackendManagerRemoteTcp	tests/harness/backendmanager_remotetcp.h	/^    BackendManagerRemoteTcp(const std::string & remote_type_)$/;"	f	class:BackendManagerRemoteTcp
BackendManagerRemoteTcp	tests/harness/backendmanager_remotetcp.h	/^class BackendManagerRemoteTcp : public BackendManagerRemote {$/;"	c
BackendProperties	tests/harness/testrunner.cc	/^struct BackendProperties {$/;"	s	file:
BitReader	common/bitstream.h	/^    BitReader(const std::string &buf_)$/;"	f	class:Xapian::BitReader
BitReader	common/bitstream.h	/^    BitReader(const std::string &buf_, size_t skip)$/;"	f	class:Xapian::BitReader
BitReader	common/bitstream.h	/^class XAPIAN_VISIBILITY_DEFAULT BitReader {$/;"	c	namespace:Xapian
BitWriter	common/bitstream.h	/^    BitWriter() : n_bits(0), acc(0) { }$/;"	f	class:Xapian::BitWriter
BitWriter	common/bitstream.h	/^    BitWriter(const std::string & seed) : buf(seed), n_bits(0), acc(0) { }$/;"	f	class:Xapian::BitWriter
BitWriter	common/bitstream.h	/^class XAPIAN_VISIBILITY_DEFAULT BitWriter {$/;"	c	namespace:Xapian
BoolWeight	include/xapian/weight.h	/^    BoolWeight() { }$/;"	f	class:Xapian::BoolWeight
BoolWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT BoolWeight : public Weight {$/;"	c	namespace:Xapian
Boolean	queryparser/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	t	typeref:enum:__anon23	file:
BranchPostList	matcher/branchpostlist.h	/^	BranchPostList(PostList *l_, PostList *r_, MultiMatch *matcher_)$/;"	f	class:BranchPostList
BranchPostList	matcher/branchpostlist.h	/^class BranchPostList : public PostList {$/;"	c
Brass	backends/brass/brass_cursor.h	/^namespace Brass {$/;"	n
Brass	backends/brass/brass_postlist.h	/^namespace Brass {$/;"	n
Brass	backends/brass/brass_spelling.h	/^namespace Brass {$/;"	n
Brass	backends/brass/brass_table.h	/^namespace Brass {$/;"	n
Brass	backends/brass/brass_values.cc	/^namespace Brass {$/;"	n	file:
Brass	backends/brass/brass_values.h	/^namespace Brass {$/;"	n
Brass	include/xapian/dbfactory.h	/^namespace Brass {$/;"	n	namespace:Xapian
BrassAllDocsPostList	backends/brass/brass_alldocspostlist.cc	/^BrassAllDocsPostList::BrassAllDocsPostList(Xapian::Internal::RefCntPtr<const BrassDatabase> db_,$/;"	f	class:BrassAllDocsPostList
BrassAllDocsPostList	backends/brass/brass_alldocspostlist.h	/^class BrassAllDocsPostList : public BrassPostList {$/;"	c
BrassAllTermsList	backends/brass/brass_alltermslist.h	/^    BrassAllTermsList(Xapian::Internal::RefCntPtr<const BrassDatabase> database_,$/;"	f	class:BrassAllTermsList
BrassAllTermsList	backends/brass/brass_alltermslist.h	/^class BrassAllTermsList : public AllTermsList {$/;"	c
BrassCompact	backends/brass/brass_compact.cc	/^namespace BrassCompact {$/;"	n	file:
BrassCursor	backends/brass/brass_cursor.cc	/^BrassCursor::BrassCursor(const BrassTable *B_)$/;"	f	class:BrassCursor
BrassCursor	backends/brass/brass_cursor.h	/^class XAPIAN_VISIBILITY_DEFAULT BrassCursor {$/;"	c
BrassCursor	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(BrassCursor);$/;"	v
BrassDatabase	backends/brass/brass_database.cc	/^BrassDatabase::BrassDatabase(const string &brass_dir, int action,$/;"	f	class:BrassDatabase
BrassDatabase	backends/brass/brass_database.h	/^class BrassDatabase : public Xapian::Database::Internal {$/;"	c
BrassDatabase	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(BrassDatabase);$/;"	v
BrassDatabaseReplicator	backends/brass/brass_databasereplicator.cc	/^BrassDatabaseReplicator::BrassDatabaseReplicator(const string & db_dir_)$/;"	f	class:BrassDatabaseReplicator
BrassDatabaseReplicator	backends/brass/brass_databasereplicator.h	/^class BrassDatabaseReplicator : public Xapian::DatabaseReplicator {$/;"	c
BrassDatabaseStats	backends/brass/brass_dbstats.h	/^    BrassDatabaseStats()$/;"	f	class:BrassDatabaseStats
BrassDatabaseStats	backends/brass/brass_dbstats.h	/^class BrassDatabaseStats {$/;"	c
BrassDocument	backends/brass/brass_document.h	/^    BrassDocument(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> db,$/;"	f	class:BrassDocument
BrassDocument	backends/brass/brass_document.h	/^class BrassDocument : public Xapian::Document::Internal {$/;"	c
BrassLazyTable	backends/brass/brass_lazytable.h	/^    BrassLazyTable(const char * name_, const std::string & path, bool readonly,$/;"	f	class:BrassLazyTable
BrassLazyTable	backends/brass/brass_lazytable.h	/^class BrassLazyTable : public BrassTable {$/;"	c
BrassMetadataTermList	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::BrassMetadataTermList($/;"	f	class:BrassMetadataTermList
BrassMetadataTermList	backends/brass/brass_metadata.h	/^class BrassMetadataTermList : public AllTermsList {$/;"	c
BrassPositionList	backends/brass/brass_positionlist.h	/^    BrassPositionList() : have_started(false) {}$/;"	f	class:BrassPositionList
BrassPositionList	backends/brass/brass_positionlist.h	/^    BrassPositionList(const BrassTable * table, Xapian::docid did,$/;"	f	class:BrassPositionList
BrassPositionList	backends/brass/brass_positionlist.h	/^class BrassPositionList : public PositionList {$/;"	c
BrassPositionListTable	backends/brass/brass_positionlist.h	/^    BrassPositionListTable(const string & dbdir, bool readonly)$/;"	f	class:BrassPositionListTable
BrassPositionListTable	backends/brass/brass_positionlist.h	/^class BrassPositionListTable : public BrassLazyTable {$/;"	c
BrassPostList	backends/brass/brass_postlist.cc	/^BrassPostList::BrassPostList(Xapian::Internal::RefCntPtr<const BrassDatabase> this_db_,$/;"	f	class:BrassPostList
BrassPostList	backends/brass/brass_postlist.h	/^class BrassPostList : public LeafPostList {$/;"	c
BrassPostListTable	backends/brass/brass_postlist.h	/^	BrassPostListTable(const string & path_, bool readonly_)$/;"	f	class:BrassPostListTable
BrassPostListTable	backends/brass/brass_postlist.h	/^class BrassPostListTable : public BrassTable {$/;"	c
BrassRecordTable	backends/brass/brass_record.h	/^	BrassRecordTable(const string & path_, bool readonly_)$/;"	f	class:BrassRecordTable
BrassRecordTable	backends/brass/brass_record.h	/^class BrassRecordTable : public BrassTable {$/;"	c
BrassSpellingTable	backends/brass/brass_spelling.h	/^    BrassSpellingTable(const std::string & dbdir, bool readonly)$/;"	f	class:BrassSpellingTable
BrassSpellingTable	backends/brass/brass_spelling.h	/^class BrassSpellingTable : public BrassLazyTable {$/;"	c
BrassSpellingTermList	backends/brass/brass_spelling.h	/^    BrassSpellingTermList(const std::string & data_)$/;"	f	class:BrassSpellingTermList
BrassSpellingTermList	backends/brass/brass_spelling.h	/^class BrassSpellingTermList : public TermList {$/;"	c
BrassSpellingWordsList	backends/brass/brass_spellingwordslist.h	/^    BrassSpellingWordsList(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:BrassSpellingWordsList
BrassSpellingWordsList	backends/brass/brass_spellingwordslist.h	/^class BrassSpellingWordsList : public AllTermsList {$/;"	c
BrassSynonymTable	backends/brass/brass_synonym.h	/^    BrassSynonymTable(const std::string & dbdir, bool readonly)$/;"	f	class:BrassSynonymTable
BrassSynonymTable	backends/brass/brass_synonym.h	/^class BrassSynonymTable : public BrassLazyTable {$/;"	c
BrassSynonymTermList	backends/brass/brass_synonym.h	/^    BrassSynonymTermList(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:BrassSynonymTermList
BrassSynonymTermList	backends/brass/brass_synonym.h	/^class BrassSynonymTermList : public AllTermsList {$/;"	c
BrassTable	backends/brass/brass_table.cc	/^BrassTable::BrassTable(const char * tablename_, const string & path_,$/;"	f	class:BrassTable
BrassTable	backends/brass/brass_table.h	/^class XAPIAN_VISIBILITY_DEFAULT BrassTable {$/;"	c
BrassTable	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(BrassTable);$/;"	v
BrassTableCheck	backends/brass/brass_check.h	/^	BrassTableCheck(const char * tablename_, const std::string &path_,$/;"	f	class:BrassTableCheck
BrassTableCheck	backends/brass/brass_check.h	/^class BrassTableCheck : public BrassTable {$/;"	c
BrassTable_base	backends/brass/brass_btreebase.cc	/^BrassTable_base::BrassTable_base()$/;"	f	class:BrassTable_base
BrassTable_base	backends/brass/brass_btreebase.h	/^class XAPIAN_VISIBILITY_DEFAULT BrassTable_base {$/;"	c
BrassTermList	backends/brass/brass_termlist.cc	/^BrassTermList::BrassTermList(Xapian::Internal::RefCntPtr<const BrassDatabase> db_,$/;"	f	class:BrassTermList
BrassTermList	backends/brass/brass_termlist.h	/^class BrassTermList : public TermList {$/;"	c
BrassTermListTable	backends/brass/brass_termlisttable.h	/^    BrassTermListTable(const std::string & dbdir, bool readonly)$/;"	f	class:BrassTermListTable
BrassTermListTable	backends/brass/brass_termlisttable.h	/^class BrassTermListTable : public BrassLazyTable {$/;"	c
BrassValueList	backends/brass/brass_valuelist.h	/^    BrassValueList(Xapian::valueno slot_,$/;"	f	class:BrassValueList
BrassValueList	backends/brass/brass_valuelist.h	/^class BrassValueList : public Xapian::ValueIterator::Internal {$/;"	c
BrassValueManager	backends/brass/brass_values.h	/^    BrassValueManager(BrassPostListTable * postlist_table_,$/;"	f	class:BrassValueManager
BrassValueManager	backends/brass/brass_values.h	/^class BrassValueManager {$/;"	c
BrassVersion	backends/brass/brass_version.h	/^    BrassVersion(const std::string & dbdir) : filename(dbdir) {$/;"	f	class:BrassVersion
BrassVersion	backends/brass/brass_version.h	/^class BrassVersion {$/;"	c
BrassWritableDatabase	backends/brass/brass_database.cc	/^BrassWritableDatabase::BrassWritableDatabase(const string &dir, int action,$/;"	f	class:BrassWritableDatabase
BrassWritableDatabase	backends/brass/brass_database.h	/^class BrassWritableDatabase : public BrassDatabase {$/;"	c
BtreeCheck	backends/flint/flint_check.h	/^	BtreeCheck(const char * tablename_, const std::string &path_,$/;"	f	class:BtreeCheck
BtreeCheck	backends/flint/flint_check.h	/^class BtreeCheck : public FlintTable {$/;"	c
Btree_modified	backends/brass/brass_table.h	/^	mutable bool Btree_modified;$/;"	m	class:BrassTable
Btree_modified	backends/chert/chert_table.h	/^	mutable bool Btree_modified;$/;"	m	class:ChertTable
Btree_modified	backends/flint/flint_table.h	/^	mutable bool Btree_modified;$/;"	m	class:FlintTable
ByQueryIndexCmp	api/omenquire.cc	/^    ByQueryIndexCmp(const tmap_t &tmap_) : tmap(tmap_) {}$/;"	f	class:Xapian::ByQueryIndexCmp
ByQueryIndexCmp	api/omenquire.cc	/^class ByQueryIndexCmp {$/;"	c	namespace:Xapian	file:
ByteLengthPrefixedStringItor	backends/byte_length_strings.h	/^    ByteLengthPrefixedStringItor(const std::string & s)$/;"	f	class:ByteLengthPrefixedStringItor
ByteLengthPrefixedStringItor	backends/byte_length_strings.h	/^    ByteLengthPrefixedStringItor(const unsigned char * p_, size_t left_)$/;"	f	class:ByteLengthPrefixedStringItor
ByteLengthPrefixedStringItor	backends/byte_length_strings.h	/^class ByteLengthPrefixedStringItor {$/;"	c
ByteLengthPrefixedStringItorGt	backends/byte_length_strings.h	/^struct ByteLengthPrefixedStringItorGt {$/;"	s
C	backends/brass/brass_cursor.h	/^	Brass::Cursor * C;$/;"	m	class:BrassCursor
C	backends/brass/brass_table.h	/^	mutable Brass::Cursor C[BTREE_CURSOR_LEVELS];$/;"	m	class:BrassTable
C	backends/chert/chert_cursor.h	/^	Cursor * C;$/;"	m	class:ChertCursor
C	backends/chert/chert_table.h	/^	mutable Cursor C[BTREE_CURSOR_LEVELS];$/;"	m	class:ChertTable
C	backends/flint/flint_cursor.h	/^	Cursor_ * C;$/;"	m	class:FlintCursor
C	backends/flint/flint_table.h	/^	mutable Cursor_ C[BTREE_CURSOR_LEVELS];$/;"	m	class:FlintTable
C2	backends/brass/brass_table.h	/^#define C2 /;"	d
C2	backends/chert/chert_table.h	/^#define C2 /;"	d
C2	backends/flint/flint_table.h	/^#define C2 /;"	d
CAPACITY	languages/compiler/header.h	/^#define CAPACITY(/;"	d
CAPACITY	languages/steminternal.h	/^CAPACITY(const symbol* p)$/;"	f
CC	Makefile	/^CC = gcc$/;"	m
CC	docs/Makefile	/^CC = gcc$/;"	m
CC	tests/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	docs/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	tests/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tests/Makefile	/^CCLD = $(CC)$/;"	m
CC_FOR_BUILD	Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CC_FOR_BUILD	docs/Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CC_FOR_BUILD	tests/Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	docs/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tests/Makefile	/^CFLAGS = -g -O2$/;"	m
CHANGES_MAGIC_STRING	backends/brass/brass_replicate_internal.h	/^#define CHANGES_MAGIC_STRING /;"	d
CHANGES_MAGIC_STRING	backends/chert/chert_replicate_internal.h	/^#define CHANGES_MAGIC_STRING /;"	d
CHANGES_MAGIC_STRING	backends/flint/flint_replicate_internal.h	/^#define CHANGES_MAGIC_STRING /;"	d
CHANGES_VERSION	backends/brass/brass_replicate_internal.h	/^#define CHANGES_VERSION /;"	d
CHANGES_VERSION	backends/chert/chert_replicate_internal.h	/^#define CHANGES_VERSION /;"	d
CHANGES_VERSION	backends/flint/flint_replicate_internal.h	/^#define CHANGES_VERSION /;"	d
CHERT	api/compactor.cc	/^    enum { UNKNOWN, BRASS, CHERT, FLINT } backend;$/;"	e	enum:Xapian::Compactor::Internal::__anon2	file:
CHERT_BTREE_MAX_KEY_LEN	backends/chert/chert_table.h	/^#define CHERT_BTREE_MAX_KEY_LEN /;"	d
CHERT_DEFAULT_BLOCK_SIZE	backends/chert/chert_types.h	/^#define CHERT_DEFAULT_BLOCK_SIZE /;"	d
CHERT_VERSION	backends/chert/chert_version.cc	/^#define CHERT_VERSION /;"	d	file:
CHUNKSIZE	backends/brass/brass_postlist.cc	/^const unsigned int CHUNKSIZE = 2000;$/;"	v
CHUNKSIZE	backends/chert/chert_postlist.cc	/^const unsigned int CHUNKSIZE = 2000;$/;"	v
CHUNKSIZE	backends/flint/flint_postlist.cc	/^const unsigned int CHUNKSIZE = 2000;$/;"	v
CHUNKSIZE	net/remoteconnection.cc	/^#define CHUNKSIZE /;"	d	file:
CHUNK_SIZE_THRESHOLD	backends/brass/brass_values.cc	/^static const size_t CHUNK_SIZE_THRESHOLD = 2000;$/;"	v	file:
CHUNK_SIZE_THRESHOLD	backends/chert/chert_values.cc	/^static const size_t CHUNK_SIZE_THRESHOLD = 2000;$/;"	v	file:
CJK	queryparser/cjk-tokenizer.h	/^namespace CJK {$/;"	n
CJKTERM	queryparser/queryparser_token.h	/^#define CJKTERM /;"	d
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^    CJKTokenIterator()$/;"	f	class:CJKTokenIterator
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^    CJKTokenIterator(const Xapian::Utf8Iterator & it_)$/;"	f	class:CJKTokenIterator
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^    CJKTokenIterator(const std::string & s)$/;"	f	class:CJKTokenIterator
CJKTokenIterator	queryparser/cjk-tokenizer.h	/^class CJKTokenIterator {$/;"	c
CLEANFILES	Makefile	/^CLEANFILES = $(am__append_35)$/;"	m
CLEANFILES	tests/Makefile	/^CLEANFILES = $(am__append_8)$/;"	m
CLONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalMatchSpy::__anon33	file:
CLONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalPostingSource::__anon31	file:
CLONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalWeight::__anon32	file:
CLOSESOCKET	net/tcpserver.cc	/^# define CLOSESOCKET(/;"	d	file:
CLOSE_PUNCTUATION	include/xapian/unicode.h	/^    CLOSE_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon18
COLLECTION_SIZE	include/xapian/weight.h	/^	COLLECTION_SIZE = 1,$/;"	e	enum:Xapian::Weight::__anon19
COMBINING_SPACING_MARK	include/xapian/unicode.h	/^    COMBINING_SPACING_MARK,$/;"	e	enum:Xapian::Unicode::__anon18
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	tests/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPLETE	queryparser/lemon.c	/^    COMPLETE,              \/* The status is used during followset and *\/$/;"	e	enum:config::__anon25	file:
COMPRESSED	backends/brass/brass_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:BrassCursor::__anon3
COMPRESSED	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:ChertCursor::__anon4
COMPRESSED	backends/flint/flint_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:FlintCursor::__anon5
COMPRESS_MIN	backends/brass/brass_table.cc	/^const size_t COMPRESS_MIN = 4;$/;"	v
COMPRESS_MIN	backends/chert/chert_table.cc	/^const size_t COMPRESS_MIN = 4;$/;"	v
COMPRESS_MIN	backends/flint/flint_table.cc	/^const size_t COMPRESS_MIN = 4;$/;"	v
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES = xapian-core.spec cmake\/xapian-config.cmake \\$/;"	m
CONFIG_CLEAN_FILES	docs/Makefile	/^CONFIG_CLEAN_FILES = doxygen_api.conf doxygen_source.conf \\$/;"	m
CONFIG_CLEAN_FILES	tests/Makefile	/^CONFIG_CLEAN_FILES = runtest runsrv submitperftest$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	docs/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	tests/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	docs/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	tests/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONNECTOR_PUNCTUATION	include/xapian/unicode.h	/^    CONNECTOR_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon18
CONST_STRLEN	common/stringutils.h	/^#define CONST_STRLEN(/;"	d
CONTROL	include/xapian/unicode.h	/^    CONTROL,$/;"	e	enum:Xapian::Unicode::__anon18
COUNT_CLOSEDEXC	tests/api_closedb.cc	/^#define COUNT_CLOSEDEXC(/;"	d	file:
COVERAGE_CONFIGURE	Makefile	/^COVERAGE_CONFIGURE = \\$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	docs/Makefile	/^CPP = gcc -E$/;"	m
CPP	tests/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	docs/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	tests/Makefile	/^CPPFLAGS = $/;"	m
CPUTimer	tests/harness/cputimer.h	/^    CPUTimer() : start(get_current_cputime()) { }$/;"	f	class:CPUTimer
CPUTimer	tests/harness/cputimer.h	/^class CPUTimer {$/;"	c
CREATE_SIZE	languages/steminternal.cc	/^#define CREATE_SIZE /;"	d	file:
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	tests/Makefile	/^CTAGS = ctags$/;"	m
CURRENCY_SYMBOL	include/xapian/unicode.h	/^    CURRENCY_SYMBOL,$/;"	e	enum:Xapian::Unicode::__anon18
CURR_FORMAT	backends/brass/brass_btreebase.cc	/^#define CURR_FORMAT /;"	d	file:
CURR_FORMAT	backends/chert/chert_btreebase.cc	/^#define CURR_FORMAT /;"	d	file:
CURR_FORMAT	backends/flint/flint_btreebase.cc	/^#define CURR_FORMAT /;"	d	file:
CXX	Makefile	/^CXX = g++$/;"	m
CXX	docs/Makefile	/^CXX = g++$/;"	m
CXX	tests/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	tests/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	docs/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	tests/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	docs/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	tests/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	docs/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tests/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXLD	Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tests/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	Makefile	/^CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
CXXLINK	tests/Makefile	/^CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	docs/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	tests/Makefile	/^CYGPATH_W = echo$/;"	m
C_isalnum	common/stringutils.h	/^inline bool C_isalnum(char ch) {$/;"	f
C_isalpha	common/stringutils.h	/^inline bool C_isalpha(char ch) {$/;"	f
C_isdigit	common/stringutils.h	/^inline bool C_isdigit(char ch) {$/;"	f
C_islcxdigit	common/stringutils.h	/^inline bool C_islcxdigit(char ch) {$/;"	f
C_islower	common/stringutils.h	/^inline bool C_islower(char ch) {$/;"	f
C_isnotalnum	common/stringutils.h	/^inline bool C_isnotalnum(char ch) { return !C_isalnum(ch); }$/;"	f
C_isnotalpha	common/stringutils.h	/^inline bool C_isnotalpha(char ch) { return !C_isalpha(ch); }$/;"	f
C_isnotdigit	common/stringutils.h	/^inline bool C_isnotdigit(char ch) { return !C_isdigit(ch); }$/;"	f
C_isnotlower	common/stringutils.h	/^inline bool C_isnotlower(char ch) { return !C_islower(ch); }$/;"	f
C_isnotsign	common/stringutils.h	/^inline bool C_isnotsign(char ch) { return !C_issign(ch); }$/;"	f
C_isnotspace	common/stringutils.h	/^inline bool C_isnotspace(char ch) { return !C_isspace(ch); }$/;"	f
C_isnotupper	common/stringutils.h	/^inline bool C_isnotupper(char ch) { return !C_isupper(ch); }$/;"	f
C_isnotxdigit	common/stringutils.h	/^inline bool C_isnotxdigit(char ch) { return !C_isxdigit(ch); }$/;"	f
C_issign	common/stringutils.h	/^inline bool C_issign(char ch) {$/;"	f
C_isspace	common/stringutils.h	/^inline bool C_isspace(char ch) {$/;"	f
C_isupdig	common/stringutils.h	/^inline bool C_isupdig(char ch) {$/;"	f
C_isupper	common/stringutils.h	/^inline bool C_isupper(char ch) {$/;"	f
C_isxdigit	common/stringutils.h	/^inline bool C_isxdigit(char ch) {$/;"	f
C_style	languages/compiler/analyser.c	/^static struct node * C_style(struct analyser * a, char * s, int token) {$/;"	f	file:
C_tab_	common/stringutils.h	/^inline unsigned char C_tab_(char ch) {$/;"	f
C_tolower	common/stringutils.h	/^inline char C_tolower(char ch) {$/;"	f
C_toupper	common/stringutils.h	/^inline char C_toupper(char ch) {$/;"	f
ChangeMaxweightPostingSource	tests/api_postingsource.cc	/^    ChangeMaxweightPostingSource(Xapian::docid maxid_accessed_)$/;"	f	class:ChangeMaxweightPostingSource
ChangeMaxweightPostingSource	tests/api_postingsource.cc	/^class ChangeMaxweightPostingSource : public Xapian::PostingSource {$/;"	c	file:
CheckInitWeight	tests/api_weight.cc	/^    CheckInitWeight(unsigned &z, unsigned &n)$/;"	f	class:CheckInitWeight
CheckInitWeight	tests/api_weight.cc	/^class CheckInitWeight : public Xapian::Weight {$/;"	c	file:
CheckStatsWeight	tests/api_weight.cc	/^    CheckStatsWeight(const Xapian::Database & db_,$/;"	f	class:CheckStatsWeight
CheckStatsWeight	tests/api_weight.cc	/^class CheckStatsWeight : public Xapian::Weight {$/;"	c	file:
Chert	backends/chert/chert_postlist.h	/^namespace Chert {$/;"	n
Chert	include/xapian/dbfactory.h	/^namespace Chert {$/;"	n	namespace:Xapian
ChertAllDocsModifiedPostList	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::ChertAllDocsModifiedPostList(Xapian::Internal::RefCntPtr<const ChertDatabase> db_,$/;"	f	class:ChertAllDocsModifiedPostList
ChertAllDocsModifiedPostList	backends/chert/chert_alldocsmodifiedpostlist.h	/^class ChertAllDocsModifiedPostList : public ChertAllDocsPostList {$/;"	c
ChertAllDocsPostList	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::ChertAllDocsPostList(Xapian::Internal::RefCntPtr<const ChertDatabase> db_,$/;"	f	class:ChertAllDocsPostList
ChertAllDocsPostList	backends/chert/chert_alldocspostlist.h	/^class ChertAllDocsPostList : public ChertPostList {$/;"	c
ChertAllTermsList	backends/chert/chert_alltermslist.h	/^    ChertAllTermsList(Xapian::Internal::RefCntPtr<const ChertDatabase> database_,$/;"	f	class:ChertAllTermsList
ChertAllTermsList	backends/chert/chert_alltermslist.h	/^class ChertAllTermsList : public AllTermsList {$/;"	c
ChertCompact	backends/chert/chert_compact.cc	/^namespace ChertCompact {$/;"	n	file:
ChertCursor	backends/chert/chert_cursor.cc	/^ChertCursor::ChertCursor(const ChertTable *B_)$/;"	f	class:ChertCursor
ChertCursor	backends/chert/chert_cursor.h	/^class XAPIAN_VISIBILITY_DEFAULT ChertCursor {$/;"	c
ChertCursor	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(ChertCursor);$/;"	v
ChertDatabase	backends/chert/chert_database.cc	/^ChertDatabase::ChertDatabase(const string &chert_dir, int action,$/;"	f	class:ChertDatabase
ChertDatabase	backends/chert/chert_database.h	/^class ChertDatabase : public Xapian::Database::Internal {$/;"	c
ChertDatabase	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(ChertDatabase);$/;"	v
ChertDatabaseReplicator	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::ChertDatabaseReplicator(const string & db_dir_)$/;"	f	class:ChertDatabaseReplicator
ChertDatabaseReplicator	backends/chert/chert_databasereplicator.h	/^class ChertDatabaseReplicator : public Xapian::DatabaseReplicator {$/;"	c
ChertDatabaseStats	backends/chert/chert_dbstats.h	/^    ChertDatabaseStats()$/;"	f	class:ChertDatabaseStats
ChertDatabaseStats	backends/chert/chert_dbstats.h	/^class ChertDatabaseStats {$/;"	c
ChertDocument	backends/chert/chert_document.h	/^    ChertDocument(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> db,$/;"	f	class:ChertDocument
ChertDocument	backends/chert/chert_document.h	/^class ChertDocument : public Xapian::Document::Internal {$/;"	c
ChertLazyTable	backends/chert/chert_lazytable.h	/^    ChertLazyTable(const char * name_, const std::string & path, bool readonly,$/;"	f	class:ChertLazyTable
ChertLazyTable	backends/chert/chert_lazytable.h	/^class ChertLazyTable : public ChertTable {$/;"	c
ChertMetadataTermList	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::ChertMetadataTermList($/;"	f	class:ChertMetadataTermList
ChertMetadataTermList	backends/chert/chert_metadata.h	/^class ChertMetadataTermList : public AllTermsList {$/;"	c
ChertModifiedPostList	backends/chert/chert_modifiedpostlist.h	/^    ChertModifiedPostList(Xapian::Internal::RefCntPtr<const ChertDatabase> this_db_,$/;"	f	class:ChertModifiedPostList
ChertModifiedPostList	backends/chert/chert_modifiedpostlist.h	/^class ChertModifiedPostList : public ChertPostList {$/;"	c
ChertPositionList	backends/chert/chert_positionlist.h	/^    ChertPositionList() : have_started(false) {}$/;"	f	class:ChertPositionList
ChertPositionList	backends/chert/chert_positionlist.h	/^    ChertPositionList(const ChertTable * table, Xapian::docid did,$/;"	f	class:ChertPositionList
ChertPositionList	backends/chert/chert_positionlist.h	/^class ChertPositionList : public PositionList {$/;"	c
ChertPositionListTable	backends/chert/chert_positionlist.h	/^    ChertPositionListTable(const string & dbdir, bool readonly)$/;"	f	class:ChertPositionListTable
ChertPositionListTable	backends/chert/chert_positionlist.h	/^class ChertPositionListTable : public ChertLazyTable {$/;"	c
ChertPostList	backends/chert/chert_postlist.cc	/^ChertPostList::ChertPostList(Xapian::Internal::RefCntPtr<const ChertDatabase> this_db_,$/;"	f	class:ChertPostList
ChertPostList	backends/chert/chert_postlist.h	/^class ChertPostList : public LeafPostList {$/;"	c
ChertPostListTable	backends/chert/chert_postlist.h	/^	ChertPostListTable(const string & path_, bool readonly_)$/;"	f	class:ChertPostListTable
ChertPostListTable	backends/chert/chert_postlist.h	/^class ChertPostListTable : public ChertTable {$/;"	c
ChertRecordTable	backends/chert/chert_record.h	/^	ChertRecordTable(const string & path_, bool readonly_)$/;"	f	class:ChertRecordTable
ChertRecordTable	backends/chert/chert_record.h	/^class ChertRecordTable : public ChertTable {$/;"	c
ChertSpellingTable	backends/chert/chert_spelling.h	/^    ChertSpellingTable(const std::string & dbdir, bool readonly)$/;"	f	class:ChertSpellingTable
ChertSpellingTable	backends/chert/chert_spelling.h	/^class ChertSpellingTable : public ChertLazyTable {$/;"	c
ChertSpellingTermList	backends/chert/chert_spelling.h	/^    ChertSpellingTermList(const std::string & data_)$/;"	f	class:ChertSpellingTermList
ChertSpellingTermList	backends/chert/chert_spelling.h	/^class ChertSpellingTermList : public TermList {$/;"	c
ChertSpellingWordsList	backends/chert/chert_spellingwordslist.h	/^    ChertSpellingWordsList(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:ChertSpellingWordsList
ChertSpellingWordsList	backends/chert/chert_spellingwordslist.h	/^class ChertSpellingWordsList : public AllTermsList {$/;"	c
ChertSynonymTable	backends/chert/chert_synonym.h	/^    ChertSynonymTable(const std::string & dbdir, bool readonly)$/;"	f	class:ChertSynonymTable
ChertSynonymTable	backends/chert/chert_synonym.h	/^class ChertSynonymTable : public ChertLazyTable {$/;"	c
ChertSynonymTermList	backends/chert/chert_synonym.h	/^    ChertSynonymTermList(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:ChertSynonymTermList
ChertSynonymTermList	backends/chert/chert_synonym.h	/^class ChertSynonymTermList : public AllTermsList {$/;"	c
ChertTable	backends/chert/chert_table.cc	/^ChertTable::ChertTable(const char * tablename_, const string & path_,$/;"	f	class:ChertTable
ChertTable	backends/chert/chert_table.h	/^class XAPIAN_VISIBILITY_DEFAULT ChertTable {$/;"	c
ChertTable	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(ChertTable);$/;"	v
ChertTableCheck	backends/chert/chert_check.h	/^	ChertTableCheck(const char * tablename_, const std::string &path_,$/;"	f	class:ChertTableCheck
ChertTableCheck	backends/chert/chert_check.h	/^class ChertTableCheck : public ChertTable {$/;"	c
ChertTable_base	backends/chert/chert_btreebase.cc	/^ChertTable_base::ChertTable_base()$/;"	f	class:ChertTable_base
ChertTable_base	backends/chert/chert_btreebase.h	/^class XAPIAN_VISIBILITY_DEFAULT ChertTable_base {$/;"	c
ChertTermList	backends/chert/chert_termlist.cc	/^ChertTermList::ChertTermList(Xapian::Internal::RefCntPtr<const ChertDatabase> db_,$/;"	f	class:ChertTermList
ChertTermList	backends/chert/chert_termlist.h	/^class ChertTermList : public TermList {$/;"	c
ChertTermListTable	backends/chert/chert_termlisttable.h	/^    ChertTermListTable(const std::string & dbdir, bool readonly)$/;"	f	class:ChertTermListTable
ChertTermListTable	backends/chert/chert_termlisttable.h	/^class ChertTermListTable : public ChertLazyTable {$/;"	c
ChertValueList	backends/chert/chert_valuelist.h	/^    ChertValueList(Xapian::valueno slot_,$/;"	f	class:ChertValueList
ChertValueList	backends/chert/chert_valuelist.h	/^class ChertValueList : public Xapian::ValueIterator::Internal {$/;"	c
ChertValueManager	backends/chert/chert_values.h	/^    ChertValueManager(ChertPostListTable * postlist_table_,$/;"	f	class:ChertValueManager
ChertValueManager	backends/chert/chert_values.h	/^class ChertValueManager {$/;"	c
ChertVersion	backends/chert/chert_version.h	/^    ChertVersion(const std::string & dbdir) : filename(dbdir) {$/;"	f	class:ChertVersion
ChertVersion	backends/chert/chert_version.h	/^class ChertVersion {$/;"	c
ChertWritableDatabase	backends/chert/chert_database.cc	/^ChertWritableDatabase::ChertWritableDatabase(const string &dir, int action,$/;"	f	class:ChertWritableDatabase
ChertWritableDatabase	backends/chert/chert_database.h	/^class ChertWritableDatabase : public ChertDatabase {$/;"	c
CmpByFirstUsed	api/compactor.cc	/^    CmpByFirstUsed(const vector<pair<Xapian::docid, Xapian::docid> > & ur)$/;"	f	class:CmpByFirstUsed
CmpByFirstUsed	api/compactor.cc	/^class CmpByFirstUsed {$/;"	c	file:
CmpMaxOrTerms	matcher/queryoptimiser.cc	/^struct CmpMaxOrTerms {$/;"	s	file:
CollapseData	matcher/collapser.h	/^    CollapseData(const Xapian::Internal::MSetItem & item)$/;"	f	class:CollapseData
CollapseData	matcher/collapser.h	/^class CollapseData {$/;"	c
Collapser	matcher/collapser.h	/^    Collapser(Xapian::valueno slot_, Xapian::doccount collapse_max_)$/;"	f	class:Collapser
Collapser	matcher/collapser.h	/^class Collapser {$/;"	c
Compactor	api/compactor.cc	/^Compactor::Compactor() : internal(new Compactor::Internal()) { }$/;"	f	class:Xapian::Compactor
Compactor	include/xapian/compactor.h	/^class XAPIAN_VISIBILITY_DEFAULT Compactor {$/;"	c	namespace:Xapian
ComparePostListTermFreqAscending	matcher/multiandpostlist.h	/^    struct ComparePostListTermFreqAscending {$/;"	s	class:MultiAndPostList
ComparePostListTermFreqAscending	matcher/queryoptimiser.cc	/^struct ComparePostListTermFreqAscending {$/;"	s	file:
CompareSubValueListsByDocId	backends/multi/multi_valuelist.cc	/^struct CompareSubValueListsByDocId {$/;"	s	file:
CompareTermListSizeAscending	expand/esetinternal.cc	/^struct CompareTermListSizeAscending {$/;"	s	namespace:Xapian	file:
CompareTermListsByTerm	backends/multi/multi_alltermslist.cc	/^struct CompareTermListsByTerm {$/;"	s	file:
CompileTimeAssert	common/omassert.h	/^# define CompileTimeAssert(/;"	d
CompressTables	queryparser/lemon.c	/^void CompressTables(lemp)$/;"	f
ConfigPrint	queryparser/lemon.c	/^void ConfigPrint(fp,cfp)$/;"	f
Configcmp	queryparser/lemon.c	/^int Configcmp(a,b)$/;"	f
Configlist_add	queryparser/lemon.c	/^struct config *Configlist_add(rp,dot)$/;"	f
Configlist_addbasis	queryparser/lemon.c	/^struct config *Configlist_addbasis(rp,dot)$/;"	f
Configlist_basis	queryparser/lemon.c	/^struct config *Configlist_basis(){$/;"	f
Configlist_closure	queryparser/lemon.c	/^void Configlist_closure(lemp)$/;"	f
Configlist_eat	queryparser/lemon.c	/^void Configlist_eat(cfp)$/;"	f
Configlist_init	queryparser/lemon.c	/^void Configlist_init(){$/;"	f
Configlist_reset	queryparser/lemon.c	/^void Configlist_reset(){$/;"	f
Configlist_return	queryparser/lemon.c	/^struct config *Configlist_return(){$/;"	f
Configlist_sort	queryparser/lemon.c	/^void Configlist_sort(){$/;"	f
Configlist_sortbasis	queryparser/lemon.c	/^void Configlist_sortbasis(){$/;"	f
Configtable_clear	queryparser/lemon.c	/^void Configtable_clear(f)$/;"	f
Configtable_find	queryparser/lemon.c	/^struct config *Configtable_find(key)$/;"	f
Configtable_init	queryparser/lemon.c	/^void Configtable_init(){$/;"	f
Configtable_insert	queryparser/lemon.c	/^int Configtable_insert(data)$/;"	f
ConnectionClosed	net/remoteserver.cc	/^struct ConnectionClosed { };$/;"	s	file:
ConstDatabaseWrapper	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::ConstDatabaseWrapper($/;"	f	class:ConstDatabaseWrapper
ConstDatabaseWrapper	common/const_database_wrapper.h	/^class ConstDatabaseWrapper : public Xapian::Database::Internal {$/;"	c
ContiguousAllDocsPostList	common/contiguousalldocspostlist.h	/^    ContiguousAllDocsPostList(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> db_,$/;"	f	class:ContiguousAllDocsPostList
ContiguousAllDocsPostList	common/contiguousalldocspostlist.h	/^class ContiguousAllDocsPostList : public LeafPostList {$/;"	c
CreateProcess	libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CtrlHandler	net/tcpserver.cc	/^CtrlHandler(DWORD fdwCtrlType)$/;"	f	file:
Cursor	backends/brass/brass_cursor.h	/^	Cursor() : p(0), c(-1), n(BLK_UNUSED), rewrite(false)$/;"	f	class:Brass::Cursor
Cursor	backends/brass/brass_cursor.h	/^class Cursor {$/;"	c	namespace:Brass
Cursor	backends/chert/chert_cursor.h	/^	Cursor() : p(0), c(-1), n(BLK_UNUSED), rewrite(false)$/;"	f	class:Cursor
Cursor	backends/chert/chert_cursor.h	/^class Cursor {$/;"	c
CursorGt	backends/brass/brass_compact.cc	/^struct CursorGt {$/;"	s	namespace:BrassCompact	file:
CursorGt	backends/chert/chert_compact.cc	/^struct CursorGt {$/;"	s	namespace:ChertCompact	file:
CursorGt	backends/flint/flint_compact.cc	/^struct CursorGt {$/;"	s	namespace:FlintCompact	file:
Cursor_	backends/flint/flint_cursor.h	/^	Cursor_() : p(0), c(-1), n(BLK_UNUSED), rewrite(false)$/;"	f	class:Cursor_
Cursor_	backends/flint/flint_cursor.h	/^class Cursor_ {$/;"	c
D2	backends/brass/brass_table.h	/^#define D2 /;"	d
D2	backends/chert/chert_table.h	/^#define D2 /;"	d
D2	backends/flint/flint_table.h	/^#define D2 /;"	d
DASH_PUNCTUATION	include/xapian/unicode.h	/^    DASH_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon18
DATA	Makefile	/^DATA = $(cmake_DATA) $(dist_m4data_DATA) $(nodist_pkgconfig_DATA)$/;"	m
DATA	docs/Makefile	/^DATA = $(doc_DATA)$/;"	m
DB_CREATE	include/xapian/database.h	/^const int DB_CREATE = 2;$/;"	m	namespace:Xapian
DB_CREATE_OR_OPEN	include/xapian/database.h	/^const int DB_CREATE_OR_OPEN = 1;$/;"	m	namespace:Xapian
DB_CREATE_OR_OVERWRITE	include/xapian/database.h	/^const int DB_CREATE_OR_OVERWRITE = 3;$/;"	m	namespace:Xapian
DB_OPEN	include/xapian/database.h	/^const int DB_OPEN = 4;$/;"	m	namespace:Xapian
DEBUGLOG_CATEGORY_ALWAYS	common/debuglog.h	/^    DEBUGLOG_CATEGORY_ALWAYS = 31$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_API	common/debuglog.h	/^    DEBUGLOG_CATEGORY_API = ('A' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_DB	common/debuglog.h	/^    DEBUGLOG_CATEGORY_DB = ('D' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_EXCEPTION	common/debuglog.h	/^    DEBUGLOG_CATEGORY_EXCEPTION = ('X' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_EXPAND	common/debuglog.h	/^    DEBUGLOG_CATEGORY_EXPAND = ('E' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_MATCH	common/debuglog.h	/^    DEBUGLOG_CATEGORY_MATCH = ('M' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_NEVER	common/debuglog.h	/^    DEBUGLOG_CATEGORY_NEVER = 0,$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_QUERYPARSER	common/debuglog.h	/^    DEBUGLOG_CATEGORY_QUERYPARSER = ('Q' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_REMOTE	common/debuglog.h	/^    DEBUGLOG_CATEGORY_REMOTE = ('R' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_REPLICA	common/debuglog.h	/^    DEBUGLOG_CATEGORY_REPLICA = ('C' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_SPELLING	common/debuglog.h	/^    DEBUGLOG_CATEGORY_SPELLING = ('S' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_UNKNOWN	common/debuglog.h	/^    DEBUGLOG_CATEGORY_UNKNOWN = ('U' - '@'),$/;"	e	enum:debuglog_categories
DEBUGLOG_CATEGORY_WTCALC	common/debuglog.h	/^    DEBUGLOG_CATEGORY_WTCALC = ('W' - '@'),$/;"	e	enum:debuglog_categories
DECIMAL_DIGIT_NUMBER	include/xapian/unicode.h	/^    DECIMAL_DIGIT_NUMBER,$/;"	e	enum:Xapian::Unicode::__anon18
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	tests/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INTERVAL	bin/xapian-replicate.cc	/^#define DEFAULT_INTERVAL /;"	d	file:
DEFAULT_PORT	tests/harness/backendmanager_remotetcp.cc	/^#define DEFAULT_PORT /;"	d	file:
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(absentterm1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(absentterm2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(alldocspl1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(alldocspl2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(allowqterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(allpostlist1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(bm25weight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(boolquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(checkatleast1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(checkatleast2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(checkatleast3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(cutoff1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(eliteset5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(emptyop1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(emptyquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(emptyterm1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandfunctor1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandmaxitems1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(expandweights4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(fetchdocs1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(getdoc1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(getmterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(getmterms2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(matches1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(maxattain1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(msetfirst1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(msetmaxitems1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(msetzeroitems1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(multidb3, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(multidb4, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(multidb5, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(pctcutoff1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(pctcutoff2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(pctcutoff3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(poscollapse1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(puncterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(qlen1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(qterminfo1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(qterminfo2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(repeatquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(reversebool1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(reversebool2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rset1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rset2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rsetmultidb1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(rsetmultidb3, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(scaleweight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(scaleweight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(simplequery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(simplequery2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(simplequery3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(spaceterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlist4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(termlisttermfreq1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(topercent1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(topercent2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(tradweight1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(tradweight4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(uuid1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(wildquery1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(wqf1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(xor1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(xor2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_anydb.cc	/^DEFINE_TESTCASE(zerodocid1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(alldocspl3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(blocksize1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(bm25weight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(databasemodified1, writable && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(dbstats1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(doclenaftercommit1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(emptydb1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(failedreplace1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(failedreplace2, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(itorskiptofromend1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(lockfilealreadyopen1, brass || chert) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(lockfilefd0or1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(lockfileumask1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(matchdecider4, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(modifiedpostlist1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msetfirst2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msetweights1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msize1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(msize2, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(orcheck1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(ordecay1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(ordecay2, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(phrase3, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(phrasebug1, generated && positional) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(qpmemoryleak1, writable && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(replacedoc7, writable && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(replacedoc8, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(stubdb7, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(totaldoclen1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(tradweight2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(valuesaftercommit1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_backend.cc	/^DEFINE_TESTCASE(xordecay1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb10, writable && metadata) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb2, writable && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb4, writable && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb5, transactions && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb6, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb7, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb8, writable && spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_closedb.cc	/^DEFINE_TESTCASE(closedb9, writable && synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_collapse.cc	/^DEFINE_TESTCASE(collapsekey5,backend) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactempty1, brass || chert) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmerge1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmergesynonym1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmissingtables1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmultichunks1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactmultipass1, brass || chert) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactnorenumber1, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub2, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub3, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_compact.cc	/^DEFINE_TESTCASE(compactstub4, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(allterms6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collapsekey4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(collfreq1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(consistency1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(esetiterator1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(esetiterator2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(flintbackwardcompat1, flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(flintbackwardcompat2, flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(flintdatabaseformaterror1, flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(flintdatabaseformaterror2, flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(flintdatabaseformaterror3, flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(flintdatabaseopen1, flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(flintdatabaseopeningerror1, flint) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(keepalive1, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchall1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchdecider1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchdecider2, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(matchdecider3, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(msetiterator1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(msetiterator2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(msetiterator3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(multiexpand1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(netstats1, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(postlist6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(rsetmultidb2, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(sortrel1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(sortvalue1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(specialterms1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(specialterms2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb1, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb2, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb3, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb4, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb5, backend && !inmemory && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(stubdb6, inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(termstats, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(userweight1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_db.cc	/^DEFINE_TESTCASE(valuesetmatchdecider2, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_generated.cc	/^DEFINE_TESTCASE(copyassign1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_generated.cc	/^DEFINE_TESTCASE(defaultctor1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy2, generated)$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy4, generated)$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy5, backend)$/;"	f
DEFINE_TESTCASE	tests/api_matchspy.cc	/^DEFINE_TESTCASE(matchspy6, !backend)$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata2, metadata && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata3, metadata) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata4, metadata && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(metadata5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_metadata.cc	/^DEFINE_TESTCASE(writeread1, writable && metadata) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(addvalue1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptymset1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptyquery2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptyquery3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(emptyquerypart1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(getqterms1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(getqterms2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(nosuchdb1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(poscollapse2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(querylen1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(querylen2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(queryvalid1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(rset3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(rset4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(scaleweight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(scaleweight4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(singlesubq1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(stemlangs1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(subqcollapse1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(trivial1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(uninitdb1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(valuesetmatchdecider1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_nodb.cc	/^DEFINE_TESTCASE(weight1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(document1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(document2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_none.cc	/^DEFINE_TESTCASE(nosubdatabases1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opsynonym.cc	/^DEFINE_TESTCASE(synonym4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuege4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuele1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_opvalue.cc	/^DEFINE_TESTCASE(valuerange5, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(consistency3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(pctcutoff4, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(pctcutoff5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent3, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent6, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_percentages.cc	/^DEFINE_TESTCASE(topercent7, generated) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(near1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(near2, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(phrase1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(phrase2, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(positfromtermit1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(poslist1, positional) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(poslist2, positional && writable) {$/;"	f
DEFINE_TESTCASE	tests/api_posdb.cc	/^DEFINE_TESTCASE(poslist3, positional && writable) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(changemaxweightsource1, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(emptyvalwtsource1, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource1, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource2, remote) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource3, backend && !remote && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(externalsource4, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(fixedweightsource1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(valueweightsource1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(valueweightsource2, valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_postingsource.cc	/^DEFINE_TESTCASE(valueweightsource3, valuestats && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_qpbackend.cc	/^DEFINE_TESTCASE(qpsynonympartial1, synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(matchnothing1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(nearsubqueries1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(queryterms1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_query.cc	/^DEFINE_TESTCASE(xor3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_replacedoc.cc	/^DEFINE_TESTCASE(modtermwdf1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_replacedoc.cc	/^DEFINE_TESTCASE(poslistupdate1, positional && writable) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate1, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate2, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate3, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate4, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate5, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_replicate.cc	/^DEFINE_TESTCASE(replicate6, replicas) {$/;"	f
DEFINE_TESTCASE	tests/api_scalability.cc	/^DEFINE_TESTCASE(bigoaddvalue1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(double_register_leak, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(registry1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(registry2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(registry3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_document1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_document2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_serialise.cc	/^DEFINE_TESTCASE(serialise_query4, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(changesorter1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(multivaluekeymaker1,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctor1,backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctor2,writable && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctorempty1,backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sorting.cc	/^DEFINE_TESTCASE(sortfunctorremote1,remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sortingold.cc	/^DEFINE_TESTCASE(oldchangesorter1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sortingold.cc	/^DEFINE_TESTCASE(oldsortfunctor1,backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sortingold.cc	/^DEFINE_TESTCASE(oldsortfunctor2,writable && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_sortingold.cc	/^DEFINE_TESTCASE(oldsortfunctorempty1,backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell0, spelling || remote) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell1, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell2, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell3, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell4, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell5, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell6, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell7, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_spelling.cc	/^DEFINE_TESTCASE(spell8, spelling) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stem1, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stem2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_stem.cc	/^DEFINE_TESTCASE(stemlangs2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(badtransaction1, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(canceltransaction1, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(canceltransaction2, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_transdb.cc	/^DEFINE_TESTCASE(committransaction1, transactions) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(caseconvert1,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(caseconvert2,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(unicode1,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(unicodepredicates1,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(utf8convert1,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(utf8iterator1,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_unicode.cc	/^DEFINE_TESTCASE(utf8iterator2,!backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats1, writable && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats2, transactions && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats3, valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats4, transactions && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestats.cc	/^DEFINE_TESTCASE(valuestats5, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource4, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(decvalwtsource5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(fixedweightsource2, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuemapsource1, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuemapsource2, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuestream1, backend && !multi) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuestream2, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valuestream3, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_valuestream.cc	/^DEFINE_TESTCASE(valueweightsource5, writable && valuestats) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25weight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25weight4, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(bm25weight5, backend) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(checkinitweight1, backend && !multi && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(checkstatsweight1, backend && !remote) {$/;"	f
DEFINE_TESTCASE	tests/api_weight.cc	/^DEFINE_TESTCASE(tradweight3, !backend) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc4, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(adddoc6, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(allpostlist2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(consistency2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(crashrecovery1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(cursordelbug1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(databaseassign1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc4, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(deldoc6, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(emptyterm2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(implicitendsession1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(lazytablebug1, brass || chert || flint) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(longpositionlist1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(modifyvalues1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(nomoredocids1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(phraseorneartoand1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(postlist7, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc2, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc3, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc4, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc5, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(replacedoc6, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(synonymitor1, writable && synonyms) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(termtoolong1, writable) {$/;"	f
DEFINE_TESTCASE	tests/api_wrdb.cc	/^DEFINE_TESTCASE(uniqueterm1, writable) {$/;"	f
DEFINE_TESTCASE	tests/harness/testsuite.h	/^#define DEFINE_TESTCASE(/;"	d
DEFINE_TESTCASE	tests/perftest/perftest_matchdecider.cc	/^DEFINE_TESTCASE(alldocsiter1, writable && !remote && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/perftest/perftest_matchdecider.cc	/^DEFINE_TESTCASE(valuesetmatchdecider1, writable && !remote && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/perftest/perftest_randomidx.cc	/^DEFINE_TESTCASE(randomidx1, writable && !inmemory) {$/;"	f
DEFINE_TESTCASE	tests/soaktest/soaktest_queries.cc	/^DEFINE_TESTCASE(queries1, writable && !remote && !inmemory) {$/;"	f
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	docs/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tests/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DELETED_POSTING	backends/brass/brass_inverter.h	/^const Xapian::termcount DELETED_POSTING = Xapian::termcount(-1);$/;"	v
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	docs/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	tests/Makefile	/^DEPDIR = .deps$/;"	m
DESCENDING	include/xapian/enquire.h	/^	    DESCENDING = 0,$/;"	e	enum:Xapian::Enquire::__anon13
DIR	common/msvc_dirent.cc	/^struct DIR$/;"	s	file:
DIR	common/msvc_dirent.h	/^typedef struct DIR DIR;$/;"	t	typeref:struct:DIR
DIR_CONTENTS_FILES	docs/docsource.mk	/^DIR_CONTENTS_FILES=\\$/;"	m
DIR_END	backends/brass/brass_table.h	/^#define DIR_END(/;"	d
DIR_END	backends/chert/chert_table.h	/^#define DIR_END(/;"	d
DIR_END	backends/flint/flint_check.cc	/^#define DIR_END(/;"	d	file:
DIR_END	backends/flint/flint_table.cc	/^#define DIR_END(/;"	d	file:
DIR_START	backends/brass/brass_cursor.cc	/^#define DIR_START /;"	d	file:
DIR_START	backends/brass/brass_table.h	/^#define DIR_START /;"	d
DIR_START	backends/chert/chert_cursor.cc	/^#define DIR_START /;"	d	file:
DIR_START	backends/chert/chert_table.h	/^#define DIR_START /;"	d
DIR_START	backends/flint/flint_check.cc	/^#define DIR_START /;"	d	file:
DIR_START	backends/flint/flint_cursor.cc	/^#define DIR_START /;"	d	file:
DIR_START	backends/flint/flint_table.cc	/^#define DIR_START /;"	d	file:
DISTCLEANFILES	Makefile	/^DISTCLEANFILES = xapian-config pkgconfig\/xapian-core.pc \\$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	docs/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	tests/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.xz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = README $(am__configure_deps) $(am__noinst_HEADERS_DIST) \\$/;"	m
DIST_COMMON	docs/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	tests/Makefile	/^DIST_COMMON = $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__libbrasscheck_la_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	docs/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	tests/Makefile	/^DIST_SOURCES = $(am__apitest_SOURCES_DIST) \\$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	docs/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	tests/Makefile	/^DLLTOOL = false$/;"	m
DOC_LENGTH	include/xapian/weight.h	/^	DOC_LENGTH = 256,$/;"	e	enum:Xapian::Weight::__anon19
DOC_LENGTH_MAX	include/xapian/weight.h	/^	DOC_LENGTH_MAX = 1024,$/;"	e	enum:Xapian::Weight::__anon19
DOC_LENGTH_MIN	include/xapian/weight.h	/^	DOC_LENGTH_MIN = 512,$/;"	e	enum:Xapian::Weight::__anon19
DONT_CARE	include/xapian/enquire.h	/^	    DONT_CARE = 2$/;"	e	enum:Xapian::Enquire::__anon13
DONT_COMPRESS	backends/brass/brass_table.h	/^#define DONT_COMPRESS /;"	d
DONT_COMPRESS	backends/chert/chert_table.h	/^#define DONT_COMPRESS /;"	d
DONT_COMPRESS	backends/flint/flint_table.h	/^#define DONT_COMPRESS /;"	d
DOT	Makefile	/^DOT = $/;"	m
DOT	docs/Makefile	/^DOT = $/;"	m
DOT	tests/Makefile	/^DOT = $/;"	m
DOXYGEN	Makefile	/^DOXYGEN = $/;"	m
DOXYGEN	docs/Makefile	/^DOXYGEN = $/;"	m
DOXYGEN	tests/Makefile	/^DOXYGEN = $/;"	m
DOXYGEN_DOT_PATH	Makefile	/^DOXYGEN_DOT_PATH = $/;"	m
DOXYGEN_DOT_PATH	docs/Makefile	/^DOXYGEN_DOT_PATH = $/;"	m
DOXYGEN_DOT_PATH	tests/Makefile	/^DOXYGEN_DOT_PATH = $/;"	m
DO_UNPACK_UINT_ERRCHECK	backends/brass/brass_btreebase.cc	/^#define DO_UNPACK_UINT_ERRCHECK(/;"	d	file:
DO_UNPACK_UINT_ERRCHECK	backends/chert/chert_btreebase.cc	/^#define DO_UNPACK_UINT_ERRCHECK(/;"	d	file:
DO_UNPACK_UINT_ERRCHECK	backends/flint/flint_btreebase.cc	/^#define DO_UNPACK_UINT_ERRCHECK(/;"	d	file:
DSYMUTIL	Makefile	/^DSYMUTIL = dsymutil$/;"	m
DSYMUTIL	docs/Makefile	/^DSYMUTIL = dsymutil$/;"	m
DSYMUTIL	tests/Makefile	/^DSYMUTIL = dsymutil$/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	docs/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	tests/Makefile	/^DUMPBIN = $/;"	m
Database	api/omdatabase.cc	/^Database::Database()$/;"	f	class:Xapian::Database
Database	api/omdatabase.cc	/^Database::Database(Database::Internal *internal_)$/;"	f	class:Xapian::Database
Database	api/omdatabase.cc	/^Database::Database(const Database &other)$/;"	f	class:Xapian::Database
Database	backends/dbfactory.cc	/^Database::Database(const string &path)$/;"	f	class:Xapian::Database
Database	include/xapian/database.h	/^class XAPIAN_VISIBILITY_DEFAULT Database {$/;"	c	namespace:Xapian
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    DatabaseCorruptError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^    explicit DatabaseCorruptError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseCorruptError
DatabaseCorruptError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseCorruptError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    DatabaseCreateError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^    explicit DatabaseCreateError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseCreateError
DatabaseCreateError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseCreateError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    DatabaseError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^    explicit DatabaseError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseError
DatabaseError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseError : public RuntimeError {$/;"	c	namespace:Xapian
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    DatabaseLockError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^    explicit DatabaseLockError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseLockError
DatabaseLockError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseLockError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseMaster	common/replication.h	/^    DatabaseMaster(const std::string & path_) : path(path_) {}$/;"	f	class:Xapian::DatabaseMaster
DatabaseMaster	common/replication.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseMaster {$/;"	c	namespace:Xapian
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    DatabaseModifiedError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^    explicit DatabaseModifiedError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseModifiedError
DatabaseModifiedError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseModifiedError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    DatabaseOpeningError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^    explicit DatabaseOpeningError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseOpeningError
DatabaseOpeningError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseOpeningError : public DatabaseError {$/;"	c	namespace:Xapian
DatabaseReplica	api/replication.cc	/^DatabaseReplica::DatabaseReplica()$/;"	f	class:DatabaseReplica
DatabaseReplica	api/replication.cc	/^DatabaseReplica::DatabaseReplica(const DatabaseReplica & other)$/;"	f	class:DatabaseReplica
DatabaseReplica	api/replication.cc	/^DatabaseReplica::DatabaseReplica(const string & path)$/;"	f	class:DatabaseReplica
DatabaseReplica	common/replication.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseReplica {$/;"	c	namespace:Xapian
DatabaseReplicator	common/databasereplicator.h	/^	DatabaseReplicator() { }$/;"	f	class:Xapian::DatabaseReplicator
DatabaseReplicator	common/databasereplicator.h	/^class DatabaseReplicator {$/;"	c	namespace:Xapian
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    DatabaseVersionError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^    explicit DatabaseVersionError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DatabaseVersionError
DatabaseVersionError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DatabaseVersionError : public DatabaseOpeningError {$/;"	c	namespace:Xapian
DateValueRangeProcessor	include/xapian/queryparser.h	/^    DateValueRangeProcessor(Xapian::valueno slot_, bool prefer_mdy_ = false,$/;"	f	class:Xapian::DateValueRangeProcessor
DateValueRangeProcessor	include/xapian/queryparser.h	/^    DateValueRangeProcessor(Xapian::valueno slot_, const char * str_,$/;"	f	class:Xapian::DateValueRangeProcessor
DateValueRangeProcessor	include/xapian/queryparser.h	/^    DateValueRangeProcessor(Xapian::valueno slot_, const std::string &str_,$/;"	f	class:Xapian::DateValueRangeProcessor
DateValueRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT DateValueRangeProcessor : public StringValueRangeProcessor {$/;"	c	namespace:Xapian
DebugLogFunc	common/debuglog.h	/^    DebugLogFunc(const void * this_ptr_, debuglog_categories category_,$/;"	f	class:DebugLogFunc
DebugLogFunc	common/debuglog.h	/^class DebugLogFunc {$/;"	c
DebugLogFuncVoid	common/debuglog.h	/^    DebugLogFuncVoid(const void * this_ptr_, debuglog_categories category_,$/;"	f	class:DebugLogFuncVoid
DebugLogFuncVoid	common/debuglog.h	/^class DebugLogFuncVoid {$/;"	c
DebugLogger	common/debuglog.h	/^    DebugLogger()$/;"	f	class:DebugLogger
DebugLogger	common/debuglog.h	/^class DebugLogger {$/;"	c
DecreasingValueWeightPostingSource	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::DecreasingValueWeightPostingSource($/;"	f	class:DecreasingValueWeightPostingSource
DecreasingValueWeightPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT DecreasingValueWeightPostingSource$/;"	c	namespace:Xapian
DerefWrapper_	include/xapian/derefwrapper.h	/^    explicit DerefWrapper_(const T &res_) : res(res_) { }$/;"	f	class:Xapian::DerefWrapper_
DerefWrapper_	include/xapian/derefwrapper.h	/^class DerefWrapper_ {$/;"	c	namespace:Xapian
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    DocNotFoundError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^    explicit DocNotFoundError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::DocNotFoundError
DocNotFoundError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT DocNotFoundError : public RuntimeError {$/;"	c	namespace:Xapian
Document	api/omdocument.cc	/^Document::Document() : internal(new Xapian::Document::Internal)$/;"	f	class:Xapian::Document
Document	api/omdocument.cc	/^Document::Document(Document::Internal *internal_) : internal(internal_)$/;"	f	class:Xapian::Document
Document	api/omdocument.cc	/^Document::Document(const Document &other)$/;"	f	class:Xapian::Document
Document	include/xapian/document.h	/^class XAPIAN_VISIBILITY_DEFAULT Document {$/;"	c	namespace:Xapian
DocumentValueList	api/documentvaluelist.h	/^    DocumentValueList(const Xapian::Internal::RefCntPtr<Xapian::Document::Internal> & doc_)$/;"	f	class:DocumentValueList
DocumentValueList	api/documentvaluelist.h	/^class DocumentValueList : public ValueList {$/;"	c
EADDRINUSE	common/remoteconnection.h	/^#  define EADDRINUSE /;"	d
EATMYDATA	Makefile	/^EATMYDATA = $/;"	m
EATMYDATA	docs/Makefile	/^EATMYDATA = $/;"	m
EATMYDATA	tests/Makefile	/^EATMYDATA = $/;"	m
ECHO_C	Makefile	/^ECHO_C = \\c$/;"	m
ECHO_C	docs/Makefile	/^ECHO_C = \\c$/;"	m
ECHO_C	tests/Makefile	/^ECHO_C = \\c$/;"	m
ECHO_N	Makefile	/^ECHO_N = $/;"	m
ECHO_N	docs/Makefile	/^ECHO_N = $/;"	m
ECHO_N	tests/Makefile	/^ECHO_N = $/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	docs/Makefile	/^ECHO_T = $/;"	m
ECHO_T	tests/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EGREP	docs/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EGREP	tests/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EINPROGRESS	common/remoteconnection.h	/^#  define EINPROGRESS /;"	d
EMPTY	matcher/collapser.h	/^    EMPTY,$/;"	e	enum:__anon21
EMPTY_GROUP_OK	queryparser/queryparser_token.h	/^#define EMPTY_GROUP_OK /;"	d
ENCLOSING_MARK	include/xapian/unicode.h	/^    ENCLOSING_MARK,$/;"	e	enum:Xapian::Unicode::__anon18
END_OF_TESTCASES	tests/queryparsertest.cc	/^#define END_OF_TESTCASES /;"	d	file:
END_OF_TESTCASES	tests/termgentest.cc	/^#define END_OF_TESTCASES /;"	d	file:
ERRMSGSIZE	queryparser/lemon.c	/^#define ERRMSGSIZE /;"	d	file:
ERROR	queryparser/lemon.c	/^    ERROR,$/;"	e	enum:action::e_action	file:
ERROR	queryparser/queryparser_token.h	/^#define ERROR /;"	d
ESet	api/omenquire.cc	/^ESet::ESet() : internal(new Internal) { }$/;"	f	class:Xapian::ESet
ESet	api/omenquire.cc	/^ESet::ESet(const ESet & other) : internal(other.internal)$/;"	f	class:Xapian::ESet
ESet	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT ESet {$/;"	c	namespace:Xapian
ESetIterator	include/xapian/enquire.h	/^	ESetIterator() : index(0), eset() { }$/;"	f	class:Xapian::ESetIterator
ESetIterator	include/xapian/enquire.h	/^	ESetIterator(Xapian::termcount index_, const ESet & eset_)$/;"	f	class:Xapian::ESetIterator
ESetIterator	include/xapian/enquire.h	/^	ESetIterator(const ESetIterator &other) {$/;"	f	class:Xapian::ESetIterator
ESetIterator	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT ESetIterator {$/;"	c	namespace:Xapian
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	tests/Makefile	/^ETAGS = etags$/;"	m
ETIMEDOUT	common/remoteconnection.h	/^#  define ETIMEDOUT /;"	d
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	docs/Makefile	/^EXEEXT = $/;"	m
EXEEXT	tests/Makefile	/^EXEEXT = $/;"	m
EXTENDER	languages/compiler/space.c	/^#define EXTENDER /;"	d	file:
EXTRA_DIST	Makefile	/^EXTRA_DIST = ChangeLog ChangeLog.0 ChangeLog.examples HACKING \\$/;"	m
EXTRA_DIST	docs/Makefile	/^EXTRA_DIST = doxygen_api.conf.in doxygen_source.conf.in \\$/;"	m
EXTRA_DIST	tests/Makefile	/^EXTRA_DIST = collate-test generate-api_generated api_all.h \\$/;"	m
EXTRA_PROGRAMS	Makefile	/^EXTRA_PROGRAMS =$/;"	m
EmptyPostList	common/emptypostlist.h	/^    EmptyPostList() { }$/;"	f	class:EmptyPostList
EmptyPostList	common/emptypostlist.h	/^class EmptyPostList : public PostList {$/;"	c
Enquire	api/omenquire.cc	/^Enquire::Enquire(const Database &databases, ErrorHandler * errorhandler)$/;"	f	class:Xapian::Enquire
Enquire	api/omenquire.cc	/^Enquire::Enquire(const Enquire & other) : internal(other.internal)$/;"	f	class:Xapian::Enquire
Enquire	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT Enquire {$/;"	c	namespace:Xapian
Error	api/error.cc	/^Xapian::Error::Error(const std::string &msg_, const std::string &context_,$/;"	f	class:Xapian::Error
Error	include/xapian/error.h	/^    Error(const std::string &msg_, const std::string &context_,$/;"	f	class:Xapian::Error
Error	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT Error {$/;"	c	namespace:Xapian
ErrorHandler	include/xapian/errorhandler.h	/^    ErrorHandler() {}$/;"	f	class:Xapian::ErrorHandler
ErrorHandler	include/xapian/errorhandler.h	/^class XAPIAN_VISIBILITY_DEFAULT ErrorHandler {$/;"	c	namespace:Xapian
ErrorMsg	queryparser/lemon.c	/^void ErrorMsg(const char *filename, int lineno, const char *format, ...){$/;"	f
ExactPhrasePostList	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::ExactPhrasePostList(PostList *source_,$/;"	f	class:ExactPhrasePostList
ExactPhrasePostList	matcher/exactphrasepostlist.h	/^class ExactPhrasePostList : public SelectPostList {$/;"	c
ExceptionalMatchSpy	tests/api_serialise.cc	/^    ExceptionalMatchSpy(failmode fail_) : fail(fail_) { }$/;"	f	class:ExceptionalMatchSpy
ExceptionalMatchSpy	tests/api_serialise.cc	/^class ExceptionalMatchSpy : public Xapian::MatchSpy {$/;"	c	file:
ExceptionalPostingSource	tests/api_serialise.cc	/^    ExceptionalPostingSource(failmode fail_) : fail(fail_) { }$/;"	f	class:ExceptionalPostingSource
ExceptionalPostingSource	tests/api_serialise.cc	/^class ExceptionalPostingSource : public Xapian::PostingSource {$/;"	c	file:
ExceptionalWeight	tests/api_serialise.cc	/^    ExceptionalWeight(failmode fail_) : fail(fail_) { }$/;"	f	class:ExceptionalWeight
ExceptionalWeight	tests/api_serialise.cc	/^class ExceptionalWeight : public Xapian::Weight {$/;"	c	file:
ExpandDecider	include/xapian/expanddecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ExpandDecider {$/;"	c	namespace:Xapian
ExpandDeciderAnd	include/xapian/expanddecider.h	/^    ExpandDeciderAnd(const ExpandDecider &first_,$/;"	f	class:Xapian::ExpandDeciderAnd
ExpandDeciderAnd	include/xapian/expanddecider.h	/^    ExpandDeciderAnd(const ExpandDecider *first_,$/;"	f	class:Xapian::ExpandDeciderAnd
ExpandDeciderAnd	include/xapian/expanddecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ExpandDeciderAnd : public ExpandDecider {$/;"	c	namespace:Xapian
ExpandDeciderFilterTerms	include/xapian/expanddecider.h	/^    ExpandDeciderFilterTerms(Iterator reject_begin, Iterator reject_end)$/;"	f	class:Xapian::ExpandDeciderFilterTerms
ExpandDeciderFilterTerms	include/xapian/expanddecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ExpandDeciderFilterTerms : public ExpandDecider {$/;"	c	namespace:Xapian
ExpandStats	common/expandweight.h	/^    ExpandStats(Xapian::doclength avlen_, double expand_k_)$/;"	f	class:Xapian::Internal::ExpandStats
ExpandStats	common/expandweight.h	/^class ExpandStats {$/;"	c	namespace:Xapian::Internal
ExpandTerm	common/esetinternal.h	/^    ExpandTerm(Xapian::weight wt_, const std::string & term_)$/;"	f	class:Xapian::Internal::ExpandTerm
ExpandTerm	common/esetinternal.h	/^class ExpandTerm {$/;"	c	namespace:Xapian::Internal
ExpandWeight	common/expandweight.h	/^    ExpandWeight(const Xapian::Database &db_,$/;"	f	class:Xapian::Internal::ExpandWeight
ExpandWeight	common/expandweight.h	/^class ExpandWeight {$/;"	c	namespace:Xapian::Internal
ExternalPostList	matcher/externalpostlist.cc	/^ExternalPostList::ExternalPostList(const Xapian::Database & db,$/;"	f	class:ExternalPostList
ExternalPostList	matcher/externalpostlist.h	/^class ExternalPostList : public PostList {$/;"	c
ExtraWeightPostList	matcher/extraweightpostlist.h	/^	ExtraWeightPostList(PostList * pl_, Xapian::Weight *wt_,$/;"	f	class:ExtraWeightPostList
ExtraWeightPostList	matcher/extraweightpostlist.h	/^class ExtraWeightPostList : public PostList {$/;"	c
FAIL	tests/harness/testsuite.h	/^	typedef enum { PASS = 1, FAIL = 0, SKIP = -1 } test_result;$/;"	e	enum:test_driver::__anon34
FAIL_TEST	tests/harness/testsuite.h	/^#define FAIL_TEST(/;"	d
FDLIMIT	backends/flint_lock.h	/^	FDLIMIT, \/\/ Process hit its file descriptor limit.$/;"	e	enum:FlintLock::__anon6
FDTracker	tests/harness/fdtracker.h	/^    FDTracker() : dir_void(NULL) { }$/;"	f	class:FDTracker
FDTracker	tests/harness/fdtracker.h	/^class FDTracker {$/;"	c
FD_SET	common/safesysselect.h	/^#  undef FD_SET$/;"	d
FD_SET	common/safesysselect.h	/^# define FD_SET(/;"	d
FGREP	Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FGREP	docs/Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FGREP	tests/Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FINAL_QUOTE_PUNCTUATION	include/xapian/unicode.h	/^    FINAL_QUOTE_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon18
FLAG_AUTO_MULTIWORD_SYNONYMS	include/xapian/queryparser.h	/^	FLAG_AUTO_MULTIWORD_SYNONYMS = 1024 | FLAG_AUTO_SYNONYMS,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_AUTO_SYNONYMS	include/xapian/queryparser.h	/^	FLAG_AUTO_SYNONYMS = 512,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_BOOLEAN	include/xapian/queryparser.h	/^	FLAG_BOOLEAN = 1,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_BOOLEAN_ANY_CASE	include/xapian/queryparser.h	/^	FLAG_BOOLEAN_ANY_CASE = 8,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_DEFAULT	include/xapian/queryparser.h	/^	FLAG_DEFAULT = FLAG_PHRASE|FLAG_BOOLEAN|FLAG_LOVEHATE$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_LOVEHATE	include/xapian/queryparser.h	/^	FLAG_LOVEHATE = 4,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_NAME	net/tcpclient.cc	/^#define FLAG_NAME /;"	d	file:
FLAG_NAME	net/tcpclient.cc	/^#undef FLAG_NAME$/;"	d	file:
FLAG_PARTIAL	include/xapian/queryparser.h	/^	FLAG_PARTIAL = 64,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_PHRASE	include/xapian/queryparser.h	/^	FLAG_PHRASE = 2,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_PURE_NOT	include/xapian/queryparser.h	/^	FLAG_PURE_NOT = 32,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_SPELLING	include/xapian/termgenerator.h	/^	FLAG_SPELLING = 128 \/\/ Value matches QueryParser flag.$/;"	e	enum:Xapian::TermGenerator::flags
FLAG_SPELLING_CORRECTION	include/xapian/queryparser.h	/^	FLAG_SPELLING_CORRECTION = 128,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_SYNONYM	include/xapian/queryparser.h	/^	FLAG_SYNONYM = 256,$/;"	e	enum:Xapian::QueryParser::__anon15
FLAG_WILDCARD	include/xapian/queryparser.h	/^	FLAG_WILDCARD = 16,$/;"	e	enum:Xapian::QueryParser::__anon15
FLINT	api/compactor.cc	/^    enum { UNKNOWN, BRASS, CHERT, FLINT } backend;$/;"	e	enum:Xapian::Compactor::Internal::__anon2	file:
FLINT_BTREE_MAX_KEY_LEN	backends/flint/flint_table.h	/^#define FLINT_BTREE_MAX_KEY_LEN /;"	d
FLINT_DEFAULT_BLOCK_SIZE	backends/flint/flint_types.h	/^#define FLINT_DEFAULT_BLOCK_SIZE /;"	d
FLINT_VERSION	backends/flint/flint_version.cc	/^#define FLINT_VERSION /;"	d	file:
FOF_NOERRORUI	common/safewindows.h	/^# define FOF_NOERRORUI /;"	d
FORMAT	include/xapian/unicode.h	/^    FORMAT,$/;"	e	enum:Xapian::Unicode::__anon18
FP_EXCESS_PRECISION	Makefile	/^FP_EXCESS_PRECISION = no$/;"	m
FP_EXCESS_PRECISION	docs/Makefile	/^FP_EXCESS_PRECISION = no$/;"	m
FP_EXCESS_PRECISION	tests/Makefile	/^FP_EXCESS_PRECISION = no$/;"	m
FREE	languages/compiler/header.h	/^#define FREE /;"	d
FULL	include/xapian/compactor.h	/^    typedef enum { STANDARD, FULL, FULLER } compaction_level;$/;"	e	enum:Xapian::Compactor::__anon12
FULLER	include/xapian/compactor.h	/^    typedef enum { STANDARD, FULL, FULLER } compaction_level;$/;"	e	enum:Xapian::Compactor::__anon12
F_OFD_GETLK	backends/flint_lock.cc	/^#  define F_OFD_GETLK	/;"	d	file:
F_OFD_SETLK	backends/flint_lock.cc	/^#  define F_OFD_SETLK	/;"	d	file:
F_OFD_SETLKW	backends/flint_lock.cc	/^#  define F_OFD_SETLKW	/;"	d	file:
F_fragment	backends/flint/flint_spelling.h	/^    F_fragment() { }$/;"	f	struct:F_fragment
F_fragment	backends/flint/flint_spelling.h	/^    F_fragment(char data_[4]) { std::memcpy(data, data_, 4); }$/;"	f	struct:F_fragment
F_fragment	backends/flint/flint_spelling.h	/^struct F_fragment {$/;"	s
F_pack_bool	backends/flint/flint_utils.h	/^F_pack_bool(bool value)$/;"	f
F_pack_string	backends/flint/flint_utils.h	/^F_pack_string(const string & value)$/;"	f
F_pack_string_preserving_sort	backends/flint/flint_utils.h	/^F_pack_string_preserving_sort(string value)$/;"	f
F_pack_uint	backends/flint/flint_utils.h	/^F_pack_uint(T value)$/;"	f
F_pack_uint	backends/flint/flint_utils.h	/^F_pack_uint<bool>(bool value)$/;"	f
F_pack_uint_last	backends/flint/flint_utils.h	/^F_pack_uint_last(T value)$/;"	f
F_pack_uint_preserving_sort	backends/flint/flint_utils.h	/^F_pack_uint_preserving_sort(T value)$/;"	f
F_unpack_bool	backends/flint/flint_utils.h	/^F_unpack_bool(const char ** src,$/;"	f
F_unpack_string	backends/flint/flint_utils.h	/^F_unpack_string(const char ** src,$/;"	f
F_unpack_string_preserving_sort	backends/flint/flint_utils.h	/^F_unpack_string_preserving_sort(const char ** src,$/;"	f
F_unpack_uint	backends/flint/flint_utils.h	/^F_unpack_uint(const char ** src,$/;"	f
F_unpack_uint_last	backends/flint/flint_utils.h	/^F_unpack_uint_last(const char ** src, const char * src_end, T * resultptr)$/;"	f
F_unpack_uint_preserving_sort	backends/flint/flint_utils.h	/^F_unpack_uint_preserving_sort(const char ** src,$/;"	f
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    FeatureUnavailableError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^    explicit FeatureUnavailableError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::FeatureUnavailableError
FeatureUnavailableError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT FeatureUnavailableError : public RuntimeError {$/;"	c	namespace:Xapian
FileIndexer	tests/harness/index_utils.h	/^    FileIndexer(const std::string & datadir_,$/;"	f	class:FileIndexer
FileIndexer	tests/harness/index_utils.h	/^class FileIndexer {$/;"	c
FindActions	queryparser/lemon.c	/^void FindActions(lemp)$/;"	f
FindFirstSets	queryparser/lemon.c	/^void FindFirstSets(lemp)$/;"	f
FindFollowSets	queryparser/lemon.c	/^void FindFollowSets(lemp)$/;"	f
FindLinks	queryparser/lemon.c	/^void FindLinks(lemp)$/;"	f
FindRulePrecedences	queryparser/lemon.c	/^void FindRulePrecedences(xp)$/;"	f
FindStates	queryparser/lemon.c	/^void FindStates(lemp)$/;"	f
FixedWeightPostingSource	api/postingsource.cc	/^FixedWeightPostingSource::FixedWeightPostingSource(Xapian::weight wt)$/;"	f	class:Xapian::FixedWeightPostingSource
FixedWeightPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT FixedWeightPostingSource : public PostingSource {$/;"	c	namespace:Xapian
Flint	include/xapian/dbfactory.h	/^namespace Flint {$/;"	n	namespace:Xapian
FlintAllDocsPostList	backends/flint/flint_alldocspostlist.h	/^    FlintAllDocsPostList(Xapian::Internal::RefCntPtr<const FlintDatabase> db_,$/;"	f	class:FlintAllDocsPostList
FlintAllDocsPostList	backends/flint/flint_alldocspostlist.h	/^class FlintAllDocsPostList : public LeafPostList {$/;"	c
FlintAllTermsList	backends/flint/flint_alltermslist.h	/^    FlintAllTermsList(Xapian::Internal::RefCntPtr<const FlintDatabase> database_,$/;"	f	class:FlintAllTermsList
FlintAllTermsList	backends/flint/flint_alltermslist.h	/^class FlintAllTermsList : public AllTermsList {$/;"	c
FlintCompact	backends/flint/flint_compact.cc	/^namespace FlintCompact {$/;"	n	file:
FlintCursor	backends/flint/flint_cursor.cc	/^FlintCursor::FlintCursor(FlintTable *B_)$/;"	f	class:FlintCursor
FlintCursor	backends/flint/flint_cursor.h	/^class XAPIAN_VISIBILITY_DEFAULT FlintCursor {$/;"	c
FlintCursor	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(FlintCursor);$/;"	v
FlintDatabase	backends/flint/flint_database.cc	/^FlintDatabase::FlintDatabase(const string &flint_dir, int action,$/;"	f	class:FlintDatabase
FlintDatabase	backends/flint/flint_database.h	/^class FlintDatabase : public Xapian::Database::Internal {$/;"	c
FlintDatabase	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(FlintDatabase);$/;"	v
FlintDatabaseReplicator	backends/flint/flint_databasereplicator.cc	/^FlintDatabaseReplicator::FlintDatabaseReplicator(const string & db_dir_)$/;"	f	class:FlintDatabaseReplicator
FlintDatabaseReplicator	backends/flint/flint_databasereplicator.h	/^class FlintDatabaseReplicator : public Xapian::DatabaseReplicator {$/;"	c
FlintDocument	backends/flint/flint_document.cc	/^FlintDocument::FlintDocument(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:FlintDocument
FlintDocument	backends/flint/flint_document.h	/^class FlintDocument : public Xapian::Document::Internal {$/;"	c
FlintLock	backends/flint_lock.h	/^    FlintLock(const std::string &filename_) : filename(filename_), fd(-1) {$/;"	f	class:FlintLock
FlintLock	backends/flint_lock.h	/^    FlintLock(const std::string &filename_)$/;"	f	class:FlintLock
FlintLock	backends/flint_lock.h	/^class FlintLock {$/;"	c
FlintMetadataTermList	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::FlintMetadataTermList($/;"	f	class:FlintMetadataTermList
FlintMetadataTermList	backends/flint/flint_metadata.h	/^class FlintMetadataTermList : public AllTermsList {$/;"	c
FlintModifiedPostList	backends/flint/flint_modifiedpostlist.h	/^    FlintModifiedPostList(Xapian::Internal::RefCntPtr<const FlintDatabase> this_db_,$/;"	f	class:FlintModifiedPostList
FlintModifiedPostList	backends/flint/flint_modifiedpostlist.h	/^class FlintModifiedPostList : public FlintPostList {$/;"	c
FlintPositionList	backends/flint/flint_positionlist.h	/^    FlintPositionList() : have_started(false) {}$/;"	f	class:FlintPositionList
FlintPositionList	backends/flint/flint_positionlist.h	/^    FlintPositionList(const FlintTable * table, Xapian::docid did,$/;"	f	class:FlintPositionList
FlintPositionList	backends/flint/flint_positionlist.h	/^class FlintPositionList : public PositionList {$/;"	c
FlintPositionListTable	backends/flint/flint_positionlist.h	/^    FlintPositionListTable(const string & dbdir, bool readonly)$/;"	f	class:FlintPositionListTable
FlintPositionListTable	backends/flint/flint_positionlist.h	/^class FlintPositionListTable : public FlintTable {$/;"	c
FlintPostList	backends/flint/flint_postlist.cc	/^FlintPostList::FlintPostList(Xapian::Internal::RefCntPtr<const FlintDatabase> this_db_,$/;"	f	class:FlintPostList
FlintPostList	backends/flint/flint_postlist.h	/^class FlintPostList : public LeafPostList {$/;"	c
FlintPostListTable	backends/flint/flint_postlist.h	/^	FlintPostListTable(const string & path_, bool readonly_)$/;"	f	class:FlintPostListTable
FlintPostListTable	backends/flint/flint_postlist.h	/^class FlintPostListTable : public FlintTable {$/;"	c
FlintPostlistChunkReader	backends/flint/flint_postlist.cc	/^	FlintPostlistChunkReader(Xapian::docid first_did, const string & data_)$/;"	f	class:FlintPostlistChunkReader
FlintPostlistChunkReader	backends/flint/flint_postlist.cc	/^class FlintPostlistChunkReader {$/;"	c	file:
FlintPostlistChunkWriter	backends/flint/flint_postlist.cc	/^FlintPostlistChunkWriter::FlintPostlistChunkWriter(const string &orig_key_,$/;"	f	class:FlintPostlistChunkWriter
FlintPostlistChunkWriter	backends/flint/flint_postlist.cc	/^class FlintPostlistChunkWriter {$/;"	c	file:
FlintRecordTable	backends/flint/flint_record.h	/^	FlintRecordTable(const string & path_, bool readonly_)$/;"	f	class:FlintRecordTable
FlintRecordTable	backends/flint/flint_record.h	/^class FlintRecordTable : public FlintTable {$/;"	c
FlintRecordTable	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(FlintRecordTable);$/;"	v
FlintSpellingTable	backends/flint/flint_spelling.h	/^    FlintSpellingTable(const std::string & dbdir, bool readonly)$/;"	f	class:FlintSpellingTable
FlintSpellingTable	backends/flint/flint_spelling.h	/^class FlintSpellingTable : public FlintTable {$/;"	c
FlintSpellingTermList	backends/flint/flint_spelling.h	/^    FlintSpellingTermList(const std::string & data_)$/;"	f	class:FlintSpellingTermList
FlintSpellingTermList	backends/flint/flint_spelling.h	/^class FlintSpellingTermList : public TermList {$/;"	c
FlintSpellingWordsList	backends/flint/flint_spellingwordslist.h	/^    FlintSpellingWordsList(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:FlintSpellingWordsList
FlintSpellingWordsList	backends/flint/flint_spellingwordslist.h	/^class FlintSpellingWordsList : public AllTermsList {$/;"	c
FlintSynonymTable	backends/flint/flint_synonym.h	/^    FlintSynonymTable(const std::string & dbdir, bool readonly)$/;"	f	class:FlintSynonymTable
FlintSynonymTable	backends/flint/flint_synonym.h	/^class FlintSynonymTable : public FlintTable {$/;"	c
FlintSynonymTermList	backends/flint/flint_synonym.h	/^    FlintSynonymTermList(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:FlintSynonymTermList
FlintSynonymTermList	backends/flint/flint_synonym.h	/^class FlintSynonymTermList : public AllTermsList {$/;"	c
FlintTable	backends/flint/flint_table.cc	/^FlintTable::FlintTable(const char * tablename_, const string & path_,$/;"	f	class:FlintTable
FlintTable	backends/flint/flint_table.h	/^class XAPIAN_VISIBILITY_DEFAULT FlintTable {$/;"	c
FlintTable	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(FlintTable);$/;"	v
FlintTable_base	backends/flint/flint_btreebase.cc	/^FlintTable_base::FlintTable_base()$/;"	f	class:FlintTable_base
FlintTable_base	backends/flint/flint_btreebase.h	/^class XAPIAN_VISIBILITY_DEFAULT FlintTable_base {$/;"	c
FlintTermList	backends/flint/flint_termlist.cc	/^FlintTermList::FlintTermList(Xapian::Internal::RefCntPtr<const FlintDatabase> db_,$/;"	f	class:FlintTermList
FlintTermList	backends/flint/flint_termlist.h	/^class FlintTermList : public TermList {$/;"	c
FlintTermListTable	backends/flint/flint_termlisttable.h	/^    FlintTermListTable(const std::string & dbdir, bool readonly)$/;"	f	class:FlintTermListTable
FlintTermListTable	backends/flint/flint_termlisttable.h	/^class FlintTermListTable : public FlintTable {$/;"	c
FlintValueTable	backends/flint/flint_values.h	/^	FlintValueTable(const string & path_, bool readonly_)$/;"	f	class:FlintValueTable
FlintValueTable	backends/flint/flint_values.h	/^class FlintValueTable : public FlintTable {$/;"	c
FlintValueTable	common/pretty.h	/^XAPIAN_PRETTY_AS_CLASSNAME(FlintValueTable);$/;"	v
FlintVersion	backends/flint/flint_version.h	/^    FlintVersion(const std::string & dbdir)$/;"	f	class:FlintVersion
FlintVersion	backends/flint/flint_version.h	/^class FlintVersion {$/;"	c
FlintWritableDatabase	backends/flint/flint_database.cc	/^FlintWritableDatabase::FlintWritableDatabase(const string &dir, int action,$/;"	f	class:FlintWritableDatabase
FlintWritableDatabase	backends/flint/flint_database.h	/^class FlintWritableDatabase : public FlintDatabase {$/;"	c
FreqAdderOrTermList	common/ortermlist.h	/^	FreqAdderOrTermList(TermList * left_, TermList * right_)$/;"	f	class:FreqAdderOrTermList
FreqAdderOrTermList	common/ortermlist.h	/^class FreqAdderOrTermList : public OrTermList {$/;"	c
GET_LEVEL	backends/brass/brass_table.h	/^#define GET_LEVEL(/;"	d
GET_LEVEL	backends/chert/chert_table.h	/^#define GET_LEVEL(/;"	d
GET_LEVEL	backends/flint/flint_check.cc	/^#define GET_LEVEL(/;"	d	file:
GET_LEVEL	backends/flint/flint_table.cc	/^#define GET_LEVEL(/;"	d	file:
GNU_GETOPT_INTERFACE_VERSION	common/gnu_getopt.h	/^#define GNU_GETOPT_INTERFACE_VERSION /;"	d
GREP	Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GREP	docs/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GREP	tests/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GROUP_TERM	queryparser/queryparser_token.h	/^#define GROUP_TERM /;"	d
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
HATE	queryparser/queryparser_token.h	/^#define HATE /;"	d
HATE_AFTER_AND	queryparser/queryparser_token.h	/^#define HATE_AFTER_AND /;"	d
HAVE_DECL_STRERROR_R	config.h	/^#define HAVE_DECL_STRERROR_R /;"	d
HAVE_DECL_SYS_ERRLIST	config.h	/^#define HAVE_DECL_SYS_ERRLIST /;"	d
HAVE_DECL_SYS_NERR	config.h	/^#define HAVE_DECL_SYS_NERR /;"	d
HAVE_DECL__SYS_ERRLIST	config.h	/^#define HAVE_DECL__SYS_ERRLIST /;"	d
HAVE_DECL__SYS_NERR	config.h	/^#define HAVE_DECL__SYS_NERR /;"	d
HAVE_DIRFD	config.h	/^#define HAVE_DIRFD /;"	d
HAVE_DISK_BACKEND	backends/dbfactory.cc	/^#define HAVE_DISK_BACKEND$/;"	d	file:
HAVE_DLFCN_H	config.h	/^#define HAVE_DLFCN_H /;"	d
HAVE_FCNTL_H	config.h	/^#define HAVE_FCNTL_H /;"	d
HAVE_FORK	config.h	/^#define HAVE_FORK /;"	d
HAVE_FSYNC	config.h	/^#define HAVE_FSYNC /;"	d
HAVE_FTIME	config.h	/^#define HAVE_FTIME /;"	d
HAVE_GETHOSTNAME	config.h	/^#define HAVE_GETHOSTNAME /;"	d
HAVE_GETRLIMIT	config.h	/^#define HAVE_GETRLIMIT /;"	d
HAVE_GETRUSAGE	config.h	/^#define HAVE_GETRUSAGE /;"	d
HAVE_GETTIMEOFDAY	config.h	/^#define HAVE_GETTIMEOFDAY /;"	d
HAVE_HSTRERROR	config.h	/^#define HAVE_HSTRERROR /;"	d
HAVE_INTTYPES_H	config.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_LIMITS_H	config.h	/^#define HAVE_LIMITS_H /;"	d
HAVE_LINK	config.h	/^#define HAVE_LINK /;"	d
HAVE_MEMORY_H	config.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_PREAD	config.h	/^#define HAVE_PREAD /;"	d
HAVE_PWRITE	config.h	/^#define HAVE_PWRITE /;"	d
HAVE_RANDOM	config.h	/^#define HAVE_RANDOM /;"	d
HAVE_SETENV	config.h	/^#define HAVE_SETENV /;"	d
HAVE_SIGACTION	config.h	/^#define HAVE_SIGACTION /;"	d
HAVE_SIGSETJMP	config.h	/^#define HAVE_SIGSETJMP /;"	d
HAVE_SOCKETPAIR	config.h	/^#define HAVE_SOCKETPAIR /;"	d
HAVE_SRANDOM	config.h	/^#define HAVE_SRANDOM /;"	d
HAVE_STDINT_H	config.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDLIB_H	config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRERROR_R	config.h	/^#define HAVE_STRERROR_R /;"	d
HAVE_STRINGS_H	config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	config.h	/^#define HAVE_STRING_H /;"	d
HAVE_SYSCONF	config.h	/^#define HAVE_SYSCONF /;"	d
HAVE_SYS_ERRNO_H	config.h	/^#define HAVE_SYS_ERRNO_H /;"	d
HAVE_SYS_RESOURCE_H	config.h	/^#define HAVE_SYS_RESOURCE_H /;"	d
HAVE_SYS_SELECT_H	config.h	/^#define HAVE_SYS_SELECT_H /;"	d
HAVE_SYS_STAT_H	config.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_TYPES_H	config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_UTSNAME_H	config.h	/^#define HAVE_SYS_UTSNAME_H /;"	d
HAVE_TIMES	config.h	/^#define HAVE_TIMES /;"	d
HAVE_UNISTD_H	config.h	/^#define HAVE_UNISTD_H /;"	d
HAVE_UUID_UNPARSE_LOWER	config.h	/^#define HAVE_UUID_UNPARSE_LOWER /;"	d
HAVE_UUID_UUID_H	config.h	/^#define HAVE_UUID_UUID_H /;"	d
HAVE_ZLIB_H	config.h	/^#define HAVE_ZLIB_H /;"	d
HEAD	languages/compiler/space.c	/^#define HEAD /;"	d	file:
HEAD	languages/steminternal.h	/^#define HEAD /;"	d
HEADERS	Makefile	/^HEADERS = $(inc_HEADERS) $(nodist_xapianinclude_HEADERS) \\$/;"	m
HEADERS	tests/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HELP2MAN	Makefile	/^HELP2MAN = $/;"	m
HELP2MAN	docs/Makefile	/^HELP2MAN = $/;"	m
HELP2MAN	tests/Makefile	/^HELP2MAN = $/;"	m
HTMLDOCS	docs/Makefile	/^HTMLDOCS = code_structure.html \\$/;"	m
I	languages/compiler/header.h	/^    int I[10];           \/* integers *\/$/;"	m	struct:generator
I2	backends/brass/brass_table.h	/^#define I2 /;"	d
I2	backends/chert/chert_table.h	/^#define I2 /;"	d
I2	backends/flint/flint_table.h	/^#define I2 /;"	d
IF_NOT_CLOSEDEXC	tests/api_closedb.cc	/^#define IF_NOT_CLOSEDEXC(/;"	d	file:
INCLUDED_APPEND_FILENAME_ARG_H	common/append_filename_arg.h	/^#define INCLUDED_APPEND_FILENAME_ARG_H$/;"	d
INCLUDE_QUERY_TERMS	include/xapian/enquire.h	/^	static const int INCLUDE_QUERY_TERMS = 1;$/;"	m	class:Xapian::Enquire
INCL_DOS	backends/flint_lock.h	/^# define INCL_DOS$/;"	d
INCL_DOSERRORS	backends/flint_lock.h	/^# define INCL_DOSERRORS$/;"	d
INCOMPLETE	queryparser/lemon.c	/^    INCOMPLETE             \/*    shift computations *\/$/;"	e	enum:config::__anon25	file:
INDENT	examples/quest.cc	/^#define INDENT /;"	d	file:
INF	api/editdistance.cc	/^#define INF /;"	d	file:
INITIALIZE	queryparser/lemon.c	/^    INITIALIZE,$/;"	e	enum:pstate::e_state	file:
INITIAL_QUOTE_PUNCTUATION	include/xapian/unicode.h	/^    INITIAL_QUOTE_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon18
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	docs/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tests/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	docs/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	tests/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	docs/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	tests/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	docs/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	tests/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	docs/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	tests/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	docs/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	tests/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INTERFACE	queryparser/queryparser_internal.cc	/^# define INTERFACE /;"	d	file:
INUSE	backends/flint_lock.h	/^	INUSE, \/\/ Already locked by someone else.$/;"	e	enum:FlintLock::__anon6
IN_RHS	queryparser/lemon.c	/^    IN_RHS,$/;"	e	enum:pstate::e_state	file:
ISOPT	queryparser/lemon.c	/^#define ISOPT(/;"	d	file:
IS_DIGIT	common/stringutils.h	/^	const unsigned char IS_DIGIT = 0x01;$/;"	m	namespace:Xapian::Internal
IS_HEX	common/stringutils.h	/^	const unsigned char IS_HEX   = 0x08;$/;"	m	namespace:Xapian::Internal
IS_LOWER	common/stringutils.h	/^	const unsigned char IS_LOWER = 0x02;$/;"	m	namespace:Xapian::Internal
IS_SIGN	common/stringutils.h	/^	const unsigned char IS_SIGN  = 0x10;$/;"	m	namespace:Xapian::Internal
IS_SPACE	common/stringutils.h	/^	const unsigned char IS_SPACE = 0x20;$/;"	m	namespace:Xapian::Internal
IS_UPPER	common/stringutils.h	/^	const unsigned char IS_UPPER = 0x04;$/;"	m	namespace:Xapian::Internal
I_p1	languages/danish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemDanish
I_p1	languages/dutch.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemDutch
I_p1	languages/english.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemEnglish
I_p1	languages/finnish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemFinnish
I_p1	languages/french.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemFrench
I_p1	languages/german.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemGerman
I_p1	languages/german2.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemGerman2
I_p1	languages/hungarian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemHungarian
I_p1	languages/italian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemItalian
I_p1	languages/kraaij_pohlmann.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
I_p1	languages/norwegian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemNorwegian
I_p1	languages/porter.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemPorter
I_p1	languages/portuguese.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemPortuguese
I_p1	languages/romanian.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemRomanian
I_p1	languages/spanish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemSpanish
I_p1	languages/swedish.h	/^    int I_p1;$/;"	m	class:Xapian::InternalStemSwedish
I_p2	languages/dutch.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemDutch
I_p2	languages/english.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemEnglish
I_p2	languages/finnish.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemFinnish
I_p2	languages/french.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemFrench
I_p2	languages/german.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemGerman
I_p2	languages/german2.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemGerman2
I_p2	languages/italian.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemItalian
I_p2	languages/kraaij_pohlmann.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
I_p2	languages/porter.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemPorter
I_p2	languages/portuguese.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemPortuguese
I_p2	languages/romanian.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemRomanian
I_p2	languages/russian.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemRussian
I_p2	languages/spanish.h	/^    int I_p2;$/;"	m	class:Xapian::InternalStemSpanish
I_pV	languages/french.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemFrench
I_pV	languages/italian.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemItalian
I_pV	languages/portuguese.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemPortuguese
I_pV	languages/romanian.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemRomanian
I_pV	languages/russian.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemRussian
I_pV	languages/spanish.h	/^    int I_pV;$/;"	m	class:Xapian::InternalStemSpanish
I_strlen	languages/turkish.h	/^    int I_strlen;$/;"	m	class:Xapian::InternalStemTurkish
I_x	languages/danish.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemDanish
I_x	languages/german.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemGerman
I_x	languages/german2.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemGerman2
I_x	languages/kraaij_pohlmann.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
I_x	languages/norwegian.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemNorwegian
I_x	languages/swedish.h	/^    int I_x;$/;"	m	class:Xapian::InternalStemSwedish
InMemory	include/xapian/dbfactory.h	/^namespace InMemory {$/;"	n	namespace:Xapian
InMemoryAllDocsPostList	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::InMemoryAllDocsPostList(Xapian::Internal::RefCntPtr<const InMemoryDatabase> db_)$/;"	f	class:InMemoryAllDocsPostList
InMemoryAllDocsPostList	backends/inmemory/inmemory_database.h	/^class InMemoryAllDocsPostList : public LeafPostList {$/;"	c
InMemoryAllTermsList	backends/inmemory/inmemory_alltermslist.h	/^	InMemoryAllTermsList(const std::map<string, InMemoryTerm> *tmap_,$/;"	f	class:InMemoryAllTermsList
InMemoryAllTermsList	backends/inmemory/inmemory_alltermslist.h	/^class InMemoryAllTermsList : public AllTermsList$/;"	c
InMemoryDatabase	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::InMemoryDatabase()$/;"	f	class:InMemoryDatabase
InMemoryDatabase	backends/inmemory/inmemory_database.h	/^class InMemoryDatabase : public Xapian::Database::Internal {$/;"	c
InMemoryDoc	backends/inmemory/inmemory_database.h	/^	InMemoryDoc() : is_valid(false) {}$/;"	f	class:InMemoryDoc
InMemoryDoc	backends/inmemory/inmemory_database.h	/^	InMemoryDoc(bool is_valid_) : is_valid(is_valid_) {}$/;"	f	class:InMemoryDoc
InMemoryDoc	backends/inmemory/inmemory_database.h	/^class InMemoryDoc {$/;"	c
InMemoryDocument	backends/inmemory/inmemory_document.h	/^    InMemoryDocument(const Xapian::Database::Internal *db, Xapian::docid did_)$/;"	f	class:InMemoryDocument
InMemoryDocument	backends/inmemory/inmemory_document.h	/^class InMemoryDocument : public Xapian::Document::Internal {$/;"	c
InMemoryPositionList	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::InMemoryPositionList(const OmDocumentTerm::term_positions & positions_)$/;"	f	class:InMemoryPositionList
InMemoryPositionList	common/inmemory_positionlist.h	/^	InMemoryPositionList() : iterating_in_progress(false) { }$/;"	f	class:InMemoryPositionList
InMemoryPositionList	common/inmemory_positionlist.h	/^	InMemoryPositionList(bool)$/;"	f	class:InMemoryPositionList
InMemoryPositionList	common/inmemory_positionlist.h	/^class InMemoryPositionList : public PositionList$/;"	c
InMemoryPostList	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::InMemoryPostList(Xapian::Internal::RefCntPtr<const InMemoryDatabase> db_,$/;"	f	class:InMemoryPostList
InMemoryPostList	backends/inmemory/inmemory_database.h	/^class InMemoryPostList : public LeafPostList {$/;"	c
InMemoryPosting	backends/inmemory/inmemory_database.h	/^class InMemoryPosting {$/;"	c
InMemoryPostingLessThan	backends/inmemory/inmemory_database.h	/^class InMemoryPostingLessThan {$/;"	c
InMemoryTerm	backends/inmemory/inmemory_database.h	/^	InMemoryTerm() : term_freq(0), collection_freq(0) {}$/;"	f	class:InMemoryTerm
InMemoryTerm	backends/inmemory/inmemory_database.h	/^class InMemoryTerm {$/;"	c
InMemoryTermEntry	backends/inmemory/inmemory_database.h	/^class InMemoryTermEntry {$/;"	c
InMemoryTermEntryLessThan	backends/inmemory/inmemory_database.h	/^class InMemoryTermEntryLessThan {$/;"	c
InMemoryTermList	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::InMemoryTermList(Xapian::Internal::RefCntPtr<const InMemoryDatabase> db_,$/;"	f	class:InMemoryTermList
InMemoryTermList	backends/inmemory/inmemory_database.h	/^class InMemoryTermList : public TermList {$/;"	c
Internal	api/compactor.cc	/^    Internal()$/;"	f	class:Xapian::Compactor::Internal
Internal	api/compactor.cc	/^class Compactor::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::Compactor	file:
Internal	api/omenquire.cc	/^Enquire::Internal::Internal(const Database &db_, ErrorHandler * errorhandler_)$/;"	f	class:Xapian::Enquire::Internal
Internal	api/omenquire.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	api/omqueryinternal.cc	/^Xapian::Query::Internal::Internal(PostingSource * external_source_, bool owned)$/;"	f	class:Xapian::Query::Internal
Internal	api/omqueryinternal.cc	/^Xapian::Query::Internal::Internal(const Xapian::Query::Internal &copyme)$/;"	f	class:Xapian::Query::Internal
Internal	api/omqueryinternal.cc	/^Xapian::Query::Internal::Internal(const string & tname_, Xapian::termcount wqf_,$/;"	f	class:Xapian::Query::Internal
Internal	api/omqueryinternal.cc	/^Xapian::Query::Internal::Internal(op_t op_, Xapian::termcount parameter_)$/;"	f	class:Xapian::Query::Internal
Internal	api/omqueryinternal.cc	/^Xapian::Query::Internal::Internal(op_t op_, Xapian::valueno slot,$/;"	f	class:Xapian::Query::Internal
Internal	api/registry.cc	/^Registry::Internal::Internal()$/;"	f	class:Xapian::Registry::Internal
Internal	api/replication.cc	/^DatabaseReplica::Internal::Internal(const string & path_)$/;"	f	class:DatabaseReplica::Internal
Internal	api/replication.cc	/^class DatabaseReplica::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:DatabaseReplica	file:
Internal	backends/brass/brass_termlist.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	backends/chert/chert_termlist.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	backends/flint/flint_termlist.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	common/closefrom.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/database.h	/^	Internal() : transaction_state(TRANSACTION_NONE) { }$/;"	f	class:Xapian::Database::Internal
Internal	common/database.h	/^class Database::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::Database
Internal	common/document.h	/^	Internal(Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database_,$/;"	f	class:Xapian::Document::Internal
Internal	common/document.h	/^        Internal()$/;"	f	class:Xapian::Document::Internal
Internal	common/document.h	/^class Xapian::Document::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::Document
Internal	common/esetinternal.h	/^    Internal() : ebound(0) { }$/;"	f	class:Xapian::ESet::Internal
Internal	common/esetinternal.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	common/esetinternal.h	/^class ESet::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::ESet
Internal	common/expandweight.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/omenquireinternal.h	/^	Internal()$/;"	f	class:Xapian::MSet::Internal
Internal	common/omenquireinternal.h	/^	Internal(Xapian::doccount firstitem_,$/;"	f	class:Xapian::MSet::Internal
Internal	common/omenquireinternal.h	/^class Enquire::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::Enquire
Internal	common/omenquireinternal.h	/^class MSet::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::MSet
Internal	common/omenquireinternal.h	/^class RSet::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::RSet
Internal	common/omenquireinternal.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/ortermlist.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/positionlist.h	/^	Internal() { }$/;"	f	class:Xapian::PositionIterator::Internal
Internal	common/positionlist.h	/^class Xapian::PositionIterator::Internal : public Xapian::Internal::RefCntBase$/;"	c	class:Xapian::PositionIterator
Internal	common/postlist.h	/^    Internal() { }$/;"	f	class:Xapian::PostingIterator::Internal
Internal	common/postlist.h	/^class Xapian::PostingIterator::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::PostingIterator
Internal	common/pretty.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	common/registryinternal.h	/^class Xapian::Registry::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::Registry
Internal	common/str.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	common/str.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	common/stringutils.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	common/stringutils.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	common/termlist.h	/^    Internal() { }$/;"	f	class:Xapian::TermIterator::Internal
Internal	common/termlist.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	common/termlist.h	/^class Xapian::TermIterator::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::TermIterator
Internal	common/utils.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	common/utils.h	/^    namespace Internal {$/;"	n	namespace:Xapian
Internal	common/valuelist.h	/^    Internal() { }$/;"	f	class:Xapian::ValueIterator::Internal
Internal	common/valuelist.h	/^class Xapian::ValueIterator::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::ValueIterator
Internal	common/weightinternal.h	/^    Internal() : total_length(0), collection_size(0), rset_size(0) { }$/;"	f	class:Xapian::Weight::Internal
Internal	common/weightinternal.h	/^class Weight::Internal {$/;"	c	class:Xapian::Weight
Internal	expand/expandweight.cc	/^namespace Internal {$/;"	n	namespace:Xapian	file:
Internal	include/xapian/base.h	/^namespace Internal {$/;"	n	namespace:Xapian
Internal	include/xapian/matchspy.h	/^	Internal() : slot(Xapian::BAD_VALUENO), total(0) {}$/;"	f	struct:Xapian::ValueCountMatchSpy::Internal
Internal	include/xapian/matchspy.h	/^	Internal(Xapian::valueno slot_) : slot(slot_), total(0) {}$/;"	f	struct:Xapian::ValueCountMatchSpy::Internal
Internal	include/xapian/matchspy.h	/^    struct XAPIAN_VISIBILITY_DEFAULT Internal$/;"	s	class:Xapian::ValueCountMatchSpy
Internal	include/xapian/query.h	/^class XAPIAN_VISIBILITY_DEFAULT Query::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::Query
Internal	include/xapian/unicode.h	/^namespace Internal {$/;"	n	namespace:Xapian::Unicode
Internal	queryparser/queryparser_internal.h	/^    Internal() : stem_action(STEM_NONE), stopper(NULL),$/;"	f	class:Xapian::QueryParser::Internal
Internal	queryparser/queryparser_internal.h	/^class QueryParser::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::QueryParser
Internal	queryparser/termgenerator_internal.h	/^    Internal() : strategy(STEM_SOME), stopper(NULL), termpos(0),$/;"	f	class:Xapian::TermGenerator::Internal
Internal	queryparser/termgenerator_internal.h	/^class TermGenerator::Internal : public Xapian::Internal::RefCntBase {$/;"	c	class:Xapian::TermGenerator
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    InternalError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^    explicit InternalError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::InternalError
InternalError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT InternalError : public RuntimeError {$/;"	c	namespace:Xapian
InternalStemDanish	languages/danish.cc	/^Xapian::InternalStemDanish::InternalStemDanish()$/;"	f	class:Xapian::InternalStemDanish
InternalStemDanish	languages/danish.h	/^class InternalStemDanish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemDutch	languages/dutch.cc	/^Xapian::InternalStemDutch::InternalStemDutch()$/;"	f	class:Xapian::InternalStemDutch
InternalStemDutch	languages/dutch.h	/^class InternalStemDutch : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemEnglish	languages/english.cc	/^Xapian::InternalStemEnglish::InternalStemEnglish()$/;"	f	class:Xapian::InternalStemEnglish
InternalStemEnglish	languages/english.h	/^class InternalStemEnglish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemFinnish	languages/finnish.cc	/^Xapian::InternalStemFinnish::InternalStemFinnish()$/;"	f	class:Xapian::InternalStemFinnish
InternalStemFinnish	languages/finnish.h	/^class InternalStemFinnish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemFrench	languages/french.cc	/^Xapian::InternalStemFrench::InternalStemFrench()$/;"	f	class:Xapian::InternalStemFrench
InternalStemFrench	languages/french.h	/^class InternalStemFrench : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemGerman	languages/german.cc	/^Xapian::InternalStemGerman::InternalStemGerman()$/;"	f	class:Xapian::InternalStemGerman
InternalStemGerman	languages/german.h	/^class InternalStemGerman : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemGerman2	languages/german2.cc	/^Xapian::InternalStemGerman2::InternalStemGerman2()$/;"	f	class:Xapian::InternalStemGerman2
InternalStemGerman2	languages/german2.h	/^class InternalStemGerman2 : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemHungarian	languages/hungarian.cc	/^Xapian::InternalStemHungarian::InternalStemHungarian()$/;"	f	class:Xapian::InternalStemHungarian
InternalStemHungarian	languages/hungarian.h	/^class InternalStemHungarian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemItalian	languages/italian.cc	/^Xapian::InternalStemItalian::InternalStemItalian()$/;"	f	class:Xapian::InternalStemItalian
InternalStemItalian	languages/italian.h	/^class InternalStemItalian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemKraaij_pohlmann	languages/kraaij_pohlmann.cc	/^Xapian::InternalStemKraaij_pohlmann::InternalStemKraaij_pohlmann()$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
InternalStemKraaij_pohlmann	languages/kraaij_pohlmann.h	/^class InternalStemKraaij_pohlmann : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemLovins	languages/lovins.cc	/^Xapian::InternalStemLovins::InternalStemLovins()$/;"	f	class:Xapian::InternalStemLovins
InternalStemLovins	languages/lovins.h	/^class InternalStemLovins : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemNorwegian	languages/norwegian.cc	/^Xapian::InternalStemNorwegian::InternalStemNorwegian()$/;"	f	class:Xapian::InternalStemNorwegian
InternalStemNorwegian	languages/norwegian.h	/^class InternalStemNorwegian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemPorter	languages/porter.cc	/^Xapian::InternalStemPorter::InternalStemPorter()$/;"	f	class:Xapian::InternalStemPorter
InternalStemPorter	languages/porter.h	/^class InternalStemPorter : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemPortuguese	languages/portuguese.cc	/^Xapian::InternalStemPortuguese::InternalStemPortuguese()$/;"	f	class:Xapian::InternalStemPortuguese
InternalStemPortuguese	languages/portuguese.h	/^class InternalStemPortuguese : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemRomanian	languages/romanian.cc	/^Xapian::InternalStemRomanian::InternalStemRomanian()$/;"	f	class:Xapian::InternalStemRomanian
InternalStemRomanian	languages/romanian.h	/^class InternalStemRomanian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemRussian	languages/russian.cc	/^Xapian::InternalStemRussian::InternalStemRussian()$/;"	f	class:Xapian::InternalStemRussian
InternalStemRussian	languages/russian.h	/^class InternalStemRussian : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemSpanish	languages/spanish.cc	/^Xapian::InternalStemSpanish::InternalStemSpanish()$/;"	f	class:Xapian::InternalStemSpanish
InternalStemSpanish	languages/spanish.h	/^class InternalStemSpanish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemSwedish	languages/swedish.cc	/^Xapian::InternalStemSwedish::InternalStemSwedish()$/;"	f	class:Xapian::InternalStemSwedish
InternalStemSwedish	languages/swedish.h	/^class InternalStemSwedish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InternalStemTurkish	languages/turkish.cc	/^Xapian::InternalStemTurkish::InternalStemTurkish()$/;"	f	class:Xapian::InternalStemTurkish
InternalStemTurkish	languages/turkish.h	/^class InternalStemTurkish : public SnowballStemImplementation {$/;"	c	namespace:Xapian
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    InvalidArgumentError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^    explicit InvalidArgumentError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::InvalidArgumentError
InvalidArgumentError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT InvalidArgumentError : public LogicError {$/;"	c	namespace:Xapian
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    InvalidOperationError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^    explicit InvalidOperationError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::InvalidOperationError
InvalidOperationError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT InvalidOperationError : public LogicError {$/;"	c	namespace:Xapian
Inverter	backends/brass/brass_inverter.h	/^class Inverter {$/;"	c
Item	backends/brass/brass_table.h	/^    Item(const byte * p_) : Item_base<const byte *>(p_) { }$/;"	f	class:Brass::Item
Item	backends/brass/brass_table.h	/^    Item(const byte * p_, int c) : Item_base<const byte *>(p_, c) { }$/;"	f	class:Brass::Item
Item	backends/brass/brass_table.h	/^class Item : public Item_base<const byte *> {$/;"	c	namespace:Brass
Item	backends/chert/chert_table.h	/^    Item(const byte * p_) : Item_base<const byte *>(p_) { }$/;"	f	class:Item
Item	backends/chert/chert_table.h	/^    Item(const byte * p_, int c) : Item_base<const byte *>(p_, c) { }$/;"	f	class:Item
Item	backends/chert/chert_table.h	/^class Item : public Item_base<const byte *> {$/;"	c
Item_	backends/flint/flint_table.h	/^    Item_(const byte * p_) : Item_base_<const byte *>(p_) { }$/;"	f	class:Item_
Item_	backends/flint/flint_table.h	/^    Item_(const byte * p_, int c) : Item_base_<const byte *>(p_, c) { }$/;"	f	class:Item_
Item_	backends/flint/flint_table.h	/^class Item_ : public Item_base_<const byte *> {$/;"	c
Item_base	backends/brass/brass_table.h	/^    Item_base(T p_) : p(p_) { }$/;"	f	class:Brass::Item_base
Item_base	backends/brass/brass_table.h	/^    Item_base(T p_, int c) : p(p_ + getint2(p_, c)) { }$/;"	f	class:Brass::Item_base
Item_base	backends/brass/brass_table.h	/^template <class T> class Item_base {$/;"	c	namespace:Brass
Item_base	backends/chert/chert_table.h	/^    Item_base(T p_) : p(p_) { }$/;"	f	class:Item_base
Item_base	backends/chert/chert_table.h	/^    Item_base(T p_, int c) : p(p_ + getint2(p_, c)) { }$/;"	f	class:Item_base
Item_base	backends/chert/chert_table.h	/^template <class T> class Item_base {$/;"	c
Item_base_	backends/flint/flint_table.h	/^    Item_base_(T p_) : p(p_) { }$/;"	f	class:Item_base_
Item_base_	backends/flint/flint_table.h	/^    Item_base_(T p_, int c) : p(p_ + getint2(p_, c)) { }$/;"	f	class:Item_base_
Item_base_	backends/flint/flint_table.h	/^template <class T> class Item_base_ {$/;"	c
Item_wr	backends/brass/brass_table.h	/^    Item_wr(byte * p_) : Item_base<byte *>(p_) { }$/;"	f	class:Brass::Item_wr
Item_wr	backends/brass/brass_table.h	/^    Item_wr(byte * p_, int c) : Item_base<byte *>(p_, c) { }$/;"	f	class:Brass::Item_wr
Item_wr	backends/brass/brass_table.h	/^class Item_wr : public Item_base<byte *> {$/;"	c	namespace:Brass
Item_wr	backends/chert/chert_table.h	/^    Item_wr(byte * p_) : Item_base<byte *>(p_) { }$/;"	f	class:Item_wr
Item_wr	backends/chert/chert_table.h	/^    Item_wr(byte * p_, int c) : Item_base<byte *>(p_, c) { }$/;"	f	class:Item_wr
Item_wr	backends/chert/chert_table.h	/^class Item_wr : public Item_base<byte *> {$/;"	c
Item_wr_	backends/flint/flint_table.h	/^    Item_wr_(byte * p_) : Item_base_<byte *>(p_) { }$/;"	f	class:Item_wr_
Item_wr_	backends/flint/flint_table.h	/^    Item_wr_(byte * p_, int c) : Item_base_<byte *>(p_, c) { }$/;"	f	class:Item_wr_
Item_wr_	backends/flint/flint_table.h	/^class Item_wr_ : public Item_base_<byte *> {$/;"	c
J2	include/xapian/version_h.cc	/^#define J2(/;"	d	file:
J3	include/xapian/version_h.cc	/^#define J3(/;"	d	file:
JUNKSIZE	tests/stemtest.cc	/^static const int JUNKSIZE = 2 * 1048576;$/;"	v	file:
K1	backends/brass/brass_table.h	/^#define K1 /;"	d
K1	backends/chert/chert_table.h	/^#define K1 /;"	d
K1	backends/flint/flint_table.h	/^#define K1 /;"	d
KET	queryparser/queryparser_token.h	/^#define KET /;"	d
K_needed	languages/compiler/generator.c	/^static int K_needed(struct generator * g, struct node * p) {$/;"	f	file:
Key	backends/brass/brass_table.h	/^    explicit Key(const byte * p_) : p(p_) { }$/;"	f	class:Brass::Key
Key	backends/brass/brass_table.h	/^class XAPIAN_VISIBILITY_DEFAULT Key {$/;"	c	namespace:Brass
Key	backends/chert/chert_table.h	/^    explicit Key(const byte * p_) : p(p_) { }$/;"	f	class:Key
Key	backends/chert/chert_table.h	/^class XAPIAN_VISIBILITY_DEFAULT Key {$/;"	c
KeyMaker	include/xapian/keymaker.h	/^class XAPIAN_VISIBILITY_DEFAULT KeyMaker {$/;"	c	namespace:Xapian
Key_	backends/flint/flint_table.h	/^    explicit Key_(const byte * p_) : p(p_) { }$/;"	f	class:Key_
Key_	backends/flint/flint_table.h	/^class XAPIAN_VISIBILITY_DEFAULT Key_ {$/;"	c
L	languages/compiler/header.h	/^    symbol * L[5];       \/* literals, used in formatted write *\/$/;"	m	struct:generator
LANGSTRING	languages/allsnowballheaders.h	/^#define LANGSTRING /;"	d
LANG_C	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS } make_lang;$/;"	e	enum:options::__anon20
LANG_CPLUSPLUS	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS } make_lang;$/;"	e	enum:options::__anon20
LANG_JAVA	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS } make_lang;$/;"	e	enum:options::__anon20
LD	Makefile	/^LD = \/Applications\/Xcode.app\/Contents\/Developer\/Toolchains\/XcodeDefault.xctoolchain\/usr\/bin\/ld$/;"	m
LD	docs/Makefile	/^LD = \/Applications\/Xcode.app\/Contents\/Developer\/Toolchains\/XcodeDefault.xctoolchain\/usr\/bin\/ld$/;"	m
LD	tests/Makefile	/^LD = \/Applications\/Xcode.app\/Contents\/Developer\/Toolchains\/XcodeDefault.xctoolchain\/usr\/bin\/ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	docs/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tests/Makefile	/^LDFLAGS = $/;"	m
LEFT	queryparser/lemon.c	/^    LEFT,$/;"	e	enum:symbol::e_assoc	file:
LEMON_FALSE	queryparser/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	e	enum:__anon23	file:
LEMON_TRUE	queryparser/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	e	enum:__anon23	file:
LETTER_NUMBER	include/xapian/unicode.h	/^    LETTER_NUMBER,$/;"	e	enum:Xapian::Unicode::__anon18
LHS_ALIAS_1	queryparser/lemon.c	/^    LHS_ALIAS_1,$/;"	e	enum:pstate::e_state	file:
LHS_ALIAS_2	queryparser/lemon.c	/^    LHS_ALIAS_2,$/;"	e	enum:pstate::e_state	file:
LHS_ALIAS_3	queryparser/lemon.c	/^    LHS_ALIAS_3,$/;"	e	enum:pstate::e_state	file:
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	docs/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	tests/Makefile	/^LIBOBJS = $/;"	m
LIBRARY_VERSION_INFO	Makefile	/^LIBRARY_VERSION_INFO = 28:7:6$/;"	m
LIBRARY_VERSION_INFO	docs/Makefile	/^LIBRARY_VERSION_INFO = 28:7:6$/;"	m
LIBRARY_VERSION_INFO	tests/Makefile	/^LIBRARY_VERSION_INFO = 28:7:6$/;"	m
LIBRARY_VERSION_SUFFIX	Makefile	/^LIBRARY_VERSION_SUFFIX = $/;"	m
LIBRARY_VERSION_SUFFIX	docs/Makefile	/^LIBRARY_VERSION_SUFFIX = $/;"	m
LIBRARY_VERSION_SUFFIX	tests/Makefile	/^LIBRARY_VERSION_SUFFIX = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	docs/Makefile	/^LIBS = $/;"	m
LIBS	tests/Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool $(QUIET:y=--quiet)$/;"	m
LIBTOOL	docs/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	tests/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool $(QUIET:y=--quiet)$/;"	m
LINESIZE	queryparser/lemon.c	/^#define LINESIZE /;"	d	file:
LINEWIDTH	queryparser/lemon.c	/^#define LINEWIDTH /;"	d	file:
LINE_SEPARATOR	include/xapian/unicode.h	/^    LINE_SEPARATOR,$/;"	e	enum:Xapian::Unicode::__anon18
LINK	Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	tests/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = lipo$/;"	m
LIPO	docs/Makefile	/^LIPO = lipo$/;"	m
LIPO	tests/Makefile	/^LIPO = lipo$/;"	m
LISTSIZE	queryparser/lemon.c	/^#define LISTSIZE /;"	d	file:
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	docs/Makefile	/^LN_S = ln -s$/;"	m
LN_S	tests/Makefile	/^LN_S = ln -s$/;"	m
LOCALHOST	tests/harness/backendmanager_remotetcp.cc	/^#define LOCALHOST /;"	d	file:
LOGCALL	common/debuglog.h	/^#define LOGCALL(/;"	d
LOGCALL_CTOR	common/debuglog.h	/^#define LOGCALL_CTOR(/;"	d
LOGCALL_DTOR	common/debuglog.h	/^#define LOGCALL_DTOR(/;"	d
LOGCALL_STATIC	common/debuglog.h	/^#define LOGCALL_STATIC(/;"	d
LOGCALL_STATIC_VOID	common/debuglog.h	/^#define LOGCALL_STATIC_VOID(/;"	d
LOGCALL_VOID	common/debuglog.h	/^#define LOGCALL_VOID(/;"	d
LOGLINE	common/debuglog.h	/^#define LOGLINE(/;"	d
LOGLINE_	common/debuglog.h	/^#define LOGLINE_(/;"	d
LOGLINE_ALWAYS_	common/debuglog.h	/^#define LOGLINE_ALWAYS_(/;"	d
LOGVALUE	common/debuglog.h	/^#define LOGVALUE(/;"	d
LOVE	queryparser/queryparser_token.h	/^#define LOVE /;"	d
LOWERCASE_LETTER	include/xapian/unicode.h	/^    LOWERCASE_LETTER,$/;"	e	enum:Xapian::Unicode::__anon18
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	tests/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	Makefile	/^LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	tests/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	docs/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	tests/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LT_OBJDIR	config.h	/^#define LT_OBJDIR /;"	d
LeafPostList	common/leafpostlist.h	/^    LeafPostList(const std::string & term_)$/;"	f	class:LeafPostList
LeafPostList	common/leafpostlist.h	/^class LeafPostList : public PostList {$/;"	c
LessByTermpos	api/omqueryinternal.cc	/^struct LessByTermpos {$/;"	s	file:
Literal	common/pretty.h	/^    Literal(const char * lit) : _lit(lit) { }$/;"	f	struct:Literal
Literal	common/pretty.h	/^    Literal(const std::string & s) : _lit(s.c_str()) { }$/;"	f	struct:Literal
Literal	common/pretty.h	/^struct Literal {$/;"	s
LocalSubMatch	matcher/localsubmatch.h	/^    LocalSubMatch(const Xapian::Database::Internal *db_,$/;"	f	class:LocalSubMatch
LocalSubMatch	matcher/localsubmatch.h	/^class LocalSubMatch : public SubMatch {$/;"	c
LogicError	include/xapian/error.h	/^    LogicError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::LogicError
LogicError	include/xapian/error.h	/^    LogicError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::LogicError
LogicError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT LogicError : public Error {$/;"	c	namespace:Xapian
MAGIC_LEN	backends/brass/brass_version.cc	/^#define MAGIC_LEN /;"	d	file:
MAGIC_LEN	backends/chert/chert_version.cc	/^#define MAGIC_LEN /;"	d	file:
MAGIC_LEN	backends/flint/flint_version.cc	/^#define MAGIC_LEN /;"	d	file:
MAGIC_STRING	backends/brass/brass_version.cc	/^#define MAGIC_STRING /;"	d	file:
MAGIC_STRING	backends/chert/chert_version.cc	/^#define MAGIC_STRING /;"	d	file:
MAGIC_STRING	backends/flint/flint_version.cc	/^#define MAGIC_STRING /;"	d	file:
MAGIC_XOR_VALUE	backends/brass/brass_synonym.cc	/^#define MAGIC_XOR_VALUE /;"	d	file:
MAGIC_XOR_VALUE	backends/byte_length_strings.h	/^#define MAGIC_XOR_VALUE /;"	d
MAGIC_XOR_VALUE	backends/chert/chert_synonym.cc	/^#define MAGIC_XOR_VALUE /;"	d	file:
MAGIC_XOR_VALUE	backends/flint/flint_synonym.cc	/^#define MAGIC_XOR_VALUE /;"	d	file:
MAGIC_XOR_VALUE	backends/prefix_compressed_strings.h	/^#define MAGIC_XOR_VALUE /;"	d
MAINT	Makefile	/^MAINT = #$/;"	m
MAINT	docs/Makefile	/^MAINT = #$/;"	m
MAINT	tests/Makefile	/^MAINT = #$/;"	m
MAINTAINERCLEANFILES	Makefile	/^MAINTAINERCLEANFILES = $(am__append_38) $(am__append_39) \\$/;"	m
MAINTAINERCLEANFILES	docs/Makefile	/^MAINTAINERCLEANFILES = doxygen_api.conf doxygen_source.conf \\$/;"	m
MAKEINDEX	Makefile	/^MAKEINDEX = $/;"	m
MAKEINDEX	docs/Makefile	/^MAKEINDEX = $/;"	m
MAKEINDEX	tests/Makefile	/^MAKEINDEX = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run makeinfo$/;"	m
MAKEINFO	docs/Makefile	/^MAKEINFO = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run makeinfo$/;"	m
MAKEINFO	tests/Makefile	/^MAKEINFO = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/missing --run makeinfo$/;"	m
MALLOC	languages/compiler/header.h	/^#define MALLOC /;"	d
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	docs/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	tests/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANS	Makefile	/^MANS = $(dist_man_MANS)$/;"	m
MATH_SYMBOL	include/xapian/unicode.h	/^    MATH_SYMBOL,$/;"	e	enum:Xapian::Unicode::__anon18
MAXRHS	queryparser/lemon.c	/^#define MAXRHS /;"	d	file:
MAX_DB_COPIES_PER_CONVERSATION	common/replicationprotocol.h	/^#define MAX_DB_COPIES_PER_CONVERSATION /;"	d
MAX_DOCID	backends/brass/brass_values.cc	/^static const Xapian::docid MAX_DOCID = static_cast<Xapian::docid>(-1);$/;"	v	file:
MAX_DOCID	backends/chert/chert_values.cc	/^static const Xapian::docid MAX_DOCID = static_cast<Xapian::docid>(-1);$/;"	v	file:
MAX_EXP	common/serialise-double.cc	/^# define MAX_EXP /;"	d	file:
MAX_FREE	backends/brass/brass_table.h	/^#define MAX_FREE(/;"	d
MAX_FREE	backends/chert/chert_table.h	/^#define MAX_FREE(/;"	d
MAX_FREE	backends/flint/flint_check.cc	/^#define MAX_FREE(/;"	d	file:
MAX_FREE	backends/flint/flint_table.cc	/^#define MAX_FREE(/;"	d	file:
MAX_MANTISSA	common/serialise-double.cc	/^# define MAX_MANTISSA /;"	d	file:
MAX_MANTISSA_BYTES	common/serialise-double.cc	/^# define MAX_MANTISSA_BYTES /;"	d	file:
MAX_OPEN_RETRIES	backends/brass/brass_database.cc	/^const int MAX_OPEN_RETRIES = 100;$/;"	v
MAX_OPEN_RETRIES	backends/chert/chert_database.cc	/^const int MAX_OPEN_RETRIES = 100;$/;"	v
MAX_OPEN_RETRIES	backends/flint/flint_database.cc	/^const int MAX_OPEN_RETRIES = 100;$/;"	v
MAX_SAFE_TERM_LENGTH	backends/brass/brass_database.cc	/^#define MAX_SAFE_TERM_LENGTH /;"	d	file:
MAX_SAFE_TERM_LENGTH	backends/chert/chert_database.cc	/^#define MAX_SAFE_TERM_LENGTH /;"	d	file:
MAX_SAFE_TERM_LENGTH	backends/flint/flint_database.cc	/^#define MAX_SAFE_TERM_LENGTH /;"	d	file:
MKDIR_P	Makefile	/^MKDIR_P = .\/install-sh -c -d$/;"	m
MKDIR_P	docs/Makefile	/^MKDIR_P = ..\/.\/install-sh -c -d$/;"	m
MKDIR_P	tests/Makefile	/^MKDIR_P = ..\/.\/install-sh -c -d$/;"	m
MODIFIER_LETTER	include/xapian/unicode.h	/^    MODIFIER_LETTER,$/;"	e	enum:Xapian::Unicode::__anon18
MODIFIER_SYMBOL	include/xapian/unicode.h	/^    MODIFIER_SYMBOL,$/;"	e	enum:Xapian::Unicode::__anon18
MSECS_ACTIVE_TIMEOUT_DEFAULT	bin/xapian-tcpsrv.cc	/^const int MSECS_ACTIVE_TIMEOUT_DEFAULT = 15000;$/;"	v
MSECS_IDLE_TIMEOUT_DEFAULT	bin/xapian-tcpsrv.cc	/^const int MSECS_IDLE_TIMEOUT_DEFAULT = 60000;$/;"	v
MSG_ADDDOCUMENT	common/remoteprotocol.h	/^    MSG_ADDDOCUMENT,		\/\/ Add Document$/;"	e	enum:message_type
MSG_ADDSPELLING	common/remoteprotocol.h	/^    MSG_ADDSPELLING,		\/\/ Add a spelling$/;"	e	enum:message_type
MSG_ALLTERMS	common/remoteprotocol.h	/^    MSG_ALLTERMS,		\/\/ All Terms$/;"	e	enum:message_type
MSG_CANCEL	common/remoteprotocol.h	/^    MSG_CANCEL,			\/\/ Cancel$/;"	e	enum:message_type
MSG_COLLFREQ	common/remoteprotocol.h	/^    MSG_COLLFREQ,		\/\/ Get Collection Frequency$/;"	e	enum:message_type
MSG_COMMIT	common/remoteprotocol.h	/^    MSG_COMMIT,			\/\/ Commit$/;"	e	enum:message_type
MSG_DELETEDOCUMENT	common/remoteprotocol.h	/^    MSG_DELETEDOCUMENT,		\/\/ Delete Document$/;"	e	enum:message_type
MSG_DELETEDOCUMENTTERM	common/remoteprotocol.h	/^    MSG_DELETEDOCUMENTTERM,	\/\/ Delete Document by term$/;"	e	enum:message_type
MSG_DOCLENGTH	common/remoteprotocol.h	/^    MSG_DOCLENGTH,		\/\/ Get Doc Length$/;"	e	enum:message_type
MSG_DOCUMENT	common/remoteprotocol.h	/^    MSG_DOCUMENT,		\/\/ Get Document$/;"	e	enum:message_type
MSG_GETMETADATA	common/remoteprotocol.h	/^    MSG_GETMETADATA,		\/\/ Get metadata$/;"	e	enum:message_type
MSG_GETMSET	common/remoteprotocol.h	/^    MSG_GETMSET,		\/\/ Get MSet$/;"	e	enum:message_type
MSG_KEEPALIVE	common/remoteprotocol.h	/^    MSG_KEEPALIVE,		\/\/ Keep-alive$/;"	e	enum:message_type
MSG_MAX	common/remoteprotocol.h	/^    MSG_MAX$/;"	e	enum:message_type
MSG_METADATAKEYLIST	common/remoteprotocol.h	/^    MSG_METADATAKEYLIST,	\/\/ Iterator for metadata keys$/;"	e	enum:message_type
MSG_POSITIONLIST	common/remoteprotocol.h	/^    MSG_POSITIONLIST,		\/\/ Get PositionList$/;"	e	enum:message_type
MSG_POSTLIST	common/remoteprotocol.h	/^    MSG_POSTLIST,		\/\/ Get PostList$/;"	e	enum:message_type
MSG_QUERY	common/remoteprotocol.h	/^    MSG_QUERY,			\/\/ Run Query$/;"	e	enum:message_type
MSG_REMOVESPELLING	common/remoteprotocol.h	/^    MSG_REMOVESPELLING,		\/\/ Remove a spelling$/;"	e	enum:message_type
MSG_REOPEN	common/remoteprotocol.h	/^    MSG_REOPEN,			\/\/ Reopen$/;"	e	enum:message_type
MSG_REPLACEDOCUMENT	common/remoteprotocol.h	/^    MSG_REPLACEDOCUMENT,	\/\/ Replace Document$/;"	e	enum:message_type
MSG_REPLACEDOCUMENTTERM	common/remoteprotocol.h	/^    MSG_REPLACEDOCUMENTTERM,	\/\/ Replace Document by term$/;"	e	enum:message_type
MSG_SETMETADATA	common/remoteprotocol.h	/^    MSG_SETMETADATA,		\/\/ Set metadata$/;"	e	enum:message_type
MSG_SHUTDOWN	common/remoteprotocol.h	/^    MSG_SHUTDOWN,		\/\/ Shutdown$/;"	e	enum:message_type
MSG_TERMEXISTS	common/remoteprotocol.h	/^    MSG_TERMEXISTS,		\/\/ Term Exists?$/;"	e	enum:message_type
MSG_TERMFREQ	common/remoteprotocol.h	/^    MSG_TERMFREQ,		\/\/ Get Term Frequency$/;"	e	enum:message_type
MSG_TERMLIST	common/remoteprotocol.h	/^    MSG_TERMLIST,		\/\/ Get TermList$/;"	e	enum:message_type
MSG_UPDATE	common/remoteprotocol.h	/^    MSG_UPDATE,			\/\/ Get Updated DocCount and AvLength$/;"	e	enum:message_type
MSG_VALUESTATS	common/remoteprotocol.h	/^    MSG_VALUESTATS,		\/\/ Get value statistics$/;"	e	enum:message_type
MSG_WRITEACCESS	common/remoteprotocol.h	/^    MSG_WRITEACCESS,		\/\/ Upgrade to WritableDatabase$/;"	e	enum:message_type
MSVCIgnoreInvalidParameter	common/socket_utils.cc	/^    MSVCIgnoreInvalidParameter() { }$/;"	f	struct:MSVCIgnoreInvalidParameter
MSVCIgnoreInvalidParameter	common/socket_utils.cc	/^    MSVCIgnoreInvalidParameter() {$/;"	f	class:MSVCIgnoreInvalidParameter
MSVCIgnoreInvalidParameter	common/socket_utils.cc	/^class MSVCIgnoreInvalidParameter {$/;"	c	file:
MSVCIgnoreInvalidParameter	common/socket_utils.cc	/^struct MSVCIgnoreInvalidParameter {$/;"	s	file:
MSet	api/omenquire.cc	/^MSet::MSet() : internal(new MSet::Internal)$/;"	f	class:Xapian::MSet
MSet	api/omenquire.cc	/^MSet::MSet(MSet::Internal * internal_) : internal(internal_)$/;"	f	class:Xapian::MSet
MSet	api/omenquire.cc	/^MSet::MSet(const MSet & other) : internal(other.internal)$/;"	f	class:Xapian::MSet
MSet	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT MSet {$/;"	c	namespace:Xapian
MSetCmp	matcher/msetcmp.h	/^    MSetCmp(mset_cmp fn_) : fn(fn_) { }$/;"	f	class:MSetCmp
MSetCmp	matcher/msetcmp.h	/^class MSetCmp {$/;"	c
MSetItem	common/omenquireinternal.h	/^	MSetItem(Xapian::weight wt_, Xapian::docid did_)$/;"	f	class:Xapian::Internal::MSetItem
MSetItem	common/omenquireinternal.h	/^	MSetItem(Xapian::weight wt_, Xapian::docid did_, const string &key_)$/;"	f	class:Xapian::Internal::MSetItem
MSetItem	common/omenquireinternal.h	/^	MSetItem(Xapian::weight wt_, Xapian::docid did_, const string &key_,$/;"	f	class:Xapian::Internal::MSetItem
MSetItem	common/omenquireinternal.h	/^class MSetItem {$/;"	c	namespace:Xapian::Internal
MSetIterator	include/xapian/enquire.h	/^	MSetIterator() : index(0), mset() { }$/;"	f	class:Xapian::MSetIterator
MSetIterator	include/xapian/enquire.h	/^	MSetIterator(Xapian::doccount index_, const MSet & mset_)$/;"	f	class:Xapian::MSetIterator
MSetIterator	include/xapian/enquire.h	/^	MSetIterator(const MSetIterator &other) {$/;"	f	class:Xapian::MSetIterator
MSetIterator	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT MSetIterator {$/;"	c	namespace:Xapian
MSetPostList	matcher/msetpostlist.h	/^    MSetPostList(const Xapian::MSet mset, bool decreasing_relevance_)$/;"	f	class:MSetPostList
MSetPostList	matcher/msetpostlist.h	/^class MSetPostList : public PostList {$/;"	c
MULTITERMINAL	queryparser/lemon.c	/^    MULTITERMINAL$/;"	e	enum:symbol::__anon24	file:
MapTermList	api/maptermlist.h	/^	MapTermList(const Xapian::Document::Internal::document_terms::const_iterator &it_,$/;"	f	class:MapTermList
MapTermList	api/maptermlist.h	/^class MapTermList : public TermList {$/;"	c
MatchAll	api/omquery.cc	/^const Xapian::Query Xapian::Query::MatchAll = Xapian::Query(string());$/;"	m	class:Xapian::Xapian::Query	file:
MatchAll	include/xapian/query.h	/^	static const Xapian::Query MatchAll;$/;"	m	class:Xapian::Query
MatchDecider	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT MatchDecider {$/;"	c	namespace:Xapian
MatchNothing	api/omquery.cc	/^const Xapian::Query Xapian::Query::MatchNothing = Xapian::Query();$/;"	m	class:Xapian::Xapian::Query	file:
MatchNothing	include/xapian/query.h	/^	static const Xapian::Query MatchNothing;$/;"	m	class:Xapian::Query
MatchSpy	include/xapian/matchspy.h	/^    MatchSpy() {}$/;"	f	class:Xapian::MatchSpy
MatchSpy	include/xapian/matchspy.h	/^class XAPIAN_VISIBILITY_DEFAULT MatchSpy {$/;"	c	namespace:Xapian
MatchSpyList	net/remoteserver.cc	/^struct MatchSpyList {$/;"	s	file:
MemoryCheck	queryparser/lemon.c	/^#define MemoryCheck(/;"	d	file:
MergeCursor	backends/brass/brass_compact.cc	/^    MergeCursor(BrassTable *in) : BrassCursor(in) {$/;"	f	struct:BrassCompact::MergeCursor
MergeCursor	backends/brass/brass_compact.cc	/^struct MergeCursor : public BrassCursor {$/;"	s	namespace:BrassCompact	file:
MergeCursor	backends/chert/chert_compact.cc	/^    MergeCursor(ChertTable *in) : ChertCursor(in) {$/;"	f	struct:ChertCompact::MergeCursor
MergeCursor	backends/chert/chert_compact.cc	/^struct MergeCursor : public ChertCursor {$/;"	s	namespace:ChertCompact	file:
MergeCursor	backends/flint/flint_compact.cc	/^    MergeCursor(FlintTable *in) : FlintCursor(in) {$/;"	f	struct:FlintCompact::MergeCursor
MergeCursor	backends/flint/flint_compact.cc	/^struct MergeCursor : public FlintCursor {$/;"	s	namespace:FlintCompact	file:
MergePostList	matcher/mergepostlist.h	/^	MergePostList(const std::vector<PostList *> & plists_,$/;"	f	class:MergePostList
MergePostList	matcher/mergepostlist.h	/^class MergePostList : public PostList {$/;"	c
MultiAllTermsList	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::MultiAllTermsList(const vector<Xapian::Internal::RefCntPtr<Xapian::Database::Internal> > & dbs,$/;"	f	class:MultiAllTermsList
MultiAllTermsList	common/multialltermslist.h	/^class MultiAllTermsList : public AllTermsList {$/;"	c
MultiAndPostList	matcher/multiandpostlist.h	/^    MultiAndPostList(PostList *l, PostList *r,$/;"	f	class:MultiAndPostList
MultiAndPostList	matcher/multiandpostlist.h	/^    MultiAndPostList(RandomItor pl_begin, RandomItor pl_end,$/;"	f	class:MultiAndPostList
MultiAndPostList	matcher/multiandpostlist.h	/^class MultiAndPostList : public PostList {$/;"	c
MultiMatch	common/multimatch.h	/^class MultiMatch$/;"	c
MultiMatch	matcher/multimatch.cc	/^MultiMatch::MultiMatch(const Xapian::Database &db_,$/;"	f	class:MultiMatch
MultiPostList	backends/multi/multi_postlist.cc	/^MultiPostList::MultiPostList(std::vector<LeafPostList *> & pls,$/;"	f	class:MultiPostList
MultiPostList	backends/multi/multi_postlist.h	/^class MultiPostList : public PostList {$/;"	c
MultiTermList	backends/multi/multi_termlist.cc	/^MultiTermList::MultiTermList(TermList * tl_,$/;"	f	class:MultiTermList
MultiTermList	backends/multi/multi_termlist.h	/^class MultiTermList : public TermList {$/;"	c
MultiValueKeyMaker	include/xapian/keymaker.h	/^    MultiValueKeyMaker() { }$/;"	f	class:Xapian::MultiValueKeyMaker
MultiValueKeyMaker	include/xapian/keymaker.h	/^    MultiValueKeyMaker(Iterator begin, Iterator end) {$/;"	f	class:Xapian::MultiValueKeyMaker
MultiValueKeyMaker	include/xapian/keymaker.h	/^class XAPIAN_VISIBILITY_DEFAULT MultiValueKeyMaker : public KeyMaker {$/;"	c	namespace:Xapian
MultiValueList	backends/multi/multi_valuelist.cc	/^MultiValueList::MultiValueList(const vector<Xapian::Internal::RefCntPtr<Xapian::Database::Internal> > & dbs,$/;"	f	class:MultiValueList
MultiValueList	common/multivaluelist.h	/^class MultiValueList : public ValueList {$/;"	c
MultiValueSorter	include/xapian/keymaker.h	/^    MultiValueSorter() { }$/;"	f	class:Xapian::MultiValueSorter
MultiValueSorter	include/xapian/keymaker.h	/^    MultiValueSorter(Iterator begin, Iterator end) {$/;"	f	class:Xapian::MultiValueSorter
MultiValueSorter	include/xapian/keymaker.h	/^class XAPIAN_VISIBILITY_DEFAULT XAPIAN_DEPRECATED_CLASS MultiValueSorter : public Sorter {$/;"	c	namespace:Xapian
MultiXorPostList	matcher/multixorpostlist.h	/^    MultiXorPostList(RandomItor pl_begin, RandomItor pl_end,$/;"	f	class:MultiXorPostList
MultiXorPostList	matcher/multixorpostlist.h	/^class MultiXorPostList : public PostList {$/;"	c
MultipleMatchSpy	matcher/multimatch.cc	/^    MultipleMatchSpy(const std::vector<Xapian::MatchSpy *> & spies_)$/;"	f	class:MultipleMatchSpy
MultipleMatchSpy	matcher/multimatch.cc	/^class MultipleMatchSpy : public Xapian::MatchSpy {$/;"	c	file:
MutableBrassCursor	backends/brass/brass_cursor.h	/^    MutableBrassCursor(BrassTable *B_) : BrassCursor(B_) { }$/;"	f	class:MutableBrassCursor
MutableBrassCursor	backends/brass/brass_cursor.h	/^class MutableBrassCursor : public BrassCursor {$/;"	c
MutableChertCursor	backends/chert/chert_cursor.h	/^    MutableChertCursor(ChertTable *B_) : ChertCursor(B_) { }$/;"	f	class:MutableChertCursor
MutableChertCursor	backends/chert/chert_cursor.h	/^class MutableChertCursor : public ChertCursor {$/;"	c
MyCompactor	bin/xapian-compact.cc	/^    MyCompactor() : quiet(false) { }$/;"	f	class:MyCompactor
MyCompactor	bin/xapian-compact.cc	/^class MyCompactor : public Xapian::Compactor {$/;"	c	file:
MyDontAskWeightPostingSource	tests/api_postingsource.cc	/^    MyDontAskWeightPostingSource() : Xapian::PostingSource() {}$/;"	f	class:MyDontAskWeightPostingSource
MyDontAskWeightPostingSource	tests/api_postingsource.cc	/^    MyDontAskWeightPostingSource(Xapian::doccount num_docs_,$/;"	f	class:MyDontAskWeightPostingSource	file:
MyDontAskWeightPostingSource	tests/api_postingsource.cc	/^class MyDontAskWeightPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyMatchDecider	tests/api_backend.cc	/^    MyMatchDecider() : called(false) { }$/;"	f	struct:MyMatchDecider
MyMatchDecider	tests/api_backend.cc	/^struct MyMatchDecider : public Xapian::MatchDecider {$/;"	s	file:
MyOddPostingSource	tests/api_postingsource.cc	/^    MyOddPostingSource(Xapian::doccount num_docs_,$/;"	f	class:MyOddPostingSource	file:
MyOddPostingSource	tests/api_postingsource.cc	/^    MyOddPostingSource(const Xapian::Database &db)$/;"	f	class:MyOddPostingSource
MyOddPostingSource	tests/api_postingsource.cc	/^class MyOddPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyOddWeightingPostingSource	tests/api_postingsource.cc	/^    MyOddWeightingPostingSource(Xapian::doccount num_docs_,$/;"	f	class:MyOddWeightingPostingSource	file:
MyOddWeightingPostingSource	tests/api_postingsource.cc	/^    MyOddWeightingPostingSource(const Xapian::Database &db)$/;"	f	class:MyOddWeightingPostingSource
MyOddWeightingPostingSource	tests/api_postingsource.cc	/^class MyOddWeightingPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyPostingSource	tests/api_percentages.cc	/^    MyPostingSource() : started(false) { }$/;"	f	class:MyPostingSource
MyPostingSource	tests/api_percentages.cc	/^    MyPostingSource(const vector<pair<Xapian::docid, Xapian::weight> > &weights_,$/;"	f	class:MyPostingSource	file:
MyPostingSource	tests/api_percentages.cc	/^class MyPostingSource : public Xapian::PostingSource {$/;"	c	file:
MyPostingSource2	tests/api_serialise.cc	/^    MyPostingSource2(const std::string & desc_)$/;"	f	class:MyPostingSource2
MyPostingSource2	tests/api_serialise.cc	/^class MyPostingSource2 : public Xapian::ValuePostingSource {$/;"	c	file:
MySpy	tests/api_matchspy.cc	/^class MySpy : public Xapian::MatchSpy {$/;"	c	file:
MyStemImpl	tests/api_stem.cc	/^class MyStemImpl : public Xapian::StemImplementation {$/;"	c	file:
MyWeight	tests/api_db.cc	/^    MyWeight() { }$/;"	f	class:MyWeight
MyWeight	tests/api_db.cc	/^class MyWeight : public Xapian::Weight {$/;"	c	file:
NEAR	queryparser/queryparser_token.h	/^#define NEAR /;"	d
NEW	languages/compiler/header.h	/^#define NEW(/;"	d
NEWVEC	languages/compiler/header.h	/^#define NEWVEC(/;"	d
NEXT	queryparser/lemon.c	/^#define NEXT(/;"	d	file:
NGRAM_SIZE	queryparser/cjk-tokenizer.cc	/^static unsigned NGRAM_SIZE = 2;$/;"	v	file:
NM	Makefile	/^NM = \/usr\/bin\/nm$/;"	m
NM	docs/Makefile	/^NM = \/usr\/bin\/nm$/;"	m
NM	tests/Makefile	/^NM = \/usr\/bin\/nm$/;"	m
NMEDIT	Makefile	/^NMEDIT = nmedit$/;"	m
NMEDIT	docs/Makefile	/^NMEDIT = nmedit$/;"	m
NMEDIT	tests/Makefile	/^NMEDIT = nmedit$/;"	m
NOGDI	common/safewindows.h	/^#define NOGDI$/;"	d
NOMINMAX	common/safewindows.h	/^# define NOMINMAX$/;"	d
NONE	queryparser/lemon.c	/^    NONE,$/;"	e	enum:symbol::e_assoc	file:
NONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalMatchSpy::__anon33	file:
NONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalPostingSource::__anon31	file:
NONE	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	e	enum:ExceptionalWeight::__anon32	file:
NONOPTION_P	common/getopt.cc	/^# define NONOPTION_P /;"	d	file:
NONTERMINAL	queryparser/lemon.c	/^    NONTERMINAL,$/;"	e	enum:symbol::__anon24	file:
NON_BOOLEAN	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	e	enum:__anon30
NON_SPACING_MARK	include/xapian/unicode.h	/^    NON_SPACING_MARK,$/;"	e	enum:Xapian::Unicode::__anon18
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	docs/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	tests/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	docs/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	tests/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOT	queryparser/queryparser_token.h	/^#define NOT /;"	d
NOT_USED	queryparser/lemon.c	/^    NOT_USED                 \/* Deleted by compression *\/$/;"	e	enum:action::e_action	file:
NO_ARGS	common/debuglog.h	/^    typedef enum { NO_ARGS } NoArguments_;$/;"	e	enum:Xapian::__anon8
NO_INSTALL	Makefile	/^NO_INSTALL = -no-fast-install$/;"	m
NO_INSTALL	docs/Makefile	/^NO_INSTALL = -no-fast-install$/;"	m
NO_INSTALL	tests/Makefile	/^NO_INSTALL = -no-fast-install$/;"	m
NO_OFFSET	queryparser/lemon.c	/^#define NO_OFFSET /;"	d	file:
NROFF	Makefile	/^NROFF = nroff$/;"	m
NUMBER_OF_SUB_DBS	tests/harness/backendmanager_multi.cc	/^#define NUMBER_OF_SUB_DBS /;"	d	file:
NearPostList	matcher/phrasepostlist.h	/^        NearPostList(PostList *source_, Xapian::termpos window_,$/;"	f	class:NearPostList
NearPostList	matcher/phrasepostlist.h	/^class NearPostList : public SelectPostList {$/;"	c
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    NetworkError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^    explicit NetworkError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::NetworkError
NetworkError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT NetworkError : public RuntimeError {$/;"	c	namespace:Xapian
NetworkPostList	backends/remote/net_postlist.h	/^    NetworkPostList(Xapian::Internal::RefCntPtr<const RemoteDatabase> db_,$/;"	f	class:NetworkPostList
NetworkPostList	backends/remote/net_postlist.h	/^class NetworkPostList : public LeafPostList {$/;"	c
NetworkTermList	backends/remote/net_termlist.cc	/^NetworkTermList::NetworkTermList(Xapian::termcount document_length_,$/;"	f	class:NetworkTermList
NetworkTermList	backends/remote/net_termlist.h	/^class NetworkTermList : public TermList {$/;"	c
NetworkTermListItem	backends/remote/net_termlist.h	/^class NetworkTermListItem {$/;"	c
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    NetworkTimeoutError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^    explicit NetworkTimeoutError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::NetworkTimeoutError
NetworkTimeoutError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT NetworkTimeoutError : public NetworkError {$/;"	c	namespace:Xapian
NeverUseMeKeyMaker	tests/api_sorting.cc	/^class NeverUseMeKeyMaker : public Xapian::KeyMaker {$/;"	c	file:
NeverUseMeSorter	tests/api_sortingold.cc	/^class NeverUseMeSorter : public Xapian::Sorter {$/;"	c	file:
NoArguments_	common/debuglog.h	/^    typedef enum { NO_ARGS } NoArguments_;$/;"	t	namespace:Xapian	typeref:enum:Xapian::__anon8
NoSuchProgram	tests/perftest/runprocess.h	/^struct NoSuchProgram {};$/;"	s
NumberValueRangeProcessor	include/xapian/queryparser.h	/^    NumberValueRangeProcessor(Xapian::valueno slot_)$/;"	f	class:Xapian::NumberValueRangeProcessor
NumberValueRangeProcessor	include/xapian/queryparser.h	/^    NumberValueRangeProcessor(Xapian::valueno slot_, const std::string &str_,$/;"	f	class:Xapian::NumberValueRangeProcessor
NumberValueRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT NumberValueRangeProcessor : public StringValueRangeProcessor {$/;"	c	namespace:Xapian
OBJDUMP	Makefile	/^OBJDUMP = false$/;"	m
OBJDUMP	docs/Makefile	/^OBJDUMP = false$/;"	m
OBJDUMP	tests/Makefile	/^OBJDUMP = false$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	docs/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	tests/Makefile	/^OBJEXT = o$/;"	m
OFFSET_BITS	unicode/unicode-data.cc	/^#define OFFSET_BITS /;"	d	file:
OM_HGUARD_ANDMAYBEPOSTLIST_H	matcher/andmaybepostlist.h	/^#define OM_HGUARD_ANDMAYBEPOSTLIST_H$/;"	d
OM_HGUARD_ANDNOTPOSTLIST_H	matcher/andnotpostlist.h	/^#define OM_HGUARD_ANDNOTPOSTLIST_H$/;"	d
OM_HGUARD_BACKENDMANAGER_H	tests/harness/backendmanager.h	/^#define OM_HGUARD_BACKENDMANAGER_H$/;"	d
OM_HGUARD_BRANCHPOSTLIST_H	matcher/branchpostlist.h	/^#define OM_HGUARD_BRANCHPOSTLIST_H$/;"	d
OM_HGUARD_BRASS_BTREEBASE_H	backends/brass/brass_btreebase.h	/^#define OM_HGUARD_BRASS_BTREEBASE_H$/;"	d
OM_HGUARD_BRASS_CHECK_H	backends/brass/brass_check.h	/^#define OM_HGUARD_BRASS_CHECK_H$/;"	d
OM_HGUARD_BRASS_CURSOR_H	backends/brass/brass_cursor.h	/^#define OM_HGUARD_BRASS_CURSOR_H$/;"	d
OM_HGUARD_BRASS_DATABASE_H	backends/brass/brass_database.h	/^#define OM_HGUARD_BRASS_DATABASE_H$/;"	d
OM_HGUARD_BRASS_POSTLIST_H	backends/brass/brass_postlist.h	/^#define OM_HGUARD_BRASS_POSTLIST_H$/;"	d
OM_HGUARD_BRASS_RECORD_H	backends/brass/brass_record.h	/^#define OM_HGUARD_BRASS_RECORD_H$/;"	d
OM_HGUARD_BRASS_TABLE_H	backends/brass/brass_table.h	/^#define OM_HGUARD_BRASS_TABLE_H$/;"	d
OM_HGUARD_BRASS_TYPES_H	backends/brass/brass_types.h	/^#define OM_HGUARD_BRASS_TYPES_H$/;"	d
OM_HGUARD_BRASS_VERSION_H	backends/brass/brass_version.h	/^#define OM_HGUARD_BRASS_VERSION_H$/;"	d
OM_HGUARD_CHERT_BTREEBASE_H	backends/chert/chert_btreebase.h	/^#define OM_HGUARD_CHERT_BTREEBASE_H$/;"	d
OM_HGUARD_CHERT_CHECK_H	backends/chert/chert_check.h	/^#define OM_HGUARD_CHERT_CHECK_H$/;"	d
OM_HGUARD_CHERT_CURSOR_H	backends/chert/chert_cursor.h	/^#define OM_HGUARD_CHERT_CURSOR_H$/;"	d
OM_HGUARD_CHERT_DATABASE_H	backends/chert/chert_database.h	/^#define OM_HGUARD_CHERT_DATABASE_H$/;"	d
OM_HGUARD_CHERT_POSTLIST_H	backends/chert/chert_postlist.h	/^#define OM_HGUARD_CHERT_POSTLIST_H$/;"	d
OM_HGUARD_CHERT_RECORD_H	backends/chert/chert_record.h	/^#define OM_HGUARD_CHERT_RECORD_H$/;"	d
OM_HGUARD_CHERT_TABLE_H	backends/chert/chert_table.h	/^#define OM_HGUARD_CHERT_TABLE_H$/;"	d
OM_HGUARD_CHERT_TYPES_H	backends/chert/chert_types.h	/^#define OM_HGUARD_CHERT_TYPES_H$/;"	d
OM_HGUARD_CHERT_VERSION_H	backends/chert/chert_version.h	/^#define OM_HGUARD_CHERT_VERSION_H$/;"	d
OM_HGUARD_DATABASE_H	common/database.h	/^#define OM_HGUARD_DATABASE_H$/;"	d
OM_HGUARD_DOCUMENTTERM_H	common/documentterm.h	/^#define OM_HGUARD_DOCUMENTTERM_H$/;"	d
OM_HGUARD_DOCUMENT_H	common/document.h	/^#define OM_HGUARD_DOCUMENT_H$/;"	d
OM_HGUARD_EXTRAWEIGHTPOSTLIST_H	matcher/extraweightpostlist.h	/^#define OM_HGUARD_EXTRAWEIGHTPOSTLIST_H$/;"	d
OM_HGUARD_FLINT_BTREEBASE_H	backends/flint/flint_btreebase.h	/^#define OM_HGUARD_FLINT_BTREEBASE_H$/;"	d
OM_HGUARD_FLINT_CHECK_H	backends/flint/flint_check.h	/^#define OM_HGUARD_FLINT_CHECK_H$/;"	d
OM_HGUARD_FLINT_CURSOR_H	backends/flint/flint_cursor.h	/^#define OM_HGUARD_FLINT_CURSOR_H$/;"	d
OM_HGUARD_FLINT_DATABASE_H	backends/flint/flint_database.h	/^#define OM_HGUARD_FLINT_DATABASE_H$/;"	d
OM_HGUARD_FLINT_DOCUMENT_H	backends/flint/flint_document.h	/^#define OM_HGUARD_FLINT_DOCUMENT_H$/;"	d
OM_HGUARD_FLINT_POSTLIST_H	backends/flint/flint_postlist.h	/^#define OM_HGUARD_FLINT_POSTLIST_H$/;"	d
OM_HGUARD_FLINT_RECORD_H	backends/flint/flint_record.h	/^#define OM_HGUARD_FLINT_RECORD_H$/;"	d
OM_HGUARD_FLINT_TABLE_H	backends/flint/flint_table.h	/^#define OM_HGUARD_FLINT_TABLE_H$/;"	d
OM_HGUARD_FLINT_TYPES_H	backends/flint/flint_types.h	/^#define OM_HGUARD_FLINT_TYPES_H$/;"	d
OM_HGUARD_FLINT_UTILS_H	backends/flint/flint_utils.h	/^#define OM_HGUARD_FLINT_UTILS_H$/;"	d
OM_HGUARD_FLINT_VALUES_H	backends/flint/flint_values.h	/^#define OM_HGUARD_FLINT_VALUES_H$/;"	d
OM_HGUARD_FLINT_VERSION_H	backends/flint/flint_version.h	/^#define OM_HGUARD_FLINT_VERSION_H$/;"	d
OM_HGUARD_INMEMORY_ALLTERMSLIST_H	backends/inmemory/inmemory_alltermslist.h	/^#define OM_HGUARD_INMEMORY_ALLTERMSLIST_H$/;"	d
OM_HGUARD_INMEMORY_DATABASE_H	backends/inmemory/inmemory_database.h	/^#define OM_HGUARD_INMEMORY_DATABASE_H$/;"	d
OM_HGUARD_INMEMORY_POSITIONLIST_H	common/inmemory_positionlist.h	/^#define OM_HGUARD_INMEMORY_POSITIONLIST_H$/;"	d
OM_HGUARD_MAPTERMLIST_H	api/maptermlist.h	/^#define OM_HGUARD_MAPTERMLIST_H$/;"	d
OM_HGUARD_MERGEPOSTLIST_H	matcher/mergepostlist.h	/^#define OM_HGUARD_MERGEPOSTLIST_H$/;"	d
OM_HGUARD_MULTIMATCH_H	common/multimatch.h	/^#define OM_HGUARD_MULTIMATCH_H$/;"	d
OM_HGUARD_MULTI_POSTLIST_H	backends/multi/multi_postlist.h	/^#define OM_HGUARD_MULTI_POSTLIST_H$/;"	d
OM_HGUARD_MULTI_TERMLIST_H	backends/multi/multi_termlist.h	/^#define OM_HGUARD_MULTI_TERMLIST_H$/;"	d
OM_HGUARD_NET_TERMLIST_H	backends/remote/net_termlist.h	/^#define OM_HGUARD_NET_TERMLIST_H$/;"	d
OM_HGUARD_OMENQUIREINTERNAL_H	common/omenquireinternal.h	/^#define OM_HGUARD_OMENQUIREINTERNAL_H$/;"	d
OM_HGUARD_ORPOSTLIST_H	matcher/orpostlist.h	/^#define OM_HGUARD_ORPOSTLIST_H$/;"	d
OM_HGUARD_PHRASEPOSTLIST_H	matcher/phrasepostlist.h	/^#define OM_HGUARD_PHRASEPOSTLIST_H$/;"	d
OM_HGUARD_POSITIONLIST_H	common/positionlist.h	/^#define OM_HGUARD_POSITIONLIST_H$/;"	d
OM_HGUARD_SELECTPOSTLIST_H	matcher/selectpostlist.h	/^#define OM_HGUARD_SELECTPOSTLIST_H$/;"	d
OM_HGUARD_TESTSUITE_H	tests/harness/testsuite.h	/^#define OM_HGUARD_TESTSUITE_H$/;"	d
OM_HGUARD_TESTUTILS_H	tests/harness/testutils.h	/^#define OM_HGUARD_TESTUTILS_H$/;"	d
OM_HGUARD_UTILS_H	common/utils.h	/^#define OM_HGUARD_UTILS_H$/;"	d
OM_HGUARD_VECTORTERMLIST_H	common/vectortermlist.h	/^#define OM_HGUARD_VECTORTERMLIST_H$/;"	d
OPEN_PUNCTUATION	include/xapian/unicode.h	/^    OPEN_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon18
OPT_DBL	queryparser/lemon.c	/^  enum { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:s_options::__anon22	file:
OPT_FDBL	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR} type;$/;"	e	enum:s_options::__anon22	file:
OPT_FFLAG	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR} type;$/;"	e	enum:s_options::__anon22	file:
OPT_FINT	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR} type;$/;"	e	enum:s_options::__anon22	file:
OPT_FLAG	queryparser/lemon.c	/^  enum { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:s_options::__anon22	file:
OPT_FSTR	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR} type;$/;"	e	enum:s_options::__anon22	file:
OPT_FULL_TREE	backends/brass/brass_check.h	/^#define OPT_FULL_TREE /;"	d
OPT_FULL_TREE	backends/chert/chert_check.h	/^#define OPT_FULL_TREE /;"	d
OPT_FULL_TREE	backends/flint/flint_check.h	/^#define OPT_FULL_TREE /;"	d
OPT_HELP	bin/xapian-chert-update.cc	/^#define OPT_HELP /;"	d	file:
OPT_HELP	bin/xapian-compact.cc	/^#define OPT_HELP /;"	d	file:
OPT_HELP	bin/xapian-inspect.cc	/^#define OPT_HELP /;"	d	file:
OPT_HELP	bin/xapian-progsrv.cc	/^#define OPT_HELP /;"	d	file:
OPT_HELP	bin/xapian-replicate-server.cc	/^#define OPT_HELP /;"	d	file:
OPT_HELP	bin/xapian-replicate.cc	/^#define OPT_HELP /;"	d	file:
OPT_HELP	bin/xapian-tcpsrv.cc	/^#define OPT_HELP /;"	d	file:
OPT_INT	queryparser/lemon.c	/^  enum { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:s_options::__anon22	file:
OPT_NO_RENUMBER	bin/xapian-chert-update.cc	/^#define OPT_NO_RENUMBER /;"	d	file:
OPT_NO_RENUMBER	bin/xapian-compact.cc	/^#define OPT_NO_RENUMBER /;"	d	file:
OPT_SHORT_TREE	backends/brass/brass_check.h	/^#define OPT_SHORT_TREE /;"	d
OPT_SHORT_TREE	backends/chert/chert_check.h	/^#define OPT_SHORT_TREE /;"	d
OPT_SHORT_TREE	backends/flint/flint_check.h	/^#define OPT_SHORT_TREE /;"	d
OPT_SHOW_BITMAP	backends/brass/brass_check.h	/^#define OPT_SHOW_BITMAP /;"	d
OPT_SHOW_BITMAP	backends/chert/chert_check.h	/^#define OPT_SHOW_BITMAP /;"	d
OPT_SHOW_BITMAP	backends/flint/flint_check.h	/^#define OPT_SHOW_BITMAP /;"	d
OPT_SHOW_STATS	backends/brass/brass_check.h	/^#define OPT_SHOW_STATS /;"	d
OPT_SHOW_STATS	backends/chert/chert_check.h	/^#define OPT_SHOW_STATS /;"	d
OPT_SHOW_STATS	backends/flint/flint_check.h	/^#define OPT_SHOW_STATS /;"	d
OPT_STR	queryparser/lemon.c	/^  enum { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:s_options::__anon22	file:
OPT_VERSION	bin/xapian-chert-update.cc	/^#define OPT_VERSION /;"	d	file:
OPT_VERSION	bin/xapian-compact.cc	/^#define OPT_VERSION /;"	d	file:
OPT_VERSION	bin/xapian-inspect.cc	/^#define OPT_VERSION /;"	d	file:
OPT_VERSION	bin/xapian-progsrv.cc	/^#define OPT_VERSION /;"	d	file:
OPT_VERSION	bin/xapian-replicate-server.cc	/^#define OPT_VERSION /;"	d	file:
OPT_VERSION	bin/xapian-replicate.cc	/^#define OPT_VERSION /;"	d	file:
OPT_VERSION	bin/xapian-tcpsrv.cc	/^#define OPT_VERSION /;"	d	file:
OP_AND	include/xapian/query.h	/^	    OP_AND,$/;"	e	enum:Xapian::Query::__anon14
OP_AND_MAYBE	include/xapian/query.h	/^	    OP_AND_MAYBE,$/;"	e	enum:Xapian::Query::__anon14
OP_AND_NOT	include/xapian/query.h	/^	    OP_AND_NOT,$/;"	e	enum:Xapian::Query::__anon14
OP_ELITE_SET	include/xapian/query.h	/^	    OP_ELITE_SET,$/;"	e	enum:Xapian::Query::__anon14
OP_EXTERNAL_SOURCE	include/xapian/query.h	/^        static const int OP_EXTERNAL_SOURCE = -2;$/;"	m	class:Xapian::Query::Internal
OP_FILTER	include/xapian/query.h	/^	    OP_FILTER,$/;"	e	enum:Xapian::Query::__anon14
OP_LEAF	include/xapian/query.h	/^        static const int OP_LEAF = -1;$/;"	m	class:Xapian::Query::Internal
OP_NEAR	include/xapian/query.h	/^	    OP_NEAR,$/;"	e	enum:Xapian::Query::__anon14
OP_OR	include/xapian/query.h	/^	    OP_OR,$/;"	e	enum:Xapian::Query::__anon14
OP_PHRASE	include/xapian/query.h	/^	    OP_PHRASE,$/;"	e	enum:Xapian::Query::__anon14
OP_SCALE_WEIGHT	include/xapian/query.h	/^	    OP_SCALE_WEIGHT,$/;"	e	enum:Xapian::Query::__anon14
OP_SYNONYM	include/xapian/query.h	/^	    OP_SYNONYM$/;"	e	enum:Xapian::Query::__anon14
OP_VALUE_GE	include/xapian/query.h	/^	    OP_VALUE_GE,$/;"	e	enum:Xapian::Query::__anon14
OP_VALUE_LE	include/xapian/query.h	/^	    OP_VALUE_LE,$/;"	e	enum:Xapian::Query::__anon14
OP_VALUE_RANGE	include/xapian/query.h	/^	    OP_VALUE_RANGE,$/;"	e	enum:Xapian::Query::__anon14
OP_XOR	include/xapian/query.h	/^	    OP_XOR,$/;"	e	enum:Xapian::Query::__anon14
OR	queryparser/queryparser_token.h	/^#define OR /;"	d
OTHER_LETTER	include/xapian/unicode.h	/^    OTHER_LETTER,$/;"	e	enum:Xapian::Unicode::__anon18
OTHER_NUMBER	include/xapian/unicode.h	/^    OTHER_NUMBER,$/;"	e	enum:Xapian::Unicode::__anon18
OTHER_PUNCTUATION	include/xapian/unicode.h	/^    OTHER_PUNCTUATION,$/;"	e	enum:Xapian::Unicode::__anon18
OTHER_SYMBOL	include/xapian/unicode.h	/^    OTHER_SYMBOL$/;"	e	enum:Xapian::Unicode::__anon18
OTOOL	Makefile	/^OTOOL = otool$/;"	m
OTOOL	docs/Makefile	/^OTOOL = otool$/;"	m
OTOOL	tests/Makefile	/^OTOOL = otool$/;"	m
OTOOL64	Makefile	/^OTOOL64 = :$/;"	m
OTOOL64	docs/Makefile	/^OTOOL64 = :$/;"	m
OTOOL64	tests/Makefile	/^OTOOL64 = :$/;"	m
O_BINARY	common/safefcntl.h	/^#  define O_BINARY /;"	d
O_N	tests/harness/scalability.h	/^#define O_N /;"	d
O_N_LOG_N	tests/harness/scalability.h	/^#define O_N_LOG_N /;"	d
O_SYNC	common/debuglog.cc	/^# define O_SYNC /;"	d	file:
OmDocumentTerm	common/documentterm.h	/^    explicit OmDocumentTerm(Xapian::termcount wdf_)$/;"	f	class:OmDocumentTerm
OmDocumentTerm	common/documentterm.h	/^class OmDocumentTerm {$/;"	c
OptArg	queryparser/lemon.c	/^char *OptArg(n)$/;"	f
OptErr	queryparser/lemon.c	/^void OptErr(n)$/;"	f
OptInit	queryparser/lemon.c	/^int OptInit(a,o,err)$/;"	f
OptNArgs	queryparser/lemon.c	/^int OptNArgs(){$/;"	f
OptPrint	queryparser/lemon.c	/^void OptPrint(){$/;"	f
OrPostList	matcher/orpostlist.cc	/^OrPostList::OrPostList(PostList *left_,$/;"	f	class:OrPostList
OrPostList	matcher/orpostlist.h	/^class OrPostList : public BranchPostList {$/;"	c
OrTermList	common/ortermlist.h	/^    OrTermList(TermList * left_, TermList * right_)$/;"	f	class:OrTermList
OrTermList	common/ortermlist.h	/^class OrTermList : public TermList {$/;"	c
PACKAGE	Makefile	/^PACKAGE = xapian-core$/;"	m
PACKAGE	config.h	/^#define PACKAGE /;"	d
PACKAGE	docs/Makefile	/^PACKAGE = xapian-core$/;"	m
PACKAGE	tests/Makefile	/^PACKAGE = xapian-core$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = http:\/\/xapian.org\/bugs$/;"	m
PACKAGE_BUGREPORT	config.h	/^#define PACKAGE_BUGREPORT /;"	d
PACKAGE_BUGREPORT	docs/Makefile	/^PACKAGE_BUGREPORT = http:\/\/xapian.org\/bugs$/;"	m
PACKAGE_BUGREPORT	tests/Makefile	/^PACKAGE_BUGREPORT = http:\/\/xapian.org\/bugs$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = xapian-core$/;"	m
PACKAGE_NAME	config.h	/^#define PACKAGE_NAME /;"	d
PACKAGE_NAME	docs/Makefile	/^PACKAGE_NAME = xapian-core$/;"	m
PACKAGE_NAME	tests/Makefile	/^PACKAGE_NAME = xapian-core$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = xapian-core 1.2.20$/;"	m
PACKAGE_STRING	config.h	/^#define PACKAGE_STRING /;"	d
PACKAGE_STRING	docs/Makefile	/^PACKAGE_STRING = xapian-core 1.2.20$/;"	m
PACKAGE_STRING	tests/Makefile	/^PACKAGE_STRING = xapian-core 1.2.20$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = xapian-core$/;"	m
PACKAGE_TARNAME	config.h	/^#define PACKAGE_TARNAME /;"	d
PACKAGE_TARNAME	docs/Makefile	/^PACKAGE_TARNAME = xapian-core$/;"	m
PACKAGE_TARNAME	tests/Makefile	/^PACKAGE_TARNAME = xapian-core$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	/^#define PACKAGE_URL /;"	d
PACKAGE_URL	docs/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	tests/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.2.20$/;"	m
PACKAGE_VERSION	config.h	/^#define PACKAGE_VERSION /;"	d
PACKAGE_VERSION	docs/Makefile	/^PACKAGE_VERSION = 1.2.20$/;"	m
PACKAGE_VERSION	tests/Makefile	/^PACKAGE_VERSION = 1.2.20$/;"	m
PARAGRAPH_SEPARATOR	include/xapian/unicode.h	/^    PARAGRAPH_SEPARATOR,$/;"	e	enum:Xapian::Unicode::__anon18
PARTIAL_TERM	queryparser/queryparser_token.h	/^#define PARTIAL_TERM /;"	d
PASS	tests/harness/testsuite.h	/^	typedef enum { PASS = 1, FAIL = 0, SKIP = -1 } test_result;$/;"	e	enum:test_driver::__anon34
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	docs/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	tests/Makefile	/^PATH_SEPARATOR = :$/;"	m
PERL	Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	docs/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	tests/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERMUTE	common/getopt.cc	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon9	file:
PHR_TERM	queryparser/queryparser_token.h	/^#define PHR_TERM /;"	d
PNGCRUSH	Makefile	/^PNGCRUSH = $/;"	m
PNGCRUSH	docs/Makefile	/^PNGCRUSH = $/;"	m
PNGCRUSH	tests/Makefile	/^PNGCRUSH = $/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	docs/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	tests/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	docs/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	tests/Makefile	/^POST_UNINSTALL = :$/;"	m
PRECEDENCE_MARK_1	queryparser/lemon.c	/^    PRECEDENCE_MARK_1,$/;"	e	enum:pstate::e_state	file:
PRECEDENCE_MARK_2	queryparser/lemon.c	/^    PRECEDENCE_MARK_2,$/;"	e	enum:pstate::e_state	file:
PREFIXLIMIT	queryparser/lemon.c	/^#define PREFIXLIMIT /;"	d	file:
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	docs/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	tests/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	docs/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	tests/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRIVATE	queryparser/lemon.c	/^#define PRIVATE /;"	d	file:
PRIVATE_USE	include/xapian/unicode.h	/^    PRIVATE_USE,$/;"	e	enum:Xapian::Unicode::__anon18
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROG_DESC	bin/xapian-check.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	bin/xapian-chert-update.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	bin/xapian-compact.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	bin/xapian-inspect.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	bin/xapian-progsrv.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	bin/xapian-replicate-server.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	bin/xapian-replicate.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	bin/xapian-tcpsrv.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	examples/copydatabase.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	examples/delve.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	examples/quest.cc	/^#define PROG_DESC /;"	d	file:
PROG_DESC	examples/xapian-metadata.cc	/^#define PROG_DESC /;"	d	file:
PROG_NAME	bin/xapian-check.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	bin/xapian-chert-update.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	bin/xapian-compact.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	bin/xapian-inspect.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	bin/xapian-progsrv.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	bin/xapian-replicate-server.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	bin/xapian-replicate.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	bin/xapian-tcpsrv.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	examples/copydatabase.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	examples/delve.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	examples/quest.cc	/^#define PROG_NAME /;"	d	file:
PROG_NAME	examples/xapian-metadata.cc	/^#define PROG_NAME /;"	d	file:
Parse	queryparser/lemon.c	/^void Parse(gp)$/;"	f
Parse	queryparser/queryparser_internal.cc	/^static void Parse($/;"	f	file:
ParseARG_FETCH	queryparser/queryparser_internal.cc	/^#define ParseARG_FETCH /;"	d	file:
ParseARG_PDECL	queryparser/queryparser_internal.cc	/^#define ParseARG_PDECL /;"	d	file:
ParseARG_SDECL	queryparser/queryparser_internal.cc	/^#define ParseARG_SDECL /;"	d	file:
ParseARG_STORE	queryparser/queryparser_internal.cc	/^#define ParseARG_STORE /;"	d	file:
ParseAlloc	queryparser/queryparser_internal.cc	/^static yyParser *ParseAlloc(){$/;"	f	file:
ParseFree	queryparser/queryparser_internal.cc	/^static void ParseFree($/;"	f	file:
ParseRuleName	queryparser/queryparser_internal.cc	/^static const char *ParseRuleName(int ruleNum){$/;"	f	file:
ParseTOKENTYPE	queryparser/queryparser_internal.cc	/^#define ParseTOKENTYPE /;"	d	file:
ParseTokenName	queryparser/queryparser_internal.cc	/^static const char *ParseTokenName(int tokenType){$/;"	f	file:
ParserHandler	queryparser/queryparser_internal.cc	/^    explicit ParserHandler(yyParser * parser_) : parser(parser_) { }$/;"	f	class:ParserHandler
ParserHandler	queryparser/queryparser_internal.cc	/^class ParserHandler {$/;"	c	file:
PerfTestLogger	tests/perftest/perftest.cc	/^PerfTestLogger::PerfTestLogger()$/;"	f	class:PerfTestLogger
PerfTestLogger	tests/perftest/perftest.h	/^class PerfTestLogger {$/;"	c
PerfTestRunner	tests/perftest/perftest.cc	/^    PerfTestRunner()$/;"	f	class:PerfTestRunner
PerfTestRunner	tests/perftest/perftest.cc	/^class PerfTestRunner : public TestRunner$/;"	c	file:
PhrasePostList	matcher/phrasepostlist.h	/^        PhrasePostList(PostList *source_, Xapian::termpos window_,$/;"	f	class:PhrasePostList
PhrasePostList	matcher/phrasepostlist.h	/^class PhrasePostList : public SelectPostList {$/;"	c
Plink_add	queryparser/lemon.c	/^void Plink_add(plpp,cfp)$/;"	f
Plink_copy	queryparser/lemon.c	/^void Plink_copy(to,from)$/;"	f
Plink_delete	queryparser/lemon.c	/^void Plink_delete(plp)$/;"	f
Plink_new	queryparser/lemon.c	/^struct plink *Plink_new(){$/;"	f
PosFilter	matcher/queryoptimiser.cc	/^    PosFilter(Xapian::Query::Internal::op_t op_, size_t begin_, size_t end_,$/;"	f	struct:PosFilter
PosFilter	matcher/queryoptimiser.cc	/^struct PosFilter {$/;"	s	file:
PositionIterator	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::PositionIterator() : internal(0)$/;"	f	class:Xapian::PositionIterator
PositionIterator	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::PositionIterator(Internal *internal_)$/;"	f	class:Xapian::PositionIterator
PositionIterator	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::PositionIterator(const Xapian::PositionIterator &o)$/;"	f	class:Xapian::PositionIterator
PositionIterator	include/xapian/positioniterator.h	/^class XAPIAN_VISIBILITY_DEFAULT PositionIterator {$/;"	c	namespace:Xapian
PositionList	common/database.h	/^typedef Xapian::PositionIterator::Internal PositionList;$/;"	t
PositionList	common/positionlist.h	/^typedef Xapian::PositionIterator::Internal PositionList;$/;"	t
PositionList	matcher/exactphrasepostlist.h	/^typedef Xapian::PositionIterator::Internal PositionList;$/;"	t
PositionList	matcher/phrasepostlist.h	/^typedef Xapian::PositionIterator::Internal PositionList;$/;"	t
PositionListCmpLt	matcher/phrasepostlist.cc	/^class PositionListCmpLt {$/;"	c	file:
PostList	common/postlist.h	/^typedef Xapian::PostingIterator::Internal PostList;$/;"	t
PostingChanges	backends/brass/brass_inverter.h	/^	PostingChanges(Xapian::docid did, Xapian::termcount old_wdf,$/;"	f	class:Inverter::PostingChanges
PostingChanges	backends/brass/brass_inverter.h	/^	PostingChanges(Xapian::docid did, Xapian::termcount wdf)$/;"	f	class:Inverter::PostingChanges
PostingChanges	backends/brass/brass_inverter.h	/^	PostingChanges(Xapian::docid did, Xapian::termcount wdf, bool)$/;"	f	class:Inverter::PostingChanges
PostingChanges	backends/brass/brass_inverter.h	/^    class PostingChanges {$/;"	c	class:Inverter
PostingIterator	api/ompostlistiterator.cc	/^Xapian::PostingIterator::PostingIterator() : internal(0) {$/;"	f	class:Xapian::PostingIterator
PostingIterator	api/ompostlistiterator.cc	/^Xapian::PostingIterator::PostingIterator(Internal *internal_)$/;"	f	class:Xapian::PostingIterator
PostingIterator	api/ompostlistiterator.cc	/^Xapian::PostingIterator::PostingIterator(const Xapian::PostingIterator &other)$/;"	f	class:Xapian::PostingIterator
PostingIterator	include/xapian/postingiterator.h	/^class XAPIAN_VISIBILITY_DEFAULT PostingIterator {$/;"	c	namespace:Xapian
PostingSource	include/xapian/postingsource.h	/^    PostingSource() : max_weight_(0), matcher_(NULL) { }$/;"	f	class:Xapian::PostingSource
PostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT PostingSource {$/;"	c	namespace:Xapian
PostlistChunkReader	backends/brass/brass_postlist.cc	/^    PostlistChunkReader(Xapian::docid first_did, const string & data_)$/;"	f	class:Brass::PostlistChunkReader
PostlistChunkReader	backends/brass/brass_postlist.cc	/^class Brass::PostlistChunkReader {$/;"	c	class:Brass	file:
PostlistChunkReader	backends/chert/chert_postlist.cc	/^    PostlistChunkReader(Xapian::docid first_did, const string & data_)$/;"	f	class:Chert::PostlistChunkReader
PostlistChunkReader	backends/chert/chert_postlist.cc	/^class Chert::PostlistChunkReader {$/;"	c	class:Chert	file:
PostlistChunkWriter	backends/brass/brass_postlist.cc	/^PostlistChunkWriter::PostlistChunkWriter(const string &orig_key_,$/;"	f	class:PostlistChunkWriter
PostlistChunkWriter	backends/brass/brass_postlist.cc	/^class Brass::PostlistChunkWriter {$/;"	c	class:Brass	file:
PostlistChunkWriter	backends/chert/chert_postlist.cc	/^PostlistChunkWriter::PostlistChunkWriter(const string &orig_key_,$/;"	f	class:PostlistChunkWriter
PostlistChunkWriter	backends/chert/chert_postlist.cc	/^class Chert::PostlistChunkWriter {$/;"	c	class:Chert	file:
PostlistCursor	backends/brass/brass_compact.cc	/^    PostlistCursor(BrassTable *in, Xapian::docid offset_)$/;"	f	class:BrassCompact::PostlistCursor
PostlistCursor	backends/brass/brass_compact.cc	/^class PostlistCursor : private BrassCursor {$/;"	c	namespace:BrassCompact	file:
PostlistCursor	backends/chert/chert_compact.cc	/^    PostlistCursor(ChertTable *in, Xapian::docid offset_)$/;"	f	class:ChertCompact::PostlistCursor
PostlistCursor	backends/chert/chert_compact.cc	/^class PostlistCursor : private ChertCursor {$/;"	c	namespace:ChertCompact	file:
PostlistCursor	backends/flint/flint_compact.cc	/^    PostlistCursor(FlintTable *in, Xapian::docid offset_)$/;"	f	class:FlintCompact::PostlistCursor
PostlistCursor	backends/flint/flint_compact.cc	/^class PostlistCursor : private FlintCursor {$/;"	c	namespace:FlintCompact	file:
PostlistCursorGt	backends/brass/brass_compact.cc	/^class PostlistCursorGt {$/;"	c	namespace:BrassCompact	file:
PostlistCursorGt	backends/chert/chert_compact.cc	/^class PostlistCursorGt {$/;"	c	namespace:ChertCompact	file:
PostlistCursorGt	backends/flint/flint_compact.cc	/^class PostlistCursorGt {$/;"	c	namespace:FlintCompact	file:
PrefixCompressedStringItor	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringItor(const std::string & s)$/;"	f	class:PrefixCompressedStringItor
PrefixCompressedStringItor	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringItor(const unsigned char * p_, size_t left_,$/;"	f	class:PrefixCompressedStringItor
PrefixCompressedStringItor	backends/prefix_compressed_strings.h	/^class PrefixCompressedStringItor {$/;"	c
PrefixCompressedStringItorGt	backends/prefix_compressed_strings.h	/^struct PrefixCompressedStringItorGt {$/;"	s
PrefixCompressedStringWriter	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringWriter(std::string & out_) : out(out_) { }$/;"	f	class:PrefixCompressedStringWriter
PrefixCompressedStringWriter	backends/prefix_compressed_strings.h	/^class PrefixCompressedStringWriter {$/;"	c
PrefixInfo	queryparser/queryparser_internal.h	/^    PrefixInfo(filter_type type_, const string & prefix)$/;"	f	struct:PrefixInfo
PrefixInfo	queryparser/queryparser_internal.h	/^struct PrefixInfo {$/;"	s
PrettyOStream	common/pretty.h	/^    PrettyOStream(S & os_) : os(os_) { }$/;"	f	struct:PrettyOStream
PrettyOStream	common/pretty.h	/^struct PrettyOStream {$/;"	s
PrintAction	queryparser/lemon.c	/^int PrintAction(struct action *ap, FILE *fp, int indent){$/;"	f
ProbQuery	queryparser/queryparser_internal.cc	/^    ProbQuery() : query(0), love(0), hate(0) { }$/;"	f	struct:ProbQuery
ProbQuery	queryparser/queryparser_internal.cc	/^struct ProbQuery {$/;"	s	file:
ProgClient	common/progclient.h	/^class ProgClient : public RemoteDatabase {$/;"	c
ProgClient	net/progclient.cc	/^ProgClient::ProgClient(const string &progname, const string &args,$/;"	f	class:ProgClient
QUERY_LENGTH	include/xapian/weight.h	/^	QUERY_LENGTH = 32,$/;"	e	enum:Xapian::Weight::__anon19
QUIET	Makefile	/^QUIET = $/;"	m
QUIET	docs/Makefile	/^QUIET = $/;"	m
QUIET	tests/Makefile	/^QUIET = $/;"	m
QUOTE	queryparser/queryparser_token.h	/^#define QUOTE /;"	d
QUnserial	api/omqueryinternal.cc	/^    QUnserial(const string & s, const Xapian::Registry & reg_)$/;"	f	class:QUnserial
QUnserial	api/omqueryinternal.cc	/^class QUnserial {$/;"	c	file:
Query	api/omquery.cc	/^Query::Query() : internal(0)$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(PostingSource * external_source)$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(Query::op op_, Xapian::Query q, double parameter)$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(Query::op op_, Xapian::valueno slot, const std::string &value)$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(Query::op op_, Xapian::valueno slot,$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(Query::op op_, const Query &left, const Query &right)$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(Query::op op_, const std::string & left, const std::string & right)$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(const Query & copyme)$/;"	f	class:Xapian::Query
Query	api/omquery.cc	/^Query::Query(const string & tname_, termcount wqf_, termpos pos_)$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^Query::Query(Query::op op_, Iterator qbegin, Iterator qend, termcount parameter)$/;"	f	class:Xapian::Query
Query	include/xapian/query.h	/^class XAPIAN_VISIBILITY_DEFAULT Query {$/;"	c	namespace:Xapian
QueryBuilder	tests/soaktest/soaktest_queries.cc	/^    QueryBuilder(unsigned int maxtermsperfield_,$/;"	f	class:QueryBuilder
QueryBuilder	tests/soaktest/soaktest_queries.cc	/^class QueryBuilder {$/;"	c	file:
QueryBuilderEnv	tests/soaktest/soaktest_queries.cc	/^    QueryBuilderEnv(unsigned int maxtermsperfield_,$/;"	f	struct:QueryBuilderEnv
QueryBuilderEnv	tests/soaktest/soaktest_queries.cc	/^struct QueryBuilderEnv {$/;"	s	file:
QueryOptimiser	matcher/queryoptimiser.h	/^    QueryOptimiser(const Xapian::Database::Internal & db_,$/;"	f	class:QueryOptimiser
QueryOptimiser	matcher/queryoptimiser.h	/^class QueryOptimiser {$/;"	c
QueryParser	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT QueryParser {$/;"	c	namespace:Xapian
QueryParser	queryparser/queryparser.cc	/^QueryParser::QueryParser() : internal(new QueryParser::Internal) { }$/;"	f	class:QueryParser
QueryParser	queryparser/queryparser.cc	/^QueryParser::QueryParser(const QueryParser & o) : internal(o.internal) { }$/;"	f	class:QueryParser
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    QueryParserError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^    explicit QueryParserError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::QueryParserError
QueryParserError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT QueryParserError : public RuntimeError {$/;"	c	namespace:Xapian
QueryStep	tests/soaktest/soaktest_queries.cc	/^typedef void (*QueryStep)(QueryBuilderEnv &);$/;"	t	file:
RANGE	queryparser/queryparser_token.h	/^#define RANGE /;"	d
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	docs/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	tests/Makefile	/^RANLIB = ranlib$/;"	m
RD_RESOLVED	queryparser/lemon.c	/^    RD_RESOLVED,             \/* Was reduce.  Precedence resolved conflict *\/$/;"	e	enum:action::e_action	file:
READER_CLOSE_TIME	bin/xapian-replicate.cc	/^#define READER_CLOSE_TIME /;"	d	file:
REASONABLE_BASE_SIZE	backends/brass/brass_btreebase.cc	/^#define REASONABLE_BASE_SIZE /;"	d	file:
REASONABLE_BASE_SIZE	backends/chert/chert_btreebase.cc	/^#define REASONABLE_BASE_SIZE /;"	d	file:
REASONABLE_BASE_SIZE	backends/flint/flint_btreebase.cc	/^#define REASONABLE_BASE_SIZE /;"	d	file:
REASONABLE_CHANGESET_SIZE	backends/brass/brass_replicate_internal.h	/^#define REASONABLE_CHANGESET_SIZE /;"	d
REASONABLE_CHANGESET_SIZE	backends/chert/chert_replicate_internal.h	/^#define REASONABLE_CHANGESET_SIZE /;"	d
REASONABLE_CHANGESET_SIZE	backends/flint/flint_replicate_internal.h	/^#define REASONABLE_CHANGESET_SIZE /;"	d
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
REDUCE	queryparser/lemon.c	/^    REDUCE,$/;"	e	enum:action::e_action	file:
REJECTED	matcher/collapser.h	/^    REJECTED,$/;"	e	enum:__anon21
REL	common/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon10
REL	matcher/multimatch.cc	/^const Xapian::Enquire::Internal::sort_setting REL =$/;"	v
RELTERMFREQ	include/xapian/weight.h	/^	RELTERMFREQ = 16,$/;"	e	enum:Xapian::Weight::__anon19
REL_VAL	common/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon10
REL_VAL	matcher/multimatch.cc	/^const Xapian::Enquire::Internal::sort_setting REL_VAL =$/;"	v
REPLACED	matcher/collapser.h	/^    REPLACED$/;"	e	enum:__anon21
REPLICA_STUB_BANNER	api/replication.cc	/^#define REPLICA_STUB_BANNER /;"	d	file:
REPLY_ADDDOCUMENT	common/remoteprotocol.h	/^    REPLY_ADDDOCUMENT,		\/\/ Add Document$/;"	e	enum:reply_type
REPLY_ALLTERMS	common/remoteprotocol.h	/^    REPLY_ALLTERMS,		\/\/ All Terms$/;"	e	enum:reply_type
REPLY_COLLFREQ	common/remoteprotocol.h	/^    REPLY_COLLFREQ,		\/\/ Get Collection Frequency$/;"	e	enum:reply_type
REPLY_DOCDATA	common/remoteprotocol.h	/^    REPLY_DOCDATA,		\/\/ Get Document$/;"	e	enum:reply_type
REPLY_DOCLENGTH	common/remoteprotocol.h	/^    REPLY_DOCLENGTH,		\/\/ Get Doc Length$/;"	e	enum:reply_type
REPLY_DONE	common/remoteprotocol.h	/^    REPLY_DONE,			\/\/ Done sending list$/;"	e	enum:reply_type
REPLY_EXCEPTION	common/remoteprotocol.h	/^    REPLY_EXCEPTION,		\/\/ Exception$/;"	e	enum:reply_type
REPLY_GREETING	common/remoteprotocol.h	/^    REPLY_GREETING,		\/\/ Greeting$/;"	e	enum:reply_type
REPLY_MAX	common/remoteprotocol.h	/^    REPLY_MAX$/;"	e	enum:reply_type
REPLY_METADATA	common/remoteprotocol.h	/^    REPLY_METADATA,		\/\/ Metadata$/;"	e	enum:reply_type
REPLY_METADATAKEYLIST	common/remoteprotocol.h	/^    REPLY_METADATAKEYLIST,	\/\/ Iterator for metadata keys$/;"	e	enum:reply_type
REPLY_POSITIONLIST	common/remoteprotocol.h	/^    REPLY_POSITIONLIST,		\/\/ Get PositionList$/;"	e	enum:reply_type
REPLY_POSTLISTITEM	common/remoteprotocol.h	/^    REPLY_POSTLISTITEM,		\/\/ Item in body of a postlist$/;"	e	enum:reply_type
REPLY_POSTLISTSTART	common/remoteprotocol.h	/^    REPLY_POSTLISTSTART,	\/\/ Start of a postlist$/;"	e	enum:reply_type
REPLY_RESULTS	common/remoteprotocol.h	/^    REPLY_RESULTS,		\/\/ Results (MSet)$/;"	e	enum:reply_type
REPLY_STATS	common/remoteprotocol.h	/^    REPLY_STATS,		\/\/ Stats$/;"	e	enum:reply_type
REPLY_TERMDOESNTEXIST	common/remoteprotocol.h	/^    REPLY_TERMDOESNTEXIST,	\/\/ Term Doesn't Exist$/;"	e	enum:reply_type
REPLY_TERMEXISTS	common/remoteprotocol.h	/^    REPLY_TERMEXISTS,		\/\/ Term Exists$/;"	e	enum:reply_type
REPLY_TERMFREQ	common/remoteprotocol.h	/^    REPLY_TERMFREQ,		\/\/ Get Term Frequency$/;"	e	enum:reply_type
REPLY_TERMLIST	common/remoteprotocol.h	/^    REPLY_TERMLIST,		\/\/ Get Termlist$/;"	e	enum:reply_type
REPLY_UPDATE	common/remoteprotocol.h	/^    REPLY_UPDATE,		\/\/ Get Updated DocCount and AvLength$/;"	e	enum:reply_type
REPLY_VALUE	common/remoteprotocol.h	/^    REPLY_VALUE,		\/\/ Document Value$/;"	e	enum:reply_type
REPLY_VALUESTATS	common/remoteprotocol.h	/^    REPLY_VALUESTATS,		\/\/ Value statistics$/;"	e	enum:reply_type
REPL_REPLY_CHANGESET	common/replicationprotocol.h	/^    REPL_REPLY_CHANGESET	\/\/ A changeset file is being sent.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_FILEDATA	common/replicationprotocol.h	/^    REPL_REPLY_DB_FILEDATA,	\/\/ Contents of a file in a DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_FILENAME	common/replicationprotocol.h	/^    REPL_REPLY_DB_FILENAME,	\/\/ The name of a file in a DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_FOOTER	common/replicationprotocol.h	/^    REPL_REPLY_DB_FOOTER,	\/\/ End of a whole DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_DB_HEADER	common/replicationprotocol.h	/^    REPL_REPLY_DB_HEADER,	\/\/ The start of a whole DB copy.$/;"	e	enum:replicate_reply_type
REPL_REPLY_END_OF_CHANGES	common/replicationprotocol.h	/^    REPL_REPLY_END_OF_CHANGES,	\/\/ No more changes to transfer.$/;"	e	enum:replicate_reply_type
REPL_REPLY_FAIL	common/replicationprotocol.h	/^    REPL_REPLY_FAIL,		\/\/ Couldn't generate full set of changes.$/;"	e	enum:replicate_reply_type
REPORT_FAIL_VG	tests/harness/testsuite.cc	/^#define REPORT_FAIL_VG(/;"	d	file:
REQUIRE_ORDER	common/getopt.cc	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon9	file:
RESYNC_AFTER_DECL_ERROR	queryparser/lemon.c	/^    RESYNC_AFTER_DECL_ERROR,$/;"	e	enum:pstate::e_state	file:
RESYNC_AFTER_RULE_ERROR	queryparser/lemon.c	/^    RESYNC_AFTER_RULE_ERROR,$/;"	e	enum:pstate::e_state	file:
RETURN	common/debuglog.h	/^#define RETURN(/;"	d
RETURN_IN_ORDER	common/getopt.cc	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon9	file:
REVISION	backends/brass/brass_table.h	/^#define REVISION(/;"	d
REVISION	backends/chert/chert_table.h	/^#define REVISION(/;"	d
REVISION	backends/flint/flint_check.cc	/^#define REVISION(/;"	d	file:
REVISION	backends/flint/flint_table.cc	/^#define REVISION(/;"	d	file:
RHS_ALIAS_1	queryparser/lemon.c	/^    RHS_ALIAS_1,$/;"	e	enum:pstate::e_state	file:
RHS_ALIAS_2	queryparser/lemon.c	/^    RHS_ALIAS_2,$/;"	e	enum:pstate::e_state	file:
RIGHT	queryparser/lemon.c	/^    RIGHT,$/;"	e	enum:symbol::e_assoc	file:
RRCONFLICT	queryparser/lemon.c	/^    RRCONFLICT,              \/* Was a reduce, but part of a conflict *\/$/;"	e	enum:action::e_action	file:
RSET_SIZE	include/xapian/weight.h	/^	RSET_SIZE = 2,$/;"	e	enum:Xapian::Weight::__anon19
RST2HTML	Makefile	/^RST2HTML = $/;"	m
RST2HTML	docs/Makefile	/^RST2HTML = $/;"	m
RST2HTML	tests/Makefile	/^RST2HTML = $/;"	m
RSTDOCS	docs/Makefile	/^RSTDOCS = \\$/;"	m
RSTHTML	docs/Makefile	/^RSTHTML = $(RSTDOCS:.rst=.html)$/;"	m
RSet	api/omenquire.cc	/^RSet::RSet() : internal(new RSet::Internal)$/;"	f	class:Xapian::RSet
RSet	api/omenquire.cc	/^RSet::RSet(const RSet &other) : internal(other.internal)$/;"	f	class:Xapian::RSet
RSet	include/xapian/enquire.h	/^class XAPIAN_VISIBILITY_DEFAULT RSet {$/;"	c	namespace:Xapian
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    RangeError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^    explicit RangeError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::RangeError
RangeError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT RangeError : public RuntimeError {$/;"	c	namespace:Xapian
ReadError	tests/perftest/runprocess.h	/^struct ReadError {};$/;"	s
RealTime	common/realtime.h	/^namespace RealTime {$/;"	n
RefCntBase	include/xapian/base.h	/^	RefCntBase() : ref_count(0) { }$/;"	f	class:Xapian::Internal::RefCntBase
RefCntBase	include/xapian/base.h	/^	RefCntBase(const RefCntBase &) : ref_count(0) { }$/;"	f	class:Xapian::Internal::RefCntBase
RefCntBase	include/xapian/base.h	/^class RefCntBase {$/;"	c	namespace:Xapian::Internal
RefCntPtr	include/xapian/base.h	/^RefCntPtr<T>::RefCntPtr(const RefCntPtr<U> &other)$/;"	f	class:Xapian::Internal::RefCntPtr
RefCntPtr	include/xapian/base.h	/^class RefCntPtr {$/;"	c	namespace:Xapian::Internal
RefCntPtr	include/xapian/base.h	/^inline RefCntPtr<T>::RefCntPtr() : dest(0)$/;"	f	class:Xapian::Internal::RefCntPtr
RefCntPtr	include/xapian/base.h	/^inline RefCntPtr<T>::RefCntPtr(T *dest_) : dest(dest_)$/;"	f	class:Xapian::Internal::RefCntPtr
RefCntPtr	include/xapian/base.h	/^inline RefCntPtr<T>::RefCntPtr(const RefCntPtr &other) : dest(other.dest)$/;"	f	class:Xapian::Internal::RefCntPtr
Registry	api/registry.cc	/^Registry::Registry()$/;"	f	class:Xapian::Registry
Registry	api/registry.cc	/^Registry::Registry(const Registry & other)$/;"	f	class:Xapian::Registry
Registry	include/xapian/registry.h	/^class XAPIAN_VISIBILITY_DEFAULT Registry {$/;"	c	namespace:Xapian
Remote	include/xapian/dbfactory.h	/^namespace Remote {$/;"	n	namespace:Xapian
RemoteConnection	common/remoteconnection.h	/^class RemoteConnection {$/;"	c
RemoteConnection	net/remoteconnection.cc	/^RemoteConnection::RemoteConnection(int fdin_, int fdout_,$/;"	f	class:RemoteConnection
RemoteDatabase	backends/remote/remote-database.cc	/^RemoteDatabase::RemoteDatabase(int fd, double timeout_,$/;"	f	class:RemoteDatabase
RemoteDatabase	common/remote-database.h	/^class RemoteDatabase : public Xapian::Database::Internal {$/;"	c
RemoteDocument	backends/remote/remote-document.h	/^    RemoteDocument(const Xapian::Database::Internal *db, Xapian::docid did_,$/;"	f	class:RemoteDocument
RemoteDocument	backends/remote/remote-document.h	/^class RemoteDocument : public Xapian::Document::Internal {$/;"	c
RemoteServer	common/remoteserver.h	/^class XAPIAN_VISIBILITY_DEFAULT RemoteServer : private RemoteConnection {$/;"	c
RemoteServer	net/remoteserver.cc	/^RemoteServer::RemoteServer(const std::vector<std::string> &dbpaths,$/;"	f	class:RemoteServer
RemoteSubMatch	matcher/remotesubmatch.cc	/^RemoteSubMatch::RemoteSubMatch(RemoteDatabase *db_,$/;"	f	class:RemoteSubMatch
RemoteSubMatch	matcher/remotesubmatch.h	/^class RemoteSubMatch : public SubMatch {$/;"	c
RemoteTcpClient	common/remotetcpclient.h	/^    RemoteTcpClient(const std::string & hostname, int port,$/;"	f	class:RemoteTcpClient
RemoteTcpClient	common/remotetcpclient.h	/^class RemoteTcpClient : SOCKET_INITIALIZER_MIXIN public RemoteDatabase {$/;"	c
RemoteTcpServer	common/remotetcpserver.h	/^class XAPIAN_VISIBILITY_DEFAULT RemoteTcpServer : public TcpServer {$/;"	c
RemoteTcpServer	net/remotetcpserver.cc	/^RemoteTcpServer::RemoteTcpServer(const vector<std::string> &dbpaths_,$/;"	f	class:RemoteTcpServer
ReplicateTcpClient	net/replicatetcpclient.cc	/^ReplicateTcpClient::ReplicateTcpClient(const string & hostname, int port,$/;"	f	class:ReplicateTcpClient
ReplicateTcpServer	common/replicatetcpserver.h	/^class XAPIAN_VISIBILITY_DEFAULT ReplicateTcpServer : public TcpServer {$/;"	c
ReplicateTcpServer	net/replicatetcpserver.cc	/^ReplicateTcpServer::ReplicateTcpServer(const string & host, int port,$/;"	f	class:ReplicateTcpServer
ReplicationInfo	common/replication.h	/^    ReplicationInfo()$/;"	f	struct:Xapian::ReplicationInfo
ReplicationInfo	common/replication.h	/^struct XAPIAN_VISIBILITY_DEFAULT ReplicationInfo {$/;"	s	namespace:Xapian
ReportHeader	queryparser/lemon.c	/^void ReportHeader(lemp)$/;"	f
ReportOutput	queryparser/lemon.c	/^void ReportOutput(lemp)$/;"	f
ReportTable	queryparser/lemon.c	/^void ReportTable(lemp, mhflag)$/;"	f
Reprint	queryparser/lemon.c	/^void Reprint(lemp)$/;"	f
ResortStates	queryparser/lemon.c	/^void ResortStates(lemp)$/;"	f
RuntimeError	include/xapian/error.h	/^    RuntimeError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::RuntimeError
RuntimeError	include/xapian/error.h	/^    RuntimeError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::RuntimeError
RuntimeError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT RuntimeError : public Error {$/;"	c	namespace:Xapian
S	languages/compiler/header.h	/^    const char * S[10];  \/* strings *\/$/;"	m	struct:generator
SCRIPTS	Makefile	/^SCRIPTS = $(bin_SCRIPTS)$/;"	m
SED	Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SED	docs/Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SED	tests/Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SEQ_START_POINT	backends/brass/brass_table.cc	/^#define SEQ_START_POINT /;"	d	file:
SEQ_START_POINT	backends/chert/chert_table.cc	/^#define SEQ_START_POINT /;"	d	file:
SEQ_START_POINT	backends/flint/flint_table.cc	/^#define SEQ_START_POINT /;"	d	file:
SET_CAPACITY	languages/steminternal.h	/^SET_CAPACITY(symbol* p, int n)$/;"	f
SET_DIR_END	backends/brass/brass_table.h	/^#define SET_DIR_END(/;"	d
SET_DIR_END	backends/chert/chert_table.h	/^#define SET_DIR_END(/;"	d
SET_DIR_END	backends/flint/flint_table.cc	/^#define SET_DIR_END(/;"	d	file:
SET_LEVEL	backends/brass/brass_table.h	/^#define SET_LEVEL(/;"	d
SET_LEVEL	backends/chert/chert_table.h	/^#define SET_LEVEL(/;"	d
SET_LEVEL	backends/flint/flint_table.cc	/^#define SET_LEVEL(/;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	docs/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	tests/Makefile	/^SET_MAKE = $/;"	m
SET_MAX_FREE	backends/brass/brass_table.h	/^#define SET_MAX_FREE(/;"	d
SET_MAX_FREE	backends/chert/chert_table.h	/^#define SET_MAX_FREE(/;"	d
SET_MAX_FREE	backends/flint/flint_table.cc	/^#define SET_MAX_FREE(/;"	d	file:
SET_REVISION	backends/brass/brass_table.h	/^#define SET_REVISION(/;"	d
SET_REVISION	backends/chert/chert_table.h	/^#define SET_REVISION(/;"	d
SET_REVISION	backends/flint/flint_table.cc	/^#define SET_REVISION(/;"	d	file:
SET_SIZE	languages/steminternal.h	/^SET_SIZE(symbol* p, int n)$/;"	f
SET_TOTAL_FREE	backends/brass/brass_table.h	/^#define SET_TOTAL_FREE(/;"	d
SET_TOTAL_FREE	backends/chert/chert_table.h	/^#define SET_TOTAL_FREE(/;"	d
SET_TOTAL_FREE	backends/flint/flint_table.cc	/^#define SET_TOTAL_FREE(/;"	d	file:
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	api/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/brass/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/chert/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/flint/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/inmemory/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/multi/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	backends/remote/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	bin/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	common/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	docs/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	examples/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	expand/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	include/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	include/xapian/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	languages/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	matcher/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	net/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	queryparser/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	tests/harness/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	unicode/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHIFT	queryparser/lemon.c	/^    SHIFT,$/;"	e	enum:action::e_action	file:
SHLIBEXT	Makefile	/^SHLIBEXT = .dylib$/;"	m
SHLIBEXT	docs/Makefile	/^SHLIBEXT = .dylib$/;"	m
SHLIBEXT	tests/Makefile	/^SHLIBEXT = .dylib$/;"	m
SH_RESOLVED	queryparser/lemon.c	/^    SH_RESOLVED,             \/* Was a shift.  Precedence resolved conflict *\/$/;"	e	enum:action::e_action	file:
SIGCHLD	net/tcpserver.cc	/^# define SIGCHLD /;"	d	file:
SIGCHLD	tests/harness/backendmanager_remotetcp.cc	/^#  define SIGCHLD /;"	d	file:
SIGJMP_BUF	tests/harness/testsuite.cc	/^# define SIGJMP_BUF /;"	d	file:
SIGLONGJMP	tests/harness/testsuite.cc	/^# define SIGLONGJMP(/;"	d	file:
SIGSETJMP	tests/harness/testsuite.cc	/^# define SIGSETJMP(/;"	d	file:
SIZE	languages/compiler/header.h	/^#define SIZE(/;"	d
SIZE	languages/steminternal.h	/^SIZE(const symbol* p)$/;"	f
SIZEOF_INT	config.h	/^#define SIZEOF_INT /;"	d
SIZEOF_LONG	config.h	/^#define SIZEOF_LONG /;"	d
SKIP	tests/harness/testsuite.h	/^	typedef enum { PASS = 1, FAIL = 0, SKIP = -1 } test_result;$/;"	e	enum:test_driver::__anon34
SKIP_TEST	tests/harness/testsuite.h	/^#define SKIP_TEST(/;"	d
SKIP_TEST_FOR_BACKEND	tests/apitest.h	/^#define SKIP_TEST_FOR_BACKEND(/;"	d
SKIP_TEST_UNLESS_BACKEND	tests/apitest.h	/^#define SKIP_TEST_UNLESS_BACKEND(/;"	d
SNPRINTF	config.h	/^#define SNPRINTF /;"	d
SNPRINTF_ISO	config.h	/^#define SNPRINTF_ISO /;"	d
SOCKET_INITIALIZER_MIXIN	common/remotetcpclient.h	/^# define SOCKET_INITIALIZER_MIXIN /;"	d
SOCKET_INITIALIZER_MIXIN	common/remotetcpclient.h	/^# define SOCKET_INITIALIZER_MIXIN$/;"	d
SOCKET_INITIALIZER_MIXIN	common/replicatetcpclient.h	/^# define SOCKET_INITIALIZER_MIXIN /;"	d
SOCKET_INITIALIZER_MIXIN	common/replicatetcpclient.h	/^# define SOCKET_INITIALIZER_MIXIN$/;"	d
SOCKET_INITIALIZER_MIXIN	common/replicatetcpclient.h	/^class XAPIAN_VISIBILITY_DEFAULT ReplicateTcpClient SOCKET_INITIALIZER_MIXIN {$/;"	c
SOCKET_INITIALIZER_MIXIN	common/tcpserver.h	/^# define SOCKET_INITIALIZER_MIXIN /;"	d
SOCKET_INITIALIZER_MIXIN	common/tcpserver.h	/^# define SOCKET_INITIALIZER_MIXIN$/;"	d
SOCKET_INITIALIZER_MIXIN	common/tcpserver.h	/^class XAPIAN_VISIBILITY_DEFAULT TcpServer SOCKET_INITIALIZER_MIXIN {$/;"	c
SOCKLEN_T	config.h	/^#define SOCKLEN_T /;"	d
SORTABLE_UINT_1ST_BYTE_MASK	common/pack.h	/^const unsigned int SORTABLE_UINT_1ST_BYTE_MASK =$/;"	v
SORTABLE_UINT_LOG2_MAX_BYTES	common/pack.h	/^const unsigned int SORTABLE_UINT_LOG2_MAX_BYTES = 2;$/;"	v
SORTABLE_UINT_MAX_BYTES	common/pack.h	/^const unsigned int SORTABLE_UINT_MAX_BYTES = 1 << SORTABLE_UINT_LOG2_MAX_BYTES;$/;"	v
SOURCEDOC_SRC	docs/docsource.mk	/^SOURCEDOC_SRC=\\$/;"	m
SOURCES	Makefile	/^SOURCES = $(libbrasscheck_la_SOURCES) $(libchertcheck_la_SOURCES) \\$/;"	m
SOURCES	docs/Makefile	/^SOURCES =$/;"	m
SOURCES	tests/Makefile	/^SOURCES = $(apitest_SOURCES) $(internaltest_SOURCES) \\$/;"	m
SPACE_SEPARATOR	include/xapian/unicode.h	/^    SPACE_SEPARATOR,$/;"	e	enum:Xapian::Unicode::__anon18
SRCONFLICT	queryparser/lemon.c	/^    SRCONFLICT,              \/* Was a reduce, but part of a conflict *\/$/;"	e	enum:action::e_action	file:
SSCONFLICT	queryparser/lemon.c	/^    SSCONFLICT,              \/* A shift\/shift conflict *\/$/;"	e	enum:action::e_action	file:
STANDARD	include/xapian/compactor.h	/^    typedef enum { STANDARD, FULL, FULLER } compaction_level;$/;"	e	enum:Xapian::Compactor::__anon12
STARTSIZE	languages/compiler/header.h	/^#define STARTSIZE /;"	d
STATIC_ASSERT	common/omassert.h	/^#define STATIC_ASSERT(/;"	d
STATIC_ASSERT_TYPE_DOMINATES	common/omassert.h	/^#define STATIC_ASSERT_TYPE_DOMINATES(/;"	d
STATIC_ASSERT_UNSIGNED_TYPE	common/omassert.h	/^#define STATIC_ASSERT_UNSIGNED_TYPE(/;"	d
STDC_HEADERS	config.h	/^#define STDC_HEADERS /;"	d
STEM_ALL	include/xapian/queryparser.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::QueryParser::__anon16
STEM_ALL	include/xapian/termgenerator.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::TermGenerator::__anon17
STEM_ALL_Z	include/xapian/queryparser.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::QueryParser::__anon16
STEM_ALL_Z	include/xapian/termgenerator.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::TermGenerator::__anon17
STEM_NONE	include/xapian/queryparser.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::QueryParser::__anon16
STEM_NONE	include/xapian/termgenerator.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::TermGenerator::__anon17
STEM_SOME	include/xapian/queryparser.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::QueryParser::__anon16
STEM_SOME	include/xapian/termgenerator.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	e	enum:Xapian::TermGenerator::__anon17
STOPWORDS_IGNORE	queryparser/termgenerator_internal.cc	/^#define STOPWORDS_IGNORE /;"	d	file:
STOPWORDS_INDEX_UNSTEMMED_ONLY	queryparser/termgenerator_internal.cc	/^#define STOPWORDS_INDEX_UNSTEMMED_ONLY /;"	d	file:
STOPWORDS_NONE	queryparser/termgenerator_internal.cc	/^#define STOPWORDS_NONE /;"	d	file:
STRINGIZE	common/stringutils.h	/^#define STRINGIZE(/;"	d
STRINGIZE_	common/stringutils.h	/^#define STRINGIZE_(/;"	d
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIP	docs/Makefile	/^STRIP = strip$/;"	m
STRIP	tests/Makefile	/^STRIP = strip$/;"	m
STUB_DIR	api/compactor.cc	/^enum { STUB_NO, STUB_FILE, STUB_DIR };$/;"	e	enum:__anon1	file:
STUB_FILE	api/compactor.cc	/^enum { STUB_NO, STUB_FILE, STUB_DIR };$/;"	e	enum:__anon1	file:
STUB_NO	api/compactor.cc	/^enum { STUB_NO, STUB_FILE, STUB_DIR };$/;"	e	enum:__anon1	file:
SUBDIRS	Makefile	/^SUBDIRS = . docs tests$/;"	m
SUCCESS	backends/flint_lock.h	/^	SUCCESS, \/\/ We got the lock!$/;"	e	enum:FlintLock::__anon6
SURROGATE	include/xapian/unicode.h	/^    SURROGATE,$/;"	e	enum:Xapian::Unicode::__anon18
SYNONYM	queryparser/queryparser_token.h	/^#define SYNONYM /;"	d
S_ISDIR	common/safesysstat.h	/^# define S_ISDIR(/;"	d
S_ISREG	common/safesysstat.h	/^# define S_ISREG(/;"	d
S_ch	languages/danish.h	/^    symbol * S_ch;$/;"	m	class:Xapian::InternalStemDanish
S_ch	languages/kraaij_pohlmann.h	/^    symbol * S_ch;$/;"	m	class:Xapian::InternalStemKraaij_pohlmann
S_x	languages/finnish.h	/^    symbol * S_x;$/;"	m	class:Xapian::InternalStemFinnish
SelectPostList	matcher/selectpostlist.h	/^	SelectPostList(PostList *source_) : source(source_), wt(-1) { }$/;"	f	class:SelectPostList
SelectPostList	matcher/selectpostlist.h	/^class SelectPostList : public PostList {$/;"	c
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    SerialisationError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^    explicit SerialisationError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::SerialisationError
SerialisationError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT SerialisationError : public RuntimeError {$/;"	c	namespace:Xapian
SetAdd	queryparser/lemon.c	/^int SetAdd(s,e)$/;"	f
SetFind	queryparser/lemon.c	/^#define SetFind(/;"	d	file:
SetFree	queryparser/lemon.c	/^void SetFree(s)$/;"	f
SetNew	queryparser/lemon.c	/^char *SetNew(){$/;"	f
SetSize	queryparser/lemon.c	/^void SetSize(n)$/;"	f
SetUnion	queryparser/lemon.c	/^int SetUnion(s1,s2)$/;"	f
SignalRedirector	tests/harness/testsuite.cc	/^    SignalRedirector() : active(false) { }$/;"	f	class:SignalRedirector
SignalRedirector	tests/harness/testsuite.cc	/^class SignalRedirector {$/;"	c	file:
SimpleMatchSpy	tests/api_matchspy.cc	/^class SimpleMatchSpy : public Xapian::MatchSpy {$/;"	c	file:
SimpleStopper	include/xapian/queryparser.h	/^    SimpleStopper() { }$/;"	f	class:Xapian::SimpleStopper
SimpleStopper	include/xapian/queryparser.h	/^    SimpleStopper(Iterator begin, Iterator end) : stop_words(begin, end) { }$/;"	f	class:Xapian::SimpleStopper
SimpleStopper	include/xapian/queryparser.h	/^    SimpleStopper(Iterator begin, Iterator end) {$/;"	f	class:Xapian::SimpleStopper
SimpleStopper	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT SimpleStopper : public Stopper {$/;"	c	namespace:Xapian
SlowValueList	backends/slowvaluelist.h	/^    SlowValueList(const Xapian::Database::Internal * db_, Xapian::valueno slot_)$/;"	f	class:SlowValueList
SlowValueList	backends/slowvaluelist.h	/^class SlowValueList : public ValueList {$/;"	c
SnowballStemImplementation	languages/steminternal.h	/^    SnowballStemImplementation()$/;"	f	class:Xapian::SnowballStemImplementation
SnowballStemImplementation	languages/steminternal.h	/^class SnowballStemImplementation : public StemImplementation {$/;"	c	namespace:Xapian
SoakTestRunner	tests/soaktest/soaktest.cc	/^    SoakTestRunner() : seed_str("42") {$/;"	f	class:SoakTestRunner
SoakTestRunner	tests/soaktest/soaktest.cc	/^class SoakTestRunner : public TestRunner$/;"	c	file:
SortPosName	api/omqueryinternal.cc	/^struct SortPosName {$/;"	s	file:
Sorter	include/xapian/keymaker.h	/^class XAPIAN_VISIBILITY_DEFAULT XAPIAN_DEPRECATED_CLASS Sorter : public KeyMaker { };$/;"	c	namespace:Xapian
State	queryparser/queryparser_internal.cc	/^    State(QueryParser::Internal * qpi_, unsigned flags_)$/;"	f	class:State
State	queryparser/queryparser_internal.cc	/^class State {$/;"	c	file:
State_arrayof	queryparser/lemon.c	/^struct state **State_arrayof()$/;"	f
State_find	queryparser/lemon.c	/^struct state *State_find(key)$/;"	f
State_init	queryparser/lemon.c	/^void State_init(){$/;"	f
State_insert	queryparser/lemon.c	/^int State_insert(data,key)$/;"	f
State_new	queryparser/lemon.c	/^struct state *State_new()$/;"	f
Stem	include/xapian/stem.h	/^class XAPIAN_VISIBILITY_DEFAULT Stem {$/;"	c	namespace:Xapian
Stem	languages/stem.cc	/^Stem::Stem() : internal(0) { }$/;"	f	class:Xapian::Stem
Stem	languages/stem.cc	/^Stem::Stem(StemImplementation * p) : internal(p) { }$/;"	f	class:Xapian::Stem
Stem	languages/stem.cc	/^Stem::Stem(const Stem & o) : internal(o.internal) { }$/;"	f	class:Xapian::Stem
Stem	languages/stem.cc	/^Stem::Stem(const std::string &language) : internal(0) {$/;"	f	class:Xapian::Stem
StemImplementation	include/xapian/stem.h	/^struct XAPIAN_VISIBILITY_DEFAULT StemImplementation$/;"	s	namespace:Xapian
Stopper	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT Stopper {$/;"	c	namespace:Xapian
StringAndFreqCmpByFreq	api/matchspy.cc	/^    StringAndFreqCmpByFreq() {}$/;"	f	class:StringAndFreqCmpByFreq
StringAndFreqCmpByFreq	api/matchspy.cc	/^class StringAndFreqCmpByFreq {$/;"	c	file:
StringAndFreqTermList	api/matchspy.cc	/^class StringAndFreqTermList : public TermList {$/;"	c	file:
StringAndFrequency	api/matchspy.cc	/^    StringAndFrequency(const std::string & str_, Xapian::doccount frequency_)$/;"	f	class:StringAndFrequency
StringAndFrequency	api/matchspy.cc	/^class StringAndFrequency {$/;"	c	file:
StringValueRangeProcessor	include/xapian/queryparser.h	/^    StringValueRangeProcessor(Xapian::valueno slot_)$/;"	f	class:Xapian::StringValueRangeProcessor
StringValueRangeProcessor	include/xapian/queryparser.h	/^    StringValueRangeProcessor(Xapian::valueno slot_, const std::string &str_,$/;"	f	class:Xapian::StringValueRangeProcessor
StringValueRangeProcessor	include/xapian/queryparser.h	/^class XAPIAN_VISIBILITY_DEFAULT StringValueRangeProcessor : public ValueRangeProcessor {$/;"	c	namespace:Xapian
Strsafe	queryparser/lemon.c	/^char *Strsafe(y)$/;"	f
Strsafe_find	queryparser/lemon.c	/^char *Strsafe_find(key)$/;"	f
Strsafe_init	queryparser/lemon.c	/^void Strsafe_init(){$/;"	f
Strsafe_insert	queryparser/lemon.c	/^int Strsafe_insert(data)$/;"	f
SubMatch	common/submatch.h	/^class SubMatch : public Xapian::Internal::RefCntBase {$/;"	c
SubValueList	backends/multi/multi_valuelist.cc	/^    SubValueList(ValueList * vl, unsigned db_idx_)$/;"	f	struct:SubValueList
SubValueList	backends/multi/multi_valuelist.cc	/^struct SubValueList {$/;"	s	file:
Symbol_Nth	queryparser/lemon.c	/^struct symbol *Symbol_Nth(n)$/;"	f
Symbol_arrayof	queryparser/lemon.c	/^struct symbol **Symbol_arrayof()$/;"	f
Symbol_count	queryparser/lemon.c	/^int Symbol_count()$/;"	f
Symbol_find	queryparser/lemon.c	/^struct symbol *Symbol_find(key)$/;"	f
Symbol_init	queryparser/lemon.c	/^void Symbol_init(){$/;"	f
Symbol_insert	queryparser/lemon.c	/^int Symbol_insert(data,key)$/;"	f
Symbol_new	queryparser/lemon.c	/^struct symbol *Symbol_new(x)$/;"	f
Symbolcmpp	queryparser/lemon.c	/^int Symbolcmpp(const void *void_a, const void *void_b){$/;"	f
SynonymPostList	matcher/synonympostlist.h	/^    SynonymPostList(PostList * subtree_, MultiMatch * matcher_,$/;"	f	class:SynonymPostList
SynonymPostList	matcher/synonympostlist.h	/^class SynonymPostList : public PostList {$/;"	c
TERM	queryparser/queryparser_token.h	/^#define TERM /;"	d
TERMFREQ	include/xapian/weight.h	/^	TERMFREQ = 8,$/;"	e	enum:Xapian::Weight::__anon19
TERMINAL	queryparser/lemon.c	/^    TERMINAL,$/;"	e	enum:symbol::__anon24	file:
TEST	tests/harness/testsuite.h	/^#define TEST(/;"	d
TESTCASE	tests/queryparsertest.cc	/^#define TESTCASE(/;"	d	file:
TESTCASE	tests/termgentest.cc	/^#define TESTCASE(/;"	d	file:
TESTCASE_LOCN	tests/harness/testsuite.h	/^#define TESTCASE_LOCN(/;"	d
TESTS	tests/Makefile	/^TESTS = apitest$(EXEEXT) internaltest$(EXEEXT) stemtest$(EXEEXT) \\$/;"	m
TESTS_ENVIRONMENT	tests/Makefile	/^TESTS_ENVIRONMENT = .\/runtest$/;"	m
TEST_AND_EXPLAIN	tests/harness/testsuite.h	/^#define TEST_AND_EXPLAIN(/;"	d
TEST_EQUAL	tests/harness/testsuite.h	/^#define TEST_EQUAL(/;"	d
TEST_EQUAL	tests/unittest.cc	/^#define TEST_EQUAL(/;"	d	file:
TEST_EQUAL_DOUBLE	tests/harness/testsuite.h	/^#define TEST_EQUAL_DOUBLE(/;"	d
TEST_EQUAL_DOUBLE_	tests/harness/testsuite.cc	/^TEST_EQUAL_DOUBLE_(double a, double b)$/;"	f
TEST_EXCEPTION	tests/harness/testutils.h	/^#define TEST_EXCEPTION(/;"	d
TEST_MSET_SIZE	tests/harness/testutils.h	/^#define TEST_MSET_SIZE(/;"	d
TEST_NOT_EQUAL	tests/harness/testsuite.h	/^#define TEST_NOT_EQUAL(/;"	d
TEST_NOT_EQUAL_DOUBLE	tests/harness/testsuite.h	/^#define TEST_NOT_EQUAL_DOUBLE(/;"	d
TEST_REL	tests/harness/testmacros.h	/^#define TEST_REL(/;"	d
TEST_STRINGS_EQUAL	tests/harness/testsuite.h	/^#define TEST_STRINGS_EQUAL(/;"	d
TITLECASE_LETTER	include/xapian/unicode.h	/^    TITLECASE_LETTER,$/;"	e	enum:Xapian::Unicode::__anon18
TOKEN	queryparser/queryparser_internal.cc	/^#define TOKEN /;"	d	file:
TOTAL_FREE	backends/brass/brass_table.h	/^#define TOTAL_FREE(/;"	d
TOTAL_FREE	backends/chert/chert_table.h	/^#define TOTAL_FREE(/;"	d
TOTAL_FREE	backends/flint/flint_check.cc	/^#define TOTAL_FREE(/;"	d	file:
TOTAL_FREE	backends/flint/flint_table.cc	/^#define TOTAL_FREE(/;"	d	file:
TRANSACTION_FLUSHED	common/database.h	/^	    TRANSACTION_FLUSHED = 2$/;"	e	enum:Xapian::Database::Internal::__anon7
TRANSACTION_NONE	common/database.h	/^	    TRANSACTION_NONE = 0,$/;"	e	enum:Xapian::Database::Internal::__anon7
TRANSACTION_UNFLUSHED	common/database.h	/^	    TRANSACTION_UNFLUSHED = 1,$/;"	e	enum:Xapian::Database::Internal::__anon7
TRANSACTION_UNIMPLEMENTED	common/database.h	/^	    TRANSACTION_UNIMPLEMENTED = -1, \/\/ Used by InMemory.$/;"	e	enum:Xapian::Database::Internal::__anon7
TRIGRAM_SCORE_THRESHOLD	api/omdatabase.cc	/^#define TRIGRAM_SCORE_THRESHOLD /;"	d	file:
TcpClient	common/tcpclient.h	/^namespace TcpClient {$/;"	n
TcpServer	net/tcpserver.cc	/^TcpServer::TcpServer(const std::string & host, int port, bool tcp_nodelay,$/;"	f	class:TcpServer
TempDtorTest	tests/internaltest.cc	/^    TempDtorTest() { ++count; }$/;"	f	struct:TempDtorTest
TempDtorTest	tests/internaltest.cc	/^struct TempDtorTest {$/;"	s	file:
Term	queryparser/queryparser_internal.cc	/^    Term(State * state_, const string &name_, const PrefixInfo * prefix_info_,$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(const string &name_) : name(name_), stem(QueryParser::STEM_NONE), pos(0) { }$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(const string &name_, const PrefixInfo * prefix_info_)$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(const string &name_, termpos pos_) : name(name_), stem(QueryParser::STEM_NONE), pos(pos_) { }$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(termpos pos_) : stem(QueryParser::STEM_NONE), pos(pos_) { }$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^    Term(valueno slot, const string &a, const string &b)$/;"	f	class:Term
Term	queryparser/queryparser_internal.cc	/^class Term {$/;"	c	file:
TermCompare	matcher/exactphrasepostlist.cc	/^    TermCompare(vector<PostList *> & terms_) : terms(terms_) { }$/;"	f	class:TermCompare
TermCompare	matcher/exactphrasepostlist.cc	/^class TermCompare {$/;"	c	file:
TermFreqAndWeight	common/omenquireinternal.h	/^	    TermFreqAndWeight() { }$/;"	f	struct:Xapian::MSet::Internal::TermFreqAndWeight
TermFreqAndWeight	common/omenquireinternal.h	/^	    TermFreqAndWeight(Xapian::doccount tf, Xapian::weight wt)$/;"	f	struct:Xapian::MSet::Internal::TermFreqAndWeight
TermFreqAndWeight	common/omenquireinternal.h	/^	    explicit TermFreqAndWeight(Xapian::doccount tf)$/;"	f	struct:Xapian::MSet::Internal::TermFreqAndWeight
TermFreqAndWeight	common/omenquireinternal.h	/^	struct TermFreqAndWeight {$/;"	s	class:Xapian::MSet::Internal
TermFreqs	common/weightinternal.h	/^    TermFreqs() : termfreq(0), reltermfreq(0) {}$/;"	f	struct:TermFreqs
TermFreqs	common/weightinternal.h	/^    TermFreqs(Xapian::doccount termfreq_, Xapian::doccount reltermfreq_)$/;"	f	struct:TermFreqs
TermFreqs	common/weightinternal.h	/^struct TermFreqs {$/;"	s
TermGenerator	include/xapian/termgenerator.h	/^class XAPIAN_VISIBILITY_DEFAULT TermGenerator {$/;"	c	namespace:Xapian
TermGenerator	queryparser/termgenerator.cc	/^TermGenerator::TermGenerator() : internal(new TermGenerator::Internal) { }$/;"	f	class:TermGenerator
TermGenerator	queryparser/termgenerator.cc	/^TermGenerator::TermGenerator(const TermGenerator & o) : internal(o.internal) { }$/;"	f	class:TermGenerator
TermGroup	queryparser/queryparser_internal.cc	/^    TermGroup() : empty_ok(false) { }$/;"	f	class:TermGroup
TermGroup	queryparser/queryparser_internal.cc	/^class TermGroup {$/;"	c	file:
TermIterator	api/omtermlistiterator.cc	/^Xapian::TermIterator::TermIterator() : internal(0)$/;"	f	class:Xapian::TermIterator
TermIterator	api/omtermlistiterator.cc	/^Xapian::TermIterator::TermIterator(Internal *internal_)$/;"	f	class:Xapian::TermIterator
TermIterator	api/omtermlistiterator.cc	/^Xapian::TermIterator::TermIterator(const Xapian::TermIterator &other)$/;"	f	class:Xapian::TermIterator
TermIterator	include/xapian/termiterator.h	/^class XAPIAN_VISIBILITY_DEFAULT TermIterator {$/;"	c	namespace:Xapian
TermList	common/database.h	/^typedef Xapian::TermIterator::Internal TermList;$/;"	t
TermList	common/termlist.h	/^typedef Xapian::TermIterator::Internal TermList;$/;"	t
TermListGreaterApproxSize	backends/brass/brass_spelling.cc	/^struct TermListGreaterApproxSize {$/;"	s	file:
TermListGreaterApproxSize	backends/chert/chert_spelling.cc	/^struct TermListGreaterApproxSize {$/;"	s	file:
TermListGreaterApproxSize	backends/flint/flint_spelling.cc	/^struct TermListGreaterApproxSize {$/;"	s	file:
Terms	queryparser/queryparser_internal.cc	/^    Terms() : window(0), uniform_prefixes(true), prefixes(NULL) { }$/;"	f	class:Terms
Terms	queryparser/queryparser_internal.cc	/^class Terms {$/;"	c	file:
TestFail	tests/harness/testsuite.h	/^class TestFail { };$/;"	c
TestRunner	tests/harness/testrunner.h	/^class TestRunner {$/;"	c
TestSkip	tests/harness/testsuite.h	/^class TestSkip { };$/;"	c
Test_Exception	tests/internaltest.cc	/^	Test_Exception(int value_) : value(value_) {}$/;"	f	class:Test_Exception
Test_Exception	tests/internaltest.cc	/^class Test_Exception {$/;"	c	file:
TradWeight	include/xapian/weight.h	/^    explicit TradWeight(double k = 1.0) : param_k(k) {$/;"	f	class:Xapian::TradWeight
TradWeight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT TradWeight : public Weight {$/;"	c	namespace:Xapian
UNASSIGNED	include/xapian/unicode.h	/^    UNASSIGNED,$/;"	e	enum:Xapian::Unicode::__anon18
UNCOMPRESSED	backends/brass/brass_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:BrassCursor::__anon3
UNCOMPRESSED	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:ChertCursor::__anon4
UNCOMPRESSED	backends/flint/flint_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:FlintCursor::__anon5
UNICODE_IGNORE	queryparser/queryparser_internal.cc	/^const unsigned UNICODE_IGNORE = numeric_limits<unsigned>::max();$/;"	v
UNICODE_IGNORE	queryparser/termgenerator_internal.cc	/^const unsigned UNICODE_IGNORE = numeric_limits<unsigned>::max();$/;"	m	namespace:Xapian	file:
UNK	queryparser/lemon.c	/^    UNK$/;"	e	enum:symbol::e_assoc	file:
UNKNOWN	api/compactor.cc	/^    enum { UNKNOWN, BRASS, CHERT, FLINT } backend;$/;"	e	enum:Xapian::Compactor::Internal::__anon2	file:
UNKNOWN	backends/flint_lock.h	/^	UNKNOWN \/\/ The attempt failed for some unspecified reason.$/;"	e	enum:FlintLock::__anon6
UNREAD	backends/brass/brass_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:BrassCursor::__anon3
UNREAD	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:ChertCursor::__anon4
UNREAD	backends/flint/flint_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	e	enum:FlintCursor::__anon5
UNSET_MAX_CHANGESETS_AFTERWARDS	tests/api_replicate.cc	/^#define UNSET_MAX_CHANGESETS_AFTERWARDS /;"	d	file:
UNSUPPORTED	backends/flint_lock.h	/^	UNSUPPORTED, \/\/ Locking probably not supported (e.g. NFS without lockd).$/;"	e	enum:FlintLock::__anon6
UPPERCASE_LETTER	include/xapian/unicode.h	/^    UPPERCASE_LETTER,$/;"	e	enum:Xapian::Unicode::__anon18
USE_EXACT_TERMFREQ	include/xapian/enquire.h	/^	static const int USE_EXACT_TERMFREQ = 2;$/;"	m	class:Xapian::Enquire
USE_GLIBC_GNUGETOPT	common/gnu_getopt.h	/^#  define USE_GLIBC_GNUGETOPT$/;"	d
USE_RTTI	config.h	/^#define USE_RTTI /;"	d
UUID_SIZE	common/win32_uuid.cc	/^const size_t UUID_SIZE = 16;$/;"	v
UUID_STRING_SIZE	common/win32_uuid.cc	/^const size_t UUID_STRING_SIZE = 36;$/;"	v
U_isalpha	queryparser/queryparser_internal.cc	/^U_isalpha(unsigned ch) {$/;"	f
U_isdigit	queryparser/queryparser_internal.cc	/^U_isdigit(unsigned ch) {$/;"	f
U_isupper	queryparser/queryparser_internal.cc	/^U_isupper(unsigned ch) {$/;"	f
U_isupper	queryparser/termgenerator_internal.cc	/^U_isupper(unsigned ch) {$/;"	f	namespace:Xapian
Unicode	include/xapian/unicode.h	/^namespace Unicode {$/;"	n	namespace:Xapian
Unicode	unicode/utf8itor.cc	/^namespace Unicode {$/;"	n	namespace:Xapian	file:
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, const std::string &context_, const char * error_string_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, const std::string &context_, const char * type_, const char * error_string_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, const std::string &context_, const char * type_, int errno_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    UnimplementedError(const std::string &msg_, int errno_)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^    explicit UnimplementedError(const std::string &msg_, const std::string &context_ = std::string(), int errno_ = 0)$/;"	f	class:Xapian::UnimplementedError
UnimplementedError	include/xapian/error.h	/^class XAPIAN_VISIBILITY_DEFAULT UnimplementedError : public LogicError {$/;"	c	namespace:Xapian
Utf8Iterator	include/xapian/unicode.h	/^    Utf8Iterator() : p(NULL), end(0), seqlen(0) { }$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^    Utf8Iterator(const char *p_, size_t len) { assign(p_, len); }$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^    Utf8Iterator(const std::string &s) { assign(s.data(), s.size()); }$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^    Utf8Iterator(const unsigned char *p_, const unsigned char *end_, unsigned seqlen_)$/;"	f	class:Xapian::Utf8Iterator
Utf8Iterator	include/xapian/unicode.h	/^class XAPIAN_VISIBILITY_DEFAULT Utf8Iterator {$/;"	c	namespace:Xapian
Utf8Iterator	unicode/utf8itor.cc	/^Utf8Iterator::Utf8Iterator(const char *p_)$/;"	f	class:Xapian::Utf8Iterator
V	languages/compiler/header.h	/^    struct name * V[5];  \/* variables *\/$/;"	m	struct:generator	typeref:struct:generator::name
V2	include/xapian/version_h.cc	/^#define V2(/;"	d	file:
V3	include/xapian/version_h.cc	/^#define V3(/;"	d	file:
VAL	common/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon10
VAL	matcher/multimatch.cc	/^const Xapian::Enquire::Internal::sort_setting VAL =$/;"	v
VALGRIND	Makefile	/^VALGRIND = $/;"	m
VALGRIND	docs/Makefile	/^VALGRIND = $/;"	m
VALGRIND	tests/Makefile	/^	VALGRIND= XAPIAN_TESTSUITE_LD_PRELOAD= $(TESTS_ENVIRONMENT) .\/perftest\/perftest$(EXEEXT)$/;"	m
VALGRIND	tests/Makefile	/^VALGRIND = $/;"	m
VALGRIND	tests/perftest/Makefile.mk	/^	VALGRIND= XAPIAN_TESTSUITE_LD_PRELOAD= $(TESTS_ENVIRONMENT) .\/perftest\/perftest$(EXEEXT)$/;"	m
VAL_REL	common/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	e	enum:Xapian::Enquire::Internal::__anon10
VEC_SIZE	api/omdatabase.cc	/^#define VEC_SIZE /;"	d	file:
VERSION	Makefile	/^VERSION = 1.2.20$/;"	m
VERSION	config.h	/^#define VERSION /;"	d
VERSION	docs/Makefile	/^VERSION = 1.2.20$/;"	m
VERSION	tests/Makefile	/^VERSION = 1.2.20$/;"	m
VERSIONFILE_SIZE	backends/brass/brass_version.cc	/^#define VERSIONFILE_SIZE /;"	d	file:
VERSIONFILE_SIZE	backends/chert/chert_version.cc	/^#define VERSIONFILE_SIZE /;"	d	file:
VERSIONFILE_SIZE	backends/flint/flint_version.cc	/^#define VERSIONFILE_SIZE /;"	d	file:
VERSIONFILE_SIZE_LITERAL	backends/brass/brass_version.cc	/^#define VERSIONFILE_SIZE_LITERAL /;"	d	file:
VERSIONFILE_SIZE_LITERAL	backends/chert/chert_version.cc	/^#define VERSIONFILE_SIZE_LITERAL /;"	d	file:
VStats	bin/xapian-check-brass.cc	/^    VStats() : ValueStats(), freq_real(0) {}$/;"	f	struct:VStats
VStats	bin/xapian-check-brass.cc	/^struct VStats : public ValueStats {$/;"	s	file:
VStats	bin/xapian-check-chert.cc	/^    VStats() : ValueStats(), freq_real(0) {}$/;"	f	struct:VStats
VStats	bin/xapian-check-chert.cc	/^struct VStats : public ValueStats {$/;"	s	file:
ValueChunkReader	backends/brass/brass_values.h	/^    ValueChunkReader() : p(NULL) { }$/;"	f	class:Brass::ValueChunkReader
ValueChunkReader	backends/brass/brass_values.h	/^    ValueChunkReader(const char * p_, size_t len, Xapian::docid did_) {$/;"	f	class:Brass::ValueChunkReader
ValueChunkReader	backends/brass/brass_values.h	/^class ValueChunkReader {$/;"	c	namespace:Brass
ValueChunkReader	backends/chert/chert_values.h	/^    ValueChunkReader() : p(NULL) { }$/;"	f	class:ValueChunkReader
ValueChunkReader	backends/chert/chert_values.h	/^    ValueChunkReader(const char * p_, size_t len, Xapian::docid did_) {$/;"	f	class:ValueChunkReader
ValueChunkReader	backends/chert/chert_values.h	/^class ValueChunkReader {$/;"	c
ValueCountMatchSpy	include/xapian/matchspy.h	/^    ValueCountMatchSpy() : internal() {}$/;"	f	class:Xapian::ValueCountMatchSpy
ValueCountMatchSpy	include/xapian/matchspy.h	/^    ValueCountMatchSpy(Xapian::valueno slot_)$/;"	f	class:Xapian::ValueCountMatchSpy
ValueCountMatchSpy	include/xapian/matchspy.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueCountMatchSpy : public MatchSpy {$/;"	c	namespace:Xapian
ValueCountTermList	api/matchspy.cc	/^    ValueCountTermList(ValueCountMatchSpy::Internal * spy_) : spy(spy_) {$/;"	f	class:ValueCountTermList
ValueCountTermList	api/matchspy.cc	/^class ValueCountTermList : public TermList {$/;"	c	file:
ValueGePostList	matcher/valuegepostlist.h	/^    ValueGePostList(const Xapian::Database::Internal *db_,$/;"	f	class:ValueGePostList
ValueGePostList	matcher/valuegepostlist.h	/^class ValueGePostList: public ValueRangePostList {$/;"	c
ValueIterator	api/valueiterator.cc	/^ValueIterator::ValueIterator() : internal(NULL) { }$/;"	f	class:Xapian::ValueIterator
ValueIterator	api/valueiterator.cc	/^ValueIterator::ValueIterator(Internal *internal_) : internal(internal_)$/;"	f	class:Xapian::ValueIterator
ValueIterator	api/valueiterator.cc	/^ValueIterator::ValueIterator(const ValueIterator & o)$/;"	f	class:Xapian::ValueIterator
ValueIterator	api/valueiterator.cc	/^ValueIterator::ValueIterator(const ValueIteratorEnd_ &)$/;"	f	class:Xapian::ValueIterator
ValueIterator	include/xapian/valueiterator.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueIterator {$/;"	c	namespace:Xapian
ValueIteratorEnd_	include/xapian/valueiterator.h	/^class ValueIteratorEnd_ { };$/;"	c	namespace:Xapian
ValueList	common/database.h	/^typedef Xapian::ValueIterator::Internal ValueList;$/;"	t
ValueList	common/valuelist.h	/^typedef Xapian::ValueIterator::Internal ValueList;$/;"	t
ValueMapPostingSource	api/postingsource.cc	/^ValueMapPostingSource::ValueMapPostingSource(Xapian::valueno slot_)$/;"	f	class:Xapian::ValueMapPostingSource
ValueMapPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueMapPostingSource$/;"	c	namespace:Xapian
ValuePostingSource	api/postingsource.cc	/^ValuePostingSource::ValuePostingSource(Xapian::valueno slot_)$/;"	f	class:Xapian::ValuePostingSource
ValuePostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT ValuePostingSource : public PostingSource {$/;"	c	namespace:Xapian
ValueRangePostList	matcher/valuerangepostlist.h	/^    ValueRangePostList(const Xapian::Database::Internal *db_,$/;"	f	class:ValueRangePostList
ValueRangePostList	matcher/valuerangepostlist.h	/^class ValueRangePostList : public PostList {$/;"	c
ValueRangeProcessor	include/xapian/queryparser.h	/^struct XAPIAN_VISIBILITY_DEFAULT ValueRangeProcessor {$/;"	s	namespace:Xapian
ValueSetMatchDecider	include/xapian/valuesetmatchdecider.h	/^    ValueSetMatchDecider(Xapian::valueno slot, bool inclusive_)$/;"	f	class:Xapian::ValueSetMatchDecider
ValueSetMatchDecider	include/xapian/valuesetmatchdecider.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueSetMatchDecider : public MatchDecider {$/;"	c	namespace:Xapian
ValueStats	common/valuestats.h	/^    ValueStats() : freq(0), lower_bound(), upper_bound() {}$/;"	f	struct:ValueStats
ValueStats	common/valuestats.h	/^struct ValueStats {$/;"	s
ValueStreamDocument	matcher/valuestreamdocument.h	/^    ValueStreamDocument(const Xapian::Database & db_)$/;"	f	class:ValueStreamDocument
ValueStreamDocument	matcher/valuestreamdocument.h	/^class ValueStreamDocument : public Xapian::Document::Internal {$/;"	c
ValueUpdater	backends/brass/brass_values.cc	/^    ValueUpdater(BrassPostListTable * table_, Xapian::valueno slot_)$/;"	f	class:Brass::ValueUpdater
ValueUpdater	backends/brass/brass_values.cc	/^class ValueUpdater {$/;"	c	namespace:Brass	file:
ValueUpdater	backends/chert/chert_values.cc	/^    ValueUpdater(ChertPostListTable * table_, Xapian::valueno slot_)$/;"	f	class:ValueUpdater
ValueUpdater	backends/chert/chert_values.cc	/^class ValueUpdater {$/;"	c	file:
ValueWeightPostingSource	api/postingsource.cc	/^ValueWeightPostingSource::ValueWeightPostingSource(Xapian::valueno slot_)$/;"	f	class:Xapian::ValueWeightPostingSource
ValueWeightPostingSource	include/xapian/postingsource.h	/^class XAPIAN_VISIBILITY_DEFAULT ValueWeightPostingSource$/;"	c	namespace:Xapian
VectorTermList	common/vectortermlist.h	/^	VectorTermList(list<string>::const_iterator begin,$/;"	f	class:VectorTermList
VectorTermList	common/vectortermlist.h	/^	VectorTermList(vector<string>::const_iterator begin,$/;"	f	class:VectorTermList
VectorTermList	common/vectortermlist.h	/^class VectorTermList : public TermList {$/;"	c
WAITING_FOR_ARROW	queryparser/lemon.c	/^    WAITING_FOR_ARROW,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DATATYPE_SYMBOL	queryparser/lemon.c	/^    WAITING_FOR_DATATYPE_SYMBOL,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DECL_ARG	queryparser/lemon.c	/^    WAITING_FOR_DECL_ARG,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DECL_KEYWORD	queryparser/lemon.c	/^    WAITING_FOR_DECL_KEYWORD,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DECL_OR_RULE	queryparser/lemon.c	/^    WAITING_FOR_DECL_OR_RULE,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_DESTRUCTOR_SYMBOL	queryparser/lemon.c	/^    WAITING_FOR_DESTRUCTOR_SYMBOL,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_FALLBACK_ID	queryparser/lemon.c	/^    WAITING_FOR_FALLBACK_ID,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_PRECEDENCE_SYMBOL	queryparser/lemon.c	/^    WAITING_FOR_PRECEDENCE_SYMBOL,$/;"	e	enum:pstate::e_state	file:
WAITING_FOR_WILDCARD_ID	queryparser/lemon.c	/^    WAITING_FOR_WILDCARD_ID$/;"	e	enum:pstate::e_state	file:
WDF	include/xapian/weight.h	/^	WDF = 128,$/;"	e	enum:Xapian::Weight::__anon19
WDF_MAX	include/xapian/weight.h	/^	WDF_MAX = 2048$/;"	e	enum:Xapian::Weight::__anon19
WEIGHT_BM25	examples/quest.cc	/^    WEIGHT_BM25,$/;"	e	enum:__anon11	file:
WEIGHT_BOOL	examples/quest.cc	/^    WEIGHT_BOOL,$/;"	e	enum:__anon11	file:
WEIGHT_TRAD	examples/quest.cc	/^    WEIGHT_TRAD$/;"	e	enum:__anon11	file:
WEXITSTATUS	common/safesyswait.h	/^#  define WEXITSTATUS(/;"	d
WIFEXITED	common/safesyswait.h	/^#  define WIFEXITED(/;"	d
WILD_TERM	queryparser/queryparser_token.h	/^#define WILD_TERM /;"	d
WIN32_LEAN_AND_MEAN	common/safewindows.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WINVER	common/safewindows.h	/^# define WINVER /;"	d
WQF	include/xapian/weight.h	/^	WQF = 64,$/;"	e	enum:Xapian::Weight::__anon19
Weight	include/xapian/weight.h	/^    Weight() : stats_needed() { }$/;"	f	class:Xapian::Weight
Weight	include/xapian/weight.h	/^class XAPIAN_VISIBILITY_DEFAULT Weight {$/;"	c	namespace:Xapian
WinsockInitializer	common/remoteconnection.h	/^    WinsockInitializer() {$/;"	f	struct:WinsockInitializer
WinsockInitializer	common/remoteconnection.h	/^struct WinsockInitializer {$/;"	s
WritableDatabase	api/omdatabase.cc	/^WritableDatabase::WritableDatabase() : Database()$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	api/omdatabase.cc	/^WritableDatabase::WritableDatabase(Database::Internal *internal_)$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	api/omdatabase.cc	/^WritableDatabase::WritableDatabase(const WritableDatabase &other)$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	backends/dbfactory.cc	/^WritableDatabase::WritableDatabase(const std::string &path, int action)$/;"	f	class:Xapian::WritableDatabase
WritableDatabase	include/xapian/database.h	/^class XAPIAN_VISIBILITY_DEFAULT WritableDatabase : public Database {$/;"	c	namespace:Xapian
WritableDatabase	tests/harness/backendmanager.h	/^class Xapian::WritableDatabase;$/;"	m	class:Xapian	typeref:class:Xapian::
XAPIAN_ASSERT_LOCATION	common/omassert.h	/^#define XAPIAN_ASSERT_LOCATION(/;"	d
XAPIAN_ASSERT_LOCATION_	common/omassert.h	/^#define XAPIAN_ASSERT_LOCATION_(/;"	d
XAPIAN_ASSERT_LOCATION__	common/omassert.h	/^#define XAPIAN_ASSERT_LOCATION__(/;"	d
XAPIAN_BIN_PATH	tests/harness/backendmanager.h	/^#   define XAPIAN_BIN_PATH /;"	d
XAPIAN_BIN_PATH	tests/harness/backendmanager.h	/^#  define XAPIAN_BIN_PATH /;"	d
XAPIAN_BIN_PATH	tests/harness/backendmanager.h	/^# define XAPIAN_BIN_PATH /;"	d
XAPIAN_DB_READONLY	common/database.h	/^const int XAPIAN_DB_READONLY = 0;$/;"	v
XAPIAN_DEPRECATED	include/xapian/deprecated.h	/^#  define XAPIAN_DEPRECATED(/;"	d
XAPIAN_DEPRECATED	tests/api_backend.cc	/^#define XAPIAN_DEPRECATED(/;"	d	file:
XAPIAN_DEPRECATED	tests/api_sortingold.cc	/^#define XAPIAN_DEPRECATED(/;"	d	file:
XAPIAN_DEPRECATED_CLASS	include/xapian/deprecated.h	/^#  define XAPIAN_DEPRECATED_CLASS /;"	d
XAPIAN_DEPRECATED_CLASS	include/xapian/deprecated.h	/^# define XAPIAN_DEPRECATED_CLASS$/;"	d
XAPIAN_ENABLE_VISIBILITY	include/xapian/version.h	/^#define XAPIAN_ENABLE_VISIBILITY$/;"	d
XAPIAN_HAS_BRASS_BACKEND	include/xapian/version.h	/^#define XAPIAN_HAS_BRASS_BACKEND /;"	d
XAPIAN_HAS_CHERT_BACKEND	include/xapian/version.h	/^#define XAPIAN_HAS_CHERT_BACKEND /;"	d
XAPIAN_HAS_FLINT_BACKEND	include/xapian/version.h	/^#define XAPIAN_HAS_FLINT_BACKEND /;"	d
XAPIAN_HAS_INMEMORY_BACKEND	include/xapian/version.h	/^#define XAPIAN_HAS_INMEMORY_BACKEND /;"	d
XAPIAN_HAS_REMOTE_BACKEND	include/xapian/version.h	/^#define XAPIAN_HAS_REMOTE_BACKEND /;"	d
XAPIAN_HGUARD_BRASS_POSITIONLIST_H	backends/brass/brass_positionlist.h	/^#define XAPIAN_HGUARD_BRASS_POSITIONLIST_H$/;"	d
XAPIAN_HGUARD_BRASS_SPELLINGWORDSLIST_H	backends/brass/brass_spellingwordslist.h	/^#define XAPIAN_HGUARD_BRASS_SPELLINGWORDSLIST_H$/;"	d
XAPIAN_HGUARD_CHERT_POSITIONLIST_H	backends/chert/chert_positionlist.h	/^#define XAPIAN_HGUARD_CHERT_POSITIONLIST_H$/;"	d
XAPIAN_HGUARD_CHERT_SPELLINGWORDSLIST_H	backends/chert/chert_spellingwordslist.h	/^#define XAPIAN_HGUARD_CHERT_SPELLINGWORDSLIST_H$/;"	d
XAPIAN_HGUARD_FLINT_POSITIONLIST_H	backends/flint/flint_positionlist.h	/^#define XAPIAN_HGUARD_FLINT_POSITIONLIST_H$/;"	d
XAPIAN_HGUARD_FLINT_SPELLINGWORDSLIST_H	backends/flint/flint_spellingwordslist.h	/^#define XAPIAN_HGUARD_FLINT_SPELLINGWORDSLIST_H$/;"	d
XAPIAN_HGUARD_INDEX_UTILS_H	tests/harness/index_utils.h	/^#define XAPIAN_HGUARD_INDEX_UTILS_H$/;"	d
XAPIAN_INCLUDED_ALLSNOWBALLHEADERS_H	languages/allsnowballheaders.h	/^#define XAPIAN_INCLUDED_ALLSNOWBALLHEADERS_H$/;"	d
XAPIAN_INCLUDED_ALLTERMSLIST_H	common/alltermslist.h	/^#define XAPIAN_INCLUDED_ALLTERMSLIST_H$/;"	d
XAPIAN_INCLUDED_APITEST_H	tests/apitest.h	/^#define XAPIAN_INCLUDED_APITEST_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_BRASS_H	tests/harness/backendmanager_brass.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_BRASS_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_CHERT_H	tests/harness/backendmanager_chert.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_CHERT_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_FLINT_H	tests/harness/backendmanager_flint.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_FLINT_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_INMEMORY_H	tests/harness/backendmanager_inmemory.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_INMEMORY_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_LOCAL_H	tests/harness/backendmanager_local.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_LOCAL_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_MULTI_H	tests/harness/backendmanager_multi.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_MULTI_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_REMOTEPROG_H	tests/harness/backendmanager_remoteprog.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_REMOTEPROG_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_REMOTETCP_H	tests/harness/backendmanager_remotetcp.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_REMOTETCP_H$/;"	d
XAPIAN_INCLUDED_BACKENDMANAGER_REMOTE_H	tests/harness/backendmanager_remote.h	/^#define XAPIAN_INCLUDED_BACKENDMANAGER_REMOTE_H$/;"	d
XAPIAN_INCLUDED_BASE_H	include/xapian/base.h	/^#define XAPIAN_INCLUDED_BASE_H$/;"	d
XAPIAN_INCLUDED_BITSTREAM_H	common/bitstream.h	/^#define XAPIAN_INCLUDED_BITSTREAM_H$/;"	d
XAPIAN_INCLUDED_BRASS_ALLDOCSPOSTLIST_H	backends/brass/brass_alldocspostlist.h	/^#define XAPIAN_INCLUDED_BRASS_ALLDOCSPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_BRASS_ALLTERMSLIST_H	backends/brass/brass_alltermslist.h	/^#define XAPIAN_INCLUDED_BRASS_ALLTERMSLIST_H$/;"	d
XAPIAN_INCLUDED_BRASS_COMPACT_H	backends/brass/brass_compact.h	/^#define XAPIAN_INCLUDED_BRASS_COMPACT_H$/;"	d
XAPIAN_INCLUDED_BRASS_DATABASEREPLICATOR_H	backends/brass/brass_databasereplicator.h	/^#define XAPIAN_INCLUDED_BRASS_DATABASEREPLICATOR_H$/;"	d
XAPIAN_INCLUDED_BRASS_DBSTATS_H	backends/brass/brass_dbstats.h	/^#define XAPIAN_INCLUDED_BRASS_DBSTATS_H$/;"	d
XAPIAN_INCLUDED_BRASS_DOCUMENT_H	backends/brass/brass_document.h	/^#define XAPIAN_INCLUDED_BRASS_DOCUMENT_H$/;"	d
XAPIAN_INCLUDED_BRASS_INVERTER_H	backends/brass/brass_inverter.h	/^#define XAPIAN_INCLUDED_BRASS_INVERTER_H$/;"	d
XAPIAN_INCLUDED_BRASS_LAZYTABLE_H	backends/brass/brass_lazytable.h	/^#define XAPIAN_INCLUDED_BRASS_LAZYTABLE_H$/;"	d
XAPIAN_INCLUDED_BRASS_METADATA_H	backends/brass/brass_metadata.h	/^#define XAPIAN_INCLUDED_BRASS_METADATA_H$/;"	d
XAPIAN_INCLUDED_BRASS_REPLICATE_INTERNAL_H	backends/brass/brass_replicate_internal.h	/^#define XAPIAN_INCLUDED_BRASS_REPLICATE_INTERNAL_H$/;"	d
XAPIAN_INCLUDED_BRASS_SPELLING_H	backends/brass/brass_spelling.h	/^#define XAPIAN_INCLUDED_BRASS_SPELLING_H$/;"	d
XAPIAN_INCLUDED_BRASS_SYNONYM_H	backends/brass/brass_synonym.h	/^#define XAPIAN_INCLUDED_BRASS_SYNONYM_H$/;"	d
XAPIAN_INCLUDED_BRASS_TERMLISTTABLE_H	backends/brass/brass_termlisttable.h	/^#define XAPIAN_INCLUDED_BRASS_TERMLISTTABLE_H$/;"	d
XAPIAN_INCLUDED_BRASS_TERMLIST_H	backends/brass/brass_termlist.h	/^#define XAPIAN_INCLUDED_BRASS_TERMLIST_H$/;"	d
XAPIAN_INCLUDED_BRASS_VALUELIST_H	backends/brass/brass_valuelist.h	/^#define XAPIAN_INCLUDED_BRASS_VALUELIST_H$/;"	d
XAPIAN_INCLUDED_BRASS_VALUES_H	backends/brass/brass_values.h	/^#define XAPIAN_INCLUDED_BRASS_VALUES_H$/;"	d
XAPIAN_INCLUDED_BYTE_LENGTH_STRINGS_H	backends/byte_length_strings.h	/^#define XAPIAN_INCLUDED_BYTE_LENGTH_STRINGS_H$/;"	d
XAPIAN_INCLUDED_CHERT_ALLDOCSMODIFIEDPOSTLIST_H	backends/chert/chert_alldocsmodifiedpostlist.h	/^#define XAPIAN_INCLUDED_CHERT_ALLDOCSMODIFIEDPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_CHERT_ALLDOCSPOSTLIST_H	backends/chert/chert_alldocspostlist.h	/^#define XAPIAN_INCLUDED_CHERT_ALLDOCSPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_CHERT_ALLTERMSLIST_H	backends/chert/chert_alltermslist.h	/^#define XAPIAN_INCLUDED_CHERT_ALLTERMSLIST_H$/;"	d
XAPIAN_INCLUDED_CHERT_COMPACT_H	backends/chert/chert_compact.h	/^#define XAPIAN_INCLUDED_CHERT_COMPACT_H$/;"	d
XAPIAN_INCLUDED_CHERT_DATABASEREPLICATOR_H	backends/chert/chert_databasereplicator.h	/^#define XAPIAN_INCLUDED_CHERT_DATABASEREPLICATOR_H$/;"	d
XAPIAN_INCLUDED_CHERT_DBSTATS_H	backends/chert/chert_dbstats.h	/^#define XAPIAN_INCLUDED_CHERT_DBSTATS_H$/;"	d
XAPIAN_INCLUDED_CHERT_DOCUMENT_H	backends/chert/chert_document.h	/^#define XAPIAN_INCLUDED_CHERT_DOCUMENT_H$/;"	d
XAPIAN_INCLUDED_CHERT_LAZYTABLE_H	backends/chert/chert_lazytable.h	/^#define XAPIAN_INCLUDED_CHERT_LAZYTABLE_H$/;"	d
XAPIAN_INCLUDED_CHERT_METADATA_H	backends/chert/chert_metadata.h	/^#define XAPIAN_INCLUDED_CHERT_METADATA_H$/;"	d
XAPIAN_INCLUDED_CHERT_MODIFIEDPOSTLIST_H	backends/chert/chert_modifiedpostlist.h	/^#define XAPIAN_INCLUDED_CHERT_MODIFIEDPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_CHERT_REPLICATE_INTERNAL_H	backends/chert/chert_replicate_internal.h	/^#define XAPIAN_INCLUDED_CHERT_REPLICATE_INTERNAL_H$/;"	d
XAPIAN_INCLUDED_CHERT_SPELLING_H	backends/chert/chert_spelling.h	/^#define XAPIAN_INCLUDED_CHERT_SPELLING_H$/;"	d
XAPIAN_INCLUDED_CHERT_SYNONYM_H	backends/chert/chert_synonym.h	/^#define XAPIAN_INCLUDED_CHERT_SYNONYM_H$/;"	d
XAPIAN_INCLUDED_CHERT_TERMLISTTABLE_H	backends/chert/chert_termlisttable.h	/^#define XAPIAN_INCLUDED_CHERT_TERMLISTTABLE_H$/;"	d
XAPIAN_INCLUDED_CHERT_TERMLIST_H	backends/chert/chert_termlist.h	/^#define XAPIAN_INCLUDED_CHERT_TERMLIST_H$/;"	d
XAPIAN_INCLUDED_CHERT_VALUELIST_H	backends/chert/chert_valuelist.h	/^#define XAPIAN_INCLUDED_CHERT_VALUELIST_H$/;"	d
XAPIAN_INCLUDED_CHERT_VALUES_H	backends/chert/chert_values.h	/^#define XAPIAN_INCLUDED_CHERT_VALUES_H$/;"	d
XAPIAN_INCLUDED_CJK_TOKENIZER_H	queryparser/cjk-tokenizer.h	/^#define XAPIAN_INCLUDED_CJK_TOKENIZER_H$/;"	d
XAPIAN_INCLUDED_CLOSEFROM_H	common/closefrom.h	/^#define XAPIAN_INCLUDED_CLOSEFROM_H$/;"	d
XAPIAN_INCLUDED_COLLAPSER_H	matcher/collapser.h	/^#define XAPIAN_INCLUDED_COLLAPSER_H$/;"	d
XAPIAN_INCLUDED_COMPACTOR_H	include/xapian/compactor.h	/^#define XAPIAN_INCLUDED_COMPACTOR_H$/;"	d
XAPIAN_INCLUDED_CONST_DATABASE_WRAPPER_H	common/const_database_wrapper.h	/^#define XAPIAN_INCLUDED_CONST_DATABASE_WRAPPER_H$/;"	d
XAPIAN_INCLUDED_CONTIGUOUSALLDOCSPOSTLIST_H	common/contiguousalldocspostlist.h	/^#define XAPIAN_INCLUDED_CONTIGUOUSALLDOCSPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_CPUTIMER_H	tests/harness/cputimer.h	/^#define XAPIAN_INCLUDED_CPUTIMER_H$/;"	d
XAPIAN_INCLUDED_DATABASEREPLICATOR_H	common/databasereplicator.h	/^#define XAPIAN_INCLUDED_DATABASEREPLICATOR_H$/;"	d
XAPIAN_INCLUDED_DATABASE_H	include/xapian/database.h	/^#define XAPIAN_INCLUDED_DATABASE_H$/;"	d
XAPIAN_INCLUDED_DBCHECK_H	tests/dbcheck.h	/^#define XAPIAN_INCLUDED_DBCHECK_H$/;"	d
XAPIAN_INCLUDED_DBFACTORY_H	include/xapian/dbfactory.h	/^#define XAPIAN_INCLUDED_DBFACTORY_H$/;"	d
XAPIAN_INCLUDED_DEBUGLOG_H	common/debuglog.h	/^#define XAPIAN_INCLUDED_DEBUGLOG_H$/;"	d
XAPIAN_INCLUDED_DEPRECATED_H	include/xapian/deprecated.h	/^#define XAPIAN_INCLUDED_DEPRECATED_H$/;"	d
XAPIAN_INCLUDED_DEREFWRAPPER_H	include/xapian/derefwrapper.h	/^#define XAPIAN_INCLUDED_DEREFWRAPPER_H$/;"	d
XAPIAN_INCLUDED_DOCUMENTVALUELIST_H	api/documentvaluelist.h	/^#define XAPIAN_INCLUDED_DOCUMENTVALUELIST_H$/;"	d
XAPIAN_INCLUDED_DOCUMENT_H	include/xapian/document.h	/^#define XAPIAN_INCLUDED_DOCUMENT_H$/;"	d
XAPIAN_INCLUDED_EDITDISTANCE_H	api/editdistance.h	/^#define XAPIAN_INCLUDED_EDITDISTANCE_H$/;"	d
XAPIAN_INCLUDED_EMPTYPOSTLIST_H	common/emptypostlist.h	/^#define XAPIAN_INCLUDED_EMPTYPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_ENQUIRE_H	include/xapian/enquire.h	/^#define XAPIAN_INCLUDED_ENQUIRE_H$/;"	d
XAPIAN_INCLUDED_ERRNO_TO_STRING_H	common/errno_to_string.h	/^#define XAPIAN_INCLUDED_ERRNO_TO_STRING_H$/;"	d
XAPIAN_INCLUDED_ERRORHANDLER_H	include/xapian/errorhandler.h	/^#define XAPIAN_INCLUDED_ERRORHANDLER_H$/;"	d
XAPIAN_INCLUDED_ERROR_H	include/xapian/error.h	/^#define XAPIAN_INCLUDED_ERROR_H$/;"	d
XAPIAN_INCLUDED_ESETINTERNAL_H	common/esetinternal.h	/^#define XAPIAN_INCLUDED_ESETINTERNAL_H$/;"	d
XAPIAN_INCLUDED_EXACTPHRASEPOSTLIST_H	matcher/exactphrasepostlist.h	/^#define XAPIAN_INCLUDED_EXACTPHRASEPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_EXPANDDECIDER_H	include/xapian/expanddecider.h	/^#define XAPIAN_INCLUDED_EXPANDDECIDER_H$/;"	d
XAPIAN_INCLUDED_EXPANDWEIGHT_H	common/expandweight.h	/^#define XAPIAN_INCLUDED_EXPANDWEIGHT_H$/;"	d
XAPIAN_INCLUDED_EXTERNALPOSTLIST_H	matcher/externalpostlist.h	/^#define XAPIAN_INCLUDED_EXTERNALPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_FDTRACKER_H	tests/harness/fdtracker.h	/^#define XAPIAN_INCLUDED_FDTRACKER_H$/;"	d
XAPIAN_INCLUDED_FILEUTILS_H	common/fileutils.h	/^#define XAPIAN_INCLUDED_FILEUTILS_H$/;"	d
XAPIAN_INCLUDED_FLINT_ALLDOCSPOSTLIST_H	backends/flint/flint_alldocspostlist.h	/^#define XAPIAN_INCLUDED_FLINT_ALLDOCSPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_FLINT_ALLTERMSLIST_H	backends/flint/flint_alltermslist.h	/^#define XAPIAN_INCLUDED_FLINT_ALLTERMSLIST_H$/;"	d
XAPIAN_INCLUDED_FLINT_COMPACT_H	backends/flint/flint_compact.h	/^#define XAPIAN_INCLUDED_FLINT_COMPACT_H$/;"	d
XAPIAN_INCLUDED_FLINT_DATABASEREPLICATOR_H	backends/flint/flint_databasereplicator.h	/^#define XAPIAN_INCLUDED_FLINT_DATABASEREPLICATOR_H$/;"	d
XAPIAN_INCLUDED_FLINT_LOCK_H	backends/flint_lock.h	/^#define XAPIAN_INCLUDED_FLINT_LOCK_H$/;"	d
XAPIAN_INCLUDED_FLINT_METADATA_H	backends/flint/flint_metadata.h	/^#define XAPIAN_INCLUDED_FLINT_METADATA_H$/;"	d
XAPIAN_INCLUDED_FLINT_MODIFIEDPOSTLIST_H	backends/flint/flint_modifiedpostlist.h	/^#define XAPIAN_INCLUDED_FLINT_MODIFIEDPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_FLINT_REPLICATE_INTERNAL_H	backends/flint/flint_replicate_internal.h	/^#define XAPIAN_INCLUDED_FLINT_REPLICATE_INTERNAL_H$/;"	d
XAPIAN_INCLUDED_FLINT_SPELLING_H	backends/flint/flint_spelling.h	/^#define XAPIAN_INCLUDED_FLINT_SPELLING_H$/;"	d
XAPIAN_INCLUDED_FLINT_SYNONYM_H	backends/flint/flint_synonym.h	/^#define XAPIAN_INCLUDED_FLINT_SYNONYM_H$/;"	d
XAPIAN_INCLUDED_FLINT_TERMLISTTABLE_H	backends/flint/flint_termlisttable.h	/^#define XAPIAN_INCLUDED_FLINT_TERMLISTTABLE_H$/;"	d
XAPIAN_INCLUDED_FLINT_TERMLIST_H	backends/flint/flint_termlist.h	/^#define XAPIAN_INCLUDED_FLINT_TERMLIST_H$/;"	d
XAPIAN_INCLUDED_FREEMEM_H	tests/perftest/freemem.h	/^#define XAPIAN_INCLUDED_FREEMEM_H$/;"	d
XAPIAN_INCLUDED_GNU_GETOPT_H	common/gnu_getopt.h	/^#define XAPIAN_INCLUDED_GNU_GETOPT_H$/;"	d
XAPIAN_INCLUDED_INMEMORY_DOCUMENT_H	backends/inmemory/inmemory_document.h	/^#define XAPIAN_INCLUDED_INMEMORY_DOCUMENT_H$/;"	d
XAPIAN_INCLUDED_INTERNALTYPES_H	common/internaltypes.h	/^#define XAPIAN_INCLUDED_INTERNALTYPES_H$/;"	d
XAPIAN_INCLUDED_IO_UTILS_H	common/io_utils.h	/^#define XAPIAN_INCLUDED_IO_UTILS_H$/;"	d
XAPIAN_INCLUDED_KEYMAKER_H	include/xapian/keymaker.h	/^#define XAPIAN_INCLUDED_KEYMAKER_H$/;"	d
XAPIAN_INCLUDED_LEAFPOSTLIST_H	common/leafpostlist.h	/^#define XAPIAN_INCLUDED_LEAFPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_LOCALSUBMATCH_H	matcher/localsubmatch.h	/^#define XAPIAN_INCLUDED_LOCALSUBMATCH_H$/;"	d
XAPIAN_INCLUDED_MATCHSPY_H	include/xapian/matchspy.h	/^#define XAPIAN_INCLUDED_MATCHSPY_H$/;"	d
XAPIAN_INCLUDED_MSETCMP_H	matcher/msetcmp.h	/^#define XAPIAN_INCLUDED_MSETCMP_H$/;"	d
XAPIAN_INCLUDED_MSETPOSTLIST_H	matcher/msetpostlist.h	/^#define XAPIAN_INCLUDED_MSETPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_MSVC_DIRENT_H	common/msvc_dirent.h	/^#define XAPIAN_INCLUDED_MSVC_DIRENT_H$/;"	d
XAPIAN_INCLUDED_MSVC_POSIX_WRAPPER_H	common/msvc_posix_wrapper.h	/^#define XAPIAN_INCLUDED_MSVC_POSIX_WRAPPER_H$/;"	d
XAPIAN_INCLUDED_MULTIALLTERMSLIST_H	common/multialltermslist.h	/^#define XAPIAN_INCLUDED_MULTIALLTERMSLIST_H$/;"	d
XAPIAN_INCLUDED_MULTIANDPOSTLIST_H	matcher/multiandpostlist.h	/^#define XAPIAN_INCLUDED_MULTIANDPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_MULTIVALUELIST_H	common/multivaluelist.h	/^#define XAPIAN_INCLUDED_MULTIVALUELIST_H$/;"	d
XAPIAN_INCLUDED_MULTIXORPOSTLIST_H	matcher/multixorpostlist.h	/^#define XAPIAN_INCLUDED_MULTIXORPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_NET_POSTLIST_H	backends/remote/net_postlist.h	/^#define XAPIAN_INCLUDED_NET_POSTLIST_H$/;"	d
XAPIAN_INCLUDED_NORETURN_H	common/noreturn.h	/^#define XAPIAN_INCLUDED_NORETURN_H$/;"	d
XAPIAN_INCLUDED_OMASSERT_H	common/omassert.h	/^#define XAPIAN_INCLUDED_OMASSERT_H$/;"	d
XAPIAN_INCLUDED_OMQUERYINTERNAL_H	common/omqueryinternal.h	/^#define XAPIAN_INCLUDED_OMQUERYINTERNAL_H$/;"	d
XAPIAN_INCLUDED_ORTERMLIST_H	common/ortermlist.h	/^#define XAPIAN_INCLUDED_ORTERMLIST_H$/;"	d
XAPIAN_INCLUDED_OUTPUT_H	common/output.h	/^#define XAPIAN_INCLUDED_OUTPUT_H$/;"	d
XAPIAN_INCLUDED_PACK_H	common/pack.h	/^#define XAPIAN_INCLUDED_PACK_H$/;"	d
XAPIAN_INCLUDED_PERFTEST_H	tests/perftest/perftest.h	/^#define XAPIAN_INCLUDED_PERFTEST_H$/;"	d
XAPIAN_INCLUDED_POSITIONITERATOR_H	include/xapian/positioniterator.h	/^#define XAPIAN_INCLUDED_POSITIONITERATOR_H$/;"	d
XAPIAN_INCLUDED_POSTINGITERATOR_H	include/xapian/postingiterator.h	/^#define XAPIAN_INCLUDED_POSTINGITERATOR_H$/;"	d
XAPIAN_INCLUDED_POSTINGSOURCE_H	include/xapian/postingsource.h	/^#define XAPIAN_INCLUDED_POSTINGSOURCE_H$/;"	d
XAPIAN_INCLUDED_POSTLIST_H	common/postlist.h	/^#define XAPIAN_INCLUDED_POSTLIST_H$/;"	d
XAPIAN_INCLUDED_PREFIX_COMPRESSED_STRINGS_H	backends/prefix_compressed_strings.h	/^#define XAPIAN_INCLUDED_PREFIX_COMPRESSED_STRINGS_H$/;"	d
XAPIAN_INCLUDED_PRETTY_H	common/pretty.h	/^#define XAPIAN_INCLUDED_PRETTY_H$/;"	d
XAPIAN_INCLUDED_PROGCLIENT_H	common/progclient.h	/^#define XAPIAN_INCLUDED_PROGCLIENT_H$/;"	d
XAPIAN_INCLUDED_QUERYOPTIMISER_H	matcher/queryoptimiser.h	/^#define XAPIAN_INCLUDED_QUERYOPTIMISER_H$/;"	d
XAPIAN_INCLUDED_QUERYPARSER_H	include/xapian/queryparser.h	/^#define XAPIAN_INCLUDED_QUERYPARSER_H$/;"	d
XAPIAN_INCLUDED_QUERYPARSER_INTERNAL_H	queryparser/queryparser_internal.h	/^#define XAPIAN_INCLUDED_QUERYPARSER_INTERNAL_H$/;"	d
XAPIAN_INCLUDED_QUERY_H	include/xapian/query.h	/^#define XAPIAN_INCLUDED_QUERY_H$/;"	d
XAPIAN_INCLUDED_REALTIME_H	common/realtime.h	/^#define XAPIAN_INCLUDED_REALTIME_H$/;"	d
XAPIAN_INCLUDED_REGISTRYINTERNAL_H	common/registryinternal.h	/^#define XAPIAN_INCLUDED_REGISTRYINTERNAL_H$/;"	d
XAPIAN_INCLUDED_REGISTRY_H	include/xapian/registry.h	/^#define XAPIAN_INCLUDED_REGISTRY_H$/;"	d
XAPIAN_INCLUDED_REMOTECONNECTION_H	common/remoteconnection.h	/^#define XAPIAN_INCLUDED_REMOTECONNECTION_H$/;"	d
XAPIAN_INCLUDED_REMOTEPROTOCOL_H	common/remoteprotocol.h	/^#define XAPIAN_INCLUDED_REMOTEPROTOCOL_H$/;"	d
XAPIAN_INCLUDED_REMOTESERVER_H	common/remoteserver.h	/^#define XAPIAN_INCLUDED_REMOTESERVER_H$/;"	d
XAPIAN_INCLUDED_REMOTESUBMATCH_H	matcher/remotesubmatch.h	/^#define XAPIAN_INCLUDED_REMOTESUBMATCH_H$/;"	d
XAPIAN_INCLUDED_REMOTETCPCLIENT_H	common/remotetcpclient.h	/^#define XAPIAN_INCLUDED_REMOTETCPCLIENT_H$/;"	d
XAPIAN_INCLUDED_REMOTETCPSERVER_H	common/remotetcpserver.h	/^#define XAPIAN_INCLUDED_REMOTETCPSERVER_H$/;"	d
XAPIAN_INCLUDED_REMOTE_DATABASE_H	common/remote-database.h	/^#define XAPIAN_INCLUDED_REMOTE_DATABASE_H$/;"	d
XAPIAN_INCLUDED_REMOTE_DOCUMENT_H	backends/remote/remote-document.h	/^#define XAPIAN_INCLUDED_REMOTE_DOCUMENT_H$/;"	d
XAPIAN_INCLUDED_REPLICATETCPCLIENT_H	common/replicatetcpclient.h	/^#define XAPIAN_INCLUDED_REPLICATETCPCLIENT_H$/;"	d
XAPIAN_INCLUDED_REPLICATETCPSERVER_H	common/replicatetcpserver.h	/^#define XAPIAN_INCLUDED_REPLICATETCPSERVER_H$/;"	d
XAPIAN_INCLUDED_REPLICATE_UTILS_H	common/replicate_utils.h	/^#define XAPIAN_INCLUDED_REPLICATE_UTILS_H$/;"	d
XAPIAN_INCLUDED_REPLICATIONPROTOCOL_H	common/replicationprotocol.h	/^#define XAPIAN_INCLUDED_REPLICATIONPROTOCOL_H$/;"	d
XAPIAN_INCLUDED_REPLICATION_H	common/replication.h	/^#define XAPIAN_INCLUDED_REPLICATION_H$/;"	d
XAPIAN_INCLUDED_RUNPROCESS_H	tests/perftest/runprocess.h	/^#define XAPIAN_INCLUDED_RUNPROCESS_H$/;"	d
XAPIAN_INCLUDED_SAFEDIRENT_H	common/safedirent.h	/^#define XAPIAN_INCLUDED_SAFEDIRENT_H$/;"	d
XAPIAN_INCLUDED_SAFEERRNO_H	common/safeerrno.h	/^#define XAPIAN_INCLUDED_SAFEERRNO_H$/;"	d
XAPIAN_INCLUDED_SAFEFCNTL_H	common/safefcntl.h	/^#define XAPIAN_INCLUDED_SAFEFCNTL_H$/;"	d
XAPIAN_INCLUDED_SAFENETDB_H	common/safenetdb.h	/^#define XAPIAN_INCLUDED_SAFENETDB_H$/;"	d
XAPIAN_INCLUDED_SAFESYSSELECT_H	common/safesysselect.h	/^#define XAPIAN_INCLUDED_SAFESYSSELECT_H$/;"	d
XAPIAN_INCLUDED_SAFESYSSTAT_H	common/safesysstat.h	/^#define XAPIAN_INCLUDED_SAFESYSSTAT_H$/;"	d
XAPIAN_INCLUDED_SAFESYSWAIT_H	common/safesyswait.h	/^#define XAPIAN_INCLUDED_SAFESYSWAIT_H$/;"	d
XAPIAN_INCLUDED_SAFEUNISTD_H	common/safeunistd.h	/^#define XAPIAN_INCLUDED_SAFEUNISTD_H$/;"	d
XAPIAN_INCLUDED_SAFEUUID_H	common/safeuuid.h	/^#define XAPIAN_INCLUDED_SAFEUUID_H$/;"	d
XAPIAN_INCLUDED_SAFEWINDOWS_H	common/safewindows.h	/^#define XAPIAN_INCLUDED_SAFEWINDOWS_H$/;"	d
XAPIAN_INCLUDED_SAFEWINSOCK2_H	common/safewinsock2.h	/^#define XAPIAN_INCLUDED_SAFEWINSOCK2_H$/;"	d
XAPIAN_INCLUDED_SCALABILITY_H	tests/harness/scalability.h	/^#define XAPIAN_INCLUDED_SCALABILITY_H$/;"	d
XAPIAN_INCLUDED_SERIALISE_DOUBLE_H	common/serialise-double.h	/^#define XAPIAN_INCLUDED_SERIALISE_DOUBLE_H$/;"	d
XAPIAN_INCLUDED_SERIALISE_H	common/serialise.h	/^#define XAPIAN_INCLUDED_SERIALISE_H$/;"	d
XAPIAN_INCLUDED_SLOWVALUELIST_H	backends/slowvaluelist.h	/^#define XAPIAN_INCLUDED_SLOWVALUELIST_H$/;"	d
XAPIAN_INCLUDED_SOAKTEST_H	tests/soaktest/soaktest.h	/^#define XAPIAN_INCLUDED_SOAKTEST_H$/;"	d
XAPIAN_INCLUDED_SOCKET_UTILS_H	common/socket_utils.h	/^#define XAPIAN_INCLUDED_SOCKET_UTILS_H$/;"	d
XAPIAN_INCLUDED_STEMINTERNAL_H	languages/steminternal.h	/^#define XAPIAN_INCLUDED_STEMINTERNAL_H$/;"	d
XAPIAN_INCLUDED_STEM_H	include/xapian/stem.h	/^#define XAPIAN_INCLUDED_STEM_H$/;"	d
XAPIAN_INCLUDED_STRINGUTILS_H	common/stringutils.h	/^#define XAPIAN_INCLUDED_STRINGUTILS_H$/;"	d
XAPIAN_INCLUDED_STR_H	common/str.h	/^#define XAPIAN_INCLUDED_STR_H$/;"	d
XAPIAN_INCLUDED_SUBMATCH_H	common/submatch.h	/^#define XAPIAN_INCLUDED_SUBMATCH_H$/;"	d
XAPIAN_INCLUDED_SYNONYMPOSTLIST_H	matcher/synonympostlist.h	/^#define XAPIAN_INCLUDED_SYNONYMPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_TCPCLIENT_H	common/tcpclient.h	/^#define XAPIAN_INCLUDED_TCPCLIENT_H$/;"	d
XAPIAN_INCLUDED_TCPSERVER_H	common/tcpserver.h	/^#define XAPIAN_INCLUDED_TCPSERVER_H$/;"	d
XAPIAN_INCLUDED_TERMGENERATOR_H	include/xapian/termgenerator.h	/^#define XAPIAN_INCLUDED_TERMGENERATOR_H$/;"	d
XAPIAN_INCLUDED_TERMGENERATOR_INTERNAL_H	queryparser/termgenerator_internal.h	/^#define XAPIAN_INCLUDED_TERMGENERATOR_INTERNAL_H$/;"	d
XAPIAN_INCLUDED_TERMITERATOR_H	include/xapian/termiterator.h	/^#define XAPIAN_INCLUDED_TERMITERATOR_H$/;"	d
XAPIAN_INCLUDED_TERMLIST_H	common/termlist.h	/^#define XAPIAN_INCLUDED_TERMLIST_H$/;"	d
XAPIAN_INCLUDED_TESTMACROS_H	tests/harness/testmacros.h	/^#define XAPIAN_INCLUDED_TESTMACROS_H$/;"	d
XAPIAN_INCLUDED_TESTRUNNER_H	tests/harness/testrunner.h	/^#define XAPIAN_INCLUDED_TESTRUNNER_H$/;"	d
XAPIAN_INCLUDED_TYPES_H	include/xapian/types.h	/^#define XAPIAN_INCLUDED_TYPES_H$/;"	d
XAPIAN_INCLUDED_UNALIGNED_H	common/unaligned.h	/^#define XAPIAN_INCLUDED_UNALIGNED_H$/;"	d
XAPIAN_INCLUDED_UNICODE_H	include/xapian/unicode.h	/^#define XAPIAN_INCLUDED_UNICODE_H$/;"	d
XAPIAN_INCLUDED_UNIXCMDS_H	tests/harness/unixcmds.h	/^#define XAPIAN_INCLUDED_UNIXCMDS_H$/;"	d
XAPIAN_INCLUDED_VALUEGEPOSTLIST_H	matcher/valuegepostlist.h	/^#define XAPIAN_INCLUDED_VALUEGEPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_VALUEITERATOR_H	include/xapian/valueiterator.h	/^#define XAPIAN_INCLUDED_VALUEITERATOR_H$/;"	d
XAPIAN_INCLUDED_VALUELIST_H	common/valuelist.h	/^#define XAPIAN_INCLUDED_VALUELIST_H$/;"	d
XAPIAN_INCLUDED_VALUERANGEPOSTLIST_H	matcher/valuerangepostlist.h	/^#define XAPIAN_INCLUDED_VALUERANGEPOSTLIST_H$/;"	d
XAPIAN_INCLUDED_VALUESETMATCHDECIDER_H	include/xapian/valuesetmatchdecider.h	/^#define XAPIAN_INCLUDED_VALUESETMATCHDECIDER_H$/;"	d
XAPIAN_INCLUDED_VALUESTATS_H	common/valuestats.h	/^#define XAPIAN_INCLUDED_VALUESTATS_H$/;"	d
XAPIAN_INCLUDED_VALUESTREAMDOCUMENT_H	matcher/valuestreamdocument.h	/^#define XAPIAN_INCLUDED_VALUESTREAMDOCUMENT_H$/;"	d
XAPIAN_INCLUDED_VERSION_H	include/xapian/version.h	/^#define XAPIAN_INCLUDED_VERSION_H$/;"	d
XAPIAN_INCLUDED_VISIBILITY_H	include/xapian/visibility.h	/^#define XAPIAN_INCLUDED_VISIBILITY_H$/;"	d
XAPIAN_INCLUDED_WEIGHTINTERNAL_H	common/weightinternal.h	/^#define XAPIAN_INCLUDED_WEIGHTINTERNAL_H$/;"	d
XAPIAN_INCLUDED_WEIGHT_H	include/xapian/weight.h	/^#define XAPIAN_INCLUDED_WEIGHT_H$/;"	d
XAPIAN_INCLUDED_WIN32_UUID_H	common/win32_uuid.h	/^#define XAPIAN_INCLUDED_WIN32_UUID_H$/;"	d
XAPIAN_INCLUDED_XAPIAN_CHECK_BRASS_H	bin/xapian-check-brass.h	/^#define XAPIAN_INCLUDED_XAPIAN_CHECK_BRASS_H$/;"	d
XAPIAN_INCLUDED_XAPIAN_CHECK_CHERT_H	bin/xapian-check-chert.h	/^#define XAPIAN_INCLUDED_XAPIAN_CHECK_CHERT_H$/;"	d
XAPIAN_INCLUDED_XAPIAN_CHECK_FLINT_H	bin/xapian-check-flint.h	/^#define XAPIAN_INCLUDED_XAPIAN_CHECK_FLINT_H$/;"	d
XAPIAN_INCLUDED_XAPIAN_H	include/xapian.h	/^#define XAPIAN_INCLUDED_XAPIAN_H$/;"	d
XAPIAN_LDFLAGS	Makefile	/^XAPIAN_LDFLAGS =  -Bsymbolic-functions$/;"	m
XAPIAN_LDFLAGS	docs/Makefile	/^XAPIAN_LDFLAGS =  -Bsymbolic-functions$/;"	m
XAPIAN_LDFLAGS	tests/Makefile	/^XAPIAN_LDFLAGS =  -Bsymbolic-functions$/;"	m
XAPIAN_LIBS	Makefile	/^XAPIAN_LIBS =  -lz  $/;"	m
XAPIAN_LIBS	docs/Makefile	/^XAPIAN_LIBS =  -lz  $/;"	m
XAPIAN_LIBS	tests/Makefile	/^XAPIAN_LIBS =  -lz  $/;"	m
XAPIAN_MAJOR_VERSION	include/xapian/version.h	/^#define XAPIAN_MAJOR_VERSION /;"	d
XAPIAN_MINOR_VERSION	include/xapian/version.h	/^#define XAPIAN_MINOR_VERSION /;"	d
XAPIAN_NORETURN	common/noreturn.h	/^#  define XAPIAN_NORETURN(/;"	d
XAPIAN_OUTPUT_FUNCTION	common/output.h	/^#define XAPIAN_OUTPUT_FUNCTION(/;"	d
XAPIAN_PRETTY_AS_CLASSNAME	common/pretty.h	/^#define XAPIAN_PRETTY_AS_CLASSNAME(/;"	d
XAPIAN_PROGSRV	tests/harness/backendmanager.h	/^#define XAPIAN_PROGSRV /;"	d
XAPIAN_REMOTE_PROTOCOL_MAJOR_VERSION	common/remoteprotocol.h	/^#define XAPIAN_REMOTE_PROTOCOL_MAJOR_VERSION /;"	d
XAPIAN_REMOTE_PROTOCOL_MINOR_VERSION	common/remoteprotocol.h	/^#define XAPIAN_REMOTE_PROTOCOL_MINOR_VERSION /;"	d
XAPIAN_REPLICATION_PROTOCOL_MAJOR_VERSION	common/replicationprotocol.h	/^#define XAPIAN_REPLICATION_PROTOCOL_MAJOR_VERSION /;"	d
XAPIAN_REPLICATION_PROTOCOL_MINOR_VERSION	common/replicationprotocol.h	/^#define XAPIAN_REPLICATION_PROTOCOL_MINOR_VERSION /;"	d
XAPIAN_REVISION	include/xapian/version.h	/^#define XAPIAN_REVISION /;"	d
XAPIAN_TCPSRV	tests/harness/backendmanager.h	/^#define XAPIAN_TCPSRV /;"	d
XAPIAN_UNUSED	common/debuglog.h	/^# define XAPIAN_UNUSED /;"	d
XAPIAN_UNUSED	common/debuglog.h	/^# define XAPIAN_UNUSED$/;"	d
XAPIAN_VERSION	include/xapian/version.h	/^#define XAPIAN_VERSION /;"	d
XAPIAN_VISIBILITY_DEFAULT	include/xapian/visibility.h	/^# define XAPIAN_VISIBILITY_DEFAULT /;"	d
XAPIAN_VISIBILITY_DEFAULT	include/xapian/visibility.h	/^# define XAPIAN_VISIBILITY_DEFAULT$/;"	d
XOR	queryparser/queryparser_token.h	/^#define XOR /;"	d
Xapian	api/compactor.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/expanddecider.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/keymaker.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/omdatabase.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/omdocument.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/omenquire.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/omquery.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/postingsource.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/postlist.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/registry.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/termlist.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/valueiterator.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/valuerangeproc.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/valuesetmatchdecider.cc	/^namespace Xapian {$/;"	n	file:
Xapian	api/version.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/brass/brass_termlist.h	/^namespace Xapian {$/;"	n
Xapian	backends/brass/brass_termlisttable.h	/^namespace Xapian {$/;"	n
Xapian	backends/brass/brass_values.h	/^namespace Xapian {$/;"	n
Xapian	backends/chert/chert_termlist.h	/^namespace Xapian {$/;"	n
Xapian	backends/chert/chert_termlisttable.h	/^namespace Xapian {$/;"	n
Xapian	backends/chert/chert_values.h	/^namespace Xapian {$/;"	n
Xapian	backends/database.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/databasereplicator.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/dbfactory.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/dbfactory_remote.cc	/^namespace Xapian {$/;"	n	file:
Xapian	backends/flint/flint_termlist.h	/^namespace Xapian {$/;"	n
Xapian	backends/flint/flint_termlisttable.h	/^namespace Xapian {$/;"	n
Xapian	backends/valuelist.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/bitstream.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/bitstream.h	/^namespace Xapian {$/;"	n
Xapian	common/closefrom.h	/^namespace Xapian {$/;"	n
Xapian	common/database.h	/^namespace Xapian {$/;"	n
Xapian	common/databasereplicator.h	/^namespace Xapian {$/;"	n
Xapian	common/debuglog.h	/^namespace Xapian {$/;"	n
Xapian	common/esetinternal.h	/^namespace Xapian {$/;"	n
Xapian	common/expandweight.h	/^namespace Xapian {$/;"	n
Xapian	common/leafpostlist.h	/^namespace Xapian {$/;"	n
Xapian	common/omenquireinternal.h	/^namespace Xapian {$/;"	n
Xapian	common/ortermlist.h	/^namespace Xapian {$/;"	n
Xapian	common/pretty.h	/^namespace Xapian {$/;"	n
Xapian	common/registryinternal.h	/^namespace Xapian {$/;"	n
Xapian	common/remote-database.h	/^namespace Xapian {$/;"	n
Xapian	common/replication.h	/^namespace Xapian {$/;"	n
Xapian	common/serialise.h	/^namespace Xapian {$/;"	n
Xapian	common/str.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/str.h	/^namespace Xapian {$/;"	n
Xapian	common/stringutils.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/stringutils.h	/^namespace Xapian {$/;"	n
Xapian	common/termlist.h	/^namespace Xapian {$/;"	n
Xapian	common/utils.cc	/^namespace Xapian {$/;"	n	file:
Xapian	common/utils.h	/^namespace Xapian {$/;"	n
Xapian	common/weightinternal.h	/^namespace Xapian {$/;"	n
Xapian	expand/esetinternal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	expand/expandweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	include/xapian.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/base.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/compactor.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/database.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/dbfactory.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/derefwrapper.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/document.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/enquire.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/error.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/errorhandler.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/expanddecider.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/keymaker.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/matchspy.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/positioniterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/postingiterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/postingsource.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/query.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/queryparser.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/registry.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/stem.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/termgenerator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/termiterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/types.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/unicode.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/valueiterator.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/valuesetmatchdecider.h	/^namespace Xapian {$/;"	n
Xapian	include/xapian/weight.h	/^namespace Xapian {$/;"	n
Xapian	languages/danish.h	/^namespace Xapian {$/;"	n
Xapian	languages/dutch.h	/^namespace Xapian {$/;"	n
Xapian	languages/english.h	/^namespace Xapian {$/;"	n
Xapian	languages/finnish.h	/^namespace Xapian {$/;"	n
Xapian	languages/french.h	/^namespace Xapian {$/;"	n
Xapian	languages/german.h	/^namespace Xapian {$/;"	n
Xapian	languages/german2.h	/^namespace Xapian {$/;"	n
Xapian	languages/hungarian.h	/^namespace Xapian {$/;"	n
Xapian	languages/italian.h	/^namespace Xapian {$/;"	n
Xapian	languages/kraaij_pohlmann.h	/^namespace Xapian {$/;"	n
Xapian	languages/lovins.h	/^namespace Xapian {$/;"	n
Xapian	languages/norwegian.h	/^namespace Xapian {$/;"	n
Xapian	languages/porter.h	/^namespace Xapian {$/;"	n
Xapian	languages/portuguese.h	/^namespace Xapian {$/;"	n
Xapian	languages/romanian.h	/^namespace Xapian {$/;"	n
Xapian	languages/russian.h	/^namespace Xapian {$/;"	n
Xapian	languages/spanish.h	/^namespace Xapian {$/;"	n
Xapian	languages/stem.cc	/^namespace Xapian {$/;"	n	file:
Xapian	languages/steminternal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	languages/steminternal.h	/^namespace Xapian {$/;"	n
Xapian	languages/swedish.h	/^namespace Xapian {$/;"	n
Xapian	languages/turkish.h	/^namespace Xapian {$/;"	n
Xapian	matcher/externalpostlist.h	/^namespace Xapian {$/;"	n
Xapian	matcher/extraweightpostlist.h	/^namespace Xapian {$/;"	n
Xapian	matcher/remotesubmatch.h	/^namespace Xapian {$/;"	n
Xapian	queryparser/queryparser_internal.h	/^namespace Xapian {$/;"	n
Xapian	queryparser/termgenerator_internal.cc	/^namespace Xapian {$/;"	n	file:
Xapian	queryparser/termgenerator_internal.h	/^namespace Xapian {$/;"	n
Xapian	unicode/utf8itor.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/bm25weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/boolweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/tradweight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/weight.cc	/^namespace Xapian {$/;"	n	file:
Xapian	weight/weightinternal.cc	/^namespace Xapian {$/;"	n	file:
YYACTIONTYPE	queryparser/queryparser_internal.cc	/^#define YYACTIONTYPE /;"	d	file:
YYCODETYPE	queryparser/queryparser_internal.cc	/^#define YYCODETYPE /;"	d	file:
YYMINORTYPE	queryparser/queryparser_internal.cc	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon28	file:
YYNOCODE	queryparser/queryparser_internal.cc	/^#define YYNOCODE /;"	d	file:
YYNRULE	queryparser/queryparser_internal.cc	/^#define YYNRULE /;"	d	file:
YYNSTATE	queryparser/queryparser_internal.cc	/^#define YYNSTATE /;"	d	file:
YYSTACKDEPTH	queryparser/queryparser_internal.cc	/^#define YYSTACKDEPTH /;"	d	file:
YY_ACCEPT_ACTION	queryparser/queryparser_internal.cc	/^#define YY_ACCEPT_ACTION /;"	d	file:
YY_ERROR_ACTION	queryparser/queryparser_internal.cc	/^#define YY_ERROR_ACTION /;"	d	file:
YY_NO_ACTION	queryparser/queryparser_internal.cc	/^#define YY_NO_ACTION /;"	d	file:
YY_REDUCE_MAX	queryparser/queryparser_internal.cc	/^#define YY_REDUCE_MAX /;"	d	file:
YY_REDUCE_USE_DFLT	queryparser/queryparser_internal.cc	/^#define YY_REDUCE_USE_DFLT /;"	d	file:
YY_SHIFT_MAX	queryparser/queryparser_internal.cc	/^#define YY_SHIFT_MAX /;"	d	file:
YY_SHIFT_USE_DFLT	queryparser/queryparser_internal.cc	/^#define YY_SHIFT_USE_DFLT /;"	d	file:
YY_SZ_ACTTAB	queryparser/queryparser_internal.cc	/^#define YY_SZ_ACTTAB /;"	d	file:
_	common/getopt.cc	/^#  define _(/;"	d	file:
_FORTIFY_SOURCE	config.h	/^# define _FORTIFY_SOURCE /;"	d
_GNU_SOURCE	tests/zlib-vg.c	/^#define _GNU_SOURCE$/;"	d	file:
_USE_IRS	common/safenetdb.h	/^# define _USE_IRS /;"	d
__WIN32__	queryparser/lemon.c	/^#	define __WIN32__$/;"	d	file:
__getattr__	tests/submitperftest	/^    def __getattr__(self, attr):$/;"	m	class:fdwrapper	file:
__getattr__	tests/submitperftest.in	/^    def __getattr__(self, attr):$/;"	m	class:fdwrapper	file:
__init__	tests/submitperftest	/^    def __init__(self, fd, callback):$/;"	m	class:fdwrapper
__init__	tests/submitperftest.in	/^    def __init__(self, fd, callback):$/;"	m	class:fdwrapper
_lit	common/pretty.h	/^    const char * _lit;$/;"	m	struct:Literal
a	tests/api_unicode.cc	/^    const char * a, * b;$/;"	m	struct:testcase	file:
a	tests/api_unicode.cc	/^    const char * a;$/;"	m	struct:testcase2	file:
aAction	queryparser/lemon.c	/^  } *aAction,                  \/* The yy_action[] table under construction *\/$/;"	m	struct:acttab	typeref:struct:acttab::__anon27	file:
aLookahead	queryparser/lemon.c	/^    *aLookahead;               \/* A single new transaction set *\/$/;"	m	struct:acttab	typeref:struct:acttab::__anon27	file:
a_0	languages/danish.cc	/^static const struct among a_0[32] =$/;"	v	typeref:struct:among	file:
a_0	languages/dutch.cc	/^static const struct among a_0[11] =$/;"	v	typeref:struct:among	file:
a_0	languages/english.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/finnish.cc	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_0	languages/french.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/german.cc	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	languages/german2.cc	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	languages/hungarian.cc	/^static const struct among a_0[8] =$/;"	v	typeref:struct:among	file:
a_0	languages/italian.cc	/^static const struct among a_0[7] =$/;"	v	typeref:struct:among	file:
a_0	languages/kraaij_pohlmann.cc	/^static const struct among a_0[7] =$/;"	v	typeref:struct:among	file:
a_0	languages/lovins.cc	/^static const struct among a_0[9] =$/;"	v	typeref:struct:among	file:
a_0	languages/norwegian.cc	/^static const struct among a_0[29] =$/;"	v	typeref:struct:among	file:
a_0	languages/porter.cc	/^static const struct among a_0[4] =$/;"	v	typeref:struct:among	file:
a_0	languages/portuguese.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/romanian.cc	/^static const struct among a_0[3] =$/;"	v	typeref:struct:among	file:
a_0	languages/russian.cc	/^static const struct among a_0[9] =$/;"	v	typeref:struct:among	file:
a_0	languages/spanish.cc	/^static const struct among a_0[6] =$/;"	v	typeref:struct:among	file:
a_0	languages/swedish.cc	/^static const struct among a_0[37] =$/;"	v	typeref:struct:among	file:
a_0	languages/turkish.cc	/^static const struct among a_0[10] =$/;"	v	typeref:struct:among	file:
a_1	languages/danish.cc	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	languages/dutch.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/english.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/finnish.cc	/^static const struct among a_1[6] =$/;"	v	typeref:struct:among	file:
a_1	languages/french.cc	/^static const struct among a_1[4] =$/;"	v	typeref:struct:among	file:
a_1	languages/german.cc	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	languages/german2.cc	/^static const struct among a_1[6] =$/;"	v	typeref:struct:among	file:
a_1	languages/hungarian.cc	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	languages/italian.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/kraaij_pohlmann.cc	/^static const struct among a_1[11] =$/;"	v	typeref:struct:among	file:
a_1	languages/lovins.cc	/^static const struct among a_1[294] =$/;"	v	typeref:struct:among	file:
a_1	languages/norwegian.cc	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_1	languages/porter.cc	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	languages/portuguese.cc	/^static const struct among a_1[3] =$/;"	v	typeref:struct:among	file:
a_1	languages/romanian.cc	/^static const struct among a_1[16] =$/;"	v	typeref:struct:among	file:
a_1	languages/russian.cc	/^static const struct among a_1[26] =$/;"	v	typeref:struct:among	file:
a_1	languages/spanish.cc	/^static const struct among a_1[13] =$/;"	v	typeref:struct:among	file:
a_1	languages/swedish.cc	/^static const struct among a_1[7] =$/;"	v	typeref:struct:among	file:
a_1	languages/turkish.cc	/^static const struct among a_1[2] =$/;"	v	typeref:struct:among	file:
a_10	languages/english.cc	/^static const struct among a_10[18] =$/;"	v	typeref:struct:among	file:
a_10	languages/hungarian.cc	/^static const struct among a_10[31] =$/;"	v	typeref:struct:among	file:
a_10	languages/turkish.cc	/^static const struct among a_10[2] =$/;"	v	typeref:struct:among	file:
a_11	languages/hungarian.cc	/^static const struct among a_11[42] =$/;"	v	typeref:struct:among	file:
a_11	languages/turkish.cc	/^static const struct among a_11[2] =$/;"	v	typeref:struct:among	file:
a_12	languages/turkish.cc	/^static const struct among a_12[4] =$/;"	v	typeref:struct:among	file:
a_13	languages/turkish.cc	/^static const struct among a_13[4] =$/;"	v	typeref:struct:among	file:
a_14	languages/turkish.cc	/^static const struct among a_14[4] =$/;"	v	typeref:struct:among	file:
a_15	languages/turkish.cc	/^static const struct among a_15[4] =$/;"	v	typeref:struct:among	file:
a_16	languages/turkish.cc	/^static const struct among a_16[2] =$/;"	v	typeref:struct:among	file:
a_17	languages/turkish.cc	/^static const struct among a_17[4] =$/;"	v	typeref:struct:among	file:
a_18	languages/turkish.cc	/^static const struct among a_18[8] =$/;"	v	typeref:struct:among	file:
a_19	languages/turkish.cc	/^static const struct among a_19[2] =$/;"	v	typeref:struct:among	file:
a_2	languages/danish.cc	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	languages/dutch.cc	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	languages/english.cc	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	languages/finnish.cc	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	languages/french.cc	/^static const struct among a_2[6] =$/;"	v	typeref:struct:among	file:
a_2	languages/german.cc	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	languages/german2.cc	/^static const struct among a_2[7] =$/;"	v	typeref:struct:among	file:
a_2	languages/hungarian.cc	/^static const struct among a_2[23] =$/;"	v	typeref:struct:among	file:
a_2	languages/italian.cc	/^static const struct among a_2[37] =$/;"	v	typeref:struct:among	file:
a_2	languages/kraaij_pohlmann.cc	/^static const struct among a_2[14] =$/;"	v	typeref:struct:among	file:
a_2	languages/lovins.cc	/^static const struct among a_2[10] =$/;"	v	typeref:struct:among	file:
a_2	languages/norwegian.cc	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	languages/porter.cc	/^static const struct among a_2[3] =$/;"	v	typeref:struct:among	file:
a_2	languages/portuguese.cc	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_2	languages/romanian.cc	/^static const struct among a_2[46] =$/;"	v	typeref:struct:among	file:
a_2	languages/russian.cc	/^static const struct among a_2[8] =$/;"	v	typeref:struct:among	file:
a_2	languages/spanish.cc	/^static const struct among a_2[11] =$/;"	v	typeref:struct:among	file:
a_2	languages/swedish.cc	/^static const struct among a_2[5] =$/;"	v	typeref:struct:among	file:
a_2	languages/turkish.cc	/^static const struct among a_2[4] =$/;"	v	typeref:struct:among	file:
a_20	languages/turkish.cc	/^static const struct among a_20[32] =$/;"	v	typeref:struct:among	file:
a_21	languages/turkish.cc	/^static const struct among a_21[8] =$/;"	v	typeref:struct:among	file:
a_22	languages/turkish.cc	/^static const struct among a_22[4] =$/;"	v	typeref:struct:among	file:
a_23	languages/turkish.cc	/^static const struct among a_23[4] =$/;"	v	typeref:struct:among	file:
a_3	languages/dutch.cc	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	languages/english.cc	/^static const struct among a_3[13] =$/;"	v	typeref:struct:among	file:
a_3	languages/finnish.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/french.cc	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	languages/german.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/german2.cc	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_3	languages/hungarian.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/italian.cc	/^static const struct among a_3[5] =$/;"	v	typeref:struct:among	file:
a_3	languages/kraaij_pohlmann.cc	/^static const struct among a_3[16] =$/;"	v	typeref:struct:among	file:
a_3	languages/lovins.cc	/^static const struct among a_3[34] =$/;"	v	typeref:struct:among	file:
a_3	languages/porter.cc	/^static const struct among a_3[20] =$/;"	v	typeref:struct:among	file:
a_3	languages/portuguese.cc	/^static const struct among a_3[3] =$/;"	v	typeref:struct:among	file:
a_3	languages/romanian.cc	/^static const struct among a_3[62] =$/;"	v	typeref:struct:among	file:
a_3	languages/russian.cc	/^static const struct among a_3[2] =$/;"	v	typeref:struct:among	file:
a_3	languages/spanish.cc	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_3	languages/turkish.cc	/^static const struct among a_3[4] =$/;"	v	typeref:struct:among	file:
a_4	languages/dutch.cc	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	languages/english.cc	/^static const struct among a_4[6] =$/;"	v	typeref:struct:among	file:
a_4	languages/finnish.cc	/^static const struct among a_4[9] =$/;"	v	typeref:struct:among	file:
a_4	languages/french.cc	/^static const struct among a_4[43] =$/;"	v	typeref:struct:among	file:
a_4	languages/german.cc	/^static const struct among a_4[8] =$/;"	v	typeref:struct:among	file:
a_4	languages/german2.cc	/^static const struct among a_4[2] =$/;"	v	typeref:struct:among	file:
a_4	languages/hungarian.cc	/^static const struct among a_4[44] =$/;"	v	typeref:struct:among	file:
a_4	languages/italian.cc	/^static const struct among a_4[4] =$/;"	v	typeref:struct:among	file:
a_4	languages/kraaij_pohlmann.cc	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	languages/porter.cc	/^static const struct among a_4[7] =$/;"	v	typeref:struct:among	file:
a_4	languages/portuguese.cc	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	languages/romanian.cc	/^static const struct among a_4[94] =$/;"	v	typeref:struct:among	file:
a_4	languages/russian.cc	/^static const struct among a_4[46] =$/;"	v	typeref:struct:among	file:
a_4	languages/spanish.cc	/^static const struct among a_4[3] =$/;"	v	typeref:struct:among	file:
a_4	languages/turkish.cc	/^static const struct among a_4[2] =$/;"	v	typeref:struct:among	file:
a_5	languages/dutch.cc	/^static const struct among a_5[4] =$/;"	v	typeref:struct:among	file:
a_5	languages/english.cc	/^static const struct among a_5[24] =$/;"	v	typeref:struct:among	file:
a_5	languages/finnish.cc	/^static const struct among a_5[7] =$/;"	v	typeref:struct:among	file:
a_5	languages/french.cc	/^static const struct among a_5[35] =$/;"	v	typeref:struct:among	file:
a_5	languages/german2.cc	/^static const struct among a_5[8] =$/;"	v	typeref:struct:among	file:
a_5	languages/hungarian.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/italian.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/kraaij_pohlmann.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/porter.cc	/^static const struct among a_5[19] =$/;"	v	typeref:struct:among	file:
a_5	languages/portuguese.cc	/^static const struct among a_5[45] =$/;"	v	typeref:struct:among	file:
a_5	languages/romanian.cc	/^static const struct among a_5[5] =$/;"	v	typeref:struct:among	file:
a_5	languages/russian.cc	/^static const struct among a_5[36] =$/;"	v	typeref:struct:among	file:
a_5	languages/spanish.cc	/^static const struct among a_5[3] =$/;"	v	typeref:struct:among	file:
a_5	languages/turkish.cc	/^static const struct among a_5[2] =$/;"	v	typeref:struct:among	file:
a_6	languages/english.cc	/^static const struct among a_6[9] =$/;"	v	typeref:struct:among	file:
a_6	languages/finnish.cc	/^static const struct among a_6[30] =$/;"	v	typeref:struct:among	file:
a_6	languages/french.cc	/^static const struct among a_6[38] =$/;"	v	typeref:struct:among	file:
a_6	languages/hungarian.cc	/^static const struct among a_6[6] =$/;"	v	typeref:struct:among	file:
a_6	languages/italian.cc	/^static const struct among a_6[51] =$/;"	v	typeref:struct:among	file:
a_6	languages/kraaij_pohlmann.cc	/^static const struct among a_6[22] =$/;"	v	typeref:struct:among	file:
a_6	languages/portuguese.cc	/^static const struct among a_6[120] =$/;"	v	typeref:struct:among	file:
a_6	languages/russian.cc	/^static const struct among a_6[2] =$/;"	v	typeref:struct:among	file:
a_6	languages/spanish.cc	/^static const struct among a_6[46] =$/;"	v	typeref:struct:among	file:
a_6	languages/turkish.cc	/^static const struct among a_6[4] =$/;"	v	typeref:struct:among	file:
a_7	languages/english.cc	/^static const struct among a_7[18] =$/;"	v	typeref:struct:among	file:
a_7	languages/finnish.cc	/^static const struct among a_7[14] =$/;"	v	typeref:struct:among	file:
a_7	languages/french.cc	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	languages/hungarian.cc	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_7	languages/italian.cc	/^static const struct among a_7[87] =$/;"	v	typeref:struct:among	file:
a_7	languages/kraaij_pohlmann.cc	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_7	languages/portuguese.cc	/^static const struct among a_7[7] =$/;"	v	typeref:struct:among	file:
a_7	languages/russian.cc	/^static const struct among a_7[4] =$/;"	v	typeref:struct:among	file:
a_7	languages/spanish.cc	/^static const struct among a_7[12] =$/;"	v	typeref:struct:among	file:
a_7	languages/turkish.cc	/^static const struct among a_7[2] =$/;"	v	typeref:struct:among	file:
a_8	languages/english.cc	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	languages/finnish.cc	/^static const struct among a_8[2] =$/;"	v	typeref:struct:among	file:
a_8	languages/french.cc	/^static const struct among a_8[5] =$/;"	v	typeref:struct:among	file:
a_8	languages/hungarian.cc	/^static const struct among a_8[7] =$/;"	v	typeref:struct:among	file:
a_8	languages/portuguese.cc	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_8	languages/spanish.cc	/^static const struct among a_8[96] =$/;"	v	typeref:struct:among	file:
a_8	languages/turkish.cc	/^static const struct among a_8[4] =$/;"	v	typeref:struct:among	file:
a_9	languages/english.cc	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	languages/finnish.cc	/^static const struct among a_9[2] =$/;"	v	typeref:struct:among	file:
a_9	languages/hungarian.cc	/^static const struct among a_9[12] =$/;"	v	typeref:struct:among	file:
a_9	languages/spanish.cc	/^static const struct among a_9[8] =$/;"	v	typeref:struct:among	file:
a_9	languages/turkish.cc	/^static const struct among a_9[2] =$/;"	v	typeref:struct:among	file:
abort_construction	api/omquery.cc	/^Query::abort_construction()$/;"	f	class:Xapian::Query
abort_on_error	tests/harness/testsuite.cc	/^bool test_driver::abort_on_error = false;$/;"	m	class:test_driver	file:
abort_on_error	tests/harness/testsuite.h	/^	static bool abort_on_error;$/;"	m	class:test_driver
abs_builddir	Makefile	/^abs_builddir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
abs_builddir	docs/Makefile	/^abs_builddir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/docs$/;"	m
abs_builddir	tests/Makefile	/^abs_builddir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/tests$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
abs_srcdir	docs/Makefile	/^abs_srcdir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/docs$/;"	m
abs_srcdir	tests/Makefile	/^abs_srcdir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/tests$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
abs_top_builddir	docs/Makefile	/^abs_top_builddir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
abs_top_builddir	tests/Makefile	/^abs_top_builddir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
abs_top_srcdir	docs/Makefile	/^abs_top_srcdir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
abs_top_srcdir	tests/Makefile	/^abs_top_srcdir = \/Users\/hefeng\/Downloads\/xapian-core-1.2.20$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	docs/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	tests/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	docs/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	tests/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	docs/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	tests/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	docs/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	tests/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_check_decl	configure	/^ac_fn_cxx_check_decl ()$/;"	f
ac_fn_cxx_check_func	configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_compile	configure	/^ac_fn_cxx_check_header_compile ()$/;"	f
ac_fn_cxx_check_type	configure	/^ac_fn_cxx_check_type ()$/;"	f
ac_fn_cxx_compute_int	configure	/^ac_fn_cxx_compute_int ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	configure	/^ac_fn_cxx_try_run ()$/;"	f
acc	common/bitstream.h	/^    unsigned int acc;$/;"	m	class:Xapian::BitReader
acc	common/bitstream.h	/^    unsigned int acc;$/;"	m	class:Xapian::BitWriter
accept	queryparser/lemon.c	/^  char *accept;            \/* Code to execute when the parser excepts *\/$/;"	m	struct:lemon	file:
accept_connection	net/tcpserver.cc	/^TcpServer::accept_connection()$/;"	f	class:TcpServer
accumulate	common/expandweight.h	/^    void accumulate(Xapian::termcount wdf, Xapian::termcount doclen,$/;"	f	class:Xapian::Internal::ExpandStats
accumulate_stats	api/termlist.cc	/^TermIterator::Internal::accumulate_stats(Xapian::Internal::ExpandStats &) const$/;"	f	class:Xapian::TermIterator::Internal
accumulate_stats	backends/brass/brass_termlist.cc	/^BrassTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:BrassTermList
accumulate_stats	backends/chert/chert_termlist.cc	/^ChertTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:ChertTermList
accumulate_stats	backends/flint/flint_termlist.cc	/^FlintTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:FlintTermList
accumulate_stats	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:InMemoryTermList
accumulate_stats	backends/multi/multi_termlist.cc	/^MultiTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:MultiTermList
accumulate_stats	backends/remote/net_termlist.cc	/^NetworkTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:NetworkTermList
accumulate_stats	expand/ortermlist.cc	/^OrTermList::accumulate_stats(Xapian::Internal::ExpandStats & stats) const$/;"	f	class:OrTermList
accumulate_stats	weight/weightinternal.cc	/^Weight::Internal::accumulate_stats(const Xapian::Database::Internal &subdb,$/;"	f	class:Xapian::Weight::Internal
accumulate_terms	api/omqueryinternal.cc	/^Xapian::Query::Internal::accumulate_terms($/;"	f	class:Xapian::Query::Internal
action	queryparser/lemon.c	/^    int action;                \/* Action to take on the given lookahead *\/$/;"	m	struct:acttab::__anon27	file:
action	queryparser/lemon.c	/^struct action {$/;"	s	file:
actioncmp	queryparser/lemon.c	/^static int actioncmp($/;"	f	file:
activate	tests/harness/testsuite.cc	/^    void activate() {$/;"	f	class:SignalRedirector
active	tests/harness/testsuite.cc	/^    bool active;$/;"	m	class:SignalRedirector	file:
active_timeout	common/remoteserver.h	/^    double active_timeout;$/;"	m	class:RemoteServer
active_timeout	common/remotetcpserver.h	/^    double active_timeout;$/;"	m	class:RemoteTcpServer
acttab	queryparser/lemon.c	/^struct acttab {$/;"	s	file:
acttab	queryparser/lemon.c	/^typedef struct acttab acttab;$/;"	t	typeref:struct:acttab	file:
acttab_action	queryparser/lemon.c	/^void acttab_action(acttab *p, int lookahead, int action){$/;"	f
acttab_alloc	queryparser/lemon.c	/^acttab *acttab_alloc(void){$/;"	f
acttab_free	queryparser/lemon.c	/^void acttab_free(acttab *p){$/;"	f
acttab_insert	queryparser/lemon.c	/^int acttab_insert(acttab *p){$/;"	f
acttab_size	queryparser/lemon.c	/^#define acttab_size(/;"	d	file:
acttab_yyaction	queryparser/lemon.c	/^#define acttab_yyaction(/;"	d	file:
acttab_yylookahead	queryparser/lemon.c	/^#define acttab_yylookahead(/;"	d	file:
add	backends/brass/brass_table.cc	/^BrassTable::add(const string &key, string tag, bool already_compressed)$/;"	f	class:BrassTable
add	backends/chert/chert_table.cc	/^ChertTable::add(const string &key, string tag, bool already_compressed)$/;"	f	class:ChertTable
add	backends/flint/flint_table.cc	/^FlintTable::add(const string &key, string tag, bool already_compressed)$/;"	f	class:FlintTable
add	include/xapian/keymaker.h	/^    void add(Xapian::valueno slot, bool forward = true) {$/;"	f	class:Xapian::MultiValueSorter
add	include/xapian/queryparser.h	/^    void add(const std::string & word) { stop_words.insert(word); }$/;"	f	class:Xapian::SimpleStopper
add_boolean_prefix	queryparser/queryparser.cc	/^QueryParser::add_boolean_prefix(const string &field, const string &prefix)$/;"	f	class:QueryParser
add_boolean_prefix	queryparser/queryparser.cc	/^QueryParser::add_boolean_prefix(const string &field, const string &prefix,$/;"	f	class:QueryParser
add_boolean_term	include/xapian/document.h	/^	void add_boolean_term(const std::string & term) { add_term(term, 0); }$/;"	f	class:Xapian::Document
add_command_line_option	tests/harness/testsuite.cc	/^test_driver::add_command_line_option(const string &l, char s, string * arg)$/;"	f	class:test_driver
add_database	api/omdatabase.cc	/^Database::add_database(const Database & database)$/;"	f	class:Xapian::Database
add_defaults	api/registry.cc	/^Registry::Internal::add_defaults()$/;"	f	class:Xapian::Registry::Internal
add_document	api/omdatabase.cc	/^WritableDatabase::add_document(const Document & document)$/;"	f	class:Xapian::WritableDatabase
add_document	api/omenquire.cc	/^RSet::add_document(Xapian::docid did)$/;"	f	class:Xapian::RSet
add_document	backends/brass/brass_database.cc	/^BrassWritableDatabase::add_document(const Xapian::Document & document)$/;"	f	class:BrassWritableDatabase
add_document	backends/brass/brass_dbstats.h	/^    void add_document(Xapian::termcount doclen) {$/;"	f	class:BrassDatabaseStats
add_document	backends/brass/brass_values.cc	/^BrassValueManager::add_document(Xapian::docid did, const Xapian::Document &doc,$/;"	f	class:BrassValueManager
add_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_document(const Xapian::Document & document)$/;"	f	class:ChertWritableDatabase
add_document	backends/chert/chert_dbstats.h	/^    void add_document(Xapian::termcount doclen) {$/;"	f	class:ChertDatabaseStats
add_document	backends/chert/chert_values.cc	/^ChertValueManager::add_document(Xapian::docid did, const Xapian::Document &doc,$/;"	f	class:ChertValueManager
add_document	backends/database.cc	/^Database::Internal::add_document(const Xapian::Document &)$/;"	f	class:Xapian::Database::Internal
add_document	backends/flint/flint_database.cc	/^FlintWritableDatabase::add_document(const Xapian::Document & document)$/;"	f	class:FlintWritableDatabase
add_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::add_document(const Xapian::Document & document)$/;"	f	class:InMemoryDatabase
add_document	backends/remote/remote-database.cc	/^RemoteDatabase::add_document(const Xapian::Document & doc)$/;"	f	class:RemoteDatabase
add_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::add_document(const Xapian::Document &)$/;"	f	class:ConstDatabaseWrapper
add_document	include/xapian/enquire.h	/^	void add_document(const Xapian::MSetIterator & i) { add_document(*i); }$/;"	f	class:Xapian::RSet
add_document_	backends/brass/brass_database.cc	/^BrassWritableDatabase::add_document_(Xapian::docid did,$/;"	f	class:BrassWritableDatabase
add_document_	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_document_(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
add_document_	backends/flint/flint_database.cc	/^FlintWritableDatabase::add_document_(Xapian::docid did,$/;"	f	class:FlintWritableDatabase
add_filter	queryparser/queryparser_internal.cc	/^    void add_filter(const filter_group_id & id, const Query & q) {$/;"	f	struct:ProbQuery
add_filter_range	queryparser/queryparser_internal.cc	/^    void add_filter_range(Xapian::valueno slot, const Query & range) {$/;"	f	struct:ProbQuery
add_freq_delta	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_freq_delta(const string & tname,$/;"	f	class:ChertWritableDatabase
add_freq_delta	backends/flint/flint_database.cc	/^FlintWritableDatabase::add_freq_delta(const string & tname,$/;"	f	class:FlintWritableDatabase
add_item	backends/brass/brass_table.cc	/^BrassTable::add_item(Item_wr kt_, int j)$/;"	f	class:BrassTable
add_item	backends/chert/chert_table.cc	/^ChertTable::add_item(Item_wr kt_, int j)$/;"	f	class:ChertTable
add_item	backends/flint/flint_table.cc	/^FlintTable::add_item(Item_wr_ kt_, int j)$/;"	f	class:FlintTable
add_item	matcher/collapser.cc	/^CollapseData::add_item(const Xapian::Internal::MSetItem & item,$/;"	f	class:CollapseData
add_item_to_block	backends/brass/brass_table.cc	/^BrassTable::add_item_to_block(byte * p, Item_wr kt_, int c)$/;"	f	class:BrassTable
add_item_to_block	backends/chert/chert_table.cc	/^ChertTable::add_item_to_block(byte * p, Item_wr kt_, int c)$/;"	f	class:ChertTable
add_item_to_block	backends/flint/flint_table.cc	/^FlintTable::add_item_to_block(byte * p, Item_wr_ kt_, int c)$/;"	f	class:FlintTable
add_kt	backends/brass/brass_table.cc	/^BrassTable::add_kt(bool found)$/;"	f	class:BrassTable
add_kt	backends/chert/chert_table.cc	/^ChertTable::add_kt(bool found)$/;"	f	class:ChertTable
add_kt	backends/flint/flint_table.cc	/^FlintTable::add_kt(bool found)$/;"	f	class:FlintTable
add_mapping	api/postingsource.cc	/^ValueMapPostingSource::add_mapping(const string & key, double wt)$/;"	f	class:Xapian::ValueMapPostingSource
add_matchspy	api/omenquire.cc	/^Enquire::add_matchspy(MatchSpy * spy) {$/;"	f	class:Xapian::Enquire
add_position	api/omdocument.cc	/^OmDocumentTerm::add_position(Xapian::termpos tpos)$/;"	f	class:OmDocumentTerm
add_positional_term	queryparser/queryparser_internal.cc	/^    void add_positional_term(Term * term) {$/;"	f	class:Terms
add_posting	api/omdocument.cc	/^Document::add_posting(const string & tname,$/;"	f	class:Xapian::Document
add_posting	api/omdocument.cc	/^Xapian::Document::Internal::add_posting(const string & tname, Xapian::termpos tpos,$/;"	f	class:Xapian::Document::Internal
add_posting	backends/brass/brass_inverter.h	/^	void add_posting(Xapian::docid did, Xapian::termcount wdf) {$/;"	f	class:Inverter::PostingChanges
add_posting	backends/brass/brass_inverter.h	/^    void add_posting(Xapian::docid did, const std::string & term,$/;"	f	class:Inverter
add_posting	backends/inmemory/inmemory_database.cc	/^InMemoryDoc::add_posting(const InMemoryTermEntry & post)$/;"	f	class:InMemoryDoc
add_posting	backends/inmemory/inmemory_database.cc	/^InMemoryTerm::add_posting(const InMemoryPosting & post)$/;"	f	class:InMemoryTerm
add_prefix	queryparser/queryparser.cc	/^QueryParser::add_prefix(const string &field, const string &prefix)$/;"	f	class:QueryParser
add_prefix	queryparser/queryparser_internal.cc	/^QueryParser::Internal::add_prefix(const string &field, const string &prefix,$/;"	f	class:QueryParser::Internal
add_s_to_b	languages/compiler/space.c	/^extern symbol * add_s_to_b(symbol * p, const char * s) {$/;"	f
add_source	api/compactor.cc	/^Compactor::Internal::add_source(const string & srcdir)$/;"	f	class:Xapian::Compactor::Internal
add_source	api/compactor.cc	/^Compactor::add_source(const string & srcdir)$/;"	f	class:Xapian::Compactor
add_spelling	api/omdatabase.cc	/^WritableDatabase::add_spelling(const std::string & word,$/;"	f	class:Xapian::WritableDatabase
add_spelling	backends/brass/brass_database.cc	/^BrassWritableDatabase::add_spelling(const string & word,$/;"	f	class:BrassWritableDatabase
add_spelling	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_spelling(const string & word,$/;"	f	class:ChertWritableDatabase
add_spelling	backends/database.cc	/^Database::Internal::add_spelling(const string &, Xapian::termcount) const$/;"	f	class:Xapian::Database::Internal
add_spelling	backends/flint/flint_database.cc	/^FlintWritableDatabase::add_spelling(const string & word,$/;"	f	class:FlintWritableDatabase
add_spelling	backends/remote/remote-database.cc	/^RemoteDatabase::add_spelling(const string & word,$/;"	f	class:RemoteDatabase
add_spelling	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::add_spelling(const string &, Xapian::termcount) const$/;"	f	class:ConstDatabaseWrapper
add_subquery	api/omquery.cc	/^Query::add_subquery(const Query & subq)$/;"	f	class:Xapian::Query
add_subquery	api/omquery.cc	/^Query::add_subquery(const Query * subq)$/;"	f	class:Xapian::Query
add_subquery	api/omquery.cc	/^Query::add_subquery(const string & tname)$/;"	f	class:Xapian::Query
add_subquery	api/omqueryinternal.cc	/^Xapian::Query::Internal::add_subquery(const Xapian::Query::Internal * subq)$/;"	f	class:Xapian::Query::Internal
add_subquery_nocopy	api/omqueryinternal.cc	/^Xapian::Query::Internal::add_subquery_nocopy(Xapian::Query::Internal * subq)$/;"	f	class:Xapian::Query::Internal
add_synonym	api/omdatabase.cc	/^WritableDatabase::add_synonym(const std::string & term,$/;"	f	class:Xapian::WritableDatabase
add_synonym	backends/brass/brass_database.cc	/^BrassWritableDatabase::add_synonym(const string & term,$/;"	f	class:BrassWritableDatabase
add_synonym	backends/brass/brass_synonym.cc	/^BrassSynonymTable::add_synonym(const string & term, const string & synonym)$/;"	f	class:BrassSynonymTable
add_synonym	backends/chert/chert_database.cc	/^ChertWritableDatabase::add_synonym(const string & term,$/;"	f	class:ChertWritableDatabase
add_synonym	backends/chert/chert_synonym.cc	/^ChertSynonymTable::add_synonym(const string & term, const string & synonym)$/;"	f	class:ChertSynonymTable
add_synonym	backends/database.cc	/^Database::Internal::add_synonym(const string &, const string &) const$/;"	f	class:Xapian::Database::Internal
add_synonym	backends/flint/flint_database.cc	/^FlintWritableDatabase::add_synonym(const string & term,$/;"	f	class:FlintWritableDatabase
add_synonym	backends/flint/flint_synonym.cc	/^FlintSynonymTable::add_synonym(const string & term, const string & synonym)$/;"	f	class:FlintSynonymTable
add_synonym	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::add_synonym(const string &, const string &) const$/;"	f	class:ConstDatabaseWrapper
add_term	api/omdocument.cc	/^Document::add_term(const string & tname, Xapian::termcount wdfinc)$/;"	f	class:Xapian::Document
add_term	api/omdocument.cc	/^Xapian::Document::Internal::add_term(const string & tname, Xapian::termcount wdfinc)$/;"	f	class:Xapian::Document::Internal
add_term	queryparser/queryparser_internal.cc	/^    void add_term(Term * term) {$/;"	f	class:TermGroup
add_to_b	languages/compiler/space.c	/^extern symbol * add_to_b(symbol * p, int n, symbol * q) {$/;"	f
add_to_query	queryparser/queryparser_internal.cc	/^add_to_query(Query *& q, Query::op op, Query * term)$/;"	f	file:
add_to_query	queryparser/queryparser_internal.cc	/^add_to_query(Query *& q, Query::op op, const Query & term)$/;"	f	file:
add_to_stoplist	queryparser/queryparser_internal.cc	/^    void add_to_stoplist(const Term * term) {$/;"	f	class:State
add_to_unstem	queryparser/queryparser_internal.cc	/^    void add_to_unstem(const string & term, const string & unstemmed) {$/;"	f	class:State
add_value	api/omdocument.cc	/^Document::add_value(Xapian::valueno slot, const string &value)$/;"	f	class:Xapian::Document
add_value	api/omdocument.cc	/^Xapian::Document::Internal::add_value(Xapian::valueno slot, const string &value)$/;"	f	class:Xapian::Document::Internal
add_value	backends/brass/brass_values.cc	/^BrassValueManager::add_value(Xapian::docid did, Xapian::valueno slot,$/;"	f	class:BrassValueManager
add_value	backends/chert/chert_values.cc	/^ChertValueManager::add_value(Xapian::docid did, Xapian::valueno slot,$/;"	f	class:ChertValueManager
add_value	include/xapian/keymaker.h	/^    void add_value(Xapian::valueno slot, bool reverse = false) {$/;"	f	class:Xapian::MultiValueKeyMaker
add_value	include/xapian/valuesetmatchdecider.h	/^    void add_value(const std::string& value)$/;"	f	class:Xapian::ValueSetMatchDecider
add_valuerangeprocessor	queryparser/queryparser.cc	/^QueryParser::add_valuerangeprocessor(Xapian::ValueRangeProcessor * vrproc)$/;"	f	class:QueryParser
add_values	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::add_values(Xapian::docid did,$/;"	f	class:InMemoryDatabase
add_word	backends/brass/brass_spelling.cc	/^BrassSpellingTable::add_word(const string & word, Xapian::termcount freqinc)$/;"	f	class:BrassSpellingTable
add_word	backends/chert/chert_spelling.cc	/^ChertSpellingTable::add_word(const string & word, Xapian::termcount freqinc)$/;"	f	class:ChertSpellingTable
add_word	backends/flint/flint_spelling.cc	/^FlintSpellingTable::add_word(const string & word, Xapian::termcount freqinc)$/;"	f	class:FlintSpellingTable
adjust_window	queryparser/queryparser_internal.cc	/^    void adjust_window(size_t alternative_window) {$/;"	f	class:Terms
advance_to_next_match	matcher/andnotpostlist.cc	/^AndNotPostList::advance_to_next_match(Xapian::weight w_min, PostList *ret)$/;"	f	class:AndNotPostList
af	languages/finnish.cc	/^static const among_function af[2] =$/;"	v	file:
af	languages/lovins.cc	/^static const among_function af[29] =$/;"	v	file:
af_1	languages/lovins.cc	/^static const unsigned char af_1[294] =$/;"	v	file:
af_6	languages/finnish.cc	/^static const unsigned char af_6[30] =$/;"	v	file:
after_end	backends/brass/brass_cursor.h	/^	bool after_end() const { return is_after_end; }$/;"	f	class:BrassCursor
after_end	backends/chert/chert_cursor.h	/^	bool after_end() const { return is_after_end; }$/;"	f	class:ChertCursor
after_end	backends/flint/flint_cursor.h	/^	bool after_end() const { return is_after_end; }$/;"	f	class:FlintCursor
alias	queryparser/lemon.c	/^  char *alias[MAXRHS];       \/* Aliases for each RHS symbol (or NULL) *\/$/;"	m	struct:pstate	file:
allocate_plist_and_max_wt	matcher/multiandpostlist.cc	/^MultiAndPostList::allocate_plist_and_max_wt()$/;"	f	class:MultiAndPostList
allterms_begin	api/omdatabase.cc	/^Database::allterms_begin() const$/;"	f	class:Xapian::Database
allterms_begin	api/omdatabase.cc	/^Database::allterms_begin(const std::string & prefix) const$/;"	f	class:Xapian::Database
allterms_end	include/xapian/database.h	/^	TermIterator allterms_end() const {$/;"	f	class:Xapian::Database
allterms_end	include/xapian/database.h	/^	TermIterator allterms_end(const std::string &) const {$/;"	f	class:Xapian::Database
already_handled	include/xapian/error.h	/^    bool already_handled;$/;"	m	class:Xapian::Error
alter	backends/brass/brass_table.cc	/^BrassTable::alter()$/;"	f	class:BrassTable
alter	backends/chert/chert_table.cc	/^ChertTable::alter()$/;"	f	class:ChertTable
alter	backends/flint/flint_table.cc	/^FlintTable::alter()$/;"	f	class:FlintTable
alter_grouping	languages/compiler/analyser.c	/^static symbol * alter_grouping(symbol * p, symbol * q, int style, int utf8) {$/;"	f	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__EXEEXT_1	Makefile	/^am__EXEEXT_1 = bin\/xapian-check$(EXEEXT) \\$/;"	m
am__EXEEXT_2	Makefile	/^am__EXEEXT_2 = bin\/xapian-chert-update$(EXEEXT)$/;"	m
am__EXEEXT_3	Makefile	/^am__EXEEXT_3 = bin\/xapian-progsrv$(EXEEXT) \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	docs/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/libtool.m4 \\$/;"	m
am__aclocal_m4_deps	tests/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/libtool.m4 \\$/;"	m
am__apitest_SOURCES_DIST	tests/Makefile	/^am__apitest_SOURCES_DIST = apitest.cc dbcheck.cc api_anydb.cc \\$/;"	m
am__append_10	Makefile	/^am__append_10 = bin\/xapian-check-chert.cc bin\/xapian-check-chert.h$/;"	m
am__append_11	Makefile	/^am__append_11 = libchertcheck.la$/;"	m
am__append_12	Makefile	/^am__append_12 = bin\/xapian-check-flint.cc bin\/xapian-check-flint.h$/;"	m
am__append_13	Makefile	/^am__append_13 = libflintcheck.la$/;"	m
am__append_14	Makefile	/^am__append_14 = \\$/;"	m
am__append_15	Makefile	/^am__append_15 = \\$/;"	m
am__append_18	Makefile	/^am__append_18 = \\$/;"	m
am__append_19	Makefile	/^am__append_19 = \\$/;"	m
am__append_2	Makefile	/^am__append_2 = \\$/;"	m
am__append_2	tests/Makefile	/^am__append_2 = harness\/backendmanager_brass.cc$/;"	m
am__append_20	Makefile	/^am__append_20 = libbrasscheck.la$/;"	m
am__append_21	Makefile	/^am__append_21 = \\$/;"	m
am__append_22	Makefile	/^am__append_22 = \\$/;"	m
am__append_23	Makefile	/^am__append_23 = libchertcheck.la$/;"	m
am__append_24	Makefile	/^am__append_24 = \\$/;"	m
am__append_25	Makefile	/^am__append_25 = \\$/;"	m
am__append_26	Makefile	/^am__append_26 = libflintcheck.la$/;"	m
am__append_27	Makefile	/^am__append_27 = \\$/;"	m
am__append_28	Makefile	/^am__append_28 = \\$/;"	m
am__append_3	Makefile	/^am__append_3 = \\$/;"	m
am__append_3	tests/Makefile	/^am__append_3 = harness\/backendmanager_chert.cc$/;"	m
am__append_30	Makefile	/^am__append_30 = \\$/;"	m
am__append_31	Makefile	/^am__append_31 = \\$/;"	m
am__append_36	Makefile	/^am__append_36 = \\$/;"	m
am__append_37	Makefile	/^am__append_37 = \\$/;"	m
am__append_39	Makefile	/^am__append_39 = $(dist_man_MANS)$/;"	m
am__append_4	Makefile	/^am__append_4 = \\$/;"	m
am__append_4	tests/Makefile	/^am__append_4 = harness\/backendmanager_flint.cc$/;"	m
am__append_5	Makefile	/^am__append_5 = \\$/;"	m
am__append_5	tests/Makefile	/^am__append_5 = harness\/backendmanager_inmemory.cc$/;"	m
am__append_6	Makefile	/^am__append_6 = \\$/;"	m
am__append_6	tests/Makefile	/^am__append_6 = \\$/;"	m
am__append_7	Makefile	/^am__append_7 = \\$/;"	m
am__append_8	Makefile	/^am__append_8 = bin\/xapian-check-brass.cc bin\/xapian-check-brass.h$/;"	m
am__append_9	Makefile	/^am__append_9 = libbrasscheck.la$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__base_list	docs/Makefile	/^am__base_list = \\$/;"	m
am__bin_xapian_check_SOURCES_DIST	Makefile	/^am__bin_xapian_check_SOURCES_DIST = bin\/xapian-check.cc \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	docs/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	tests/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	docs/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	tests/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	docs/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	tests/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	tests/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	tests/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	docs/Makefile	/^am__include = include$/;"	m
am__include	tests/Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__install_max	docs/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \\$/;"	m
am__installdirs	docs/Makefile	/^am__installdirs = "$(DESTDIR)$(docdir)"$/;"	m
am__internaltest_SOURCES_DIST	tests/Makefile	/^am__internaltest_SOURCES_DIST = internaltest.cc \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	docs/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	tests/Makefile	/^am__leading_dot = .$/;"	m
am__libbrasscheck_la_SOURCES_DIST	Makefile	/^am__libbrasscheck_la_SOURCES_DIST = backends\/brass\/brass_check.cc$/;"	m
am__libchertcheck_la_SOURCES_DIST	Makefile	/^am__libchertcheck_la_SOURCES_DIST = backends\/chert\/chert_check.cc$/;"	m
am__libflintcheck_la_SOURCES_DIST	Makefile	/^am__libflintcheck_la_SOURCES_DIST = backends\/flint\/flint_check.cc$/;"	m
am__libxapian_la_SOURCES_DIST	Makefile	/^am__libxapian_la_SOURCES_DIST = api\/compactor.cc api\/decvalwtsource.cc \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = \\$/;"	m
am__make_dryrun	docs/Makefile	/^am__make_dryrun = \\$/;"	m
am__make_dryrun	tests/Makefile	/^am__make_dryrun = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__mv	tests/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	docs/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	docs/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	docs/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__noinst_HEADERS_DIST	Makefile	/^am__noinst_HEADERS_DIST = api\/documentvaluelist.h api\/editdistance.h \\$/;"	m
am__objects_1	Makefile	/^am__objects_1 =  \\$/;"	m
am__objects_1	tests/Makefile	/^am__objects_1 = api_anydb.$(OBJEXT) api_backend.$(OBJEXT) \\$/;"	m
am__objects_10	Makefile	/^am__objects_10 =  \\$/;"	m
am__objects_12	Makefile	/^am__objects_12 = languages\/danish.lo languages\/dutch.lo \\$/;"	m
am__objects_13	Makefile	/^am__objects_13 =$/;"	m
am__objects_14	Makefile	/^am__objects_14 = $(am__objects_12) $(am__objects_13)$/;"	m
am__objects_15	Makefile	/^am__objects_15 = matcher\/remotesubmatch.lo$/;"	m
am__objects_16	Makefile	/^am__objects_16 = net\/progclient.lo \\$/;"	m
am__objects_17	Makefile	/^am__objects_17 = api\/compactor.lo api\/decvalwtsource.lo \\$/;"	m
am__objects_18	Makefile	/^am__objects_18 = bin\/bin_xapian_check-xapian-check-brass.$(OBJEXT)$/;"	m
am__objects_19	Makefile	/^am__objects_19 = bin\/bin_xapian_check-xapian-check-chert.$(OBJEXT)$/;"	m
am__objects_2	Makefile	/^am__objects_2 = backends\/contiguousalldocspostlist.lo \\$/;"	m
am__objects_2	tests/Makefile	/^am__objects_2 = harness\/backendmanager_brass.$(OBJEXT)$/;"	m
am__objects_20	Makefile	/^am__objects_20 = bin\/bin_xapian_check-xapian-check-flint.$(OBJEXT)$/;"	m
am__objects_3	tests/Makefile	/^am__objects_3 = harness\/backendmanager_chert.$(OBJEXT)$/;"	m
am__objects_4	tests/Makefile	/^am__objects_4 = harness\/backendmanager_flint.$(OBJEXT)$/;"	m
am__objects_5	Makefile	/^am__objects_5 = backends\/brass\/brass_alldocspostlist.lo \\$/;"	m
am__objects_5	tests/Makefile	/^am__objects_5 = harness\/backendmanager_inmemory.$(OBJEXT)$/;"	m
am__objects_6	Makefile	/^am__objects_6 = backends\/chert\/chert_alldocsmodifiedpostlist.lo \\$/;"	m
am__objects_6	tests/Makefile	/^am__objects_6 = harness\/backendmanager_remote.$(OBJEXT) \\$/;"	m
am__objects_7	Makefile	/^am__objects_7 = backends\/flint\/flint_alldocspostlist.lo \\$/;"	m
am__objects_7	tests/Makefile	/^am__objects_7 = harness\/backendmanager.$(OBJEXT) \\$/;"	m
am__objects_8	Makefile	/^am__objects_8 = backends\/inmemory\/inmemory_alltermslist.lo \\$/;"	m
am__objects_8	tests/Makefile	/^am__objects_8 = perftest\/perftest_matchdecider.$(OBJEXT) \\$/;"	m
am__objects_9	tests/Makefile	/^am__objects_9 = soaktest\/soaktest_queries.$(OBJEXT)$/;"	m
am__perftest_perftest_SOURCES_DIST	tests/Makefile	/^am__perftest_perftest_SOURCES_DIST = perftest\/perftest.cc \\$/;"	m
am__queryparsertest_SOURCES_DIST	tests/Makefile	/^am__queryparsertest_SOURCES_DIST = queryparsertest.cc \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	docs/Makefile	/^am__quote = $/;"	m
am__quote	tests/Makefile	/^am__quote = $/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__soaktest_soaktest_SOURCES_DIST	tests/Makefile	/^am__soaktest_soaktest_SOURCES_DIST = soaktest\/soaktest.cc \\$/;"	m
am__stemtest_SOURCES_DIST	tests/Makefile	/^am__stemtest_SOURCES_DIST = stemtest.cc harness\/backendmanager.cc \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	docs/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	docs/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	tests/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__termgentest_SOURCES_DIST	tests/Makefile	/^am__termgentest_SOURCES_DIST = termgentest.cc \\$/;"	m
am__tty_colors	tests/Makefile	/^am__tty_colors = \\$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	docs/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__untar	Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	docs/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	tests/Makefile	/^am__untar = tar -xf -$/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	docs/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	docs/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_apitest_OBJECTS	tests/Makefile	/^am_apitest_OBJECTS = apitest.$(OBJEXT) dbcheck.$(OBJEXT) \\$/;"	m
am_bin_xapian_check_OBJECTS	Makefile	/^am_bin_xapian_check_OBJECTS =  \\$/;"	m
am_bin_xapian_chert_update_OBJECTS	Makefile	/^am_bin_xapian_chert_update_OBJECTS =  \\$/;"	m
am_bin_xapian_compact_OBJECTS	Makefile	/^am_bin_xapian_compact_OBJECTS = bin\/xapian-compact.$(OBJEXT)$/;"	m
am_bin_xapian_inspect_OBJECTS	Makefile	/^am_bin_xapian_inspect_OBJECTS =  \\$/;"	m
am_bin_xapian_progsrv_OBJECTS	Makefile	/^am_bin_xapian_progsrv_OBJECTS = bin\/xapian-progsrv.$(OBJEXT)$/;"	m
am_bin_xapian_replicate_OBJECTS	Makefile	/^am_bin_xapian_replicate_OBJECTS = bin\/xapian-replicate.$(OBJEXT)$/;"	m
am_bin_xapian_replicate_server_OBJECTS	Makefile	/^am_bin_xapian_replicate_server_OBJECTS =  \\$/;"	m
am_bin_xapian_tcpsrv_OBJECTS	Makefile	/^am_bin_xapian_tcpsrv_OBJECTS = bin\/xapian-tcpsrv.$(OBJEXT)$/;"	m
am_examples_copydatabase_OBJECTS	Makefile	/^am_examples_copydatabase_OBJECTS = examples\/copydatabase.$(OBJEXT)$/;"	m
am_examples_delve_OBJECTS	Makefile	/^am_examples_delve_OBJECTS = examples\/delve.$(OBJEXT)$/;"	m
am_examples_quest_OBJECTS	Makefile	/^am_examples_quest_OBJECTS = examples\/quest.$(OBJEXT)$/;"	m
am_examples_simpleexpand_OBJECTS	Makefile	/^am_examples_simpleexpand_OBJECTS = examples\/simpleexpand.$(OBJEXT)$/;"	m
am_examples_simpleindex_OBJECTS	Makefile	/^am_examples_simpleindex_OBJECTS = examples\/simpleindex.$(OBJEXT)$/;"	m
am_examples_simplesearch_OBJECTS	Makefile	/^am_examples_simplesearch_OBJECTS = examples\/simplesearch.$(OBJEXT)$/;"	m
am_examples_xapian_metadata_OBJECTS	Makefile	/^am_examples_xapian_metadata_OBJECTS =  \\$/;"	m
am_internaltest_OBJECTS	tests/Makefile	/^am_internaltest_OBJECTS = internaltest.$(OBJEXT) $(am__objects_7)$/;"	m
am_libbrasscheck_la_OBJECTS	Makefile	/^am_libbrasscheck_la_OBJECTS =  \\$/;"	m
am_libbrasscheck_la_rpath	Makefile	/^am_libbrasscheck_la_rpath =$/;"	m
am_libchertcheck_la_OBJECTS	Makefile	/^am_libchertcheck_la_OBJECTS =  \\$/;"	m
am_libchertcheck_la_rpath	Makefile	/^am_libchertcheck_la_rpath =$/;"	m
am_libflintcheck_la_OBJECTS	Makefile	/^am_libflintcheck_la_OBJECTS =  \\$/;"	m
am_libflintcheck_la_rpath	Makefile	/^am_libflintcheck_la_rpath =$/;"	m
am_libgetopt_la_OBJECTS	Makefile	/^am_libgetopt_la_OBJECTS = common\/getopt.lo$/;"	m
am_libxapian_la_OBJECTS	Makefile	/^am_libxapian_la_OBJECTS = $(am__objects_17)$/;"	m
am_perftest_perftest_OBJECTS	tests/Makefile	/^am_perftest_perftest_OBJECTS = perftest\/perftest.$(OBJEXT) \\$/;"	m
am_queryparsertest_OBJECTS	tests/Makefile	/^am_queryparsertest_OBJECTS = queryparsertest.$(OBJEXT) \\$/;"	m
am_soaktest_soaktest_OBJECTS	tests/Makefile	/^am_soaktest_soaktest_OBJECTS = soaktest\/soaktest.$(OBJEXT) \\$/;"	m
am_stemtest_OBJECTS	tests/Makefile	/^am_stemtest_OBJECTS = stemtest.$(OBJEXT) $(am__objects_7)$/;"	m
am_termgentest_OBJECTS	tests/Makefile	/^am_termgentest_OBJECTS = termgentest.$(OBJEXT) $(am__objects_7)$/;"	m
am_unittest_OBJECTS	tests/Makefile	/^am_unittest_OBJECTS = unittest.$(OBJEXT)$/;"	m
among	languages/compiler/header.h	/^    struct among * among;  \/* used in among *\/$/;"	m	struct:node	typeref:struct:node::among
among	languages/compiler/header.h	/^struct among {$/;"	s
among	languages/steminternal.h	/^struct among {$/;"	s
among_count	languages/compiler/header.h	/^    int among_count;$/;"	m	struct:analyser
among_func_count	languages/compiler/header.h	/^    int among_func_count;       \/* 1, 2, 3 for routines called by among *\/$/;"	m	struct:name
among_function	languages/steminternal.h	/^typedef int (*among_function)(Xapian::StemImplementation *);$/;"	t
amongs	languages/compiler/header.h	/^    struct among * amongs;$/;"	m	struct:analyser	typeref:struct:analyser::among
amongs_end	languages/compiler/header.h	/^    struct among * amongs_end;$/;"	m	struct:analyser	typeref:struct:analyser::among
amongvar_needed	languages/compiler/header.h	/^    int amongvar_needed;      \/* used in reading routine definitions *\/$/;"	m	struct:analyser
amongvar_needed	languages/compiler/header.h	/^    int amongvar_needed;   \/* used in routine definitions *\/$/;"	m	struct:node
amongvec	languages/compiler/header.h	/^struct amongvec {$/;"	s
analyser	languages/compiler/header.h	/^    struct analyser * analyser;$/;"	m	struct:generator	typeref:struct:generator::analyser
analyser	languages/compiler/header.h	/^struct analyser {$/;"	s
analyser_modes	languages/compiler/header.h	/^enum analyser_modes {$/;"	g
ap	queryparser/lemon.c	/^  struct action *ap;       \/* Array of actions for this state *\/$/;"	m	struct:state	typeref:struct:state::action	file:
apitest_DEPENDENCIES	tests/Makefile	/^apitest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
apitest_LDADD	tests/Makefile	/^apitest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
apitest_LDFLAGS	tests/Makefile	/^apitest_LDFLAGS = -no-fast-install $(ldflags)$/;"	m
apitest_LINK	tests/Makefile	/^apitest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
apitest_OBJECTS	tests/Makefile	/^apitest_OBJECTS = $(am_apitest_OBJECTS)$/;"	m
apitest_SOURCES	tests/Makefile	/^apitest_SOURCES = apitest.cc dbcheck.cc $(collated_apitest_sources) \\$/;"	m
append	backends/brass/brass_postlist.cc	/^PostlistChunkWriter::append(BrassTable * table, Xapian::docid did,$/;"	f	class:PostlistChunkWriter
append	backends/chert/chert_postlist.cc	/^PostlistChunkWriter::append(ChertTable * table, Xapian::docid did,$/;"	f	class:PostlistChunkWriter
append	backends/flint/flint_postlist.cc	/^FlintPostlistChunkWriter::append(FlintTable * table, Xapian::docid did,$/;"	f	class:FlintPostlistChunkWriter
append	backends/prefix_compressed_strings.h	/^    void append(const std::string & word) {$/;"	f	class:PrefixCompressedStringWriter
append_chunk	backends/brass/brass_table.h	/^    void append_chunk(std::string * tag) const {$/;"	f	class:Brass::Item_base
append_chunk	backends/chert/chert_table.h	/^    void append_chunk(std::string * tag) const {$/;"	f	class:Item_base
append_chunk	backends/flint/flint_table.h	/^    void append_chunk(std::string * tag) const {$/;"	f	class:Item_base_
append_docweight	tests/api_percentages.cc	/^    void append_docweight(Xapian::docid did, Xapian::weight wt) {$/;"	f	class:MyPostingSource
append_filename_argument	bin/xapian-chert-update.cc	/^append_filename_argument(string & cmd, const string & arg) {$/;"	f	file:
append_filename_argument	common/append_filename_arg.h	/^append_filename_argument(std::string & cmd, const std::string & arg) {$/;"	f
append_filter	queryparser/queryparser_internal.cc	/^    void append_filter(const filter_group_id & id, const Query & qnew) {$/;"	f	struct:ProbQuery
append_filter_range	queryparser/queryparser_internal.cc	/^    void append_filter_range(Xapian::valueno slot, const Query & range) {$/;"	f	struct:ProbQuery
append_posting	backends/remote/net_postlist.h	/^    void append_posting(const string & serialised) {$/;"	f	class:NetworkPostList
append_str	queryparser/lemon.c	/^PRIVATE char *append_str(char *zText, int n, int p1, int p2){$/;"	f
append_to_stream	backends/brass/brass_values.cc	/^    void append_to_stream(Xapian::docid did, const string & value) {$/;"	f	class:Brass::ValueUpdater	file:
append_to_stream	backends/chert/chert_values.cc	/^    void append_to_stream(Xapian::docid did, const string & value) {$/;"	f	class:ValueUpdater	file:
append_utf8	include/xapian/unicode.h	/^inline void append_utf8(std::string &s, unsigned ch) {$/;"	f	namespace:Xapian::Unicode
apply	backends/brass/brass_database.cc	/^BrassDatabase::apply()$/;"	f	class:BrassDatabase
apply	backends/brass/brass_database.cc	/^BrassWritableDatabase::apply()$/;"	f	class:BrassWritableDatabase
apply	backends/chert/chert_database.cc	/^ChertDatabase::apply()$/;"	f	class:ChertDatabase
apply	backends/chert/chert_database.cc	/^ChertWritableDatabase::apply()$/;"	f	class:ChertWritableDatabase
apply	backends/flint/flint_database.cc	/^FlintDatabase::apply()$/;"	f	class:FlintDatabase
apply_changeset	tests/api_replicate.cc	/^apply_changeset(const string & changesetpath,$/;"	f	file:
apply_changeset_from_conn	backends/brass/brass_databasereplicator.cc	/^BrassDatabaseReplicator::apply_changeset_from_conn(RemoteConnection & conn,$/;"	f	class:BrassDatabaseReplicator
apply_changeset_from_conn	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::apply_changeset_from_conn(RemoteConnection & conn,$/;"	f	class:ChertDatabaseReplicator
apply_changeset_from_conn	backends/flint/flint_databasereplicator.cc	/^FlintDatabaseReplicator::apply_changeset_from_conn(RemoteConnection & conn,$/;"	f	class:FlintDatabaseReplicator
apply_db_copy	api/replication.cc	/^DatabaseReplica::Internal::apply_db_copy(double end_time)$/;"	f	class:DatabaseReplica::Internal
apply_next_changeset	api/replication.cc	/^DatabaseReplica::Internal::apply_next_changeset(ReplicationInfo * info,$/;"	f	class:DatabaseReplica::Internal
apply_next_changeset	api/replication.cc	/^DatabaseReplica::apply_next_changeset(ReplicationInfo * info,$/;"	f	class:DatabaseReplica
apply_stats_update	backends/remote/remote-database.cc	/^RemoteDatabase::apply_stats_update(const char * p, const char * p_end) const$/;"	f	class:RemoteDatabase
arg	queryparser/lemon.c	/^  char *arg;               \/* Declaration of the 3th argument to parser *\/$/;"	m	struct:lemon	file:
arg	queryparser/lemon.c	/^  void *arg;$/;"	m	struct:s_options	file:
argindex	queryparser/lemon.c	/^static int argindex(n)$/;"	f	file:
argtype	api/omqueryinternal.cc	/^    typedef const pair<string, Xapian::termpos> argtype;$/;"	t	struct:LessByTermpos	file:
argv	queryparser/lemon.c	/^static char **argv;$/;"	v	file:
argv0	queryparser/lemon.c	/^  char *argv0;             \/* Name of the program *\/$/;"	m	struct:lemon	file:
argv0	tests/harness/testsuite.cc	/^string test_driver::argv0;$/;"	m	class:test_driver	file:
argv0	tests/harness/testsuite.h	/^	static std::string argv0;$/;"	m	class:test_driver
as_adj_query	queryparser/queryparser_internal.cc	/^    Query * as_adj_query() const {$/;"	f	class:Terms
as_cjk_query	queryparser/queryparser_internal.cc	/^Term::as_cjk_query() const$/;"	f	class:Term
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
as_group	queryparser/queryparser_internal.cc	/^TermGroup::as_group(State *state) const$/;"	f	class:TermGroup
as_near_query	queryparser/queryparser_internal.cc	/^    Query * as_near_query() const {$/;"	f	class:Terms
as_opwindow_query	queryparser/queryparser_internal.cc	/^    Query * as_opwindow_query(Query::op op, Xapian::termcount w_delta) const {$/;"	f	class:Terms	file:
as_partial_query	queryparser/queryparser_internal.cc	/^Term::as_partial_query(State * state_) const$/;"	f	class:Term
as_phrase_query	queryparser/queryparser_internal.cc	/^    Query * as_phrase_query() const {$/;"	f	class:Terms
as_positional_cjk_term	queryparser/queryparser_internal.cc	/^Term::as_positional_cjk_term(Terms * terms) const$/;"	f	class:Term
as_remotedatabase	backends/database.cc	/^Database::Internal::as_remotedatabase()$/;"	f	class:Xapian::Database::Internal
as_remotedatabase	backends/remote/remote-database.cc	/^RemoteDatabase::as_remotedatabase()$/;"	f	class:RemoteDatabase
as_remotedatabase	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::as_remotedatabase()$/;"	f	class:ConstDatabaseWrapper
as_value_range_query	queryparser/queryparser_internal.cc	/^Term::as_value_range_query() const$/;"	f	class:Term
as_wildcarded_query	queryparser/queryparser_internal.cc	/^Term::as_wildcarded_query(State * state_) const$/;"	f	class:Term
assign	backends/brass/brass_values.cc	/^ValueChunkReader::assign(const char * p_, size_t len, Xapian::docid did_)$/;"	f	class:ValueChunkReader
assign	backends/chert/chert_values.cc	/^ValueChunkReader::assign(const char * p_, size_t len, Xapian::docid did_)$/;"	f	class:ValueChunkReader
assign	include/xapian/unicode.h	/^    void assign(const char *p_, size_t len) {$/;"	f	class:Xapian::Utf8Iterator
assign	include/xapian/unicode.h	/^    void assign(const std::string &s) { assign(s.data(), s.size()); }$/;"	f	class:Xapian::Utf8Iterator
assign_to	languages/steminternal.cc	/^symbol * SnowballStemImplementation::assign_to(symbol * v) {$/;"	f	class:Xapian::SnowballStemImplementation
assoc	queryparser/lemon.c	/^  } assoc;                 \/* Associativity if precedence is defined *\/$/;"	m	struct:symbol	typeref:enum:symbol::e_assoc	file:
at_end	api/documentvaluelist.cc	/^DocumentValueList::at_end() const$/;"	f	class:DocumentValueList
at_end	api/emptypostlist.cc	/^EmptyPostList::at_end() const$/;"	f	class:EmptyPostList
at_end	api/maptermlist.h	/^	bool at_end() const {$/;"	f	class:MapTermList
at_end	api/matchspy.cc	/^    bool at_end() const {$/;"	f	class:StringAndFreqTermList
at_end	api/matchspy.cc	/^    bool at_end() const {$/;"	f	class:ValueCountTermList
at_end	api/postingsource.cc	/^FixedWeightPostingSource::at_end() const$/;"	f	class:Xapian::FixedWeightPostingSource
at_end	api/postingsource.cc	/^ValuePostingSource::at_end() const$/;"	f	class:Xapian::ValuePostingSource
at_end	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::at_end() const$/;"	f	class:BrassAllTermsList
at_end	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::at_end() const$/;"	f	class:BrassMetadataTermList
at_end	backends/brass/brass_positionlist.cc	/^BrassPositionList::at_end() const$/;"	f	class:BrassPositionList
at_end	backends/brass/brass_postlist.cc	/^    bool at_end;$/;"	m	class:Brass::PostlistChunkReader	file:
at_end	backends/brass/brass_postlist.h	/^	bool at_end() const { return is_at_end; }$/;"	f	class:BrassPostList
at_end	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::at_end() const$/;"	f	class:BrassSpellingTermList
at_end	backends/brass/brass_spellingwordslist.cc	/^BrassSpellingWordsList::at_end() const$/;"	f	class:BrassSpellingWordsList
at_end	backends/brass/brass_synonym.cc	/^BrassSynonymTermList::at_end() const$/;"	f	class:BrassSynonymTermList
at_end	backends/brass/brass_termlist.cc	/^BrassTermList::at_end() const$/;"	f	class:BrassTermList
at_end	backends/brass/brass_valuelist.cc	/^BrassValueList::at_end() const$/;"	f	class:BrassValueList
at_end	backends/brass/brass_values.h	/^    bool at_end() const { return p == NULL; }$/;"	f	class:Brass::ValueChunkReader
at_end	backends/byte_length_strings.h	/^    bool at_end() const {$/;"	f	class:ByteLengthPrefixedStringItor
at_end	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::at_end() const$/;"	f	class:ChertAllDocsModifiedPostList
at_end	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::at_end() const$/;"	f	class:ChertAllTermsList
at_end	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::at_end() const$/;"	f	class:ChertMetadataTermList
at_end	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::at_end() const {$/;"	f	class:ChertModifiedPostList
at_end	backends/chert/chert_positionlist.cc	/^ChertPositionList::at_end() const$/;"	f	class:ChertPositionList
at_end	backends/chert/chert_postlist.cc	/^    bool at_end;$/;"	m	class:Chert::PostlistChunkReader	file:
at_end	backends/chert/chert_postlist.h	/^	bool at_end() const { return is_at_end; }$/;"	f	class:ChertPostList
at_end	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::at_end() const$/;"	f	class:ChertSpellingTermList
at_end	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::at_end() const$/;"	f	class:ChertSpellingWordsList
at_end	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::at_end() const$/;"	f	class:ChertSynonymTermList
at_end	backends/chert/chert_termlist.cc	/^ChertTermList::at_end() const$/;"	f	class:ChertTermList
at_end	backends/chert/chert_valuelist.cc	/^ChertValueList::at_end() const$/;"	f	class:ChertValueList
at_end	backends/chert/chert_values.h	/^    bool at_end() const { return p == NULL; }$/;"	f	class:ValueChunkReader
at_end	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::at_end() const$/;"	f	class:ContiguousAllDocsPostList
at_end	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::at_end() const {$/;"	f	class:FlintAllDocsPostList
at_end	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::at_end() const$/;"	f	class:FlintAllTermsList
at_end	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::at_end() const$/;"	f	class:FlintMetadataTermList
at_end	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::at_end() const {$/;"	f	class:FlintModifiedPostList
at_end	backends/flint/flint_positionlist.cc	/^FlintPositionList::at_end() const$/;"	f	class:FlintPositionList
at_end	backends/flint/flint_postlist.cc	/^	bool at_end;$/;"	m	class:FlintPostlistChunkReader	file:
at_end	backends/flint/flint_postlist.h	/^	bool at_end() const { return is_at_end; }$/;"	f	class:FlintPostList
at_end	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::at_end() const$/;"	f	class:FlintSpellingTermList
at_end	backends/flint/flint_spellingwordslist.cc	/^FlintSpellingWordsList::at_end() const$/;"	f	class:FlintSpellingWordsList
at_end	backends/flint/flint_synonym.cc	/^FlintSynonymTermList::at_end() const$/;"	f	class:FlintSynonymTermList
at_end	backends/flint/flint_termlist.cc	/^FlintTermList::at_end() const$/;"	f	class:FlintTermList
at_end	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::at_end() const$/;"	f	class:InMemoryAllTermsList
at_end	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::at_end() const$/;"	f	class:InMemoryAllDocsPostList
at_end	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::at_end() const$/;"	f	class:InMemoryPostList
at_end	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::at_end() const$/;"	f	class:InMemoryTermList
at_end	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::at_end() const$/;"	f	class:InMemoryPositionList
at_end	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::at_end() const$/;"	f	class:MultiAllTermsList
at_end	backends/multi/multi_postlist.cc	/^MultiPostList::at_end() const$/;"	f	class:MultiPostList
at_end	backends/multi/multi_termlist.cc	/^bool MultiTermList::at_end() const$/;"	f	class:MultiTermList
at_end	backends/multi/multi_valuelist.cc	/^    bool at_end() const { return valuelist->at_end(); }$/;"	f	struct:SubValueList
at_end	backends/multi/multi_valuelist.cc	/^MultiValueList::at_end() const$/;"	f	class:MultiValueList
at_end	backends/prefix_compressed_strings.h	/^    bool at_end() const {$/;"	f	class:PrefixCompressedStringItor
at_end	backends/remote/net_postlist.cc	/^NetworkPostList::at_end() const$/;"	f	class:NetworkPostList
at_end	backends/remote/net_termlist.cc	/^NetworkTermList::at_end() const$/;"	f	class:NetworkTermList
at_end	backends/slowvaluelist.cc	/^SlowValueList::at_end() const$/;"	f	class:SlowValueList
at_end	common/vectortermlist.h	/^	bool at_end() const {$/;"	f	class:VectorTermList
at_end	expand/ortermlist.cc	/^OrTermList::at_end() const$/;"	f	class:OrTermList
at_end	matcher/andmaybepostlist.cc	/^AndMaybePostList::at_end() const$/;"	f	class:AndMaybePostList
at_end	matcher/andnotpostlist.cc	/^AndNotPostList::at_end() const$/;"	f	class:AndNotPostList
at_end	matcher/externalpostlist.cc	/^ExternalPostList::at_end() const$/;"	f	class:ExternalPostList
at_end	matcher/extraweightpostlist.h	/^	bool at_end() const { return pl->at_end(); }$/;"	f	class:ExtraWeightPostList
at_end	matcher/mergepostlist.cc	/^MergePostList::at_end() const$/;"	f	class:MergePostList
at_end	matcher/msetpostlist.cc	/^MSetPostList::at_end() const$/;"	f	class:MSetPostList
at_end	matcher/multiandpostlist.cc	/^MultiAndPostList::at_end() const$/;"	f	class:MultiAndPostList
at_end	matcher/multixorpostlist.cc	/^MultiXorPostList::at_end() const$/;"	f	class:MultiXorPostList
at_end	matcher/orpostlist.cc	/^OrPostList::at_end() const$/;"	f	class:OrPostList
at_end	matcher/selectpostlist.h	/^	bool at_end() const { return source->at_end(); }$/;"	f	class:SelectPostList
at_end	matcher/synonympostlist.cc	/^SynonymPostList::at_end() const {$/;"	f	class:SynonymPostList
at_end	matcher/valuerangepostlist.cc	/^ValueRangePostList::at_end() const$/;"	f	class:ValueRangePostList
at_end	tests/api_percentages.cc	/^    bool at_end() const {$/;"	f	class:MyPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const { return did >= 5; }$/;"	f	class:ChangeMaxweightPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const {$/;"	f	class:MyDontAskWeightPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const {$/;"	f	class:MyOddPostingSource
at_end	tests/api_postingsource.cc	/^    bool at_end() const {$/;"	f	class:MyOddWeightingPostingSource
at_end	tests/api_serialise.cc	/^    bool at_end() const { return true; }$/;"	f	class:ExceptionalPostingSource
aux	languages/compiler/header.h	/^    struct node * aux;     \/* used in setlimit *\/$/;"	m	struct:node	typeref:struct:node::node
average_length_	include/xapian/weight.h	/^    Xapian::doclength average_length_;$/;"	m	class:Xapian::Weight
avlen	common/expandweight.h	/^    Xapian::doclength avlen;$/;"	m	class:Xapian::Internal::ExpandStats
avlen	common/expandweight.h	/^    Xapian::doclength avlen;$/;"	m	class:Xapian::Internal::ExpandWeight
axset	queryparser/lemon.c	/^struct axset {$/;"	s	file:
axset_compare	queryparser/lemon.c	/^static int axset_compare(const void *a, const void *b){$/;"	f	file:
azDefine	queryparser/lemon.c	/^static char **azDefine = 0;  \/* Name of the -D macros *\/$/;"	v	file:
b	languages/compiler/header.h	/^    struct amongvec * b;      \/* pointer to the amongvec *\/$/;"	m	struct:among	typeref:struct:among::amongvec
b	languages/compiler/header.h	/^    symbol * b;               \/* the characters of this group *\/$/;"	m	struct:grouping
b	languages/compiler/header.h	/^    symbol * b;      \/* the string giving the case *\/$/;"	m	struct:amongvec
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:include
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:literalstring
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:name
b	languages/compiler/header.h	/^    symbol * b;$/;"	m	struct:tokeniser
b	tests/api_unicode.cc	/^    const char * a, * b;$/;"	m	struct:testcase	file:
b2	languages/compiler/header.h	/^    symbol * b2;$/;"	m	struct:tokeniser
b_to_s	languages/compiler/space.c	/^extern char * b_to_s(symbol * p) {$/;"	f
back	api/omenquire.cc	/^ESet::back() const$/;"	f	class:Xapian::ESet
back	api/omenquire.cc	/^MSet::back() const$/;"	f	class:Xapian::MSet
backend	api/compactor.cc	/^    enum { UNKNOWN, BRASS, CHERT, FLINT } backend;$/;"	m	class:Xapian::Compactor::Internal	typeref:enum:Xapian::Compactor::Internal::__anon2	file:
backend	tests/harness/testrunner.h	/^    bool backend;$/;"	m	class:TestRunner
backend_mismatch	api/compactor.cc	/^backend_mismatch(const string &dbpath1, int backend1,$/;"	f	file:
backend_names	api/compactor.cc	/^static const char * backend_names[] = {$/;"	v	file:
backend_properties	tests/harness/testrunner.cc	/^static BackendProperties backend_properties[] = {$/;"	v	file:
bad_cont	unicode/utf8itor.cc	/^inline bool bad_cont(unsigned char ch) { return (ch & 0xc0) != 0x80; }$/;"	f
base	backends/brass/brass_table.h	/^	BrassTable_base base;$/;"	m	class:BrassTable
base	backends/chert/chert_table.h	/^	ChertTable_base base;$/;"	m	class:ChertTable
base	backends/flint/flint_table.h	/^	FlintTable_base base;$/;"	m	class:FlintTable
base256ify_double	common/serialise-double.cc	/^static int base256ify_double(double &v) {$/;"	f	file:
base_letter	backends/brass/brass_table.h	/^	char base_letter;$/;"	m	class:BrassTable
base_letter	backends/chert/chert_table.h	/^	char base_letter;$/;"	m	class:ChertTable
base_letter	backends/flint/flint_table.h	/^	char base_letter;$/;"	m	class:FlintTable
basic_doc	tests/api_replacedoc.cc	/^basic_doc() {$/;"	f	file:
basic_docterms	tests/api_replacedoc.cc	/^basic_docterms() {$/;"	f	file:
basic_open	backends/brass/brass_table.cc	/^BrassTable::basic_open(bool revision_supplied, brass_revision_number_t revision_)$/;"	f	class:BrassTable
basic_open	backends/chert/chert_table.cc	/^ChertTable::basic_open(bool revision_supplied, chert_revision_number_t revision_)$/;"	f	class:ChertTable
basic_open	backends/flint/flint_table.cc	/^FlintTable::basic_open(bool revision_supplied, flint_revision_number_t revision_)$/;"	f	class:FlintTable
basis	queryparser/lemon.c	/^static struct config *basis = 0;         \/* Top of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisend	queryparser/lemon.c	/^static struct config **basisend = 0;     \/* End of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisflag	queryparser/lemon.c	/^  int basisflag;           \/* Print only basis configurations *\/$/;"	m	struct:lemon	file:
before_start	common/vectortermlist.h	/^	bool before_start;$/;"	m	class:VectorTermList
begin	api/omenquire.cc	/^ESet::begin() const$/;"	f	class:Xapian::ESet
begin	api/omenquire.cc	/^MSet::begin() const$/;"	f	class:Xapian::MSet
begin	matcher/queryoptimiser.cc	/^    size_t begin, end;$/;"	m	struct:PosFilter	file:
begin	matcher/valuerangepostlist.h	/^    const std::string begin, end;$/;"	m	class:ValueRangePostList
begin_transaction	api/omdatabase.cc	/^WritableDatabase::begin_transaction(bool flushed)$/;"	f	class:Xapian::WritableDatabase
begin_transaction	backends/database.cc	/^Database::Internal::begin_transaction(bool flushed)$/;"	f	class:Xapian::Database::Internal
begin_transaction	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::begin_transaction(bool)$/;"	f	class:ConstDatabaseWrapper
bigoaddvalue1_helper	tests/api_scalability.cc	/^bigoaddvalue1_helper(unsigned num_values)$/;"	f	file:
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\$/;"	m
bin_SCRIPTS	Makefile	/^bin_SCRIPTS = xapian-config$/;"	m
bin_xapian_check_CPPFLAGS	Makefile	/^bin_xapian_check_CPPFLAGS = \\$/;"	m
bin_xapian_check_CPPFLAGS	bin/Makefile.mk	/^bin_xapian_check_CPPFLAGS =\\$/;"	m
bin_xapian_check_DEPENDENCIES	Makefile	/^bin_xapian_check_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__append_9) \\$/;"	m
bin_xapian_check_LDADD	Makefile	/^bin_xapian_check_LDADD = $(ldflags) $(am__append_9) $(am__append_11) \\$/;"	m
bin_xapian_check_LDADD	bin/Makefile.mk	/^bin_xapian_check_LDADD = $(ldflags)$/;"	m
bin_xapian_check_OBJECTS	Makefile	/^bin_xapian_check_OBJECTS = $(am_bin_xapian_check_OBJECTS)$/;"	m
bin_xapian_check_SOURCES	Makefile	/^bin_xapian_check_SOURCES = bin\/xapian-check.cc $(am__append_8) \\$/;"	m
bin_xapian_check_SOURCES	bin/Makefile.mk	/^bin_xapian_check_SOURCES = bin\/xapian-check.cc$/;"	m
bin_xapian_chert_update_CPPFLAGS	Makefile	/^bin_xapian_chert_update_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)\/backends\/flint -I$(top_srcdir)\/backends\/chert$/;"	m
bin_xapian_chert_update_CPPFLAGS	bin/Makefile.mk	/^bin_xapian_chert_update_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)\/backends\/flint -I$(top_srcdir)\/backends\/chert$/;"	m
bin_xapian_chert_update_DEPENDENCIES	Makefile	/^bin_xapian_chert_update_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
bin_xapian_chert_update_LDADD	Makefile	/^bin_xapian_chert_update_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_chert_update_LDADD	bin/Makefile.mk	/^bin_xapian_chert_update_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_chert_update_OBJECTS	Makefile	/^bin_xapian_chert_update_OBJECTS =  \\$/;"	m
bin_xapian_chert_update_SOURCES	Makefile	/^bin_xapian_chert_update_SOURCES = bin\/xapian-chert-update.cc$/;"	m
bin_xapian_chert_update_SOURCES	bin/Makefile.mk	/^bin_xapian_chert_update_SOURCES = bin\/xapian-chert-update.cc$/;"	m
bin_xapian_compact_DEPENDENCIES	Makefile	/^bin_xapian_compact_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_compact_LDADD	Makefile	/^bin_xapian_compact_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_compact_LDADD	bin/Makefile.mk	/^bin_xapian_compact_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_compact_OBJECTS	Makefile	/^bin_xapian_compact_OBJECTS = $(am_bin_xapian_compact_OBJECTS)$/;"	m
bin_xapian_compact_SOURCES	Makefile	/^bin_xapian_compact_SOURCES = bin\/xapian-compact.cc$/;"	m
bin_xapian_compact_SOURCES	bin/Makefile.mk	/^bin_xapian_compact_SOURCES = bin\/xapian-compact.cc$/;"	m
bin_xapian_inspect_CPPFLAGS	Makefile	/^bin_xapian_inspect_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)\/backends\/flint$/;"	m
bin_xapian_inspect_CPPFLAGS	bin/Makefile.mk	/^bin_xapian_inspect_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)\/backends\/flint$/;"	m
bin_xapian_inspect_DEPENDENCIES	Makefile	/^bin_xapian_inspect_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_inspect_LDADD	Makefile	/^bin_xapian_inspect_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_inspect_LDADD	bin/Makefile.mk	/^bin_xapian_inspect_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_inspect_OBJECTS	Makefile	/^bin_xapian_inspect_OBJECTS = $(am_bin_xapian_inspect_OBJECTS)$/;"	m
bin_xapian_inspect_SOURCES	Makefile	/^bin_xapian_inspect_SOURCES = bin\/xapian-inspect.cc$/;"	m
bin_xapian_inspect_SOURCES	bin/Makefile.mk	/^bin_xapian_inspect_SOURCES = bin\/xapian-inspect.cc$/;"	m
bin_xapian_progsrv_DEPENDENCIES	Makefile	/^bin_xapian_progsrv_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_progsrv_LDADD	Makefile	/^bin_xapian_progsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_progsrv_LDADD	bin/Makefile.mk	/^bin_xapian_progsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_progsrv_OBJECTS	Makefile	/^bin_xapian_progsrv_OBJECTS = $(am_bin_xapian_progsrv_OBJECTS)$/;"	m
bin_xapian_progsrv_SOURCES	Makefile	/^bin_xapian_progsrv_SOURCES = bin\/xapian-progsrv.cc$/;"	m
bin_xapian_progsrv_SOURCES	bin/Makefile.mk	/^bin_xapian_progsrv_SOURCES = bin\/xapian-progsrv.cc$/;"	m
bin_xapian_replicate_DEPENDENCIES	Makefile	/^bin_xapian_replicate_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_replicate_LDADD	Makefile	/^bin_xapian_replicate_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_LDADD	bin/Makefile.mk	/^bin_xapian_replicate_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_OBJECTS	Makefile	/^bin_xapian_replicate_OBJECTS = $(am_bin_xapian_replicate_OBJECTS)$/;"	m
bin_xapian_replicate_SOURCES	Makefile	/^bin_xapian_replicate_SOURCES = bin\/xapian-replicate.cc$/;"	m
bin_xapian_replicate_SOURCES	bin/Makefile.mk	/^bin_xapian_replicate_SOURCES = bin\/xapian-replicate.cc$/;"	m
bin_xapian_replicate_server_DEPENDENCIES	Makefile	/^bin_xapian_replicate_server_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
bin_xapian_replicate_server_LDADD	Makefile	/^bin_xapian_replicate_server_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_server_LDADD	bin/Makefile.mk	/^bin_xapian_replicate_server_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_replicate_server_OBJECTS	Makefile	/^bin_xapian_replicate_server_OBJECTS =  \\$/;"	m
bin_xapian_replicate_server_SOURCES	Makefile	/^bin_xapian_replicate_server_SOURCES = bin\/xapian-replicate-server.cc$/;"	m
bin_xapian_replicate_server_SOURCES	bin/Makefile.mk	/^bin_xapian_replicate_server_SOURCES = bin\/xapian-replicate-server.cc$/;"	m
bin_xapian_tcpsrv_DEPENDENCIES	Makefile	/^bin_xapian_tcpsrv_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
bin_xapian_tcpsrv_LDADD	Makefile	/^bin_xapian_tcpsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_tcpsrv_LDADD	bin/Makefile.mk	/^bin_xapian_tcpsrv_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
bin_xapian_tcpsrv_OBJECTS	Makefile	/^bin_xapian_tcpsrv_OBJECTS = $(am_bin_xapian_tcpsrv_OBJECTS)$/;"	m
bin_xapian_tcpsrv_SOURCES	Makefile	/^bin_xapian_tcpsrv_SOURCES = bin\/xapian-tcpsrv.cc$/;"	m
bin_xapian_tcpsrv_SOURCES	bin/Makefile.mk	/^bin_xapian_tcpsrv_SOURCES = bin\/xapian-tcpsrv.cc$/;"	m
binding	languages/compiler/analyser.c	/^static int binding(int t) {$/;"	f	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	docs/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	tests/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bit_map	backends/brass/brass_btreebase.h	/^	byte *bit_map;$/;"	m	class:BrassTable_base
bit_map	backends/chert/chert_btreebase.h	/^	byte *bit_map;$/;"	m	class:ChertTable_base
bit_map	backends/flint/flint_btreebase.h	/^	byte *bit_map;$/;"	m	class:FlintTable_base
bit_map0	backends/brass/brass_btreebase.h	/^	byte *bit_map0;$/;"	m	class:BrassTable_base
bit_map0	backends/chert/chert_btreebase.h	/^	byte *bit_map0;$/;"	m	class:ChertTable_base
bit_map0	backends/flint/flint_btreebase.h	/^	byte *bit_map0;$/;"	m	class:FlintTable_base
bit_map_low	backends/brass/brass_btreebase.h	/^	uint4 bit_map_low;$/;"	m	class:BrassTable_base
bit_map_low	backends/chert/chert_btreebase.h	/^	uint4 bit_map_low;$/;"	m	class:ChertTable_base
bit_map_low	backends/flint/flint_btreebase.h	/^	uint4 bit_map_low;$/;"	m	class:FlintTable_base
bit_map_size	backends/brass/brass_btreebase.h	/^	uint4 bit_map_size;$/;"	m	class:BrassTable_base
bit_map_size	backends/chert/chert_btreebase.h	/^	uint4 bit_map_size;$/;"	m	class:ChertTable_base
bit_map_size	backends/flint/flint_btreebase.h	/^	uint4 bit_map_size;$/;"	m	class:FlintTable_base
block_check	backends/brass/brass_check.cc	/^BrassTableCheck::block_check(Brass::Cursor * C_, int j, int opts)$/;"	f	class:BrassTableCheck
block_check	backends/chert/chert_check.cc	/^ChertTableCheck::block_check(Cursor * C_, int j, int opts)$/;"	f	class:ChertTableCheck
block_check	backends/flint/flint_check.cc	/^BtreeCheck::block_check(Cursor_ * C_, int j, int opts)$/;"	f	class:BtreeCheck
block_free_at_start	backends/brass/brass_btreebase.cc	/^BrassTable_base::block_free_at_start(uint4 n) const$/;"	f	class:BrassTable_base
block_free_at_start	backends/chert/chert_btreebase.cc	/^ChertTable_base::block_free_at_start(uint4 n) const$/;"	f	class:ChertTable_base
block_free_at_start	backends/flint/flint_btreebase.cc	/^FlintTable_base::block_free_at_start(uint4 n) const$/;"	f	class:FlintTable_base
block_free_now	backends/brass/brass_btreebase.cc	/^BrassTable_base::block_free_now(uint4 n)$/;"	f	class:BrassTable_base
block_free_now	backends/chert/chert_btreebase.cc	/^ChertTable_base::block_free_now(uint4 n)$/;"	f	class:ChertTable_base
block_free_now	backends/flint/flint_btreebase.cc	/^FlintTable_base::block_free_now(uint4 n)$/;"	f	class:FlintTable_base
block_given_by	backends/brass/brass_table.h	/^    uint4 block_given_by() const {$/;"	f	class:Brass::Item_base
block_given_by	backends/chert/chert_table.h	/^    uint4 block_given_by() const {$/;"	f	class:Item_base
block_given_by	backends/flint/flint_table.h	/^    uint4 block_given_by() const {$/;"	f	class:Item_base_
block_size	api/compactor.cc	/^    size_t block_size;$/;"	m	class:Xapian::Compactor::Internal	file:
block_size	backends/brass/brass_btreebase.h	/^	uint4 block_size;$/;"	m	class:BrassTable_base
block_size	backends/brass/brass_table.h	/^	unsigned int block_size;$/;"	m	class:BrassTable
block_size	backends/chert/chert_btreebase.h	/^	uint4 block_size;$/;"	m	class:ChertTable_base
block_size	backends/chert/chert_table.h	/^	unsigned int block_size;$/;"	m	class:ChertTable
block_size	backends/flint/flint_btreebase.h	/^	uint4 block_size;$/;"	m	class:FlintTable_base
block_size	backends/flint/flint_table.h	/^	unsigned int block_size;$/;"	m	class:FlintTable
block_to_cursor	backends/brass/brass_table.cc	/^BrassTable::block_to_cursor(Brass::Cursor * C_, int j, uint4 n) const$/;"	f	class:BrassTable
block_to_cursor	backends/chert/chert_table.cc	/^ChertTable::block_to_cursor(Cursor * C_, int j, uint4 n) const$/;"	f	class:ChertTable
block_to_cursor	backends/flint/flint_table.cc	/^FlintTable::block_to_cursor(Cursor_ * C_, int j, uint4 n) const$/;"	f	class:FlintTable
block_usage	backends/brass/brass_check.cc	/^int BrassTableCheck::block_usage(const byte * p) const$/;"	f	class:BrassTableCheck
block_usage	backends/chert/chert_check.cc	/^int ChertTableCheck::block_usage(const byte * p) const$/;"	f	class:ChertTableCheck
block_usage	backends/flint/flint_check.cc	/^int BtreeCheck::block_usage(const byte * p) const$/;"	f	class:BtreeCheck
both_bases	backends/brass/brass_table.h	/^	mutable bool both_bases;$/;"	m	class:BrassTable
both_bases	backends/chert/chert_table.h	/^	mutable bool both_bases;$/;"	m	class:ChertTable
both_bases	backends/flint/flint_table.h	/^	mutable bool both_bases;$/;"	m	class:FlintTable
bp	queryparser/lemon.c	/^  struct config *bp;       \/* The basis configurations for this state *\/$/;"	m	struct:state	typeref:struct:state::config	file:
bp	queryparser/lemon.c	/^  struct config *bp;       \/* The next basis configuration *\/$/;"	m	struct:config	typeref:struct:config::config	file:
bplp	queryparser/lemon.c	/^  struct plink *bplp;      \/* Follow-set backwards propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
bra	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
brass	tests/harness/testrunner.h	/^    bool brass;$/;"	m	class:TestRunner
brass_blocksize_t	backends/brass/brass_types.h	/^typedef unsigned int brass_blocksize_t;$/;"	t
brass_doclen_t	backends/brass/brass_types.h	/^typedef unsigned int brass_doclen_t;$/;"	t
brass_revision_number_t	backends/brass/brass_types.h	/^typedef unsigned int brass_revision_number_t;$/;"	t
brass_tablesize_t	backends/brass/brass_types.h	/^typedef unsigned long long brass_tablesize_t;$/;"	t
buf	common/bitstream.h	/^    std::string buf;$/;"	m	class:Xapian::BitReader
buf	common/bitstream.h	/^    std::string buf;$/;"	m	class:Xapian::BitWriter
buffer	backends/brass/brass_table.h	/^	byte * buffer;$/;"	m	class:BrassTable
buffer	backends/chert/chert_table.h	/^	byte * buffer;$/;"	m	class:ChertTable
buffer	backends/flint/flint_table.h	/^	byte * buffer;$/;"	m	class:FlintTable
buffer	common/remoteconnection.h	/^    std::string buffer;$/;"	m	class:RemoteConnection
build	Makefile	/^build = x86_64-apple-darwin14.3.0$/;"	m
build	docs/Makefile	/^build = x86_64-apple-darwin14.3.0$/;"	m
build	tests/Makefile	/^build = x86_64-apple-darwin14.3.0$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	docs/Makefile	/^build_alias = $/;"	m
build_alias	tests/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	docs/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	tests/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = darwin14.3.0$/;"	m
build_os	docs/Makefile	/^build_os = darwin14.3.0$/;"	m
build_os	tests/Makefile	/^build_os = darwin14.3.0$/;"	m
build_termlist_tree	expand/esetinternal.cc	/^build_termlist_tree(const Xapian::Database &db, const RSet & rset)$/;"	f	namespace:Xapian
build_triplet	Makefile	/^build_triplet = x86_64-apple-darwin14.3.0$/;"	m
build_triplet	docs/Makefile	/^build_triplet = x86_64-apple-darwin14.3.0$/;"	m
build_triplet	tests/Makefile	/^build_triplet = x86_64-apple-darwin14.3.0$/;"	m
build_vendor	Makefile	/^build_vendor = apple$/;"	m
build_vendor	docs/Makefile	/^build_vendor = apple$/;"	m
build_vendor	tests/Makefile	/^build_vendor = apple$/;"	m
builddb_queries1	tests/soaktest/soaktest_queries.cc	/^builddb_queries1(Xapian::WritableDatabase &db, const string &arg)$/;"	f	file:
builddb_valuestest1	tests/perftest/perftest_matchdecider.cc	/^builddb_valuestest1(Xapian::WritableDatabase &db, const string & dbname)$/;"	f	file:
builddir	Makefile	/^builddir = .$/;"	m
builddir	docs/Makefile	/^builddir = .$/;"	m
builddir	tests/Makefile	/^builddir = .$/;"	m
buildshifts	queryparser/lemon.c	/^PRIVATE void buildshifts(lemp,stp)$/;"	f
byte	common/internaltypes.h	/^typedef unsigned char byte;$/;"	t
byte	common/safeuuid.h	/^#  define byte /;"	d
byte	common/safeuuid.h	/^#  undef byte$/;"	d
byte	languages/compiler/header.h	/^typedef unsigned char byte;$/;"	t
c	backends/brass/brass_cursor.h	/^	int c;$/;"	m	class:Brass::Cursor
c	backends/chert/chert_cursor.h	/^	int c;$/;"	m	class:Cursor
c	backends/flint/flint_cursor.h	/^	int c;$/;"	m	class:Cursor_
c	languages/compiler/header.h	/^    int c;$/;"	m	struct:input
c	languages/compiler/header.h	/^    int c;$/;"	m	struct:tokeniser
c	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
c_booltest	languages/compiler/header.h	/^    c_booltest$/;"	e	enum:token_codes
c_call	languages/compiler/header.h	/^    c_call,$/;"	e	enum:token_codes
c_grouping	languages/compiler/header.h	/^    c_grouping,$/;"	e	enum:token_codes
c_literalstring	languages/compiler/header.h	/^    c_literalstring,$/;"	e	enum:token_codes
c_mathassign	languages/compiler/header.h	/^    c_mathassign,$/;"	e	enum:token_codes
c_name	languages/compiler/header.h	/^    c_name,$/;"	e	enum:token_codes
c_neg	languages/compiler/header.h	/^    c_neg,$/;"	e	enum:token_codes
c_number	languages/compiler/header.h	/^    c_number,$/;"	e	enum:token_codes
cached_stats_valid	common/remote-database.h	/^    mutable bool cached_stats_valid;$/;"	m	class:RemoteDatabase
calc_index	api/editdistance.cc	/^    int calc_index(int k, int p) const {$/;"	f	class:edist_state	file:
calc_read_wait_msecs	net/remoteconnection.cc	/^RemoteConnection::calc_read_wait_msecs(double end_time)$/;"	f	class:RemoteConnection
calculate_last_block	backends/brass/brass_btreebase.cc	/^BrassTable_base::calculate_last_block()$/;"	f	class:BrassTable_base
calculate_last_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::calculate_last_block()$/;"	f	class:ChertTable_base
calculate_last_block	backends/flint/flint_btreebase.cc	/^FlintTable_base::calculate_last_block()$/;"	f	class:FlintTable_base
calculate_sequence_length	unicode/utf8itor.cc	/^Utf8Iterator::calculate_sequence_length() const$/;"	f	class:Xapian::Utf8Iterator
called	tests/api_backend.cc	/^    mutable bool called;$/;"	m	struct:MyMatchDecider	file:
canReduce	queryparser/lemon.c	/^  Boolean canReduce;       \/* True if this rule is ever reduced *\/$/;"	m	struct:rule	file:
cancel	backends/brass/brass_database.cc	/^BrassDatabase::cancel()$/;"	f	class:BrassDatabase
cancel	backends/brass/brass_database.cc	/^BrassWritableDatabase::cancel()$/;"	f	class:BrassWritableDatabase
cancel	backends/brass/brass_spelling.h	/^    void cancel() {$/;"	f	class:BrassSpellingTable
cancel	backends/brass/brass_synonym.h	/^    void cancel() {$/;"	f	class:BrassSynonymTable
cancel	backends/brass/brass_table.cc	/^BrassTable::cancel()$/;"	f	class:BrassTable
cancel	backends/brass/brass_values.h	/^    void cancel() {$/;"	f	class:BrassValueManager
cancel	backends/chert/chert_database.cc	/^ChertDatabase::cancel()$/;"	f	class:ChertDatabase
cancel	backends/chert/chert_database.cc	/^ChertWritableDatabase::cancel()$/;"	f	class:ChertWritableDatabase
cancel	backends/chert/chert_spelling.h	/^    void cancel() {$/;"	f	class:ChertSpellingTable
cancel	backends/chert/chert_synonym.h	/^    void cancel() {$/;"	f	class:ChertSynonymTable
cancel	backends/chert/chert_table.cc	/^ChertTable::cancel()$/;"	f	class:ChertTable
cancel	backends/chert/chert_values.h	/^    void cancel() {$/;"	f	class:ChertValueManager
cancel	backends/database.cc	/^Database::Internal::cancel()$/;"	f	class:Xapian::Database::Internal
cancel	backends/flint/flint_database.cc	/^FlintDatabase::cancel()$/;"	f	class:FlintDatabase
cancel	backends/flint/flint_database.cc	/^FlintWritableDatabase::cancel()$/;"	f	class:FlintWritableDatabase
cancel	backends/flint/flint_spelling.h	/^    void cancel() {$/;"	f	class:FlintSpellingTable
cancel	backends/flint/flint_synonym.h	/^    void cancel() {$/;"	f	class:FlintSynonymTable
cancel	backends/flint/flint_table.cc	/^FlintTable::cancel()$/;"	f	class:FlintTable
cancel	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::cancel()$/;"	f	class:InMemoryDatabase
cancel	backends/remote/remote-database.cc	/^RemoteDatabase::cancel()$/;"	f	class:RemoteDatabase
cancel	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::cancel()$/;"	f	class:ConstDatabaseWrapper
cancel_transaction	api/omdatabase.cc	/^WritableDatabase::cancel_transaction()$/;"	f	class:Xapian::WritableDatabase
cancel_transaction	backends/database.cc	/^Database::Internal::cancel_transaction()$/;"	f	class:Xapian::Database::Internal
cancel_transaction	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::cancel_transaction()$/;"	f	class:ConstDatabaseWrapper
categories_mask	common/debuglog.h	/^    unsigned int categories_mask;$/;"	m	class:DebugLogger
category	common/debuglog.h	/^    debuglog_categories category;$/;"	m	class:DebugLogFunc
category	common/debuglog.h	/^    debuglog_categories category;$/;"	m	class:DebugLogFuncVoid
category	include/xapian/unicode.h	/^} category;$/;"	t	namespace:Xapian::Unicode	typeref:enum:Xapian::Unicode::__anon18
cf	backends/brass/brass_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:BrassCompact::PostlistCursor	file:
cf	backends/chert/chert_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:ChertCompact::PostlistCursor	file:
cf	backends/flint/flint_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:FlintCompact::PostlistCursor	file:
cf_delta	backends/brass/brass_inverter.h	/^	Xapian::termcount_diff cf_delta;$/;"	m	class:Inverter::PostingChanges
cfp	queryparser/lemon.c	/^  struct config *cfp;      \/* All configurations in this set *\/$/;"	m	struct:state	typeref:struct:state::config	file:
cfp	queryparser/lemon.c	/^  struct config *cfp;      \/* The configuration to which linked *\/$/;"	m	struct:plink	typeref:struct:plink::config	file:
change_count	backends/brass/brass_database.h	/^	mutable Xapian::doccount change_count;$/;"	m	class:BrassWritableDatabase
change_count	backends/chert/chert_database.h	/^	mutable Xapian::doccount change_count;$/;"	m	class:ChertWritableDatabase
change_count	backends/flint/flint_database.h	/^	mutable Xapian::doccount change_count;$/;"	m	class:FlintWritableDatabase
changed	common/replication.h	/^    bool changed;$/;"	m	struct:Xapian::ReplicationInfo
changed_c	backends/brass/brass_table.h	/^	int changed_c;$/;"	m	class:BrassTable
changed_c	backends/chert/chert_table.h	/^	int changed_c;$/;"	m	class:ChertTable
changed_c	backends/flint/flint_table.h	/^	int changed_c;$/;"	m	class:FlintTable
changed_n	backends/brass/brass_table.h	/^	uint4 changed_n;$/;"	m	class:BrassTable
changed_n	backends/chert/chert_table.h	/^	uint4 changed_n;$/;"	m	class:ChertTable
changed_n	backends/flint/flint_table.h	/^	uint4 changed_n;$/;"	m	class:FlintTable
changes	backends/brass/brass_values.h	/^    std::map<Xapian::valueno, std::map<Xapian::docid, std::string> > changes;$/;"	m	class:BrassValueManager
changes	backends/chert/chert_values.h	/^    std::map<Xapian::valueno, std::map<Xapian::docid, std::string> > changes;$/;"	m	class:ChertValueManager
changeset_count	common/replication.h	/^    int changeset_count;$/;"	m	struct:Xapian::ReplicationInfo
check	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::check(Xapian::docid min_docid,$/;"	f	class:DecreasingValueWeightPostingSource
check	api/postingsource.cc	/^FixedWeightPostingSource::check(Xapian::docid min_docid,$/;"	f	class:Xapian::FixedWeightPostingSource
check	api/postingsource.cc	/^PostingSource::check(Xapian::docid did, Xapian::weight min_wt)$/;"	f	class:Xapian::PostingSource
check	api/postingsource.cc	/^ValuePostingSource::check(Xapian::docid min_docid,$/;"	f	class:Xapian::ValuePostingSource
check	api/postlist.cc	/^PostList::check(Xapian::docid did, Xapian::weight w_min, bool &valid)$/;"	f	class:Xapian::PostList
check	api/valueiterator.cc	/^ValueIterator::check(Xapian::docid did)$/;"	f	class:Xapian::ValueIterator
check	backends/brass/brass_check.cc	/^BrassTableCheck::check(const char * tablename, const string & path,$/;"	f	class:BrassTableCheck
check	backends/brass/brass_valuelist.cc	/^BrassValueList::check(Xapian::docid did)$/;"	f	class:BrassValueList
check	backends/chert/chert_check.cc	/^ChertTableCheck::check(const char * tablename, const string & path,$/;"	f	class:ChertTableCheck
check	backends/chert/chert_valuelist.cc	/^ChertValueList::check(Xapian::docid did)$/;"	f	class:ChertValueList
check	backends/flint/flint_check.cc	/^BtreeCheck::check(const char * tablename, const string & path,$/;"	f	class:BtreeCheck
check	backends/multi/multi_valuelist.cc	/^MultiValueList::check(Xapian::docid did)$/;"	f	class:MultiValueList
check	backends/slowvaluelist.cc	/^SlowValueList::check(Xapian::docid did)$/;"	f	class:SlowValueList
check	backends/valuelist.cc	/^ValueIterator::Internal::check(Xapian::docid did)$/;"	f	class:Xapian::ValueIterator::Internal
check	matcher/externalpostlist.cc	/^ExternalPostList::check(Xapian::docid did, Xapian::weight w_min, bool &valid)$/;"	f	class:ExternalPostList
check	matcher/orpostlist.cc	/^OrPostList::check(Xapian::docid did, Xapian::weight w_min, bool &valid)$/;"	f	class:OrPostList
check	matcher/selectpostlist.cc	/^SelectPostList::check(Xapian::docid did, Xapian::weight w_min, bool &valid)$/;"	f	class:SelectPostList
check	matcher/valuegepostlist.cc	/^ValueGePostList::check(Xapian::docid did, Xapian::weight, bool &valid)$/;"	f	class:ValueGePostList
check	matcher/valuerangepostlist.cc	/^ValueRangePostList::check(Xapian::docid did, Xapian::weight, bool &valid)$/;"	f	class:ValueRangePostList
check	tests/harness/fdtracker.cc	/^FDTracker::check()$/;"	f	class:FDTracker
check_PROGRAMS	tests/Makefile	/^check_PROGRAMS = apitest$(EXEEXT) internaltest$(EXEEXT) \\$/;"	m
check_SCRIPTS	tests/Makefile	/^check_SCRIPTS = runtest perftest\/get_machine_info $(am__append_7)$/;"	m
check_all_gone	common/bitstream.h	/^    bool check_all_gone() const {$/;"	f	class:Xapian::BitReader
check_brass_table	bin/xapian-check-brass.cc	/^check_brass_table(const char * tablename, string filename,$/;"	f
check_chert_table	bin/xapian-check-chert.cc	/^check_chert_table(const char * tablename, string filename,$/;"	f
check_docid	include/xapian/postingsource.h	/^    Xapian::docid check_docid;$/;"	m	class:Xapian::FixedWeightPostingSource
check_double_serialisation	tests/internaltest.cc	/^static void check_double_serialisation(double u)$/;"	f	file:
check_equal_dbs	tests/api_replicate.cc	/^check_equal_dbs(const string & masterpath, const string & replicapath)$/;"	f	file:
check_flint_table	bin/xapian-check-flint.cc	/^check_flint_table(const char * tablename, string filename,$/;"	f
check_free	languages/compiler/space.c	/^extern void check_free(void * p) {$/;"	f
check_handling_prune	matcher/branchpostlist.h	/^check_handling_prune(PostList * & pl, Xapian::docid did, Xapian::weight w_min,$/;"	f
check_helper	matcher/multiandpostlist.h	/^    void check_helper(size_t n, Xapian::docid did_min, Xapian::weight w_min,$/;"	f	class:MultiAndPostList
check_infix	queryparser/queryparser_internal.cc	/^inline unsigned check_infix(unsigned ch) {$/;"	f
check_infix	queryparser/termgenerator_internal.cc	/^inline unsigned check_infix(unsigned ch) {$/;"	f	namespace:Xapian
check_infix_digit	queryparser/queryparser_internal.cc	/^inline unsigned check_infix_digit(unsigned ch) {$/;"	f
check_infix_digit	queryparser/termgenerator_internal.cc	/^inline unsigned check_infix_digit(unsigned ch) {$/;"	f	namespace:Xapian
check_lim	languages/compiler/driver.c	/^static void check_lim(int i, int argc) {$/;"	f	file:
check_malloc	languages/compiler/space.c	/^extern void * check_malloc(int n) {$/;"	f
check_message_type	api/replication.cc	/^DatabaseReplica::Internal::check_message_type(char type, char expected) const$/;"	f	class:DatabaseReplica::Internal
check_modifyable	languages/compiler/analyser.c	/^static void check_modifyable(struct analyser * a) {$/;"	f	file:
check_msets_contain_same_docs	tests/api_opsynonym.cc	/^check_msets_contain_same_docs(const Xapian::MSet & mset1,$/;"	f	file:
check_name_type	languages/compiler/analyser.c	/^static void check_name_type(struct analyser * a, struct name * p, int type) {$/;"	f	file:
check_revision_at_least	backends/brass/brass_databasereplicator.cc	/^BrassDatabaseReplicator::check_revision_at_least(const string & rev,$/;"	f	class:BrassDatabaseReplicator
check_revision_at_least	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::check_revision_at_least(const string & rev,$/;"	f	class:ChertDatabaseReplicator
check_revision_at_least	backends/flint/flint_databasereplicator.cc	/^FlintDatabaseReplicator::check_revision_at_least(const string & rev,$/;"	f	class:FlintDatabaseReplicator
check_routine_mode	languages/compiler/analyser.c	/^static void check_routine_mode(struct analyser * a, struct name * p, int mode) {$/;"	f	file:
check_sparse_uid_terms	tests/api_compact.cc	/^check_sparse_uid_terms(const string & path)$/;"	f	file:
check_started	expand/ortermlist.cc	/^OrTermList::check_started() const$/;"	f	class:OrTermList
check_suffix	queryparser/termgenerator_internal.cc	/^inline unsigned check_suffix(unsigned ch) {$/;"	f	namespace:Xapian
check_tname_in_key	backends/brass/brass_postlist.cc	/^check_tname_in_key(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key	backends/chert/chert_postlist.cc	/^check_tname_in_key(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key	backends/flint/flint_postlist.cc	/^check_tname_in_key(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key_lite	backends/brass/brass_postlist.cc	/^check_tname_in_key_lite(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key_lite	backends/chert/chert_postlist.cc	/^check_tname_in_key_lite(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_tname_in_key_lite	backends/flint/flint_postlist.cc	/^check_tname_in_key_lite(const char **keypos, const char *keyend, const string &tname)$/;"	f	file:
check_token	languages/compiler/analyser.c	/^static int check_token(struct analyser * a, int code) {$/;"	f	file:
check_vals	tests/api_wrdb.cc	/^check_vals(const Xapian::Database & db, const map<Xapian::docid, string> & vals)$/;"	f	file:
check_wdf	backends/brass/brass_dbstats.h	/^    void check_wdf(Xapian::termcount wdf) {$/;"	f	class:BrassDatabaseStats
check_wdf	backends/chert/chert_dbstats.h	/^    void check_wdf(Xapian::termcount wdf) {$/;"	f	class:ChertDatabaseStats
check_weight	matcher/selectpostlist.h	/^	inline bool check_weight(double w_min) {$/;"	f	class:SelectPostList
check_wordchar	queryparser/termgenerator_internal.cc	/^inline unsigned check_wordchar(unsigned ch) {$/;"	f	namespace:Xapian
chert	tests/harness/testrunner.h	/^    bool chert;$/;"	m	class:TestRunner
chert_blocksize_t	backends/chert/chert_types.h	/^typedef unsigned int chert_blocksize_t;$/;"	t
chert_doclen_t	backends/chert/chert_types.h	/^typedef unsigned int chert_doclen_t;$/;"	t
chert_revision_number_t	backends/chert/chert_types.h	/^typedef unsigned int chert_revision_number_t;$/;"	t
chert_tablesize_t	backends/chert/chert_types.h	/^typedef unsigned long long chert_tablesize_t;$/;"	t
chunk	backends/brass/brass_postlist.cc	/^	string chunk;$/;"	m	class:Brass::PostlistChunkWriter	file:
chunk	backends/chert/chert_postlist.cc	/^	string chunk;$/;"	m	class:Chert::PostlistChunkWriter	file:
chunk	backends/flint/flint_postlist.cc	/^	string chunk;$/;"	m	class:FlintPostlistChunkWriter	file:
chunked_data_left	common/remoteconnection.h	/^    off_t chunked_data_left;$/;"	m	class:RemoteConnection
clean_up	tests/harness/backendmanager.cc	/^BackendManager::clean_up()$/;"	f	class:BackendManager
clean_up	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::clean_up()$/;"	f	class:BackendManagerRemoteTcp
clear	backends/brass/brass_inverter.h	/^    void clear() {$/;"	f	class:Inverter
clear	common/replication.h	/^    void clear() {$/;"	f	struct:Xapian::ReplicationInfo
clear	common/valuestats.h	/^    void clear() {$/;"	f	struct:ValueStats
clear_bit_map	backends/brass/brass_btreebase.cc	/^BrassTable_base::clear_bit_map()$/;"	f	class:BrassTable_base
clear_bit_map	backends/chert/chert_btreebase.cc	/^ChertTable_base::clear_bit_map()$/;"	f	class:ChertTable_base
clear_bit_map	backends/flint/flint_btreebase.cc	/^FlintTable_base::clear_bit_map()$/;"	f	class:FlintTable_base
clear_mappings	api/postingsource.cc	/^ValueMapPostingSource::clear_mappings()$/;"	f	class:Xapian::ValueMapPostingSource
clear_match_spies	api/registry.cc	/^Registry::Internal::clear_match_spies()$/;"	f	class:Xapian::Registry::Internal
clear_matchspies	api/omenquire.cc	/^Enquire::clear_matchspies() {$/;"	f	class:Xapian::Enquire
clear_posting_sources	api/registry.cc	/^Registry::Internal::clear_posting_sources()$/;"	f	class:Xapian::Registry::Internal
clear_synonyms	api/omdatabase.cc	/^WritableDatabase::clear_synonyms(const std::string & term) const$/;"	f	class:Xapian::WritableDatabase
clear_synonyms	backends/brass/brass_database.cc	/^BrassWritableDatabase::clear_synonyms(const string & term) const$/;"	f	class:BrassWritableDatabase
clear_synonyms	backends/brass/brass_synonym.cc	/^BrassSynonymTable::clear_synonyms(const string & term)$/;"	f	class:BrassSynonymTable
clear_synonyms	backends/chert/chert_database.cc	/^ChertWritableDatabase::clear_synonyms(const string & term) const$/;"	f	class:ChertWritableDatabase
clear_synonyms	backends/chert/chert_synonym.cc	/^ChertSynonymTable::clear_synonyms(const string & term)$/;"	f	class:ChertSynonymTable
clear_synonyms	backends/database.cc	/^Database::Internal::clear_synonyms(const string &) const$/;"	f	class:Xapian::Database::Internal
clear_synonyms	backends/flint/flint_database.cc	/^FlintWritableDatabase::clear_synonyms(const string & term) const$/;"	f	class:FlintWritableDatabase
clear_synonyms	backends/flint/flint_synonym.cc	/^FlintSynonymTable::clear_synonyms(const string & term)$/;"	f	class:FlintSynonymTable
clear_synonyms	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::clear_synonyms(const string &) const$/;"	f	class:ConstDatabaseWrapper
clear_terms	api/omdocument.cc	/^Document::clear_terms()$/;"	f	class:Xapian::Document
clear_terms	api/omdocument.cc	/^Xapian::Document::Internal::clear_terms()$/;"	f	class:Xapian::Document::Internal
clear_valuelists	matcher/valuestreamdocument.cc	/^clear_valuelists(map<Xapian::valueno, ValueList *> & valuelists)$/;"	f	file:
clear_values	api/omdocument.cc	/^Document::clear_values()$/;"	f	class:Xapian::Document
clear_values	api/omdocument.cc	/^Xapian::Document::Internal::clear_values()$/;"	f	class:Xapian::Document::Internal
clear_weighting_schemes	api/registry.cc	/^Registry::Internal::clear_weighting_schemes()$/;"	f	class:Xapian::Registry::Internal
clone	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::clone() const {$/;"	f	class:DecreasingValueWeightPostingSource
clone	api/matchspy.cc	/^MatchSpy::clone() const {$/;"	f	class:MatchSpy
clone	api/matchspy.cc	/^ValueCountMatchSpy::clone() const {$/;"	f	class:ValueCountMatchSpy
clone	api/postingsource.cc	/^FixedWeightPostingSource::clone() const$/;"	f	class:Xapian::FixedWeightPostingSource
clone	api/postingsource.cc	/^PostingSource::clone() const$/;"	f	class:Xapian::PostingSource
clone	api/postingsource.cc	/^ValueMapPostingSource::clone() const$/;"	f	class:Xapian::ValueMapPostingSource
clone	api/postingsource.cc	/^ValueWeightPostingSource::clone() const$/;"	f	class:Xapian::ValueWeightPostingSource
clone	tests/api_db.cc	/^    MyWeight * clone() const {$/;"	f	class:MyWeight
clone	tests/api_percentages.cc	/^    PostingSource * clone() const$/;"	f	class:MyPostingSource
clone	tests/api_postingsource.cc	/^    PostingSource * clone() const { return new MyDontAskWeightPostingSource(num_docs, last_docid); }$/;"	f	class:MyDontAskWeightPostingSource
clone	tests/api_postingsource.cc	/^    PostingSource * clone() const { return new MyOddPostingSource(num_docs, last_docid); }$/;"	f	class:MyOddPostingSource
clone	tests/api_postingsource.cc	/^    PostingSource * clone() const {$/;"	f	class:MyOddWeightingPostingSource
clone	tests/api_serialise.cc	/^    MatchSpy * clone() const {$/;"	f	class:ExceptionalMatchSpy
clone	tests/api_serialise.cc	/^    MyPostingSource2 * clone() const$/;"	f	class:MyPostingSource2
clone	tests/api_serialise.cc	/^    PostingSource * clone() const {$/;"	f	class:ExceptionalPostingSource
clone	tests/api_serialise.cc	/^    Weight * clone() const {$/;"	f	class:ExceptionalWeight
clone	tests/api_weight.cc	/^    Weight * clone() const {$/;"	f	class:CheckInitWeight
clone	tests/api_weight.cc	/^    Weight * clone() const {$/;"	f	class:CheckStatsWeight
clone	weight/bm25weight.cc	/^BM25Weight::clone() const$/;"	f	class:Xapian::BM25Weight
clone	weight/boolweight.cc	/^BoolWeight::clone() const$/;"	f	class:Xapian::BoolWeight
clone	weight/tradweight.cc	/^TradWeight::clone() const$/;"	f	class:Xapian::TradWeight
close	api/omdatabase.cc	/^Database::close()$/;"	f	class:Xapian::Database
close	api/replication.cc	/^DatabaseReplica::close()$/;"	f	class:DatabaseReplica
close	backends/brass/brass_database.cc	/^BrassDatabase::close()$/;"	f	class:BrassDatabase
close	backends/brass/brass_database.cc	/^BrassWritableDatabase::close()$/;"	f	class:BrassWritableDatabase
close	backends/brass/brass_table.cc	/^void BrassTable::close(bool permanent) {$/;"	f	class:BrassTable
close	backends/chert/chert_database.cc	/^ChertDatabase::close()$/;"	f	class:ChertDatabase
close	backends/chert/chert_database.cc	/^ChertWritableDatabase::close()$/;"	f	class:ChertWritableDatabase
close	backends/chert/chert_table.cc	/^void ChertTable::close(bool permanent) {$/;"	f	class:ChertTable
close	backends/flint/flint_database.cc	/^FlintDatabase::close()$/;"	f	class:FlintDatabase
close	backends/flint/flint_database.cc	/^FlintWritableDatabase::close()$/;"	f	class:FlintWritableDatabase
close	backends/flint/flint_table.cc	/^void FlintTable::close(bool permanent) {$/;"	f	class:FlintTable
close	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::close()$/;"	f	class:InMemoryDatabase
close	backends/remote/remote-database.cc	/^RemoteDatabase::close()$/;"	f	class:RemoteDatabase
close	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::close()$/;"	f	class:ConstDatabaseWrapper
close	tests/perftest/perftest.cc	/^PerfTestLogger::close()$/;"	f	class:PerfTestLogger
close_analyser	languages/compiler/analyser.c	/^extern void close_analyser(struct analyser * a) {$/;"	f
close_fd_or_socket	common/socket_utils.cc	/^extern void close_fd_or_socket(int fd) {$/;"	f
close_fd_or_socket	common/socket_utils.h	/^inline void close_fd_or_socket(int fd) { close(fd); }$/;"	f
close_generator_c	languages/compiler/generator.c	/^extern void close_generator_c(struct generator * g) {$/;"	f
close_tokeniser	languages/compiler/tokeniser.c	/^extern void close_tokeniser(struct tokeniser * t) {$/;"	f
closed	backends/inmemory/inmemory_database.h	/^    bool closed;$/;"	m	class:InMemoryDatabase
closedb1_iterators	tests/api_closedb.cc	/^struct closedb1_iterators {$/;"	s	file:
closedir	common/msvc_dirent.cc	/^int closedir(DIR *dir)$/;"	f
closefrom	common/closefrom.cc	/^Xapian::Internal::closefrom(int fd)$/;"	f	class:Xapian::Internal
cmake_DATA	Makefile	/^cmake_DATA = cmake\/xapian-config.cmake cmake\/xapian-config-version.cmake$/;"	m
cmakedir	Makefile	/^cmakedir = $(libdir)\/cmake\/xapian$/;"	m
code	languages/compiler/tokeniser.c	/^    int code;     \/* it's internal code *\/$/;"	m	struct:system_word	file:
code	queryparser/lemon.c	/^  char *code;              \/* The code executed when this rule is reduced *\/$/;"	m	struct:rule	file:
codepoint_is_cjk	queryparser/cjk-tokenizer.cc	/^CJK::codepoint_is_cjk(unsigned p)$/;"	f	class:CJK
col_green	tests/harness/testsuite.cc	/^string test_driver::col_red, test_driver::col_green;$/;"	m	class:test_driver	file:
col_green	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
col_red	tests/harness/testsuite.cc	/^string test_driver::col_red, test_driver::col_green;$/;"	m	class:test_driver	file:
col_red	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
col_reset	tests/harness/testsuite.cc	/^string test_driver::col_yellow, test_driver::col_reset;$/;"	m	class:test_driver	file:
col_reset	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
col_yellow	tests/harness/testsuite.cc	/^string test_driver::col_yellow, test_driver::col_reset;$/;"	m	class:test_driver	file:
col_yellow	tests/harness/testsuite.h	/^	static std::string col_red, col_green, col_yellow, col_reset;$/;"	m	class:test_driver
collapse_count	common/omenquireinternal.h	/^	Xapian::doccount collapse_count;$/;"	m	class:Xapian::Internal::MSetItem
collapse_count	matcher/collapser.h	/^    Xapian::doccount collapse_count;$/;"	m	class:CollapseData
collapse_key	common/multimatch.h	/^	Xapian::valueno collapse_key;$/;"	m	class:MultiMatch
collapse_key	common/omenquireinternal.h	/^	Xapian::valueno collapse_key;$/;"	m	class:Xapian::Enquire::Internal
collapse_key	common/omenquireinternal.h	/^	string collapse_key;$/;"	m	class:Xapian::Internal::MSetItem
collapse_max	common/multimatch.h	/^	Xapian::doccount collapse_max;$/;"	m	class:MultiMatch
collapse_max	common/omenquireinternal.h	/^	Xapian::doccount collapse_max;$/;"	m	class:Xapian::Enquire::Internal
collapse_max	matcher/collapser.h	/^    Xapian::doccount collapse_max;$/;"	m	class:Collapser
collapse_result	matcher/collapser.h	/^} collapse_result;$/;"	t	typeref:enum:__anon21
collapse_subqs	api/omqueryinternal.cc	/^Xapian::Query::Internal::collapse_subqs()$/;"	f	class:Xapian::Query::Internal
collated_apitest_sources	tests/Makefile	/^collated_apitest_sources = \\$/;"	m
collated_perftest_sources	tests/Makefile	/^collated_perftest_sources = \\$/;"	m
collated_perftest_sources	tests/perftest/Makefile.mk	/^collated_perftest_sources = \\$/;"	m
collated_soaktest_sources	tests/Makefile	/^collated_soaktest_sources = \\$/;"	m
collated_soaktest_sources	tests/soaktest/Makefile.mk	/^collated_soaktest_sources = \\$/;"	m
collect_document	backends/database.cc	/^Database::Internal::collect_document(Xapian::docid did) const$/;"	f	class:Xapian::Database::Internal
collect_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::collect_document(Xapian::docid did) const$/;"	f	class:ConstDatabaseWrapper
collection_freq	backends/inmemory/inmemory_database.h	/^	Xapian::termcount collection_freq;$/;"	m	class:InMemoryTerm
collection_size	common/weightinternal.h	/^    Xapian::doccount collection_size;$/;"	m	class:Xapian::Weight::Internal
collection_size_	include/xapian/weight.h	/^    Xapian::doccount collection_size_;$/;"	m	class:Xapian::Weight
collfreq	backends/brass/brass_alltermslist.h	/^    mutable Xapian::termcount collfreq;$/;"	m	class:BrassAllTermsList
collfreq	backends/chert/chert_alltermslist.h	/^    mutable Xapian::termcount collfreq;$/;"	m	class:ChertAllTermsList
collfreq	backends/flint/flint_alltermslist.h	/^    mutable Xapian::termcount collfreq;$/;"	m	class:FlintAllTermsList
collide	queryparser/lemon.c	/^  struct action *collide;  \/* Next action with the same hash *\/$/;"	m	struct:action	typeref:struct:action::action	file:
combine_AND	tests/soaktest/soaktest_queries.cc	/^static void combine_AND(QueryBuilderEnv & env)$/;"	f	file:
combine_NOT	tests/soaktest/soaktest_queries.cc	/^static void combine_NOT(QueryBuilderEnv & env)$/;"	f	file:
combine_OR	tests/soaktest/soaktest_queries.cc	/^static void combine_OR(QueryBuilderEnv & env)$/;"	f	file:
combine_XOR	tests/soaktest/soaktest_queries.cc	/^static void combine_XOR(QueryBuilderEnv & env)$/;"	f	file:
command_count	languages/compiler/header.h	/^    int command_count;        \/* in this among *\/$/;"	m	struct:among
commit	api/omdatabase.cc	/^WritableDatabase::commit()$/;"	f	class:Xapian::WritableDatabase
commit	backends/brass/brass_btreebase.cc	/^BrassTable_base::commit()$/;"	f	class:BrassTable_base
commit	backends/brass/brass_database.cc	/^BrassWritableDatabase::commit()$/;"	f	class:BrassWritableDatabase
commit	backends/brass/brass_table.cc	/^BrassTable::commit(brass_revision_number_t revision, int changes_fd,$/;"	f	class:BrassTable
commit	backends/chert/chert_btreebase.cc	/^ChertTable_base::commit()$/;"	f	class:ChertTable_base
commit	backends/chert/chert_database.cc	/^ChertWritableDatabase::commit()$/;"	f	class:ChertWritableDatabase
commit	backends/chert/chert_table.cc	/^ChertTable::commit(chert_revision_number_t revision, int changes_fd,$/;"	f	class:ChertTable
commit	backends/database.cc	/^Database::Internal::commit()$/;"	f	class:Xapian::Database::Internal
commit	backends/flint/flint_btreebase.cc	/^FlintTable_base::commit()$/;"	f	class:FlintTable_base
commit	backends/flint/flint_database.cc	/^FlintWritableDatabase::commit()$/;"	f	class:FlintWritableDatabase
commit	backends/flint/flint_table.cc	/^FlintTable::commit(flint_revision_number_t revision, int changes_fd,$/;"	f	class:FlintTable
commit	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::commit()$/;"	f	class:InMemoryDatabase
commit	backends/remote/remote-database.cc	/^RemoteDatabase::commit()$/;"	f	class:RemoteDatabase
commit	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::commit()$/;"	f	class:ConstDatabaseWrapper
commit_transaction	api/omdatabase.cc	/^WritableDatabase::commit_transaction()$/;"	f	class:Xapian::WritableDatabase
commit_transaction	backends/database.cc	/^Database::Internal::commit_transaction()$/;"	f	class:Xapian::Database::Internal
commit_transaction	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::commit_transaction()$/;"	f	class:ConstDatabaseWrapper
common_prefix_length	common/stringutils.h	/^common_prefix_length(const std::string &a, const std::string &b)$/;"	f
compact	api/compactor.cc	/^Compactor::Internal::compact(Xapian::Compactor & compactor)$/;"	f	class:Xapian::Compactor::Internal
compact	api/compactor.cc	/^Compactor::compact()$/;"	f	class:Xapian::Compactor
compact	backends/brass/brass_table.cc	/^BrassTable::compact(byte * p)$/;"	f	class:BrassTable
compact	backends/chert/chert_table.cc	/^ChertTable::compact(byte * p)$/;"	f	class:ChertTable
compact	backends/flint/flint_table.cc	/^FlintTable::compact(byte * p)$/;"	f	class:FlintTable
compact_brass	backends/brass/brass_compact.cc	/^compact_brass(Xapian::Compactor & compactor,$/;"	f
compact_chert	backends/chert/chert_compact.cc	/^compact_chert(Xapian::Compactor & compactor,$/;"	f
compact_flint	backends/flint/flint_compact.cc	/^compact_flint(Xapian::Compactor & compactor,$/;"	f
compact_to_stub	api/compactor.cc	/^    int compact_to_stub;$/;"	m	class:Xapian::Compactor::Internal	file:
compaction	api/compactor.cc	/^    compaction_level compaction;$/;"	m	class:Xapian::Compactor::Internal	file:
compaction_level	include/xapian/compactor.h	/^    typedef enum { STANDARD, FULL, FULLER } compaction_level;$/;"	t	class:Xapian::Compactor	typeref:enum:Xapian::Compactor::__anon12
compare_amongvec	languages/compiler/analyser.c	/^static int compare_amongvec(const void *pv, const void *qv) {$/;"	f	file:
compare_words	languages/compiler/tokeniser.c	/^static int compare_words(int m, symbol * p, int n, byte * q) {$/;"	f	file:
component_of	backends/brass/brass_table.h	/^    int component_of() const {$/;"	f	class:Brass::Item_base
component_of	backends/chert/chert_table.h	/^    int component_of() const {$/;"	f	class:Item_base
component_of	backends/flint/flint_table.h	/^    int component_of() const {$/;"	f	class:Item_base_
components_of	backends/brass/brass_table.h	/^    int components_of() const {$/;"	f	class:Brass::Item_base
components_of	backends/chert/chert_table.h	/^    int components_of() const {$/;"	f	class:Item_base
components_of	backends/flint/flint_table.h	/^    int components_of() const {$/;"	f	class:Item_base_
compress_strategy	backends/brass/brass_table.h	/^	int compress_strategy;$/;"	m	class:BrassTable
compress_strategy	backends/chert/chert_table.h	/^	int compress_strategy;$/;"	m	class:ChertTable
compress_strategy	backends/flint/flint_table.h	/^	int compress_strategy;$/;"	m	class:FlintTable
compute_action	queryparser/lemon.c	/^PRIVATE int compute_action(lemp,ap)$/;"	f
config	queryparser/lemon.c	/^struct config {$/;"	s	file:
confighash	queryparser/lemon.c	/^PRIVATE int confighash(a)$/;"	f
conn	api/replication.cc	/^    RemoteConnection * conn;$/;"	m	class:DatabaseReplica::Internal	file:
connected_socket	net/tcpserver.cc	/^    int connected_socket;$/;"	m	struct:thread_param	file:
const_iterator	include/xapian/enquire.h	/^	typedef MSetIterator const_iterator;$/;"	t	class:Xapian::MSet
const_reference	include/xapian/enquire.h	/^	typedef MSetIterator & const_reference;$/;"	t	class:Xapian::MSet
contains	api/omenquire.cc	/^RSet::contains(Xapian::docid did) const$/;"	f	class:Xapian::RSet
contains	include/xapian/enquire.h	/^	bool contains(const Xapian::MSetIterator & i) const { return contains(*i); }$/;"	f	class:Xapian::RSet
context	common/remote-database.h	/^    string context;$/;"	m	class:RemoteDatabase
context	common/remoteconnection.h	/^    std::string context;$/;"	m	class:RemoteConnection
context	include/xapian/error.h	/^    std::string context;$/;"	m	class:Xapian::Error
convert_numeric_string	languages/compiler/tokeniser.c	/^static void convert_numeric_string(struct tokeniser * t, symbol * p, int base) {$/;"	f	file:
convert_to_percent	api/omenquire.cc	/^MSet::convert_to_percent(Xapian::weight wt) const$/;"	f	class:Xapian::MSet
convert_to_percent	api/omenquire.cc	/^MSet::convert_to_percent(const MSetIterator & it) const$/;"	f	class:Xapian::MSet
convert_to_percent_internal	api/omenquire.cc	/^MSet::Internal::convert_to_percent_internal(Xapian::weight wt) const$/;"	f	class:Xapian::MSet::Internal
copy_b	languages/compiler/space.c	/^extern symbol * copy_b(symbol * p) {$/;"	f
copy_docid_keyed	bin/xapian-chert-update.cc	/^copy_docid_keyed(FlintTable &in, ChertTable *out)$/;"	f	file:
copy_position	bin/xapian-chert-update.cc	/^copy_position(FlintTable &in, ChertTable *out)$/;"	f	file:
copy_postlist	bin/xapian-chert-update.cc	/^copy_postlist(FlintTable &in, ChertTable *out)$/;"	f	file:
copy_termlist	bin/xapian-chert-update.cc	/^copy_termlist(FlintTable &in, ChertTable *out)$/;"	f	file:
copy_unchanged	bin/xapian-chert-update.cc	/^copy_unchanged(FlintTable &in, ChertTable *out)$/;"	f	file:
corrected_query	queryparser/queryparser_internal.h	/^    string corrected_query;$/;"	m	class:Xapian::QueryParser::Internal
count	languages/compiler/header.h	/^    int count;                  \/* 0, 1, 2 for each type *\/$/;"	m	struct:name
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x1	file:
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x2	file:
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x3	file:
count	queryparser/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x4	file:
count	tests/internaltest.cc	/^    static int count;$/;"	m	struct:TempDtorTest	file:
count	tests/internaltest.cc	/^int TempDtorTest::count = 0;$/;"	m	class:TempDtorTest	file:
count_error	languages/compiler/analyser.c	/^static void count_error(struct analyser * a) {$/;"	f	file:
count_matching_subqs	api/leafpostlist.cc	/^LeafPostList::count_matching_subqs() const$/;"	f	class:LeafPostList
count_matching_subqs	api/postlist.cc	/^PostList::count_matching_subqs() const$/;"	f	class:Xapian::PostList
count_matching_subqs	matcher/andmaybepostlist.cc	/^AndMaybePostList::count_matching_subqs() const$/;"	f	class:AndMaybePostList
count_matching_subqs	matcher/andnotpostlist.cc	/^AndNotPostList::count_matching_subqs() const$/;"	f	class:AndNotPostList
count_matching_subqs	matcher/externalpostlist.cc	/^ExternalPostList::count_matching_subqs() const$/;"	f	class:ExternalPostList
count_matching_subqs	matcher/extraweightpostlist.h	/^	Xapian::termcount count_matching_subqs() const {$/;"	f	class:ExtraWeightPostList
count_matching_subqs	matcher/mergepostlist.cc	/^MergePostList::count_matching_subqs() const$/;"	f	class:MergePostList
count_matching_subqs	matcher/multiandpostlist.cc	/^MultiAndPostList::count_matching_subqs() const$/;"	f	class:MultiAndPostList
count_matching_subqs	matcher/multixorpostlist.cc	/^MultiXorPostList::count_matching_subqs() const$/;"	f	class:MultiXorPostList
count_matching_subqs	matcher/orpostlist.cc	/^OrPostList::count_matching_subqs() const$/;"	f	class:OrPostList
count_matching_subqs	matcher/selectpostlist.h	/^	Xapian::termcount count_matching_subqs() const {$/;"	f	class:SelectPostList
count_matching_subqs	matcher/synonympostlist.cc	/^SynonymPostList::count_matching_subqs() const$/;"	f	class:SynonymPostList
count_matching_subqs	matcher/valuerangepostlist.cc	/^ValueRangePostList::count_matching_subqs() const$/;"	f	class:ValueRangePostList
count_zero_length_docs	examples/delve.cc	/^static bool count_zero_length_docs = false;$/;"	v	file:
cp_R	tests/harness/unixcmds.cc	/^void cp_R(const std::string &src, const std::string &dest) {$/;"	f
create	backends/brass/brass_version.cc	/^BrassVersion::create()$/;"	f	class:BrassVersion
create	backends/chert/chert_version.cc	/^ChertVersion::create()$/;"	f	class:ChertVersion
create	backends/flint/flint_version.cc	/^void FlintVersion::create()$/;"	f	class:FlintVersion
create_analyser	languages/compiler/analyser.c	/^extern struct analyser * create_analyser(struct tokeniser * t) {$/;"	f
create_and_open	backends/brass/brass_lazytable.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:BrassLazyTable
create_and_open	backends/brass/brass_table.cc	/^BrassTable::create_and_open(unsigned int block_size_)$/;"	f	class:BrassTable
create_and_open	backends/brass/brass_termlisttable.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:BrassTermListTable
create_and_open	backends/chert/chert_lazytable.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:ChertLazyTable
create_and_open	backends/chert/chert_table.cc	/^ChertTable::create_and_open(unsigned int block_size_)$/;"	f	class:ChertTable
create_and_open	backends/chert/chert_termlisttable.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:ChertTermListTable
create_and_open	backends/flint/flint_spelling.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:FlintSpellingTable
create_and_open	backends/flint/flint_synonym.h	/^    void create_and_open(unsigned int blocksize) {$/;"	f	class:FlintSynonymTable
create_and_open	backends/flint/flint_table.cc	/^FlintTable::create_and_open(unsigned int block_size_)$/;"	f	class:FlintTable
create_and_open_tables	backends/brass/brass_database.cc	/^BrassDatabase::create_and_open_tables(unsigned int block_size)$/;"	f	class:BrassDatabase
create_and_open_tables	backends/chert/chert_database.cc	/^ChertDatabase::create_and_open_tables(unsigned int block_size)$/;"	f	class:ChertDatabase
create_and_open_tables	backends/flint/flint_database.cc	/^FlintDatabase::create_and_open_tables(unsigned int block_size)$/;"	f	class:FlintDatabase
create_b	languages/compiler/space.c	/^extern symbol * create_b(int n) {$/;"	f
create_changeset_file	common/replicate_utils.cc	/^create_changeset_file(const string & changeset_dir,$/;"	f
create_dir_if_needed	tests/harness/backendmanager.cc	/^BackendManager::create_dir_if_needed(const string &dirname)$/;"	f	class:BackendManager
create_generator_c	languages/compiler/generator.c	/^extern struct generator * create_generator_c(struct analyser * a, struct options * o) {$/;"	f
create_s	languages/steminternal.cc	/^extern symbol * create_s() {$/;"	f
create_tokeniser	languages/compiler/tokeniser.c	/^extern struct tokeniser * create_tokeniser(symbol * p) {$/;"	f
createdb_brass	tests/harness/backendmanager.cc	/^BackendManager::createdb_brass(const vector<string> &files)$/;"	f	class:BackendManager
createdb_chert	tests/harness/backendmanager.cc	/^BackendManager::createdb_chert(const vector<string> &files)$/;"	f	class:BackendManager
createdb_flint	tests/harness/backendmanager.cc	/^BackendManager::createdb_flint(const vector<string> &files)$/;"	f	class:BackendManager
createdb_multi	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::createdb_multi(const vector<string> & files)$/;"	f	class:BackendManagerMulti
ctag	backends/brass/brass_values.cc	/^    string ctag;$/;"	m	class:Brass::ValueUpdater	file:
ctag	backends/chert/chert_values.cc	/^    string ctag;$/;"	m	class:ValueUpdater	file:
curpos	api/omqueryinternal.cc	/^    Xapian::termpos curpos;$/;"	m	class:QUnserial	file:
curr_weight	include/xapian/postingsource.h	/^    double curr_weight;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
currdoc	backends/multi/multi_postlist.h	/^	Xapian::docid  currdoc;$/;"	m	class:MultiPostList
current	backends/prefix_compressed_strings.h	/^    std::string current;$/;"	m	class:PrefixCompressedStringItor
current	backends/prefix_compressed_strings.h	/^    std::string current;$/;"	m	class:PrefixCompressedStringWriter
current	matcher/externalpostlist.h	/^    Xapian::docid current;$/;"	m	class:ExternalPostList
current	matcher/mergepostlist.h	/^	int current;$/;"	m	class:MergePostList
current	matcher/valuestreamdocument.h	/^    size_t current;$/;"	m	class:ValueStreamDocument
current	queryparser/lemon.c	/^static struct config *current = 0;       \/* Top of list of configurations *\/$/;"	v	typeref:struct:config	file:
current_chunk_contains	backends/brass/brass_postlist.cc	/^BrassPostList::current_chunk_contains(Xapian::docid desired_did)$/;"	f	class:BrassPostList
current_chunk_contains	backends/chert/chert_postlist.cc	/^ChertPostList::current_chunk_contains(Xapian::docid desired_did)$/;"	f	class:ChertPostList
current_chunk_contains	backends/flint/flint_postlist.cc	/^FlintPostList::current_chunk_contains(Xapian::docid desired_did)$/;"	f	class:FlintPostList
current_did	backends/brass/brass_postlist.cc	/^	Xapian::docid current_did;$/;"	m	class:Brass::PostlistChunkWriter	file:
current_did	backends/chert/chert_postlist.cc	/^	Xapian::docid current_did;$/;"	m	class:Chert::PostlistChunkWriter	file:
current_did	backends/flint/flint_alldocspostlist.h	/^    Xapian::docid current_did;$/;"	m	class:FlintAllDocsPostList
current_did	backends/flint/flint_postlist.cc	/^	Xapian::docid current_did;$/;"	m	class:FlintPostlistChunkWriter	file:
current_did	backends/slowvaluelist.h	/^    Xapian::docid current_did;$/;"	m	class:SlowValueList
current_docid	common/multivaluelist.h	/^    Xapian::docid current_docid;$/;"	m	class:MultiValueList
current_key	backends/brass/brass_cursor.h	/^	string current_key;$/;"	m	class:BrassCursor
current_key	backends/chert/chert_cursor.h	/^	string current_key;$/;"	m	class:ChertCursor
current_key	backends/flint/flint_cursor.h	/^	string current_key;$/;"	m	class:FlintCursor
current_pos	backends/brass/brass_positionlist.h	/^    vector<Xapian::termpos>::const_iterator current_pos;$/;"	m	class:BrassPositionList
current_pos	backends/chert/chert_positionlist.h	/^    vector<Xapian::termpos>::const_iterator current_pos;$/;"	m	class:ChertPositionList
current_pos	backends/flint/flint_positionlist.h	/^    vector<Xapian::termpos>::const_iterator current_pos;$/;"	m	class:FlintPositionList
current_position	backends/remote/net_termlist.h	/^	vector<NetworkTermListItem>::const_iterator current_position;$/;"	m	class:NetworkTermList
current_tag	backends/brass/brass_cursor.h	/^	string current_tag;$/;"	m	class:BrassCursor
current_tag	backends/chert/chert_cursor.h	/^	string current_tag;$/;"	m	class:ChertCursor
current_tag	backends/flint/flint_cursor.h	/^	string current_tag;$/;"	m	class:FlintCursor
current_term	backends/brass/brass_alltermslist.h	/^    std::string current_term;$/;"	m	class:BrassAllTermsList
current_term	backends/brass/brass_spelling.h	/^    std::string current_term;$/;"	m	class:BrassSpellingTermList
current_term	backends/brass/brass_termlist.h	/^    std::string current_term;$/;"	m	class:BrassTermList
current_term	backends/chert/chert_alltermslist.h	/^    std::string current_term;$/;"	m	class:ChertAllTermsList
current_term	backends/chert/chert_spelling.h	/^    std::string current_term;$/;"	m	class:ChertSpellingTermList
current_term	backends/chert/chert_termlist.h	/^    std::string current_term;$/;"	m	class:ChertTermList
current_term	backends/flint/flint_alltermslist.h	/^    std::string current_term;$/;"	m	class:FlintAllTermsList
current_term	backends/flint/flint_spelling.h	/^    std::string current_term;$/;"	m	class:FlintSpellingTermList
current_term	backends/flint/flint_termlist.h	/^    std::string current_term;$/;"	m	class:FlintTermList
current_term	common/multialltermslist.h	/^    std::string current_term;$/;"	m	class:MultiAllTermsList
current_termfreq	backends/brass/brass_termlist.h	/^    mutable Xapian::doccount current_termfreq;$/;"	m	class:BrassTermList
current_termfreq	backends/chert/chert_termlist.h	/^    mutable Xapian::doccount current_termfreq;$/;"	m	class:ChertTermList
current_termfreq	backends/flint/flint_termlist.h	/^    mutable Xapian::doccount current_termfreq;$/;"	m	class:FlintTermList
current_token	queryparser/cjk-tokenizer.h	/^    mutable std::string current_token;$/;"	m	class:CJKTokenIterator
current_value	backends/slowvaluelist.h	/^    std::string current_value;$/;"	m	class:SlowValueList
current_wdf	backends/brass/brass_termlist.h	/^    Xapian::termcount current_wdf;$/;"	m	class:BrassTermList
current_wdf	backends/chert/chert_termlist.h	/^    Xapian::termcount current_wdf;$/;"	m	class:ChertTermList
current_wdf	backends/flint/flint_termlist.h	/^    Xapian::termcount current_wdf;$/;"	m	class:FlintTermList
currentend	queryparser/lemon.c	/^static struct config **currentend = 0;   \/* Last on list of configs *\/$/;"	v	typeref:struct:config	file:
cursor	backends/brass/brass_alltermslist.h	/^    BrassCursor * cursor;$/;"	m	class:BrassAllTermsList
cursor	backends/brass/brass_metadata.h	/^    BrassCursor * cursor;$/;"	m	class:BrassMetadataTermList
cursor	backends/brass/brass_postlist.h	/^	AutoPtr<BrassCursor> cursor;$/;"	m	class:BrassPostList
cursor	backends/brass/brass_spellingwordslist.h	/^    BrassCursor * cursor;$/;"	m	class:BrassSpellingWordsList
cursor	backends/brass/brass_synonym.h	/^    BrassCursor * cursor;$/;"	m	class:BrassSynonymTermList
cursor	backends/brass/brass_valuelist.h	/^    BrassCursor * cursor;$/;"	m	class:BrassValueList
cursor	backends/brass/brass_values.h	/^    mutable AutoPtr<BrassCursor> cursor;$/;"	m	class:BrassValueManager
cursor	backends/chert/chert_alltermslist.h	/^    ChertCursor * cursor;$/;"	m	class:ChertAllTermsList
cursor	backends/chert/chert_metadata.h	/^    ChertCursor * cursor;$/;"	m	class:ChertMetadataTermList
cursor	backends/chert/chert_postlist.h	/^	AutoPtr<ChertCursor> cursor;$/;"	m	class:ChertPostList
cursor	backends/chert/chert_spellingwordslist.h	/^    ChertCursor * cursor;$/;"	m	class:ChertSpellingWordsList
cursor	backends/chert/chert_synonym.h	/^    ChertCursor * cursor;$/;"	m	class:ChertSynonymTermList
cursor	backends/chert/chert_valuelist.h	/^    ChertCursor * cursor;$/;"	m	class:ChertValueList
cursor	backends/chert/chert_values.h	/^    mutable AutoPtr<ChertCursor> cursor;$/;"	m	class:ChertValueManager
cursor	backends/flint/flint_alldocspostlist.h	/^    AutoPtr<FlintCursor> cursor;$/;"	m	class:FlintAllDocsPostList
cursor	backends/flint/flint_alltermslist.h	/^    FlintCursor * cursor;$/;"	m	class:FlintAllTermsList
cursor	backends/flint/flint_metadata.h	/^    FlintCursor * cursor;$/;"	m	class:FlintMetadataTermList
cursor	backends/flint/flint_postlist.h	/^	AutoPtr<FlintCursor> cursor;$/;"	m	class:FlintPostList
cursor	backends/flint/flint_spellingwordslist.h	/^    FlintCursor * cursor;$/;"	m	class:FlintSpellingWordsList
cursor	backends/flint/flint_synonym.h	/^    FlintCursor * cursor;$/;"	m	class:FlintSynonymTermList
cursor	matcher/msetpostlist.h	/^    int cursor;$/;"	m	class:MSetPostList
cursor_created_since_last_modification	backends/brass/brass_table.h	/^	mutable bool cursor_created_since_last_modification;$/;"	m	class:BrassTable
cursor_created_since_last_modification	backends/chert/chert_table.h	/^	mutable bool cursor_created_since_last_modification;$/;"	m	class:ChertTable
cursor_created_since_last_modification	backends/flint/flint_table.h	/^	mutable bool cursor_created_since_last_modification;$/;"	m	class:FlintTable
cursor_get	backends/brass/brass_table.cc	/^BrassCursor * BrassTable::cursor_get() const {$/;"	f	class:BrassTable
cursor_get	backends/chert/chert_table.cc	/^ChertCursor * ChertTable::cursor_get() const {$/;"	f	class:ChertTable
cursor_get	backends/flint/flint_table.cc	/^FlintCursor * FlintTable::cursor_get() const {$/;"	f	class:FlintTable
cursor_version	backends/brass/brass_table.h	/^	unsigned long cursor_version;$/;"	m	class:BrassTable
cursor_version	backends/chert/chert_table.h	/^	unsigned long cursor_version;$/;"	m	class:ChertTable
cursor_version	backends/flint/flint_table.h	/^	unsigned long cursor_version;$/;"	m	class:FlintTable
d_name	common/msvc_dirent.h	/^    char *d_name;$/;"	m	struct:dirent
data	backends/brass/brass_postlist.cc	/^    string data;$/;"	m	class:Brass::PostlistChunkReader	file:
data	backends/brass/brass_spelling.h	/^    char data[4];$/;"	m	struct:Brass::fragment
data	backends/brass/brass_spelling.h	/^    std::string data;$/;"	m	class:BrassSpellingTermList
data	backends/brass/brass_termlist.h	/^    std::string data;$/;"	m	class:BrassTermList
data	backends/chert/chert_postlist.cc	/^    string data;$/;"	m	class:Chert::PostlistChunkReader	file:
data	backends/chert/chert_spelling.h	/^    char data[4];$/;"	m	struct:fragment
data	backends/chert/chert_spelling.h	/^    std::string data;$/;"	m	class:ChertSpellingTermList
data	backends/chert/chert_termlist.h	/^    std::string data;$/;"	m	class:ChertTermList
data	backends/flint/flint_postlist.cc	/^	string data;$/;"	m	class:FlintPostlistChunkReader	file:
data	backends/flint/flint_spelling.h	/^    char data[4];$/;"	m	struct:F_fragment
data	backends/flint/flint_spelling.h	/^    std::string data;$/;"	m	class:FlintSpellingTermList
data	backends/flint/flint_termlist.h	/^    std::string data;$/;"	m	class:FlintTermList
data	common/document.h	/^	string data;$/;"	m	class:Xapian::Document::Internal
data	languages/compiler/space.c	/^    symbol * data;$/;"	m	struct:str	file:
data	queryparser/lemon.c	/^  char *data;                  \/* The data *\/$/;"	m	struct:s_x1node	file:
data	queryparser/lemon.c	/^  struct config *data;                  \/* The data *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::config	file:
data	queryparser/lemon.c	/^  struct state *data;                  \/* The data *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::state	file:
data	queryparser/lemon.c	/^  struct symbol *data;                  \/* The data *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::symbol	file:
data_here	common/document.h	/^	bool data_here;$/;"	m	class:Xapian::Document::Internal
data_modified	common/document.h	/^	bool data_modified() const {$/;"	f	class:Xapian::Document::Internal
database	backends/brass/brass_alltermslist.h	/^    Xapian::Internal::RefCntPtr<const BrassDatabase> database;$/;"	m	class:BrassAllTermsList
database	backends/brass/brass_metadata.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:BrassMetadataTermList
database	backends/brass/brass_spellingwordslist.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:BrassSpellingWordsList
database	backends/brass/brass_synonym.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:BrassSynonymTermList
database	backends/chert/chert_alltermslist.h	/^    Xapian::Internal::RefCntPtr<const ChertDatabase> database;$/;"	m	class:ChertAllTermsList
database	backends/chert/chert_metadata.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:ChertMetadataTermList
database	backends/chert/chert_spellingwordslist.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:ChertSpellingWordsList
database	backends/chert/chert_synonym.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:ChertSynonymTermList
database	backends/flint/flint_alltermslist.h	/^    Xapian::Internal::RefCntPtr<const FlintDatabase> database;$/;"	m	class:FlintAllTermsList
database	backends/flint/flint_document.h	/^	Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:FlintDocument
database	backends/flint/flint_metadata.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:FlintMetadataTermList
database	backends/flint/flint_spellingwordslist.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:FlintSpellingWordsList
database	backends/flint/flint_synonym.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:FlintSynonymTermList
database	backends/inmemory/inmemory_alltermslist.h	/^	Xapian::Internal::RefCntPtr<const InMemoryDatabase> database;$/;"	m	class:InMemoryAllTermsList
database	common/document.h	/^	Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> database;$/;"	m	class:Xapian::Document::Internal
database_exists	backends/brass/brass_database.cc	/^BrassDatabase::database_exists() {$/;"	f	class:BrassDatabase
database_exists	backends/chert/chert_database.cc	/^ChertDatabase::database_exists() {$/;"	f	class:ChertDatabase
database_exists	backends/flint/flint_database.cc	/^FlintDatabase::database_exists() {$/;"	f	class:FlintDatabase
database_size	backends/remote/net_termlist.h	/^	Xapian::doccount database_size;$/;"	m	class:NetworkTermList
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	docs/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	tests/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	tests/harness/backendmanager.h	/^    std::string datadir;$/;"	m	class:BackendManager
datadir	tests/harness/index_utils.h	/^    std::string datadir;$/;"	m	class:FileIndexer
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	docs/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	tests/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datatype	queryparser/lemon.c	/^  char *datatype;          \/* The data type of information held by this$/;"	m	struct:symbol	file:
db	backends/brass/brass_termlist.h	/^    Xapian::Internal::RefCntPtr<const BrassDatabase> db;$/;"	m	class:BrassTermList
db	backends/brass/brass_valuelist.h	/^    Xapian::Internal::RefCntPtr<const BrassDatabase> db;$/;"	m	class:BrassValueList
db	backends/chert/chert_termlist.h	/^    Xapian::Internal::RefCntPtr<const ChertDatabase> db;$/;"	m	class:ChertTermList
db	backends/chert/chert_valuelist.h	/^    Xapian::Internal::RefCntPtr<const ChertDatabase> db;$/;"	m	class:ChertValueList
db	backends/flint/flint_alldocspostlist.h	/^    Xapian::Internal::RefCntPtr<const FlintDatabase> db;$/;"	m	class:FlintAllDocsPostList
db	backends/flint/flint_termlist.h	/^    Xapian::Internal::RefCntPtr<const FlintDatabase> db;$/;"	m	class:FlintTermList
db	backends/inmemory/inmemory_database.h	/^	Xapian::Internal::RefCntPtr<const InMemoryDatabase> db;$/;"	m	class:InMemoryAllDocsPostList
db	backends/inmemory/inmemory_database.h	/^	Xapian::Internal::RefCntPtr<const InMemoryDatabase> db;$/;"	m	class:InMemoryPostList
db	backends/inmemory/inmemory_database.h	/^	Xapian::Internal::RefCntPtr<const InMemoryDatabase> db;$/;"	m	class:InMemoryTermList
db	backends/multi/multi_termlist.h	/^	const Xapian::Database & db;$/;"	m	class:MultiTermList
db	backends/remote/net_postlist.h	/^    Xapian::Internal::RefCntPtr<const RemoteDatabase> db;$/;"	m	class:NetworkPostList
db	backends/slowvaluelist.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> db;$/;"	m	class:SlowValueList
db	common/contiguousalldocspostlist.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> db;$/;"	m	class:ContiguousAllDocsPostList
db	common/expandweight.h	/^    const Xapian::Database db;$/;"	m	class:Xapian::Internal::ExpandWeight
db	common/multimatch.h	/^	const Xapian::Database db;$/;"	m	class:MultiMatch
db	common/omenquireinternal.h	/^	const Xapian::Database db;$/;"	m	class:Xapian::Enquire::Internal
db	common/remoteserver.h	/^    Xapian::Database * db;$/;"	m	class:RemoteServer
db	common/weightinternal.h	/^    Xapian::Database db;$/;"	m	class:Xapian::Weight::Internal
db	include/xapian/postingsource.h	/^    Xapian::Database db;$/;"	m	class:Xapian::FixedWeightPostingSource
db	include/xapian/postingsource.h	/^    Xapian::Database db;$/;"	m	class:Xapian::ValuePostingSource
db	matcher/localsubmatch.h	/^    const Xapian::Database::Internal *db;$/;"	m	class:LocalSubMatch
db	matcher/queryoptimiser.h	/^    const Xapian::Database::Internal & db;$/;"	m	class:QueryOptimiser
db	matcher/remotesubmatch.h	/^    RemoteDatabase *db;$/;"	m	class:RemoteSubMatch
db	matcher/valuerangepostlist.h	/^    const Xapian::Database::Internal *db;$/;"	m	class:ValueRangePostList
db	matcher/valuestreamdocument.h	/^    Xapian::Database db;$/;"	m	class:ValueStreamDocument
db	queryparser/queryparser_internal.h	/^    Database db;$/;"	m	class:Xapian::QueryParser::Internal
db	queryparser/termgenerator_internal.h	/^    WritableDatabase db;$/;"	m	class:Xapian::TermGenerator::Internal
db	tests/api_closedb.cc	/^    Xapian::Database db;$/;"	m	struct:closedb1_iterators	file:
db	tests/api_weight.cc	/^    Xapian::Database db;$/;"	m	class:CheckStatsWeight	file:
db_dir	backends/brass/brass_database.h	/^	std::string db_dir;$/;"	m	class:BrassDatabase
db_dir	backends/brass/brass_databasereplicator.h	/^	std::string db_dir;$/;"	m	class:BrassDatabaseReplicator
db_dir	backends/chert/chert_database.h	/^	std::string db_dir;$/;"	m	class:ChertDatabase
db_dir	backends/chert/chert_databasereplicator.h	/^	std::string db_dir;$/;"	m	class:ChertDatabaseReplicator
db_dir	backends/flint/flint_database.h	/^	std::string db_dir;$/;"	m	class:FlintDatabase
db_dir	backends/flint/flint_databasereplicator.h	/^	std::string db_dir;$/;"	m	class:FlintDatabaseReplicator
db_idx	backends/multi/multi_valuelist.cc	/^    unsigned db_idx;$/;"	m	struct:SubValueList	file:
db_index	backends/multi/multi_termlist.h	/^	size_t db_index;$/;"	m	class:MultiTermList
db_index	common/expandweight.h	/^    size_t db_index;$/;"	m	class:Xapian::Internal::ExpandStats
db_size	matcher/multiandpostlist.h	/^    Xapian::doccount db_size;$/;"	m	class:MultiAndPostList
db_size	matcher/multixorpostlist.h	/^    Xapian::doccount db_size;$/;"	m	class:MultiXorPostList
db_size	matcher/queryoptimiser.h	/^    Xapian::doccount db_size;$/;"	m	class:QueryOptimiser
db_size	matcher/valuerangepostlist.h	/^    Xapian::doccount db_size;$/;"	m	class:ValueRangePostList
dbcheck	tests/dbcheck.cc	/^dbcheck(const Xapian::Database & db,$/;"	f
dbpaths	common/remotetcpserver.h	/^    const std::vector<std::string> dbpaths;$/;"	m	class:RemoteTcpServer
dbs_seen	common/expandweight.h	/^    std::vector<bool> dbs_seen;$/;"	m	class:Xapian::Internal::ExpandStats
dbsize	common/expandweight.h	/^    Xapian::doccount dbsize;$/;"	m	class:Xapian::Internal::ExpandStats
dbsize	common/expandweight.h	/^    Xapian::doccount dbsize;$/;"	m	class:Xapian::Internal::ExpandWeight
dbsize	matcher/andmaybepostlist.h	/^	Xapian::doccount dbsize; \/\/ only need in case we decay to an AndPostList$/;"	m	class:AndMaybePostList
dbsize	matcher/andnotpostlist.h	/^	Xapian::doccount dbsize;$/;"	m	class:AndNotPostList
dbsize	matcher/orpostlist.h	/^	Xapian::doccount dbsize;$/;"	m	class:OrPostList
dbstats_to_string	tests/dbcheck.cc	/^dbstats_to_string(const Xapian::Database & db)$/;"	f
debug_count	languages/compiler/header.h	/^    int debug_count;$/;"	m	struct:generator
debuglog_categories	common/debuglog.h	/^enum debuglog_categories {$/;"	g
dec_wdf	common/documentterm.h	/^    void dec_wdf(Xapian::termcount dec) {$/;"	f	class:OmDocumentTerm
decimal_to_num	languages/compiler/tokeniser.c	/^static int decimal_to_num(int ch) {$/;"	f	file:
declarations	languages/compiler/header.h	/^    struct str * declarations; \/* str storing variable declarations *\/$/;"	m	struct:generator	typeref:struct:generator::str
declargslot	queryparser/lemon.c	/^  char **declargslot;        \/* Where the declaration argument should be put *\/$/;"	m	struct:pstate	file:
declassoc	queryparser/lemon.c	/^  enum e_assoc declassoc;    \/* Assign this association to decl arguments *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_assoc	file:
declkeyword	queryparser/lemon.c	/^  char *declkeyword;         \/* Keyword of a declaration *\/$/;"	m	struct:pstate	file:
decllinenoslot	queryparser/lemon.c	/^  int *decllinenoslot;       \/* Where to write declaration line number *\/$/;"	m	struct:pstate	file:
decode	api/omqueryinternal.cc	/^QUnserial::decode() {$/;"	f	class:QUnserial
decode	common/bitstream.cc	/^BitReader::decode(Xapian::termpos outof)$/;"	f	class:Xapian::BitReader
decode_interpolative	common/bitstream.cc	/^BitReader::decode_interpolative(vector<Xapian::termpos> & pos, int j, int k)$/;"	f	class:Xapian::BitReader
decode_length	net/serialise.cc	/^decode_length(const char ** p, const char *end, bool check_remaining)$/;"	f
decode_qp_flag	examples/quest.cc	/^decode_qp_flag(const char * s)$/;"	f	file:
decode_qp_op	examples/quest.cc	/^decode_qp_op(const char * s)$/;"	f	file:
decode_wt	examples/quest.cc	/^decode_wt(const char * s)$/;"	f	file:
decode_xxy	api/valuerangeproc.cc	/^decode_xxy(const string & s, int & x1, int &x2, int &y)$/;"	f	namespace:Xapian
decreasing_relevance	matcher/msetpostlist.h	/^    bool decreasing_relevance;$/;"	m	class:MSetPostList
decreasing_relevance	matcher/remotesubmatch.h	/^    bool decreasing_relevance;$/;"	m	class:RemoteSubMatch
default_op	queryparser/queryparser_internal.cc	/^    Query::op default_op() const { return qpi->default_op; }$/;"	f	class:State
default_op	queryparser/queryparser_internal.h	/^    Query::op default_op;$/;"	m	class:Xapian::QueryParser::Internal
default_weight	include/xapian/postingsource.h	/^    double default_weight;$/;"	m	class:Xapian::ValueMapPostingSource
define-members	docs/apidoc/html/version_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
definition	languages/compiler/header.h	/^    struct node * definition;   \/*    )                           *\/$/;"	m	struct:name	typeref:struct:name::node
deflate	tests/zlib-vg.c	/^int deflate(z_streamp strm, int flush) {$/;"	f
deflate_zstream	backends/brass/brass_table.h	/^	mutable z_stream *deflate_zstream;$/;"	m	class:BrassTable
deflate_zstream	backends/chert/chert_table.h	/^	mutable z_stream *deflate_zstream;$/;"	m	class:ChertTable
deflate_zstream	backends/flint/flint_table.h	/^	mutable z_stream *deflate_zstream;$/;"	m	class:FlintTable
del	backends/brass/brass_cursor.cc	/^MutableBrassCursor::del()$/;"	f	class:MutableBrassCursor
del	backends/brass/brass_table.cc	/^BrassTable::del(const string &key)$/;"	f	class:BrassTable
del	backends/chert/chert_cursor.cc	/^MutableChertCursor::del()$/;"	f	class:MutableChertCursor
del	backends/chert/chert_table.cc	/^ChertTable::del(const string &key)$/;"	f	class:ChertTable
del	backends/flint/flint_cursor.cc	/^FlintCursor::del()$/;"	f	class:FlintCursor
del	backends/flint/flint_table.cc	/^FlintTable::del(const string &key)$/;"	f	class:FlintTable
delete_all_values	backends/flint/flint_values.cc	/^FlintValueTable::delete_all_values(Xapian::docid did)$/;"	f	class:FlintValueTable
delete_doclength	backends/brass/brass_inverter.h	/^    void delete_doclength(Xapian::docid did) {$/;"	f	class:Inverter
delete_document	api/omdatabase.cc	/^WritableDatabase::delete_document(Xapian::docid did)$/;"	f	class:Xapian::WritableDatabase
delete_document	api/omdatabase.cc	/^WritableDatabase::delete_document(const std::string & unique_term)$/;"	f	class:Xapian::WritableDatabase
delete_document	backends/brass/brass_database.cc	/^BrassWritableDatabase::delete_document(Xapian::docid did)$/;"	f	class:BrassWritableDatabase
delete_document	backends/brass/brass_dbstats.h	/^    void delete_document(Xapian::termcount doclen) {$/;"	f	class:BrassDatabaseStats
delete_document	backends/brass/brass_values.cc	/^BrassValueManager::delete_document(Xapian::docid did,$/;"	f	class:BrassValueManager
delete_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::delete_document(Xapian::docid did)$/;"	f	class:ChertWritableDatabase
delete_document	backends/chert/chert_dbstats.h	/^    void delete_document(Xapian::termcount doclen) {$/;"	f	class:ChertDatabaseStats
delete_document	backends/chert/chert_values.cc	/^ChertValueManager::delete_document(Xapian::docid did,$/;"	f	class:ChertValueManager
delete_document	backends/database.cc	/^Database::Internal::delete_document(Xapian::docid)$/;"	f	class:Xapian::Database::Internal
delete_document	backends/database.cc	/^Database::Internal::delete_document(const string & unique_term)$/;"	f	class:Xapian::Database::Internal
delete_document	backends/flint/flint_database.cc	/^FlintWritableDatabase::delete_document(Xapian::docid did)$/;"	f	class:FlintWritableDatabase
delete_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::delete_document(Xapian::docid did)$/;"	f	class:InMemoryDatabase
delete_document	backends/remote/remote-database.cc	/^RemoteDatabase::delete_document(Xapian::docid did)$/;"	f	class:RemoteDatabase
delete_document	backends/remote/remote-database.cc	/^RemoteDatabase::delete_document(const std::string & unique_term)$/;"	f	class:RemoteDatabase
delete_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::delete_document(Xapian::docid)$/;"	f	class:ConstDatabaseWrapper
delete_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::delete_document(const string &)$/;"	f	class:ConstDatabaseWrapper
delete_item	backends/brass/brass_table.cc	/^BrassTable::delete_item(int j, bool repeatedly)$/;"	f	class:BrassTable
delete_item	backends/chert/chert_table.cc	/^ChertTable::delete_item(int j, bool repeatedly)$/;"	f	class:ChertTable
delete_item	backends/flint/flint_table.cc	/^FlintTable::delete_item(int j, bool repeatedly)$/;"	f	class:FlintTable
delete_kt	backends/brass/brass_table.cc	/^BrassTable::delete_kt()$/;"	f	class:BrassTable
delete_kt	backends/chert/chert_table.cc	/^ChertTable::delete_kt()$/;"	f	class:ChertTable
delete_kt	backends/flint/flint_table.cc	/^FlintTable::delete_kt()$/;"	f	class:FlintTable
delete_positionlist	backends/brass/brass_positionlist.h	/^    void delete_positionlist(Xapian::docid did, const string & tname) {$/;"	f	class:BrassPositionListTable
delete_positionlist	backends/chert/chert_positionlist.h	/^    void delete_positionlist(Xapian::docid did, const string & tname) {$/;"	f	class:ChertPositionListTable
delete_positionlist	backends/flint/flint_positionlist.h	/^    void delete_positionlist(Xapian::docid did, const string & tname) {$/;"	f	class:FlintPositionListTable
delete_ptr	backends/multi/multi_alltermslist.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	file:
delete_ptr	backends/multi/multi_valuelist.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	file:
delete_ptr	expand/esetinternal.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	namespace:Xapian	file:
delete_ptr	matcher/queryoptimiser.cc	/^template<class CLASS> struct delete_ptr {$/;"	s	file:
delete_record	backends/brass/brass_record.cc	/^BrassRecordTable::delete_record(Xapian::docid did)$/;"	f	class:BrassRecordTable
delete_record	backends/chert/chert_record.cc	/^ChertRecordTable::delete_record(Xapian::docid did)$/;"	f	class:ChertRecordTable
delete_record	backends/flint/flint_record.cc	/^FlintRecordTable::delete_record(Xapian::docid did)$/;"	f	class:FlintRecordTable
delete_termlist	backends/brass/brass_termlisttable.h	/^    void delete_termlist(Xapian::docid did) { del(make_key(did)); }$/;"	f	class:BrassTermListTable
delete_termlist	backends/chert/chert_termlisttable.h	/^    void delete_termlist(Xapian::docid did) { del(make_key(did)); }$/;"	f	class:ChertTermListTable
delete_termlist	backends/flint/flint_termlisttable.h	/^    void delete_termlist(Xapian::docid did) { del(flint_docid_to_key(did)); }$/;"	f	class:FlintTermListTable
deleteconfig	queryparser/lemon.c	/^PRIVATE void deleteconfig(old)$/;"	f
deleted	tests/internaltest.cc	/^	bool &deleted;$/;"	m	class:test_refcnt	file:
deleted	tests/internaltest.cc	/^    bool &deleted;$/;"	m	class:test_autoptr	file:
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	tests/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
desc	tests/api_serialise.cc	/^    std::string desc;$/;"	m	class:MyPostingSource2	file:
dest	include/xapian/base.h	/^	T *dest;$/;"	m	class:Xapian::Internal::RefCntPtr
destLineno	queryparser/lemon.c	/^  int destLineno;          \/* Line number for start of destructor *\/$/;"	m	struct:symbol	file:
destdir	api/compactor.cc	/^    string destdir;$/;"	m	class:Xapian::Compactor::Internal	file:
destroy	queryparser/queryparser_internal.cc	/^    void destroy() { delete this; }$/;"	f	class:TermGroup
destroy	queryparser/queryparser_internal.cc	/^    void destroy() { delete this; }$/;"	f	class:Terms
destructor	queryparser/lemon.c	/^  char *destructor;        \/* Code which executes whenever this symbol is$/;"	m	struct:symbol	file:
details	docs/apidoc/html/classXapian_1_1AssertionError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1BM25Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1BoolWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Compactor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Database.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseCorruptError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseCreateError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseLockError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseModifiedError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseOpeningError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DatabaseVersionError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DateValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1DocNotFoundError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Document.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ESet.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ESetIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Enquire.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Error.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ErrorHandler.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ExpandDecider.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ExpandDeciderAnd.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ExpandDeciderFilterTerms.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1FeatureUnavailableError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1FixedWeightPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1InternalError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1InvalidArgumentError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1InvalidOperationError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1KeyMaker.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1LogicError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MSet.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MSetIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MatchDecider.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MatchSpy.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MultiValueKeyMaker.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1MultiValueSorter.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1NetworkError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1NetworkTimeoutError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1NumberValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PositionIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PostingIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1PostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1QueryParser.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1QueryParserError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1RSet.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1RangeError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Registry.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1RuntimeError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1SerialisationError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1SimpleStopper.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Sorter.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Stem.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Stopper.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1StringValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1TermGenerator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1TermIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1TradWeight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1UnimplementedError.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Utf8Iterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueCountMatchSpy.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueIterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueMapPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValuePostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueSetMatchDecider.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1ValueWeightPostingSource.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1Weight.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/classXapian_1_1WritableDatabase.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/compactor_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/database_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/dbfactory_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/document_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/enquire_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/error_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/errorhandler_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/expanddecider_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/keymaker_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/matchspy_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Auto.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Brass.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Chert.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Flint.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1InMemory.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Remote.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/namespaceXapian_1_1Unicode.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/positioniterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/postingiterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/postingsource_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/queryparser_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/registry_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/stem_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/structXapian_1_1StemImplementation.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/structXapian_1_1ValueRangeProcessor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/termgenerator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/termiterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/types_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/unicode_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/valueiterator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/valuesetmatchdecider_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/version_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/weight_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/apidoc/html/xapian_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
did	backends/brass/brass_postlist.cc	/^    Xapian::docid did;$/;"	m	class:Brass::PostlistChunkReader	file:
did	backends/brass/brass_postlist.h	/^	Xapian::docid did;$/;"	m	class:BrassPostList
did	backends/brass/brass_termlist.h	/^    Xapian::docid did;$/;"	m	class:BrassTermList
did	backends/brass/brass_values.h	/^    Xapian::docid did;$/;"	m	class:Brass::ValueChunkReader
did	backends/chert/chert_postlist.cc	/^    Xapian::docid did;$/;"	m	class:Chert::PostlistChunkReader	file:
did	backends/chert/chert_postlist.h	/^	Xapian::docid did;$/;"	m	class:ChertPostList
did	backends/chert/chert_termlist.h	/^    Xapian::docid did;$/;"	m	class:ChertTermList
did	backends/chert/chert_values.h	/^    Xapian::docid did;$/;"	m	class:ValueChunkReader
did	backends/flint/flint_postlist.cc	/^	Xapian::docid did;$/;"	m	class:FlintPostlistChunkReader	file:
did	backends/flint/flint_postlist.h	/^	Xapian::docid did;$/;"	m	class:FlintPostList
did	backends/flint/flint_termlist.h	/^    Xapian::docid did;$/;"	m	class:FlintTermList
did	backends/inmemory/inmemory_database.h	/^	Xapian::docid did;$/;"	m	class:InMemoryAllDocsPostList
did	backends/inmemory/inmemory_database.h	/^	Xapian::docid did;$/;"	m	class:InMemoryPosting
did	backends/inmemory/inmemory_database.h	/^	Xapian::docid did;$/;"	m	class:InMemoryTermList
did	backends/remote/net_termlist.h	/^	Xapian::docid did;$/;"	m	class:NetworkTermList
did	common/contiguousalldocspostlist.h	/^    Xapian::docid did;$/;"	m	class:ContiguousAllDocsPostList
did	common/document.h	/^	Xapian::docid did;$/;"	m	class:Xapian::Document::Internal
did	common/omenquireinternal.h	/^	Xapian::docid did;$/;"	m	class:Xapian::Internal::MSetItem
did	matcher/multiandpostlist.h	/^    Xapian::docid did;$/;"	m	class:MultiAndPostList
did	matcher/multixorpostlist.h	/^    Xapian::docid did;$/;"	m	class:MultiXorPostList
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:ChangeMaxweightPostingSource	file:
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:MyDontAskWeightPostingSource	file:
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:MyOddPostingSource	file:
did	tests/api_postingsource.cc	/^    Xapian::docid did;$/;"	m	class:MyOddWeightingPostingSource	file:
difference_type	include/xapian/enquire.h	/^	typedef Xapian::doccount_diff difference_type;$/;"	t	class:Xapian::MSet
difference_type	include/xapian/enquire.h	/^	typedef Xapian::doccount_diff difference_type;$/;"	t	class:Xapian::MSetIterator
difference_type	include/xapian/enquire.h	/^	typedef Xapian::termcount_diff difference_type;$/;"	t	class:Xapian::ESetIterator
difference_type	include/xapian/positioniterator.h	/^	typedef Xapian::termpos_diff difference_type;  \/\/ "om_termposcount"$/;"	t	class:Xapian::PositionIterator
difference_type	include/xapian/postingiterator.h	/^	typedef Xapian::doccount_diff difference_type;$/;"	t	class:Xapian::PostingIterator
difference_type	include/xapian/termiterator.h	/^	typedef Xapian::termcount_diff difference_type;$/;"	t	class:Xapian::TermIterator
difference_type	include/xapian/unicode.h	/^    typedef size_t difference_type;$/;"	t	class:Xapian::Utf8Iterator
difference_type	include/xapian/valueiterator.h	/^    typedef Xapian::doccount_diff difference_type;$/;"	t	class:Xapian::ValueIterator
different	tests/collate-test	/^different:$/;"	l
dir	common/utils.cc	/^    DIR * dir;$/;"	m	class:dircloser	file:
dir_exists	common/utils.cc	/^dir_exists(const string &fname)$/;"	f
dir_void	tests/harness/fdtracker.h	/^    void * dir_void;$/;"	m	class:FDTracker
dircloser	common/utils.cc	/^    dircloser(DIR * dir_) : dir(dir_) {}$/;"	f	class:dircloser
dircloser	common/utils.cc	/^class dircloser {$/;"	c	file:
dirent	common/msvc_dirent.h	/^struct dirent$/;"	s
discard_changes	backends/brass/brass_synonym.h	/^    void discard_changes() {$/;"	f	class:BrassSynonymTable
discard_changes	backends/chert/chert_synonym.h	/^    void discard_changes() {$/;"	f	class:ChertSynonymTable
discard_changes	backends/flint/flint_synonym.h	/^    void discard_changes() {$/;"	f	class:FlintSynonymTable
dispatch_func	net/remoteserver.cc	/^typedef void (RemoteServer::* dispatch_func)(const string &);$/;"	t	file:
display_nicely	bin/xapian-inspect.cc	/^display_nicely(const string & data) {$/;"	f	file:
dist_m4data_DATA	Makefile	/^dist_m4data_DATA = m4-macros\/xapian.m4$/;"	m
dist_man_MANS	Makefile	/^dist_man_MANS = xapian-config.1 \\$/;"	m
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
do_and_like	matcher/queryoptimiser.cc	/^QueryOptimiser::do_and_like(const Xapian::Query::Internal *query, double factor)$/;"	f	class:QueryOptimiser
do_and_like	matcher/queryoptimiser.cc	/^QueryOptimiser::do_and_like(const Xapian::Query::Internal *query, double factor,$/;"	f	class:QueryOptimiser
do_close	backends/remote/remote-database.cc	/^RemoteDatabase::do_close()$/;"	f	class:RemoteDatabase
do_close	net/remoteconnection.cc	/^RemoteConnection::do_close(bool wait)$/;"	f	class:RemoteConnection
do_get_all_values	backends/brass/brass_document.cc	/^BrassDocument::do_get_all_values(map<Xapian::valueno, string> & values_) const$/;"	f	class:BrassDocument
do_get_all_values	backends/chert/chert_document.cc	/^ChertDocument::do_get_all_values(map<Xapian::valueno, string> & values_) const$/;"	f	class:ChertDocument
do_get_all_values	backends/flint/flint_document.cc	/^FlintDocument::do_get_all_values(map<Xapian::valueno, string> & values_) const$/;"	f	class:FlintDocument
do_get_all_values	backends/inmemory/inmemory_document.cc	/^InMemoryDocument::do_get_all_values(map<Xapian::valueno, string> &values_) const$/;"	f	class:InMemoryDocument
do_get_all_values	backends/remote/remote-document.cc	/^RemoteDocument::do_get_all_values(map<Xapian::valueno, string> &) const$/;"	f	class:RemoteDocument
do_get_all_values	common/document.h	/^	virtual void do_get_all_values(map<Xapian::valueno, string> & values_) const {$/;"	f	class:Xapian::Document::Internal
do_get_all_values	matcher/valuestreamdocument.cc	/^ValueStreamDocument::do_get_all_values(map<Xapian::valueno, string> & v) const$/;"	f	class:ValueStreamDocument
do_get_data	backends/brass/brass_document.cc	/^BrassDocument::do_get_data() const$/;"	f	class:BrassDocument
do_get_data	backends/chert/chert_document.cc	/^ChertDocument::do_get_data() const$/;"	f	class:ChertDocument
do_get_data	backends/flint/flint_document.cc	/^FlintDocument::do_get_data() const$/;"	f	class:FlintDocument
do_get_data	backends/inmemory/inmemory_document.cc	/^InMemoryDocument::do_get_data() const$/;"	f	class:InMemoryDocument
do_get_data	backends/remote/remote-document.cc	/^RemoteDocument::do_get_data() const$/;"	f	class:RemoteDocument
do_get_data	common/document.h	/^	virtual string do_get_data() const { return string(); }$/;"	f	class:Xapian::Document::Internal
do_get_data	matcher/valuestreamdocument.cc	/^ValueStreamDocument::do_get_data() const$/;"	f	class:ValueStreamDocument
do_get_database	tests/harness/backendmanager.cc	/^BackendManager::do_get_database(const vector<string> & files)$/;"	f	class:BackendManager
do_get_database	tests/harness/backendmanager_inmemory.cc	/^BackendManagerInMemory::do_get_database(const vector<string> & files)$/;"	f	class:BackendManagerInMemory
do_get_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::do_get_database(const vector<string> & files)$/;"	f	class:BackendManagerRemoteProg
do_get_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::do_get_database(const vector<string> & files)$/;"	f	class:BackendManagerRemoteTcp
do_get_database_path	tests/harness/backendmanager.cc	/^BackendManager::do_get_database_path(const vector<string> &)$/;"	f	class:BackendManager
do_get_database_path	tests/harness/backendmanager_brass.cc	/^BackendManagerBrass::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerBrass
do_get_database_path	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerChert
do_get_database_path	tests/harness/backendmanager_flint.cc	/^BackendManagerFlint::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerFlint
do_get_database_path	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::do_get_database_path(const vector<string> & files)$/;"	f	class:BackendManagerMulti
do_get_value	backends/brass/brass_document.cc	/^BrassDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:BrassDocument
do_get_value	backends/chert/chert_document.cc	/^ChertDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:ChertDocument
do_get_value	backends/flint/flint_document.cc	/^FlintDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:FlintDocument
do_get_value	backends/inmemory/inmemory_document.cc	/^InMemoryDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:InMemoryDocument
do_get_value	backends/remote/remote-document.cc	/^RemoteDocument::do_get_value(Xapian::valueno) const$/;"	f	class:RemoteDocument
do_get_value	common/document.h	/^	virtual string do_get_value(Xapian::valueno \/*valueno*\/) const { return string(); }$/;"	f	class:Xapian::Document::Internal
do_get_value	matcher/valuestreamdocument.cc	/^ValueStreamDocument::do_get_value(Xapian::valueno slot) const$/;"	f	class:ValueStreamDocument
do_open_to_read	backends/brass/brass_table.cc	/^BrassTable::do_open_to_read(bool revision_supplied, brass_revision_number_t revision_)$/;"	f	class:BrassTable
do_open_to_read	backends/chert/chert_table.cc	/^ChertTable::do_open_to_read(bool revision_supplied, chert_revision_number_t revision_)$/;"	f	class:ChertTable
do_open_to_read	backends/flint/flint_table.cc	/^FlintTable::do_open_to_read(bool revision_supplied, flint_revision_number_t revision_)$/;"	f	class:FlintTable
do_open_to_write	backends/brass/brass_table.cc	/^BrassTable::do_open_to_write(bool revision_supplied,$/;"	f	class:BrassTable
do_open_to_write	backends/chert/chert_table.cc	/^ChertTable::do_open_to_write(bool revision_supplied,$/;"	f	class:ChertTable
do_open_to_write	backends/flint/flint_table.cc	/^FlintTable::do_open_to_write(bool revision_supplied,$/;"	f	class:FlintTable
do_or_like	matcher/queryoptimiser.cc	/^QueryOptimiser::do_or_like(const Xapian::Query::Internal *query, double factor)$/;"	f	class:QueryOptimiser
do_read	tests/api_replicate.cc	/^static size_t do_read(int fd, char * p, size_t desired)$/;"	f	file:
do_run_tests	tests/harness/testsuite.cc	/^test_driver::do_run_tests(vector<string>::const_iterator b,$/;"	f	class:test_driver
do_subquery	matcher/queryoptimiser.cc	/^QueryOptimiser::do_subquery(const Xapian::Query::Internal * query, double factor)$/;"	f	class:QueryOptimiser
do_synonym	matcher/queryoptimiser.cc	/^QueryOptimiser::do_synonym(const Xapian::Query::Internal *query, double factor)$/;"	f	class:QueryOptimiser
do_test	matcher/phrasepostlist.cc	/^NearPostList::do_test(std::vector<PositionList *> &plists, Xapian::termcount i,$/;"	f	class:NearPostList
do_test	matcher/phrasepostlist.cc	/^PhrasePostList::do_test(std::vector<PositionList *> &plists, Xapian::termcount i,$/;"	f	class:PhrasePostList
do_tests_for_backend	tests/harness/testrunner.cc	/^TestRunner::do_tests_for_backend(BackendManager * manager)$/;"	f	class:TestRunner
do_unpack_uint	backends/brass/brass_btreebase.cc	/^do_unpack_uint(const char **start, const char *end,$/;"	f	file:
do_unpack_uint	backends/chert/chert_btreebase.cc	/^do_unpack_uint(const char **start, const char *end,$/;"	f	file:
do_unpack_uint	backends/flint/flint_btreebase.cc	/^FlintTable_base::do_unpack_uint(const char **start, const char *end,$/;"	f	class:FlintTable_base
do_until	bin/xapian-inspect.cc	/^do_until(FlintCursor & cursor, const string & target)$/;"	f	file:
do_write	tests/api_replicate.cc	/^static void do_write(int fd, const char * p, size_t n)$/;"	f	file:
doc	api/documentvaluelist.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Document::Internal> doc;$/;"	m	class:DocumentValueList
doc	matcher/valuestreamdocument.h	/^    mutable Xapian::Document::Internal * doc;$/;"	m	class:ValueStreamDocument
doc	queryparser/termgenerator_internal.h	/^    Document doc;$/;"	m	class:Xapian::TermGenerator::Internal
doc1	tests/api_closedb.cc	/^    Xapian::Document doc1;$/;"	m	struct:closedb1_iterators	file:
doc_DATA	docs/Makefile	/^doc_DATA = $(HTMLDOCS) $(RSTHTML) apidoc.pdf$/;"	m
doc_exists	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::doc_exists(Xapian::docid did) const$/;"	f	class:InMemoryDatabase
doccount	backends/brass/brass_alldocspostlist.h	/^    Xapian::doccount doccount;$/;"	m	class:BrassAllDocsPostList
doccount	backends/chert/chert_alldocspostlist.h	/^    Xapian::doccount doccount;$/;"	m	class:ChertAllDocsPostList
doccount	backends/flint/flint_alldocspostlist.h	/^    Xapian::doccount doccount;$/;"	m	class:FlintAllDocsPostList
doccount	common/contiguousalldocspostlist.h	/^    Xapian::doccount doccount;$/;"	m	class:ContiguousAllDocsPostList
doccount	common/remote-database.h	/^    mutable Xapian::doccount doccount;$/;"	m	class:RemoteDatabase
doccount	include/xapian/types.h	/^typedef unsigned doccount;$/;"	t	namespace:Xapian
doccount_diff	include/xapian/types.h	/^typedef int doccount_diff; \/* FIXME: can overflow with more than 2^31 docs. *\/$/;"	t	namespace:Xapian
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	docs/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	tests/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docid	include/xapian/types.h	/^typedef unsigned docid;$/;"	t	namespace:Xapian
docid_from_key	backends/brass/brass_values.h	/^docid_from_key(Xapian::valueno required_slot, const std::string & key)$/;"	f	namespace:Brass
docid_from_key	backends/chert/chert_values.h	/^docid_from_key(Xapian::valueno required_slot, const std::string & key)$/;"	f
docid_order	include/xapian/enquire.h	/^	} docid_order;$/;"	t	class:Xapian::Enquire	typeref:enum:Xapian::Enquire::__anon13
docid_zero_invalid	api/omdatabase.cc	/^static void docid_zero_invalid()$/;"	f	file:
doclen	backends/brass/brass_termlist.h	/^    brass_doclen_t doclen;$/;"	m	class:BrassTermList
doclen	backends/chert/chert_termlist.h	/^    chert_doclen_t doclen;$/;"	m	class:ChertTermList
doclen	backends/flint/flint_termlist.h	/^    flint_doclen_t doclen;$/;"	m	class:FlintTermList
doclen_changes	backends/brass/brass_inverter.h	/^    std::map<Xapian::docid, Xapian::termcount> doclen_changes;$/;"	m	class:Inverter
doclen_lbound	backends/brass/brass_dbstats.h	/^    Xapian::termcount doclen_lbound;$/;"	m	class:BrassDatabaseStats
doclen_lbound	backends/chert/chert_dbstats.h	/^    Xapian::termcount doclen_lbound;$/;"	m	class:ChertDatabaseStats
doclen_lbound	common/remote-database.h	/^    mutable Xapian::termcount doclen_lbound;$/;"	m	class:RemoteDatabase
doclen_lower_bound	matcher/synonympostlist.h	/^    Xapian::termcount doclen_lower_bound;$/;"	m	class:SynonymPostList
doclen_pl	backends/brass/brass_postlist.h	/^	mutable AutoPtr<BrassPostList> doclen_pl;$/;"	m	class:BrassPostListTable
doclen_pl	backends/chert/chert_postlist.h	/^	mutable AutoPtr<ChertPostList> doclen_pl;$/;"	m	class:ChertPostListTable
doclen_ubound	backends/brass/brass_dbstats.h	/^    Xapian::termcount doclen_ubound;$/;"	m	class:BrassDatabaseStats
doclen_ubound	backends/chert/chert_dbstats.h	/^    Xapian::termcount doclen_ubound;$/;"	m	class:ChertDatabaseStats
doclen_ubound	common/remote-database.h	/^    mutable Xapian::termcount doclen_ubound;$/;"	m	class:RemoteDatabase
doclength	backends/flint/flint_postlist.cc	/^	flint_doclen_t doclength;$/;"	m	class:FlintPostlistChunkReader	file:
doclength	backends/flint/flint_postlist.h	/^	flint_doclen_t doclength;$/;"	m	class:FlintPostList
doclength	include/xapian/types.h	/^typedef double doclength;$/;"	t	namespace:Xapian
doclength_lower_bound_	include/xapian/weight.h	/^    Xapian::termcount doclength_lower_bound_;$/;"	m	class:Xapian::Weight
doclength_upper_bound_	include/xapian/weight.h	/^    Xapian::termcount doclength_upper_bound_;$/;"	m	class:Xapian::Weight
doclengths	backends/inmemory/inmemory_database.h	/^    vector<Xapian::termcount> doclengths;$/;"	m	class:InMemoryDatabase
doclens	backends/chert/chert_alldocsmodifiedpostlist.h	/^    map<Xapian::docid, Xapian::termcount> doclens;$/;"	m	class:ChertAllDocsModifiedPostList
doclens	backends/chert/chert_database.h	/^	mutable map<Xapian::docid, Xapian::termcount> doclens;$/;"	m	class:ChertWritableDatabase
doclens	backends/flint/flint_database.h	/^	mutable map<Xapian::docid, Xapian::termcount> doclens;$/;"	m	class:FlintWritableDatabase
doclens_it	backends/chert/chert_alldocsmodifiedpostlist.h	/^    map<Xapian::docid, Xapian::termcount>::const_iterator doclens_it;$/;"	m	class:ChertAllDocsModifiedPostList
doclists	backends/inmemory/inmemory_database.h	/^    vector<std::string> doclists;$/;"	m	class:InMemoryDatabase
docs	backends/inmemory/inmemory_database.h	/^	vector<InMemoryPosting> docs;$/;"	m	class:InMemoryTerm
docs_considered	matcher/collapser.h	/^    Xapian::doccount docs_considered;$/;"	m	class:Collapser
docstats_to_string	tests/dbcheck.cc	/^docstats_to_string(const Xapian::Database & db, Xapian::docid did)$/;"	f
docterms_to_string	tests/dbcheck.cc	/^docterms_to_string(const Xapian::Database & db, Xapian::docid did)$/;"	f
document_exists	backends/brass/brass_postlist.cc	/^BrassPostListTable::document_exists(Xapian::docid did,$/;"	f	class:BrassPostListTable
document_exists	backends/chert/chert_postlist.cc	/^ChertPostListTable::document_exists(Xapian::docid did,$/;"	f	class:ChertPostListTable
document_length	backends/inmemory/inmemory_database.h	/^	Xapian::termcount document_length;$/;"	m	class:InMemoryTermList
document_length	backends/remote/net_termlist.h	/^	Xapian::termcount document_length;$/;"	m	class:NetworkTermList
document_terms	common/document.h	/^	typedef map<string, OmDocumentTerm> document_terms;$/;"	t	class:Xapian::Document::Internal
document_values	common/document.h	/^	typedef map<Xapian::valueno, string> document_values;$/;"	t	class:Xapian::Document::Internal
dot	queryparser/lemon.c	/^  int dot;                 \/* The parse point *\/$/;"	m	struct:config	file:
dtnum	queryparser/lemon.c	/^  int dtnum;               \/* The data type number.  In the parser, the value$/;"	m	struct:symbol	file:
dtor_called	backends/database.cc	/^Database::Internal::dtor_called()$/;"	f	class:Xapian::Database::Internal
dummy	include/xapian/version_h.cc	/^const char * dummy[] = {$/;"	v
dummy_handler	common/socket_utils.cc	/^static void dummy_handler(const wchar_t*,$/;"	f	file:
dups_ignored	matcher/collapser.h	/^    Xapian::doccount dups_ignored;$/;"	m	class:Collapser
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	docs/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	tests/Makefile	/^dvidir = ${docdir}$/;"	m
e_action	queryparser/lemon.c	/^  enum e_action {$/;"	g	struct:action	file:
e_assoc	queryparser/lemon.c	/^  enum e_assoc {$/;"	g	struct:symbol	file:
e_state	queryparser/lemon.c	/^  enum e_state {$/;"	g	struct:pstate	file:
ebound	common/esetinternal.h	/^    Xapian::termcount ebound;$/;"	m	class:Xapian::ESet::Internal
edist_calc_f_kp	api/editdistance.cc	/^void edist_state<CHR>::edist_calc_f_kp(int k, int p)$/;"	f	class:edist_state
edist_seq	api/editdistance.cc	/^    edist_seq(const CHR * ptr_, int len_) : ptr(ptr_), len(len_) { }$/;"	f	struct:edist_seq
edist_seq	api/editdistance.cc	/^struct edist_seq {$/;"	s	file:
edist_state	api/editdistance.cc	/^class edist_state {$/;"	c	file:
edist_state	api/editdistance.cc	/^edist_state<CHR>::edist_state(const CHR * ptr1, int len1,$/;"	f	class:edist_state
edit_distance_unsigned	api/editdistance.cc	/^edit_distance_unsigned(const unsigned * ptr1, int len1,$/;"	f
emit_code	queryparser/lemon.c	/^PRIVATE void emit_code(out,rp,lemp,lineno)$/;"	f
emit_destructor_code	queryparser/lemon.c	/^void emit_destructor_code(out,sp,lemp,lineno)$/;"	f
empty	api/omenquire.cc	/^ESet::empty() const$/;"	f	class:Xapian::ESet
empty	api/omenquire.cc	/^MSet::empty() const$/;"	f	class:Xapian::MSet
empty	api/omenquire.cc	/^RSet::empty() const$/;"	f	class:Xapian::RSet
empty	api/omquery.cc	/^Query::empty() const$/;"	f	class:Xapian::Query
empty	backends/brass/brass_table.h	/^	bool empty() const {$/;"	f	class:BrassTable
empty	backends/chert/chert_table.h	/^	bool empty() const {$/;"	f	class:ChertTable
empty	backends/flint/flint_table.h	/^	bool empty() const {$/;"	f	class:FlintTable
empty	matcher/collapser.h	/^    bool empty() const { return table.empty(); }$/;"	f	class:Collapser
empty_ok	queryparser/queryparser_internal.cc	/^    bool empty_ok;$/;"	m	class:TermGroup	file:
emsg	queryparser/lemon.c	/^static char emsg[] = "Command line syntax error: ";$/;"	v	file:
encode	common/bitstream.cc	/^BitWriter::encode(size_t value, size_t outof)$/;"	f	class:Xapian::BitWriter
encode_interpolative	common/bitstream.cc	/^BitWriter::encode_interpolative(const vector<Xapian::termpos> &pos, int j, int k)$/;"	f	class:Xapian::BitWriter
encode_length	common/serialise.h	/^encode_length(T len)$/;"	f
encode_values	backends/flint/flint_values.cc	/^FlintValueTable::encode_values(string & s,$/;"	f	class:FlintValueTable
encode_valuestats	backends/brass/brass_compact.cc	/^encode_valuestats(Xapian::doccount freq,$/;"	f	namespace:BrassCompact
encode_valuestats	backends/chert/chert_compact.cc	/^encode_valuestats(Xapian::doccount freq,$/;"	f	namespace:ChertCompact
end	api/omenquire.cc	/^ESet::end() const$/;"	f	class:Xapian::ESet
end	api/omenquire.cc	/^MSet::end() const$/;"	f	class:Xapian::MSet
end	api/omqueryinternal.cc	/^    const char *end;$/;"	m	class:QUnserial	file:
end	backends/brass/brass_postlist.cc	/^    const char *end;$/;"	m	class:Brass::PostlistChunkReader	file:
end	backends/brass/brass_postlist.h	/^	const char * end;$/;"	m	class:BrassPostList
end	backends/brass/brass_termlist.h	/^    const char *end;$/;"	m	class:BrassTermList
end	backends/brass/brass_values.h	/^    const char *end;$/;"	m	class:Brass::ValueChunkReader
end	backends/chert/chert_postlist.cc	/^    const char *end;$/;"	m	class:Chert::PostlistChunkReader	file:
end	backends/chert/chert_postlist.h	/^	const char * end;$/;"	m	class:ChertPostList
end	backends/chert/chert_termlist.h	/^    const char *end;$/;"	m	class:ChertTermList
end	backends/chert/chert_values.h	/^    const char *end;$/;"	m	class:ValueChunkReader
end	backends/flint/flint_postlist.cc	/^	const char *end;$/;"	m	class:FlintPostlistChunkReader	file:
end	backends/flint/flint_postlist.h	/^	const char * end;$/;"	m	class:FlintPostList
end	backends/flint/flint_termlist.h	/^    const char *end;$/;"	m	class:FlintTermList
end	backends/inmemory/inmemory_database.h	/^	vector<InMemoryPosting>::const_iterator end;$/;"	m	class:InMemoryPostList
end	backends/inmemory/inmemory_database.h	/^	vector<InMemoryTermEntry>::const_iterator end;$/;"	m	class:InMemoryTermList
end	include/xapian/unicode.h	/^    const unsigned char *end;$/;"	m	class:Xapian::Utf8Iterator
end	matcher/queryoptimiser.cc	/^    size_t begin, end;$/;"	m	struct:PosFilter	file:
end	matcher/valuerangepostlist.h	/^    const std::string begin, end;$/;"	m	class:ValueRangePostList
end	tests/harness/index_utils.h	/^    std::vector<std::string>::const_iterator file, end;$/;"	m	class:FileIndexer
end_construction	api/omquery.cc	/^Query::end_construction()$/;"	f	class:Xapian::Query
end_construction	api/omqueryinternal.cc	/^Xapian::Query::Internal::end_construction()$/;"	f	class:Xapian::Query::Internal
end_time	common/realtime.h	/^inline double end_time(double timeout) {$/;"	f	namespace:RealTime
endswith	common/stringutils.h	/^endswith(const std::string & s, char sfx)$/;"	f
endswith	common/stringutils.h	/^endswith(const std::string & s, const char * sfx)$/;"	f
endswith	common/stringutils.h	/^endswith(const std::string & s, const char * sfx, size_t len)$/;"	f
endswith	common/stringutils.h	/^endswith(const std::string & s, const std::string & sfx)$/;"	f
enquire	common/omenquireinternal.h	/^	Xapian::Internal::RefCntPtr<const Enquire::Internal> enquire;$/;"	m	class:Xapian::MSet::Internal
ensure_uuid	backends/flint/flint_version.cc	/^FlintVersion::ensure_uuid() const$/;"	f	class:FlintVersion
enter_key	backends/brass/brass_table.cc	/^BrassTable::enter_key(int j, Key prevkey, Key newkey)$/;"	f	class:BrassTable
enter_key	backends/chert/chert_table.cc	/^ChertTable::enter_key(int j, Key prevkey, Key newkey)$/;"	f	class:ChertTable
enter_key	backends/flint/flint_table.cc	/^FlintTable::enter_key(int j, Key_ prevkey, Key_ newkey)$/;"	f	class:FlintTable
entries	matcher/collapser.h	/^    Xapian::doccount entries() const { return entry_count; }$/;"	f	class:Collapser
entry_count	matcher/collapser.h	/^    Xapian::doccount entry_count;$/;"	m	class:Collapser
enum-members	docs/apidoc/html/namespaceXapian_1_1Unicode.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
env	tests/soaktest/soaktest_queries.cc	/^    QueryBuilderEnv env;$/;"	m	class:QueryBuilder	file:
epoch_year	include/xapian/queryparser.h	/^    int epoch_year;$/;"	m	class:Xapian::DateValueRangeProcessor
eq	languages/compiler/driver.c	/^static int eq(char * s1, char * s2) {$/;"	f	file:
eq_s	languages/compiler/tokeniser.c	/^static int eq_s(struct tokeniser * t, char * s) {$/;"	f	file:
eq_s	languages/steminternal.cc	/^int SnowballStemImplementation::eq_s(int s_size, const symbol * s) {$/;"	f	class:Xapian::SnowballStemImplementation
eq_s_b	languages/steminternal.cc	/^int SnowballStemImplementation::eq_s_b(int s_size, const symbol * s) {$/;"	f	class:Xapian::SnowballStemImplementation
eq_v	languages/steminternal.h	/^    int eq_v(const symbol * v) { return eq_s(SIZE(v), v); }$/;"	f	class:Xapian::SnowballStemImplementation
eq_v_b	languages/steminternal.h	/^    int eq_v_b(const symbol * v) { return eq_s_b(SIZE(v), v); }$/;"	f	class:Xapian::SnowballStemImplementation
erase	backends/brass/brass_table.cc	/^BrassTable::erase()$/;"	f	class:BrassTable
erase	backends/chert/chert_table.cc	/^ChertTable::erase()$/;"	f	class:ChertTable
erase	backends/flint/flint_table.cc	/^FlintTable::erase()$/;"	f	class:FlintTable
erase_sublist	matcher/multixorpostlist.h	/^    void erase_sublist(size_t i) {$/;"	f	class:MultiXorPostList
errline	queryparser/lemon.c	/^static void errline(n,k,err)$/;"	f	file:
errmsg	queryparser/queryparser_internal.h	/^    const char * errmsg;$/;"	m	class:Xapian::QueryParser::Internal
errno_to_string	common/errno_to_string.cc	/^errno_to_string(int e, string & s) {$/;"	f
error	languages/compiler/analyser.c	/^static void error(struct analyser * a, int n) { error2(a, n, 0); }$/;"	f	file:
error	languages/compiler/tokeniser.c	/^static void error(struct tokeniser * t, char * s1, int n, symbol * p, char * s2) {$/;"	f	file:
error	queryparser/lemon.c	/^  char *error;             \/* Code to execute when an error is seen *\/$/;"	m	struct:lemon	file:
error	queryparser/queryparser_internal.cc	/^    const char * error;$/;"	m	class:State	file:
error1	languages/compiler/tokeniser.c	/^static void error1(struct tokeniser * t, char * s) {$/;"	f	file:
error2	languages/compiler/analyser.c	/^static void error2(struct analyser * a, int n, int x) {$/;"	f	file:
error2	languages/compiler/tokeniser.c	/^static void error2(struct tokeniser * t, char * s) {$/;"	f	file:
error3	languages/compiler/analyser.c	/^static void error3(struct analyser * a, struct node * p, symbol * b) {$/;"	f	file:
error4	languages/compiler/analyser.c	/^static void error4(struct analyser * a, struct name * q) {$/;"	f	file:
error_count	languages/compiler/header.h	/^    int error_count;$/;"	m	struct:tokeniser
error_string	include/xapian/error.h	/^    mutable std::string error_string;$/;"	m	class:Xapian::Error
errorbaseclass	exception_data.pm	/^sub errorbaseclass {$/;"	s
errorclass	exception_data.pm	/^sub errorclass {$/;"	s
errorcnt	queryparser/lemon.c	/^  int errorcnt;            \/* Number of errors *\/$/;"	m	struct:lemon	file:
errorcnt	queryparser/lemon.c	/^  int errorcnt;         \/* Number of errors so far *\/$/;"	m	struct:pstate	file:
errorhandler	common/multimatch.h	/^	Xapian::ErrorHandler * errorhandler;$/;"	m	class:MultiMatch
errorhandler	common/omenquireinternal.h	/^	ErrorHandler * errorhandler;$/;"	m	class:Xapian::Enquire::Internal
errorhandler	matcher/mergepostlist.h	/^	Xapian::ErrorHandler * errorhandler;$/;"	m	class:MergePostList
errstream	queryparser/lemon.c	/^static FILE *errstream;$/;"	v	file:
errsym	queryparser/lemon.c	/^  struct symbol *errsym;   \/* The error symbol *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
escape_xml	tests/perftest/perftest.cc	/^escape_xml(const string & str)$/;"	f	file:
eset	include/xapian/enquire.h	/^	ESet eset;$/;"	m	class:Xapian::ESetIterator
examples_copydatabase_DEPENDENCIES	Makefile	/^examples_copydatabase_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_copydatabase_LDADD	Makefile	/^examples_copydatabase_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_copydatabase_LDADD	examples/Makefile.mk	/^examples_copydatabase_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_copydatabase_OBJECTS	Makefile	/^examples_copydatabase_OBJECTS = $(am_examples_copydatabase_OBJECTS)$/;"	m
examples_copydatabase_SOURCES	Makefile	/^examples_copydatabase_SOURCES = examples\/copydatabase.cc$/;"	m
examples_copydatabase_SOURCES	examples/Makefile.mk	/^examples_copydatabase_SOURCES = examples\/copydatabase.cc$/;"	m
examples_delve_DEPENDENCIES	Makefile	/^examples_delve_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
examples_delve_LDADD	Makefile	/^examples_delve_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_delve_LDADD	examples/Makefile.mk	/^examples_delve_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_delve_OBJECTS	Makefile	/^examples_delve_OBJECTS = $(am_examples_delve_OBJECTS)$/;"	m
examples_delve_SOURCES	Makefile	/^examples_delve_SOURCES = examples\/delve.cc$/;"	m
examples_delve_SOURCES	examples/Makefile.mk	/^examples_delve_SOURCES = examples\/delve.cc$/;"	m
examples_quest_DEPENDENCIES	Makefile	/^examples_quest_DEPENDENCIES = $(am__DEPENDENCIES_1) libgetopt.la \\$/;"	m
examples_quest_LDADD	Makefile	/^examples_quest_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_quest_LDADD	examples/Makefile.mk	/^examples_quest_LDADD = $(ldflags) libgetopt.la $(libxapian_la)$/;"	m
examples_quest_OBJECTS	Makefile	/^examples_quest_OBJECTS = $(am_examples_quest_OBJECTS)$/;"	m
examples_quest_SOURCES	Makefile	/^examples_quest_SOURCES = examples\/quest.cc$/;"	m
examples_quest_SOURCES	examples/Makefile.mk	/^examples_quest_SOURCES = examples\/quest.cc$/;"	m
examples_simpleexpand_DEPENDENCIES	Makefile	/^examples_simpleexpand_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_simpleexpand_LDADD	Makefile	/^examples_simpleexpand_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleexpand_LDADD	examples/Makefile.mk	/^examples_simpleexpand_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleexpand_OBJECTS	Makefile	/^examples_simpleexpand_OBJECTS = $(am_examples_simpleexpand_OBJECTS)$/;"	m
examples_simpleexpand_SOURCES	Makefile	/^examples_simpleexpand_SOURCES = examples\/simpleexpand.cc$/;"	m
examples_simpleexpand_SOURCES	examples/Makefile.mk	/^examples_simpleexpand_SOURCES = examples\/simpleexpand.cc$/;"	m
examples_simpleindex_DEPENDENCIES	Makefile	/^examples_simpleindex_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_simpleindex_LDADD	Makefile	/^examples_simpleindex_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleindex_LDADD	examples/Makefile.mk	/^examples_simpleindex_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simpleindex_OBJECTS	Makefile	/^examples_simpleindex_OBJECTS = $(am_examples_simpleindex_OBJECTS)$/;"	m
examples_simpleindex_SOURCES	Makefile	/^examples_simpleindex_SOURCES = examples\/simpleindex.cc$/;"	m
examples_simpleindex_SOURCES	examples/Makefile.mk	/^examples_simpleindex_SOURCES = examples\/simpleindex.cc$/;"	m
examples_simplesearch_DEPENDENCIES	Makefile	/^examples_simplesearch_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_simplesearch_LDADD	Makefile	/^examples_simplesearch_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simplesearch_LDADD	examples/Makefile.mk	/^examples_simplesearch_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_simplesearch_OBJECTS	Makefile	/^examples_simplesearch_OBJECTS = $(am_examples_simplesearch_OBJECTS)$/;"	m
examples_simplesearch_SOURCES	Makefile	/^examples_simplesearch_SOURCES = examples\/simplesearch.cc$/;"	m
examples_simplesearch_SOURCES	examples/Makefile.mk	/^examples_simplesearch_SOURCES = examples\/simplesearch.cc$/;"	m
examples_xapian_metadata_DEPENDENCIES	Makefile	/^examples_xapian_metadata_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
examples_xapian_metadata_LDADD	Makefile	/^examples_xapian_metadata_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_xapian_metadata_LDADD	examples/Makefile.mk	/^examples_xapian_metadata_LDADD = $(ldflags) $(libxapian_la)$/;"	m
examples_xapian_metadata_OBJECTS	Makefile	/^examples_xapian_metadata_OBJECTS =  \\$/;"	m
examples_xapian_metadata_SOURCES	Makefile	/^examples_xapian_metadata_SOURCES = examples\/xapian-metadata.cc$/;"	m
examples_xapian_metadata_SOURCES	examples/Makefile.mk	/^examples_xapian_metadata_SOURCES = examples\/xapian-metadata.cc$/;"	m
exception_data	exception_data.pm	/^package exception_data;$/;"	p
exchange	common/getopt.cc	/^exchange (char **argv)$/;"	f	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	docs/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	tests/Makefile	/^exec_prefix = ${prefix}$/;"	m
exists	backends/brass/brass_table.cc	/^BrassTable::exists() const {$/;"	f	class:BrassTable
exists	backends/chert/chert_table.cc	/^ChertTable::exists() const {$/;"	f	class:ChertTable
exists	backends/flint/flint_table.cc	/^FlintTable::exists() const {$/;"	f	class:FlintTable
expand	expand/esetinternal.cc	/^ESet::Internal::expand(Xapian::termcount max_esize,$/;"	f	class:Xapian::ESet::Internal
expand	preautoreconf	/^sub expand {$/;"	s
expand_k	common/expandweight.h	/^    double expand_k;$/;"	m	class:Xapian::Internal::ExpandStats
expand_k	common/expandweight.h	/^    double expand_k;$/;"	m	class:Xapian::Internal::ExpandWeight
expect	tests/api_qpbackend.cc	/^    const char *expect;$/;"	m	struct:test	file:
expect	tests/queryparsertest.cc	/^    const char *expect;$/;"	m	struct:test	file:
expect	tests/termgentest.cc	/^    const char *expect;$/;"	m	struct:test	file:
expected_exception	tests/harness/testsuite.cc	/^const char * expected_exception = NULL;$/;"	v
extend_bit_map	backends/brass/brass_btreebase.cc	/^BrassTable_base::extend_bit_map()$/;"	f	class:BrassTable_base
extend_bit_map	backends/chert/chert_btreebase.cc	/^ChertTable_base::extend_bit_map()$/;"	f	class:ChertTable_base
extend_bit_map	backends/flint/flint_btreebase.cc	/^FlintTable_base::extend_bit_map()$/;"	f	class:FlintTable_base
external_source	include/xapian/query.h	/^	Xapian::PostingSource * external_source;$/;"	m	class:Xapian::Query::Internal
external_source_owned	include/xapian/query.h	/^	bool external_source_owned;$/;"	m	class:Xapian::Query::Internal
externals_prefix	languages/compiler/header.h	/^    char * externals_prefix;$/;"	m	struct:options
extracode	queryparser/lemon.c	/^  char *extracode;         \/* Code appended to the generated file *\/$/;"	m	struct:lemon	file:
extract_dependency_libs	xapian-config	/^extract_dependency_libs() {$/;"	f
extract_dependency_libs_	xapian-config	/^extract_dependency_libs_() {$/;"	f
extract_dlname	xapian-config	/^extract_dlname() {$/;"	f
f	examples/quest.cc	/^struct qp_flag { const char * s; unsigned f; };$/;"	m	struct:qp_flag	file:
f	examples/quest.cc	/^struct qp_op { const char * s; unsigned f; };$/;"	m	struct:qp_op	file:
f	examples/quest.cc	/^struct wt { const char * s; int f; };$/;"	m	struct:wt	file:
factor	matcher/externalpostlist.h	/^    double factor;$/;"	m	class:ExternalPostList
factor	tests/api_weight.cc	/^    double factor;$/;"	m	class:CheckInitWeight	file:
factor	tests/api_weight.cc	/^    double factor;$/;"	m	class:CheckStatsWeight	file:
factory	tests/internaltest.cc	/^    static TempDtorTest factory() { return TempDtorTest(); }$/;"	f	struct:TempDtorTest
fail	tests/api_serialise.cc	/^    failmode fail;$/;"	m	class:ExceptionalMatchSpy	file:
fail	tests/api_serialise.cc	/^    failmode fail;$/;"	m	class:ExceptionalPostingSource	file:
fail	tests/api_serialise.cc	/^    failmode fail;$/;"	m	class:ExceptionalWeight	file:
failed	tests/harness/testsuite.h	/^	    unsigned int failed;$/;"	m	struct:test_driver::result
failmode	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	t	class:ExceptionalMatchSpy	typeref:enum:ExceptionalMatchSpy::__anon33	file:
failmode	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	t	class:ExceptionalPostingSource	typeref:enum:ExceptionalPostingSource::__anon31	file:
failmode	tests/api_serialise.cc	/^    typedef enum { NONE, CLONE } failmode;$/;"	t	class:ExceptionalWeight	typeref:enum:ExceptionalWeight::__anon32	file:
failure	backends/brass/brass_check.cc	/^void BrassTableCheck::failure(int n) const$/;"	f	class:BrassTableCheck
failure	backends/chert/chert_check.cc	/^void ChertTableCheck::failure(int n) const$/;"	f	class:ChertTableCheck
failure	backends/flint/flint_check.cc	/^void BtreeCheck::failure(int n) const$/;"	f	class:BtreeCheck
failure	queryparser/lemon.c	/^  char *failure;           \/* Code to execute on parser failure *\/$/;"	m	struct:lemon	file:
failure_keep_count	languages/compiler/header.h	/^    int failure_keep_count;    \/* if > 0, keep_count to restore in case of a failure; if < 0, the negated keep_count for the limit to restore in case of failure. *\/$/;"	m	struct:generator
failure_label	languages/compiler/header.h	/^    int failure_label;$/;"	m	struct:generator
failure_str	languages/compiler/header.h	/^    struct str * failure_str;  \/* This is used by the java generator. *\/$/;"	m	struct:generator	typeref:struct:generator::str
fake_root_item	backends/brass/brass_table.h	/^    void fake_root_item() {$/;"	f	class:Brass::Item_wr
fake_root_item	backends/chert/chert_table.h	/^    void fake_root_item() {$/;"	f	class:Item_wr
fake_root_item	backends/flint/flint_table.h	/^    void fake_root_item() {$/;"	f	class:Item_wr_
faked_root_block	backends/brass/brass_table.h	/^	bool faked_root_block;$/;"	m	class:BrassTable
faked_root_block	backends/chert/chert_table.h	/^	bool faked_root_block;$/;"	m	class:ChertTable
faked_root_block	backends/flint/flint_table.h	/^	bool faked_root_block;$/;"	m	class:FlintTable
fallback	queryparser/lemon.c	/^  struct symbol *fallback;   \/* The fallback token *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
fallback	queryparser/lemon.c	/^  struct symbol *fallback; \/* fallback token in case this token doesn't parse *\/$/;"	m	struct:symbol	typeref:struct:symbol::symbol	file:
false	languages/compiler/header.h	/^#define false /;"	d
fault	languages/compiler/analyser.c	/^static void fault(int n) { fprintf(stderr, "fault %d\\n", n); exit(1); }$/;"	f	file:
fcntl_open_	common/safefcntl.h	/^inline int fcntl_open_(const char *filename, int flags) {$/;"	f
fcntl_open_	common/safefcntl.h	/^inline int fcntl_open_(const char *filename, int flags, mode_t mode) {$/;"	f
fd	backends/flint_lock.h	/^    int fd;$/;"	m	class:FlintLock
fd	common/debuglog.h	/^    int fd;$/;"	m	class:DebugLogger
fd	common/utils.h	/^	int fd;$/;"	m	class:fdcloser
fd	tests/harness/backendmanager_remotetcp.cc	/^    int fd;$/;"	m	struct:pid_fd	file:
fd_to_handle	common/socket_utils.cc	/^extern HANDLE fd_to_handle(int fd) {$/;"	f
fdcloser	common/utils.h	/^	fdcloser(int fd_) : fd(fd_) {}$/;"	f	class:fdcloser
fdcloser	common/utils.h	/^class fdcloser {$/;"	c
fdin	common/remoteconnection.h	/^    int fdin;$/;"	m	class:RemoteConnection
fdout	common/remoteconnection.h	/^    int fdout;$/;"	m	class:RemoteConnection
fds	tests/harness/fdtracker.h	/^    std::set<int> fds;$/;"	m	class:FDTracker
fdwrapper	tests/submitperftest	/^class fdwrapper:$/;"	c
fdwrapper	tests/submitperftest.in	/^class fdwrapper:$/;"	c
feature_flag	include/xapian/queryparser.h	/^    } feature_flag;$/;"	t	class:Xapian::QueryParser	typeref:enum:Xapian::QueryParser::__anon15
fetch	api/omenquire.cc	/^MSet::fetch() const$/;"	f	class:Xapian::MSet
fetch	api/omenquire.cc	/^MSet::fetch(const MSetIterator & beginiter) const$/;"	f	class:Xapian::MSet
fetch	api/omenquire.cc	/^MSet::fetch(const MSetIterator & beginiter, const MSetIterator & enditer) const$/;"	f	class:Xapian::MSet
fetch_items	api/omenquire.cc	/^MSet::Internal::fetch_items(Xapian::doccount first, Xapian::doccount last) const$/;"	f	class:Xapian::MSet::Internal
file	tests/harness/index_utils.h	/^    std::vector<std::string>::const_iterator file, end;$/;"	m	class:FileIndexer
file_exists	common/utils.cc	/^file_exists(const string &fname)$/;"	f
file_makename	queryparser/lemon.c	/^PRIVATE char *file_makename(lemp,suffix)$/;"	f
file_open	queryparser/lemon.c	/^PRIVATE FILE *file_open(lemp,suffix,mode)$/;"	f
file_size	tests/api_replicate.cc	/^static off_t file_size(const string & path) {$/;"	f	file:
filename	backends/brass/brass_version.h	/^    std::string filename;$/;"	m	class:BrassVersion
filename	backends/chert/chert_version.h	/^    std::string filename;$/;"	m	class:ChertVersion
filename	backends/flint/flint_version.h	/^    std::string filename;$/;"	m	class:FlintVersion
filename	backends/flint_lock.h	/^    std::string filename;$/;"	m	class:FlintLock
filename	queryparser/lemon.c	/^  char *filename;          \/* Name of the input file *\/$/;"	m	struct:lemon	file:
filename	queryparser/lemon.c	/^  char *filename;       \/* Name of the input file *\/$/;"	m	struct:pstate	file:
files	docs/apidoc/html/dir_168225033f613bf58e19d0630bef5c8b.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/apidoc/html/dir_3c504f51550cb9fcc49223adf2dc9606.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
filter	queryparser/queryparser_internal.cc	/^    map<filter_group_id, Query> filter;$/;"	m	struct:ProbQuery	file:
filter_group_id	queryparser/queryparser_internal.cc	/^    explicit filter_group_id(Xapian::valueno slot_)$/;"	f	struct:filter_group_id
filter_group_id	queryparser/queryparser_internal.cc	/^    explicit filter_group_id(const PrefixInfo * prefix_info_)$/;"	f	struct:filter_group_id
filter_group_id	queryparser/queryparser_internal.cc	/^struct filter_group_id {$/;"	s	file:
filter_type	queryparser/queryparser_internal.h	/^typedef enum { NON_BOOLEAN, BOOLEAN, BOOLEAN_EXCLUSIVE } filter_type;$/;"	t	typeref:enum:__anon30
find	backends/brass/brass_table.cc	/^BrassTable::find(Brass::Cursor * C_) const$/;"	f	class:BrassTable
find	backends/chert/chert_table.cc	/^ChertTable::find(Cursor * C_) const$/;"	f	class:ChertTable
find	backends/flint/flint_table.cc	/^FlintTable::find(Cursor_ * C_) const$/;"	f	class:FlintTable
find_among	languages/steminternal.cc	/^SnowballStemImplementation::find_among(const symbol * pool,$/;"	f	class:Xapian::SnowballStemImplementation
find_among_b	languages/steminternal.cc	/^SnowballStemImplementation::find_among_b(const symbol * pool,$/;"	f	class:Xapian::SnowballStemImplementation
find_changed_block	backends/brass/brass_btreebase.cc	/^BrassTable_base::find_changed_block(uint4 * n)$/;"	f	class:BrassTable_base
find_changed_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::find_changed_block(uint4 * n)$/;"	f	class:ChertTable_base
find_changed_block	backends/flint/flint_btreebase.cc	/^FlintTable_base::find_changed_block(uint4 * n)$/;"	f	class:FlintTable_base
find_entry	backends/brass/brass_cursor.cc	/^BrassCursor::find_entry(const string &key)$/;"	f	class:BrassCursor
find_entry	backends/chert/chert_cursor.cc	/^ChertCursor::find_entry(const string &key)$/;"	f	class:ChertCursor
find_entry	backends/flint/flint_cursor.cc	/^FlintCursor::find_entry(const string &key)$/;"	f	class:FlintCursor
find_entry_ge	backends/brass/brass_cursor.cc	/^BrassCursor::find_entry_ge(const string &key)$/;"	f	class:BrassCursor
find_entry_ge	backends/chert/chert_cursor.cc	/^ChertCursor::find_entry_ge(const string &key)$/;"	f	class:ChertCursor
find_entry_ge	backends/flint/flint_cursor.cc	/^FlintCursor::find_entry_ge(const string &key)$/;"	f	class:FlintCursor
find_entry_lt	backends/brass/brass_cursor.h	/^	void find_entry_lt(const string &key) {$/;"	f	class:BrassCursor
find_entry_lt	backends/chert/chert_cursor.h	/^	void find_entry_lt(const string &key) {$/;"	f	class:ChertCursor
find_entry_lt	backends/flint/flint_cursor.h	/^	void find_entry_lt(const string &key) {$/;"	f	class:FlintCursor
find_in_block	backends/brass/brass_table.cc	/^BrassTable::find_in_block(const byte * p, Key key, bool leaf, int c)$/;"	f	class:BrassTable
find_in_block	backends/chert/chert_table.cc	/^ChertTable::find_in_block(const byte * p, Key key, bool leaf, int c)$/;"	f	class:ChertTable
find_in_block	backends/flint/flint_table.cc	/^int FlintTable::find_in_block(const byte * p, Key_ key, bool leaf, int c)$/;"	f	class:FlintTable
find_in_m	languages/compiler/tokeniser.c	/^static symbol * find_in_m(struct tokeniser * t, int n, symbol * p) {$/;"	f	file:
find_name	languages/compiler/analyser.c	/^static struct name * find_name(struct analyser * a) {$/;"	f	file:
find_next_match	matcher/multiandpostlist.cc	/^MultiAndPostList::find_next_match(Xapian::weight w_min)$/;"	f	class:MultiAndPostList
find_word	languages/compiler/tokeniser.c	/^static int find_word(int n, symbol * p) {$/;"	f	file:
findbreak	queryparser/lemon.c	/^static int findbreak(msg,min,max)$/;"	f	file:
finish_add_doc	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::finish_add_doc(Xapian::docid did, const Xapian::Document &document)$/;"	f	class:InMemoryDatabase
finished	backends/multi/multi_postlist.h	/^	bool   finished;$/;"	m	class:MultiPostList
first	include/xapian/expanddecider.h	/^    const ExpandDecider &first, &second;$/;"	m	class:Xapian::ExpandDeciderAnd
first_did	backends/brass/brass_postlist.cc	/^	Xapian::docid first_did;$/;"	m	class:Brass::PostlistChunkWriter	file:
first_did	backends/brass/brass_values.cc	/^    Xapian::docid first_did;$/;"	m	class:Brass::ValueUpdater	file:
first_did	backends/chert/chert_postlist.cc	/^	Xapian::docid first_did;$/;"	m	class:Chert::PostlistChunkWriter	file:
first_did	backends/chert/chert_values.cc	/^    Xapian::docid first_did;$/;"	m	class:ValueUpdater	file:
first_did	backends/flint/flint_postlist.cc	/^	Xapian::docid first_did;$/;"	m	class:FlintPostlistChunkWriter	file:
first_did_in_chunk	backends/brass/brass_postlist.h	/^	Xapian::docid first_did_in_chunk;$/;"	m	class:BrassPostList
first_did_in_chunk	backends/chert/chert_postlist.h	/^	Xapian::docid first_did_in_chunk;$/;"	m	class:ChertPostList
first_did_in_chunk	backends/flint/flint_postlist.h	/^	Xapian::docid first_did_in_chunk;$/;"	m	class:FlintPostList
first_nonopt	common/getopt.cc	/^static int first_nonopt;$/;"	v	file:
first_source	api/compactor.cc	/^    string first_source;$/;"	m	class:Xapian::Compactor::Internal	file:
firstdid	backends/brass/brass_compact.cc	/^    Xapian::docid firstdid;$/;"	m	class:BrassCompact::PostlistCursor	file:
firstdid	backends/chert/chert_compact.cc	/^    Xapian::docid firstdid;$/;"	m	class:ChertCompact::PostlistCursor	file:
firstdid	backends/flint/flint_compact.cc	/^    Xapian::docid firstdid;$/;"	m	class:FlintCompact::PostlistCursor	file:
firstitem	common/omenquireinternal.h	/^	Xapian::doccount firstitem;$/;"	m	class:Xapian::MSet::Internal
firstrule	queryparser/lemon.c	/^  struct rule *firstrule;    \/* Pointer to first rule in the grammar *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
firstset	queryparser/lemon.c	/^  char *firstset;          \/* First-set for all rules of this symbol *\/$/;"	m	struct:symbol	file:
fkp	api/editdistance.cc	/^    int * fkp;$/;"	m	class:edist_state	file:
fkp_cols	api/editdistance.cc	/^    int fkp_cols;$/;"	m	class:edist_state	file:
flag	common/gnu_getopt.h	/^    int * flag;$/;"	m	struct:option
flag_tab	examples/quest.cc	/^static qp_flag flag_tab[] = {$/;"	v	file:
flags	include/xapian/termgenerator.h	/^    enum flags {$/;"	g	class:Xapian::TermGenerator
flags	queryparser/queryparser_internal.cc	/^    unsigned flags;$/;"	m	class:State	file:
flags	queryparser/termgenerator_internal.h	/^    TermGenerator::flags flags;$/;"	m	class:Xapian::TermGenerator::Internal
flatten_subqs	api/omqueryinternal.cc	/^Xapian::Query::Internal::flatten_subqs()$/;"	f	class:Xapian::Query::Internal
flint	tests/harness/testrunner.h	/^    bool flint;$/;"	m	class:TestRunner
flint_blocksize_t	backends/flint/flint_types.h	/^typedef unsigned int flint_blocksize_t;$/;"	t
flint_docid_to_key	backends/flint/flint_utils.h	/^flint_docid_to_key(Xapian::docid did)$/;"	f
flint_doclen_t	backends/flint/flint_types.h	/^typedef unsigned int flint_doclen_t;$/;"	t
flint_revision_number_t	backends/flint/flint_types.h	/^typedef unsigned int flint_revision_number_t;$/;"	t
flint_tablesize_t	backends/flint/flint_types.h	/^typedef unsigned int flint_tablesize_t;$/;"	t
flstab	common/bitstream.cc	/^static const unsigned char flstab[256] = {$/;"	v	file:
flush	backends/brass/brass_inverter.cc	/^Inverter::flush(BrassPostListTable & table)$/;"	f	class:Inverter
flush	backends/brass/brass_postlist.cc	/^PostlistChunkWriter::flush(BrassTable *table)$/;"	f	class:PostlistChunkWriter
flush	backends/chert/chert_postlist.cc	/^PostlistChunkWriter::flush(ChertTable *table)$/;"	f	class:PostlistChunkWriter
flush	backends/flint/flint_postlist.cc	/^FlintPostlistChunkWriter::flush(FlintTable *table)$/;"	f	class:FlintPostlistChunkWriter
flush	include/xapian/database.h	/^	void flush() { commit(); }$/;"	f	class:Xapian::WritableDatabase
flush_all_post_lists	backends/brass/brass_inverter.cc	/^Inverter::flush_all_post_lists(BrassPostListTable & table)$/;"	f	class:Inverter
flush_db	backends/brass/brass_spelling.h	/^    void flush_db() {$/;"	f	class:BrassSpellingTable
flush_db	backends/brass/brass_synonym.h	/^    void flush_db() {$/;"	f	class:BrassSynonymTable
flush_db	backends/brass/brass_table.cc	/^BrassTable::flush_db()$/;"	f	class:BrassTable
flush_db	backends/chert/chert_spelling.h	/^    void flush_db() {$/;"	f	class:ChertSpellingTable
flush_db	backends/chert/chert_synonym.h	/^    void flush_db() {$/;"	f	class:ChertSynonymTable
flush_db	backends/chert/chert_table.cc	/^ChertTable::flush_db()$/;"	f	class:ChertTable
flush_db	backends/flint/flint_spelling.h	/^    void flush_db() {$/;"	f	class:FlintSpellingTable
flush_db	backends/flint/flint_synonym.h	/^    void flush_db() {$/;"	f	class:FlintSynonymTable
flush_db	backends/flint/flint_table.cc	/^FlintTable::flush_db()$/;"	f	class:FlintTable
flush_doclengths	backends/brass/brass_inverter.cc	/^Inverter::flush_doclengths(BrassPostListTable & table)$/;"	f	class:Inverter
flush_post_list	backends/brass/brass_inverter.cc	/^Inverter::flush_post_list(BrassPostListTable & table, const string & term)$/;"	f	class:Inverter
flush_post_lists	backends/brass/brass_inverter.cc	/^Inverter::flush_post_lists(BrassPostListTable & table, const string & pfx)$/;"	f	class:Inverter
flush_postlist_changes	backends/brass/brass_database.cc	/^BrassWritableDatabase::flush_postlist_changes() const$/;"	f	class:BrassWritableDatabase
flush_postlist_changes	backends/chert/chert_database.cc	/^ChertWritableDatabase::flush_postlist_changes() const$/;"	f	class:ChertWritableDatabase
flush_postlist_changes	backends/flint/flint_database.cc	/^FlintWritableDatabase::flush_postlist_changes() const$/;"	f	class:FlintWritableDatabase
flush_threshold	backends/brass/brass_database.h	/^	Xapian::doccount flush_threshold;$/;"	m	class:BrassWritableDatabase
flush_threshold	backends/chert/chert_database.h	/^	Xapian::doccount flush_threshold;$/;"	m	class:ChertWritableDatabase
flush_threshold	backends/flint/flint_database.h	/^	Xapian::doccount flush_threshold;$/;"	m	class:FlintWritableDatabase
fn	matcher/msetcmp.h	/^    mset_cmp fn;$/;"	m	class:MSetCmp
form_key	backends/brass/brass_table.cc	/^void BrassTable::form_key(const string & key) const$/;"	f	class:BrassTable
form_key	backends/brass/brass_table.h	/^    void form_key(const std::string & key_) {$/;"	f	class:Brass::Item_wr
form_key	backends/chert/chert_table.cc	/^void ChertTable::form_key(const string & key) const$/;"	f	class:ChertTable
form_key	backends/chert/chert_table.h	/^    void form_key(const std::string & key_) {$/;"	f	class:Item_wr
form_key	backends/flint/flint_table.cc	/^void FlintTable::form_key(const string & key) const$/;"	f	class:FlintTable
form_key	backends/flint/flint_table.h	/^    void form_key(const std::string & key_) {$/;"	f	class:Item_wr_
form_null_key	backends/brass/brass_table.h	/^    void form_null_key(uint4 n) {$/;"	f	class:Brass::Item_wr
form_null_key	backends/chert/chert_table.h	/^    void form_null_key(uint4 n) {$/;"	f	class:Item_wr
form_null_key	backends/flint/flint_table.h	/^    void form_null_key(uint4 n) {$/;"	f	class:Item_wr_
format	common/str.cc	/^format(const char * fmt, T value)$/;"	f	namespace:Xapian::Internal
format_doc_termlist	tests/termgentest.cc	/^format_doc_termlist(const Xapian::Document & doc)$/;"	f	file:
fplp	queryparser/lemon.c	/^  struct plink *fplp;      \/* Follow-set forward propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
fragment	backends/brass/brass_spelling.h	/^    fragment() { }$/;"	f	struct:Brass::fragment
fragment	backends/brass/brass_spelling.h	/^    fragment(char data_[4]) { std::memcpy(data, data_, 4); }$/;"	f	struct:Brass::fragment
fragment	backends/brass/brass_spelling.h	/^struct fragment {$/;"	s	namespace:Brass
fragment	backends/chert/chert_spelling.h	/^    fragment() { }$/;"	f	struct:fragment
fragment	backends/chert/chert_spelling.h	/^    fragment(char data_[4]) { std::memcpy(data, data_, 4); }$/;"	f	struct:fragment
fragment	backends/chert/chert_spelling.h	/^struct fragment {$/;"	s
free_block	backends/brass/brass_btreebase.cc	/^BrassTable_base::free_block(uint4 n)$/;"	f	class:BrassTable_base
free_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::free_block(uint4 n)$/;"	f	class:ChertTable_base
free_block	backends/flint/flint_btreebase.cc	/^FlintTable_base::free_block(uint4 n)$/;"	f	class:FlintTable_base
freelist	queryparser/lemon.c	/^static struct config *freelist = 0;      \/* List of free configurations *\/$/;"	v	typeref:struct:config	file:
freeze	common/bitstream.h	/^    std::string & freeze() {$/;"	f	class:Xapian::BitWriter
freq	common/valuestats.h	/^    Xapian::doccount freq;$/;"	m	struct:ValueStats
freq_deltas	backends/chert/chert_database.h	/^		freq_deltas;$/;"	m	class:ChertWritableDatabase
freq_deltas	backends/flint/flint_database.h	/^		freq_deltas;$/;"	m	class:FlintWritableDatabase
freq_edit_lower_bound	api/omdatabase.cc	/^freq_edit_lower_bound(const vector<unsigned> & a, const vector<unsigned> & b)$/;"	f	namespace:Xapian
freq_real	bin/xapian-check-brass.cc	/^    Xapian::doccount freq_real;$/;"	m	struct:VStats	file:
freq_real	bin/xapian-check-chert.cc	/^    Xapian::doccount freq_real;$/;"	m	struct:VStats	file:
frequency	api/matchspy.cc	/^    Xapian::doccount frequency;$/;"	m	class:StringAndFrequency	file:
friends	docs/apidoc/html/classXapian_1_1ESetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	docs/apidoc/html/classXapian_1_1MSetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	docs/apidoc/html/classXapian_1_1PositionIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	docs/apidoc/html/classXapian_1_1PostingIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
from	queryparser/lemon.c	/^  struct s_x1node **from;  \/* Previous link *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
from	queryparser/lemon.c	/^  struct s_x2node **from;  \/* Previous link *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
from	queryparser/lemon.c	/^  struct s_x3node **from;  \/* Previous link *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
from	queryparser/lemon.c	/^  struct s_x4node **from;  \/* Previous link *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
fstat	common/safesysstat.h	/^# undef fstat$/;"	d
fstat	common/safesysstat.h	/^#define fstat(/;"	d
full_compaction	backends/brass/brass_table.h	/^	bool full_compaction;$/;"	m	class:BrassTable
full_compaction	backends/chert/chert_table.h	/^	bool full_compaction;$/;"	m	class:ChertTable
full_compaction	backends/flint/flint_table.h	/^	bool full_compaction;$/;"	m	class:FlintTable
fullcopy_count	common/replication.h	/^    int fullcopy_count;$/;"	m	struct:Xapian::ReplicationInfo
func	common/debuglog.h	/^    std::string func;$/;"	m	class:DebugLogFunc
func	common/debuglog.h	/^    std::string func;$/;"	m	class:DebugLogFuncVoid
func	queryparser/lemon.c	/^  void(*func)();$/;"	m	struct:s_options	file:
func-members	docs/apidoc/html/dbfactory_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/enquire_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Auto.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Brass.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Chert.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Flint.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1InMemory.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Remote.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/namespaceXapian_1_1Unicode.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/positioniterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/postingiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/queryparser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/termiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/valueiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/apidoc/html/xapian_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func_append	config.status	/^func_append ()\\$/;"	f
func_append	configure	/^func_append ()\\$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_append	ltmain.sh	/^func_append ()$/;"	f
func_append_quoted	config.status	/^func_append_quoted ()\\$/;"	f
func_append_quoted	configure	/^func_append_quoted ()\\$/;"	f
func_append_quoted	libtool	/^func_append_quoted ()$/;"	f
func_append_quoted	ltmain.sh	/^func_append_quoted ()$/;"	f
func_arith	config.status	/^func_arith ()\\$/;"	f
func_arith	configure	/^func_arith ()\\$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_arith	ltmain.sh	/^func_arith ()$/;"	f
func_basename	config.status	/^func_basename ()\\$/;"	f
func_basename	configure	/^func_basename ()\\$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_basename	ltmain.sh	/^func_basename ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libtool	/^func_cygpath ()$/;"	f
func_cygpath	ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	config.status	/^func_dirname ()\\$/;"	f
func_dirname	configure	/^func_dirname ()\\$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname	ltmain.sh	/^func_dirname ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_echo_all	libtool	/^func_echo_all ()$/;"	f
func_echo_all	ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_exec_program	bin/xapian-check	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-chert-update	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-compact	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-inspect	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-progsrv	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-replicate	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-replicate-server	/^func_exec_program ()$/;"	f
func_exec_program	bin/xapian-tcpsrv	/^func_exec_program ()$/;"	f
func_exec_program	examples/copydatabase	/^func_exec_program ()$/;"	f
func_exec_program	examples/delve	/^func_exec_program ()$/;"	f
func_exec_program	examples/quest	/^func_exec_program ()$/;"	f
func_exec_program	examples/simpleexpand	/^func_exec_program ()$/;"	f
func_exec_program	examples/simpleindex	/^func_exec_program ()$/;"	f
func_exec_program	examples/simplesearch	/^func_exec_program ()$/;"	f
func_exec_program	examples/xapian-metadata	/^func_exec_program ()$/;"	f
func_exec_program	libtool	/^func_exec_program ()$/;"	f
func_exec_program	ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	bin/xapian-check	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-chert-update	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-compact	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-inspect	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-progsrv	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-replicate	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-replicate-server	/^func_exec_program_core ()$/;"	f
func_exec_program_core	bin/xapian-tcpsrv	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/copydatabase	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/delve	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/quest	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/simpleexpand	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/simpleindex	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/simplesearch	/^func_exec_program_core ()$/;"	f
func_exec_program_core	examples/xapian-metadata	/^func_exec_program_core ()$/;"	f
func_exec_program_core	libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	bin/xapian-check	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-chert-update	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-compact	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-inspect	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-progsrv	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-replicate	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-replicate-server	/^func_fallback_echo ()$/;"	f
func_fallback_echo	bin/xapian-tcpsrv	/^func_fallback_echo ()$/;"	f
func_fallback_echo	config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/copydatabase	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/delve	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/quest	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/simpleexpand	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/simpleindex	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/simplesearch	/^func_fallback_echo ()$/;"	f
func_fallback_echo	examples/xapian-metadata	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	config.status	/^func_len ()\\$/;"	f
func_len	configure	/^func_len ()\\$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_len	ltmain.sh	/^func_len ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()\\$/;"	f
func_lo2o	configure	/^func_lo2o ()\\$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_lo2o	ltmain.sh	/^func_lo2o ()$/;"	f
func_lt_dump_args	bin/xapian-check	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-chert-update	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-compact	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-inspect	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-progsrv	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-replicate	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-replicate-server	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	bin/xapian-tcpsrv	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/copydatabase	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/delve	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/quest	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/simpleexpand	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/simpleindex	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/simplesearch	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	examples/xapian-metadata	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	bin/xapian-check	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-chert-update	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-compact	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-inspect	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-progsrv	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-replicate	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-replicate-server	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	bin/xapian-tcpsrv	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/copydatabase	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/delve	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/quest	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/simpleexpand	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/simpleindex	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/simplesearch	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	examples/xapian-metadata	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	libtool	/^func_relative_path ()$/;"	f
func_relative_path	ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	config.status	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	configure	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	libtool	/^func_split_long_opt ()$/;"	f
func_split_long_opt	ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_short_opt	config.status	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	configure	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	libtool	/^func_split_short_opt ()$/;"	f
func_split_short_opt	ltmain.sh	/^func_split_short_opt ()$/;"	f
func_stripname	config.status	/^func_stripname ()\\$/;"	f
func_stripname	configure	/^func_stripname ()\\$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_stripname	ltmain.sh	/^func_stripname ()$/;"	f
func_stripname_cnf	configure	/^func_stripname_cnf ()$/;"	f
func_to_host_file	libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	config.status	/^func_xform ()\\$/;"	f
func_xform	configure	/^func_xform ()\\$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
func_xform	ltmain.sh	/^func_xform ()$/;"	f
function	languages/compiler/header.h	/^    struct name * function;$/;"	m	struct:amongvec	typeref:struct:amongvec::name
fws	queryparser/lemon.c	/^  char *fws;               \/* Follow-set for this configuration only *\/$/;"	m	struct:config	file:
g_AEI	languages/finnish.cc	/^static const unsigned char g_AEI[] = { 17, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8 };$/;"	v	file:
g_AEIO	languages/italian.cc	/^static const unsigned char g_AEIO[] = { 17, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2 };$/;"	v	file:
g_AIOU	languages/kraaij_pohlmann.cc	/^static const unsigned char g_AIOU[] = { 1, 65, 16 };$/;"	v	file:
g_AOU	languages/kraaij_pohlmann.cc	/^static const unsigned char g_AOU[] = { 1, 64, 16 };$/;"	v	file:
g_CG	languages/italian.cc	/^static const unsigned char g_CG[] = { 17 };$/;"	v	file:
g_U	languages/turkish.cc	/^static const unsigned char g_U[] = { 1, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_V1	languages/finnish.cc	/^static const unsigned char g_V1[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_V2	languages/finnish.cc	/^static const unsigned char g_V2[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_keep_with_s	languages/french.cc	/^static const unsigned char g_keep_with_s[] = { 1, 65, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_particle_end	languages/finnish.cc	/^static const unsigned char g_particle_end[] = { 17, 97, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32 };$/;"	v	file:
g_random_seed	tests/soaktest/soaktest.cc	/^unsigned int g_random_seed;$/;"	v
g_s_ending	languages/danish.cc	/^static const unsigned char g_s_ending[] = { 239, 254, 42, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16 };$/;"	v	file:
g_s_ending	languages/german.cc	/^static const unsigned char g_s_ending[] = { 117, 30, 5 };$/;"	v	file:
g_s_ending	languages/german2.cc	/^static const unsigned char g_s_ending[] = { 117, 30, 5 };$/;"	v	file:
g_s_ending	languages/norwegian.cc	/^static const unsigned char g_s_ending[] = { 119, 125, 149, 1 };$/;"	v	file:
g_s_ending	languages/swedish.cc	/^static const unsigned char g_s_ending[] = { 119, 127, 149 };$/;"	v	file:
g_st_ending	languages/german.cc	/^static const unsigned char g_st_ending[] = { 117, 30, 4 };$/;"	v	file:
g_st_ending	languages/german2.cc	/^static const unsigned char g_st_ending[] = { 117, 30, 4 };$/;"	v	file:
g_v	languages/danish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	languages/dutch.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v	languages/english.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	languages/french.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 130, 103, 8, 5 };$/;"	v	file:
g_v	languages/german.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32, 8 };$/;"	v	file:
g_v	languages/german2.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32, 8 };$/;"	v	file:
g_v	languages/hungarian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 52, 14 };$/;"	v	file:
g_v	languages/italian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 8, 2, 1 };$/;"	v	file:
g_v	languages/kraaij_pohlmann.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	languages/norwegian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 128 };$/;"	v	file:
g_v	languages/porter.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1 };$/;"	v	file:
g_v	languages/portuguese.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 19, 12, 2 };$/;"	v	file:
g_v	languages/romanian.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 32, 0, 0, 4 };$/;"	v	file:
g_v	languages/russian.cc	/^static const unsigned char g_v[] = { 33, 65, 8, 232 };$/;"	v	file:
g_v	languages/spanish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 17, 4, 10 };$/;"	v	file:
g_v	languages/swedish.cc	/^static const unsigned char g_v[] = { 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 32 };$/;"	v	file:
g_v_I	languages/dutch.cc	/^static const unsigned char g_v_I[] = { 1, 0, 0, 17, 65, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_v_WX	languages/kraaij_pohlmann.cc	/^static const unsigned char g_v_WX[] = { 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	languages/english.cc	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_WXY	languages/porter.cc	/^static const unsigned char g_v_WXY[] = { 1, 17, 65, 208, 1 };$/;"	v	file:
g_v_j	languages/dutch.cc	/^static const unsigned char g_v_j[] = { 17, 67, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128 };$/;"	v	file:
g_valid_LI	languages/english.cc	/^static const unsigned char g_valid_LI[] = { 55, 141, 2 };$/;"	v	file:
g_vowel	languages/turkish.cc	/^static const unsigned char g_vowel[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 8, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel1	languages/turkish.cc	/^static const unsigned char g_vowel1[] = { 1, 64, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel2	languages/turkish.cc	/^static const unsigned char g_vowel2[] = { 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130 };$/;"	v	file:
g_vowel3	languages/turkish.cc	/^static const unsigned char g_vowel3[] = { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
g_vowel4	languages/turkish.cc	/^static const unsigned char g_vowel4[] = { 17 };$/;"	v	file:
g_vowel5	languages/turkish.cc	/^static const unsigned char g_vowel5[] = { 65 };$/;"	v	file:
g_vowel6	languages/turkish.cc	/^static const unsigned char g_vowel6[] = { 65 };$/;"	v	file:
gen_word	tests/perftest/perftest_randomidx.cc	/^gen_word(unsigned int length, unsigned int char_range)$/;"	f	file:
generate	languages/compiler/generator.c	/^static void generate(struct generator * g, struct node * p) {$/;"	f	file:
generate_AE	languages/compiler/generator.c	/^static void generate_AE(struct generator * g, struct node * p) {$/;"	f	file:
generate_GO	languages/compiler/generator.c	/^static void generate_GO(struct generator * g, struct node * p, int style) {$/;"	f	file:
generate_GO_grouping	languages/compiler/generator.c	/^static void generate_GO_grouping(struct generator * g, struct node * p, int is_goto, int complement) {$/;"	f	file:
generate_among	languages/compiler/generator.c	/^static void generate_among(struct generator * g, struct node * p) {$/;"	f	file:
generate_among_pool	languages/compiler/generator.c	/^static void generate_among_pool(struct generator * g, struct among * x) {$/;"	f	file:
generate_among_table	languages/compiler/generator.c	/^static void generate_among_table(struct generator * g, struct among * x) {$/;"	f	file:
generate_amongs	languages/compiler/generator.c	/^static void generate_amongs(struct generator * g) {$/;"	f	file:
generate_and	languages/compiler/generator.c	/^static void generate_and(struct generator * g, struct node * p) {$/;"	f	file:
generate_assignfrom	languages/compiler/generator.c	/^static void generate_assignfrom(struct generator * g, struct node * p) {$/;"	f	file:
generate_assignto	languages/compiler/generator.c	/^static void generate_assignto(struct generator * g, struct node * p) {$/;"	f	file:
generate_atleast	languages/compiler/generator.c	/^static void generate_atleast(struct generator * g, struct node * p) {$/;"	f	file:
generate_atlimit	languages/compiler/generator.c	/^static void generate_atlimit(struct generator * g, struct node * p) {$/;"	f	file:
generate_atmark	languages/compiler/generator.c	/^static void generate_atmark(struct generator * g, struct node * p) {$/;"	f	file:
generate_backwards	languages/compiler/generator.c	/^static void generate_backwards(struct generator * g, struct node * p) {$/;"	f	file:
generate_booltest	languages/compiler/generator.c	/^static void generate_booltest(struct generator * g, struct node * p) {$/;"	f	file:
generate_bra	languages/compiler/generator.c	/^static void generate_bra(struct generator * g, struct node * p) {$/;"	f	file:
generate_call	languages/compiler/generator.c	/^static void generate_call(struct generator * g, struct node * p) {$/;"	f	file:
generate_close	languages/compiler/generator.c	/^static void generate_close(struct generator * g) {$/;"	f	file:
generate_create	languages/compiler/generator.c	/^static void generate_create(struct generator * g) {$/;"	f	file:
generate_create_and_close_templates	languages/compiler/generator.c	/^static void generate_create_and_close_templates(struct generator * g) {$/;"	f	file:
generate_data_address	languages/compiler/generator.c	/^static void generate_data_address(struct generator * g, struct node * p) {$/;"	f	file:
generate_debug	languages/compiler/generator.c	/^static void generate_debug(struct generator * g, struct node * p) {$/;"	f	file:
generate_define	languages/compiler/generator.c	/^static void generate_define(struct generator * g, struct node * p) {$/;"	f	file:
generate_delete	languages/compiler/generator.c	/^static void generate_delete(struct generator * g, struct node * p) {$/;"	f	file:
generate_do	languages/compiler/generator.c	/^static void generate_do(struct generator * g, struct node * p) {$/;"	f	file:
generate_dollar	languages/compiler/generator.c	/^static void generate_dollar(struct generator * g, struct node * p) {$/;"	f	file:
generate_fail	languages/compiler/generator.c	/^static void generate_fail(struct generator * g, struct node * p) {$/;"	f	file:
generate_false	languages/compiler/generator.c	/^static void generate_false(struct generator * g, struct node * p) {$/;"	f	file:
generate_grouping	languages/compiler/generator.c	/^static void generate_grouping(struct generator * g, struct node * p, int complement) {$/;"	f	file:
generate_grouping_table	languages/compiler/generator.c	/^static void generate_grouping_table(struct generator * g, struct grouping * q) {$/;"	f	file:
generate_groupings	languages/compiler/generator.c	/^static void generate_groupings(struct generator * g) {$/;"	f	file:
generate_head	languages/compiler/generator.c	/^static void generate_head(struct generator * g) {$/;"	f	file:
generate_header_file	languages/compiler/generator.c	/^static void generate_header_file(struct generator * g) {$/;"	f	file:
generate_hop	languages/compiler/generator.c	/^static void generate_hop(struct generator * g, struct node * p) {$/;"	f	file:
generate_insert	languages/compiler/generator.c	/^static void generate_insert(struct generator * g, struct node * p, int style) {$/;"	f	file:
generate_integer_assign	languages/compiler/generator.c	/^static void generate_integer_assign(struct generator * g, struct node * p, char * s) {$/;"	f	file:
generate_integer_test	languages/compiler/generator.c	/^static void generate_integer_test(struct generator * g, struct node * p, char * s) {$/;"	f	file:
generate_leftslice	languages/compiler/generator.c	/^static void generate_leftslice(struct generator * g, struct node * p) {$/;"	f	file:
generate_literalstring	languages/compiler/generator.c	/^static void generate_literalstring(struct generator * g, struct node * p) {$/;"	f	file:
generate_loop	languages/compiler/generator.c	/^static void generate_loop(struct generator * g, struct node * p) {$/;"	f	file:
generate_namedstring	languages/compiler/generator.c	/^static void generate_namedstring(struct generator * g, struct node * p) {$/;"	f	file:
generate_next	languages/compiler/generator.c	/^static void generate_next(struct generator * g, struct node * p) {$/;"	f	file:
generate_not	languages/compiler/generator.c	/^static void generate_not(struct generator * g, struct node * p) {$/;"	f	file:
generate_or	languages/compiler/generator.c	/^static void generate_or(struct generator * g, struct node * p) {$/;"	f	file:
generate_program_c	languages/compiler/generator.c	/^extern void generate_program_c(struct generator * g) {$/;"	f
generate_repeat	languages/compiler/generator.c	/^static void generate_repeat(struct generator * g, struct node * p, int atleast_case) {$/;"	f	file:
generate_rightslice	languages/compiler/generator.c	/^static void generate_rightslice(struct generator * g, struct node * p) {$/;"	f	file:
generate_routine_headers	languages/compiler/generator.c	/^static void generate_routine_headers(struct generator * g) {$/;"	f	file:
generate_set	languages/compiler/generator.c	/^static void generate_set(struct generator * g, struct node * p) {$/;"	f	file:
generate_setlimit	languages/compiler/generator.c	/^static void generate_setlimit(struct generator * g, struct node * p) {$/;"	f	file:
generate_setmark	languages/compiler/generator.c	/^static void generate_setmark(struct generator * g, struct node * p) {$/;"	f	file:
generate_slicefrom	languages/compiler/generator.c	/^static void generate_slicefrom(struct generator * g, struct node * p) {$/;"	f	file:
generate_sliceto	languages/compiler/generator.c	/^static void generate_sliceto(struct generator * g, struct node * p) {$/;"	f	file:
generate_start_comment	languages/compiler/generator.c	/^static void generate_start_comment(struct generator * g) {$/;"	f	file:
generate_substring	languages/compiler/generator.c	/^static void generate_substring(struct generator * g, struct node * p) {$/;"	f	file:
generate_test	languages/compiler/generator.c	/^static void generate_test(struct generator * g, struct node * p) {$/;"	f	file:
generate_tolimit	languages/compiler/generator.c	/^static void generate_tolimit(struct generator * g, struct node * p) {$/;"	f	file:
generate_tomark	languages/compiler/generator.c	/^static void generate_tomark(struct generator * g, struct node * p) {$/;"	f	file:
generate_try	languages/compiler/generator.c	/^static void generate_try(struct generator * g, struct node * p) {$/;"	f	file:
generate_unset	languages/compiler/generator.c	/^static void generate_unset(struct generator * g, struct node * p) {$/;"	f	file:
generated	tests/harness/testrunner.h	/^    bool generated;$/;"	m	class:TestRunner
generator	languages/compiler/header.h	/^struct generator {$/;"	s
get	include/xapian/base.h	/^inline T *RefCntPtr<T>::get() const$/;"	f	class:Xapian::Internal::RefCntPtr
getK	backends/brass/brass_table.h	/^#define getK(/;"	d
getK	backends/chert/chert_table.h	/^#define getK(/;"	d
getK	backends/flint/flint_table.h	/^#define getK(/;"	d
get_address	backends/brass/brass_table.h	/^    T get_address() const { return p; }$/;"	f	class:Brass::Item_base
get_address	backends/brass/brass_table.h	/^    const byte * get_address() const { return p; }$/;"	f	class:Brass::Key
get_address	backends/chert/chert_table.h	/^    T get_address() const { return p; }$/;"	f	class:Item_base
get_address	backends/chert/chert_table.h	/^    const byte * get_address() const { return p; }$/;"	f	class:Key
get_address	backends/flint/flint_table.h	/^    T get_address() const { return p; }$/;"	f	class:Item_base_
get_address	backends/flint/flint_table.h	/^    const byte * get_address() const { return p; }$/;"	f	class:Key_
get_all_values	backends/brass/brass_values.cc	/^BrassValueManager::get_all_values(map<Xapian::valueno, string> & values,$/;"	f	class:BrassValueManager
get_all_values	backends/chert/chert_values.cc	/^ChertValueManager::get_all_values(map<Xapian::valueno, string> & values,$/;"	f	class:ChertValueManager
get_all_values	backends/flint/flint_values.cc	/^FlintValueTable::get_all_values(map<Xapian::valueno, string> & values,$/;"	f	class:FlintValueTable
get_approx_size	api/maptermlist.h	/^	Xapian::termcount get_approx_size() const {$/;"	f	class:MapTermList
get_approx_size	api/matchspy.cc	/^    Xapian::termcount get_approx_size() const { unsupported_method(); return 0; }$/;"	f	class:StringAndFreqTermList
get_approx_size	api/matchspy.cc	/^    Xapian::termcount get_approx_size() const { unsupported_method(); return 0; }$/;"	f	class:ValueCountTermList
get_approx_size	backends/alltermslist.cc	/^AllTermsList::get_approx_size() const$/;"	f	class:AllTermsList
get_approx_size	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::get_approx_size() const$/;"	f	class:BrassSpellingTermList
get_approx_size	backends/brass/brass_termlist.cc	/^BrassTermList::get_approx_size() const$/;"	f	class:BrassTermList
get_approx_size	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_approx_size() const$/;"	f	class:ChertSpellingTermList
get_approx_size	backends/chert/chert_termlist.cc	/^ChertTermList::get_approx_size() const$/;"	f	class:ChertTermList
get_approx_size	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::get_approx_size() const$/;"	f	class:FlintSpellingTermList
get_approx_size	backends/flint/flint_termlist.cc	/^FlintTermList::get_approx_size() const$/;"	f	class:FlintTermList
get_approx_size	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_approx_size() const$/;"	f	class:InMemoryTermList
get_approx_size	backends/multi/multi_termlist.cc	/^MultiTermList::get_approx_size() const$/;"	f	class:MultiTermList
get_approx_size	backends/remote/net_termlist.cc	/^NetworkTermList::get_approx_size() const$/;"	f	class:NetworkTermList
get_approx_size	common/vectortermlist.h	/^	Xapian::termcount get_approx_size() const {$/;"	f	class:VectorTermList
get_approx_size	expand/ortermlist.cc	/^OrTermList::get_approx_size() const$/;"	f	class:OrTermList
get_available_languages	languages/stem.cc	/^Stem::get_available_languages()$/;"	f	class:Xapian::Stem
get_average_length	common/weightinternal.h	/^    Xapian::doclength get_average_length() const {$/;"	f	class:Xapian::Weight::Internal
get_average_length	include/xapian/weight.h	/^    Xapian::doclength get_average_length() const { return average_length_; }$/;"	f	class:Xapian::Weight
get_avlength	api/omdatabase.cc	/^Database::get_avlength() const$/;"	f	class:Xapian::Database
get_avlength	backends/brass/brass_database.cc	/^BrassDatabase::get_avlength() const$/;"	f	class:BrassDatabase
get_avlength	backends/chert/chert_database.cc	/^ChertDatabase::get_avlength() const$/;"	f	class:ChertDatabase
get_avlength	backends/flint/flint_database.cc	/^FlintDatabase::get_avlength() const$/;"	f	class:FlintDatabase
get_avlength	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_avlength() const$/;"	f	class:InMemoryDatabase
get_avlength	backends/remote/remote-database.cc	/^RemoteDatabase::get_avlength() const$/;"	f	class:RemoteDatabase
get_avlength	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_avlength() const$/;"	f	class:ConstDatabaseWrapper
get_b_utf8	languages/steminternal.cc	/^int SnowballStemImplementation::get_b_utf8(int * slot) {$/;"	f	class:Xapian::SnowballStemImplementation
get_bit_map_size	backends/brass/brass_btreebase.h	/^	uint4 get_bit_map_size() const { return bit_map_size; }$/;"	f	class:BrassTable_base
get_bit_map_size	backends/chert/chert_btreebase.h	/^	uint4 get_bit_map_size() const { return bit_map_size; }$/;"	f	class:ChertTable_base
get_bit_map_size	backends/flint/flint_btreebase.h	/^	uint4 get_bit_map_size() const { return bit_map_size; }$/;"	f	class:FlintTable_base
get_block_size	backends/brass/brass_btreebase.h	/^	uint4 get_block_size() const { return block_size; }$/;"	f	class:BrassTable_base
get_block_size	backends/brass/brass_table.h	/^	unsigned int get_block_size() const { return block_size; }$/;"	f	class:BrassTable
get_block_size	backends/chert/chert_btreebase.h	/^	uint4 get_block_size() const { return block_size; }$/;"	f	class:ChertTable_base
get_block_size	backends/chert/chert_table.h	/^	unsigned int get_block_size() const { return block_size; }$/;"	f	class:ChertTable
get_block_size	backends/flint/flint_btreebase.h	/^	uint4 get_block_size() const { return block_size; }$/;"	f	class:FlintTable_base
get_block_size	backends/flint/flint_table.h	/^	unsigned int get_block_size() const { return block_size; }$/;"	f	class:FlintTable
get_case_type	include/xapian/unicode.h	/^    inline int get_case_type(int info) { return ((info & 0xe0) >> 5); }$/;"	f	namespace:Xapian::Unicode::Internal
get_category	include/xapian/unicode.h	/^    inline category get_category(int info) { return static_cast<category>(info & 0x1f); }$/;"	f	namespace:Xapian::Unicode::Internal
get_category	include/xapian/unicode.h	/^inline category get_category(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
get_cfdelta	backends/brass/brass_inverter.h	/^	Xapian::termcount_diff get_cfdelta() const { return cf_delta; }$/;"	f	class:Inverter::PostingChanges
get_cfdelta	backends/brass/brass_inverter.h	/^    Xapian::termcount_diff get_cfdelta(const std::string & term) const {$/;"	f	class:Inverter
get_changeset	tests/api_replicate.cc	/^get_changeset(const string & changesetpath,$/;"	f	file:
get_changeset_revisions	backends/brass/brass_database.cc	/^BrassDatabase::get_changeset_revisions(const string & path,$/;"	f	class:BrassDatabase
get_changeset_revisions	backends/chert/chert_database.cc	/^ChertDatabase::get_changeset_revisions(const string & path,$/;"	f	class:ChertDatabase
get_changeset_revisions	backends/flint/flint_database.cc	/^FlintDatabase::get_changeset_revisions(const string & path,$/;"	f	class:FlintDatabase
get_character_info	unicode/unicode-data.cc	/^Xapian::Unicode::Internal::get_character_info(unsigned ch)$/;"	f	class:Xapian::Unicode::Internal
get_chunk	backends/brass/brass_postlist.cc	/^BrassPostListTable::get_chunk(const string &tname,$/;"	f	class:BrassPostListTable
get_chunk	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_chunk(const string &tname,$/;"	f	class:ChertPostListTable
get_chunk	backends/flint/flint_postlist.cc	/^FlintPostListTable::get_chunk(const string &tname,$/;"	f	class:FlintPostListTable
get_chunk_containing_did	backends/brass/brass_values.cc	/^BrassValueManager::get_chunk_containing_did(Xapian::valueno slot,$/;"	f	class:BrassValueManager
get_chunk_containing_did	backends/chert/chert_values.cc	/^ChertValueManager::get_chunk_containing_did(Xapian::valueno slot,$/;"	f	class:ChertValueManager
get_cjk	queryparser/cjk-tokenizer.cc	/^CJK::get_cjk(Xapian::Utf8Iterator &it)$/;"	f	class:CJK
get_collapse_count	api/omenquire.cc	/^MSetIterator::get_collapse_count() const$/;"	f	class:Xapian::MSetIterator
get_collapse_count	matcher/collapser.cc	/^Collapser::get_collapse_count(const string & collapse_key, int percent_cutoff,$/;"	f	class:Collapser
get_collapse_count	matcher/collapser.h	/^    Xapian::doccount get_collapse_count() const { return collapse_count; }$/;"	f	class:CollapseData
get_collapse_key	api/omenquire.cc	/^MSetIterator::get_collapse_key() const$/;"	f	class:Xapian::MSetIterator
get_collapse_key	api/postlist.cc	/^PostingIterator::Internal::get_collapse_key() const$/;"	f	class:Xapian::PostingIterator::Internal
get_collapse_key	matcher/mergepostlist.cc	/^MergePostList::get_collapse_key() const$/;"	f	class:MergePostList
get_collapse_key	matcher/msetpostlist.cc	/^MSetPostList::get_collapse_key() const$/;"	f	class:MSetPostList
get_collection_freq	api/omdatabase.cc	/^Database::get_collection_freq(const string & tname) const$/;"	f	class:Xapian::Database
get_collection_freq	api/termlist.cc	/^TermIterator::Internal::get_collection_freq() const$/;"	f	class:Xapian::TermIterator::Internal
get_collection_freq	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::get_collection_freq() const$/;"	f	class:BrassAllTermsList
get_collection_freq	backends/brass/brass_database.cc	/^BrassDatabase::get_collection_freq(const string & term) const$/;"	f	class:BrassDatabase
get_collection_freq	backends/brass/brass_database.cc	/^BrassWritableDatabase::get_collection_freq(const string & term) const$/;"	f	class:BrassWritableDatabase
get_collection_freq	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::get_collection_freq() const$/;"	f	class:BrassMetadataTermList
get_collection_freq	backends/brass/brass_postlist.cc	/^BrassPostListTable::get_collection_freq(const string & term) const$/;"	f	class:BrassPostListTable
get_collection_freq	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::get_collection_freq() const$/;"	f	class:BrassSpellingTermList
get_collection_freq	backends/brass/brass_spellingwordslist.cc	/^BrassSpellingWordsList::get_collection_freq() const$/;"	f	class:BrassSpellingWordsList
get_collection_freq	backends/brass/brass_synonym.cc	/^BrassSynonymTermList::get_collection_freq() const$/;"	f	class:BrassSynonymTermList
get_collection_freq	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::get_collection_freq() const$/;"	f	class:ChertAllTermsList
get_collection_freq	backends/chert/chert_database.cc	/^ChertDatabase::get_collection_freq(const string & term) const$/;"	f	class:ChertDatabase
get_collection_freq	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_collection_freq(const string & tname) const$/;"	f	class:ChertWritableDatabase
get_collection_freq	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::get_collection_freq() const$/;"	f	class:ChertMetadataTermList
get_collection_freq	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_collection_freq(const string & term) const$/;"	f	class:ChertPostListTable
get_collection_freq	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_collection_freq() const$/;"	f	class:ChertSpellingTermList
get_collection_freq	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::get_collection_freq() const$/;"	f	class:ChertSpellingWordsList
get_collection_freq	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::get_collection_freq() const$/;"	f	class:ChertSynonymTermList
get_collection_freq	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::get_collection_freq() const$/;"	f	class:FlintAllTermsList
get_collection_freq	backends/flint/flint_database.cc	/^FlintDatabase::get_collection_freq(const string & term) const$/;"	f	class:FlintDatabase
get_collection_freq	backends/flint/flint_database.cc	/^FlintWritableDatabase::get_collection_freq(const string & tname) const$/;"	f	class:FlintWritableDatabase
get_collection_freq	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::get_collection_freq() const$/;"	f	class:FlintMetadataTermList
get_collection_freq	backends/flint/flint_postlist.cc	/^FlintPostListTable::get_collection_freq(const string & term) const$/;"	f	class:FlintPostListTable
get_collection_freq	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::get_collection_freq() const$/;"	f	class:FlintSpellingTermList
get_collection_freq	backends/flint/flint_spellingwordslist.cc	/^FlintSpellingWordsList::get_collection_freq() const$/;"	f	class:FlintSpellingWordsList
get_collection_freq	backends/flint/flint_synonym.cc	/^FlintSynonymTermList::get_collection_freq() const$/;"	f	class:FlintSynonymTermList
get_collection_freq	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::get_collection_freq() const$/;"	f	class:InMemoryAllTermsList
get_collection_freq	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_collection_freq(const string &tname) const$/;"	f	class:InMemoryDatabase
get_collection_freq	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::get_collection_freq() const$/;"	f	class:MultiAllTermsList
get_collection_freq	backends/remote/remote-database.cc	/^RemoteDatabase::get_collection_freq(const string & tname) const$/;"	f	class:RemoteDatabase
get_collection_freq	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_collection_freq(const string & tname) const$/;"	f	class:ConstDatabaseWrapper
get_collection_size	include/xapian/weight.h	/^    Xapian::doccount get_collection_size() const { return collection_size_; }$/;"	f	class:Xapian::Weight
get_commit_ref	tests/perftest/perftest.cc	/^get_commit_ref()$/;"	f	file:
get_compressed	backends/brass/brass_table.h	/^    bool get_compressed() const { return *p & 0x80; }$/;"	f	class:Brass::Item_base
get_compressed	backends/chert/chert_table.h	/^    bool get_compressed() const { return *p & 0x80; }$/;"	f	class:Item_base
get_compressed	backends/flint/flint_table.h	/^    bool get_compressed() const { return *p & 0x80; }$/;"	f	class:Item_base_
get_context	include/xapian/error.h	/^    const std::string & get_context() const { return context; }$/;"	f	class:Xapian::Error
get_corrected_query_string	queryparser/queryparser.cc	/^QueryParser::get_corrected_query_string() const$/;"	f	class:QueryParser
get_current_cputime	tests/harness/cputimer.cc	/^CPUTimer::get_current_cputime() const$/;"	f	class:CPUTimer
get_data	api/omdocument.cc	/^Document::get_data() const$/;"	f	class:Xapian::Document
get_data	api/omdocument.cc	/^Xapian::Document::Internal::get_data() const$/;"	f	class:Xapian::Document::Internal
get_database	queryparser/queryparser_internal.cc	/^    Database get_database() const {$/;"	f	class:State
get_database	tests/apitest.cc	/^get_database(const std::string &dbname,$/;"	f
get_database	tests/apitest.cc	/^get_database(const string &dbname)$/;"	f
get_database	tests/apitest.cc	/^get_database(const string &dbname, const string &dbname2)$/;"	f
get_database	tests/harness/backendmanager.cc	/^BackendManager::get_database(const std::string &dbname,$/;"	f	class:BackendManager
get_database	tests/harness/backendmanager.cc	/^BackendManager::get_database(const string & file)$/;"	f	class:BackendManager
get_database	tests/harness/backendmanager.cc	/^BackendManager::get_database(const vector<string> & files)$/;"	f	class:BackendManager
get_database_path	tests/apitest.cc	/^get_database_path(const std::string &dbname,$/;"	f
get_database_path	tests/apitest.cc	/^get_database_path(const string &dbname)$/;"	f
get_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_database_path(const std::string &dbname,$/;"	f	class:BackendManager
get_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_database_path(const string & file)$/;"	f	class:BackendManager
get_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_database_path(const vector<string> & files)$/;"	f	class:BackendManager
get_database_write_lock	backends/brass/brass_database.cc	/^BrassDatabase::get_database_write_lock(bool creating)$/;"	f	class:BrassDatabase
get_database_write_lock	backends/chert/chert_database.cc	/^ChertDatabase::get_database_write_lock(bool creating)$/;"	f	class:ChertDatabase
get_database_write_lock	backends/flint/flint_database.cc	/^FlintDatabase::get_database_write_lock(bool creating)$/;"	f	class:FlintDatabase
get_datadir	tests/harness/backendmanager.h	/^    const std::string & get_datadir() const { return datadir; }$/;"	f	class:BackendManager
get_dbl_parameter	api/omqueryinternal.cc	/^Xapian::Query::Internal::get_dbl_parameter() const$/;"	f	class:Xapian::Query::Internal
get_dbtype	tests/apitest.cc	/^std::string get_dbtype()$/;"	f
get_dbtype	tests/harness/backendmanager.cc	/^BackendManager::get_dbtype() const$/;"	f	class:BackendManager
get_dbtype	tests/harness/backendmanager_brass.cc	/^BackendManagerBrass::get_dbtype() const$/;"	f	class:BackendManagerBrass
get_dbtype	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_dbtype() const$/;"	f	class:BackendManagerChert
get_dbtype	tests/harness/backendmanager_flint.cc	/^BackendManagerFlint::get_dbtype() const$/;"	f	class:BackendManagerFlint
get_dbtype	tests/harness/backendmanager_inmemory.cc	/^BackendManagerInMemory::get_dbtype() const$/;"	f	class:BackendManagerInMemory
get_dbtype	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::get_dbtype() const$/;"	f	class:BackendManagerMulti
get_dbtype	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_dbtype() const$/;"	f	class:BackendManagerRemoteProg
get_dbtype	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_dbtype() const$/;"	f	class:BackendManagerRemoteTcp
get_default_op	queryparser/queryparser.cc	/^QueryParser::get_default_op() const$/;"	f	class:QueryParser
get_delta	include/xapian/unicode.h	/^    inline int get_delta(int info) {$/;"	f	namespace:Xapian::Unicode::Internal
get_depth	languages/compiler/header.h	/^    int get_depth;$/;"	m	struct:tokeniser
get_description	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::get_description() const {$/;"	f	class:DecreasingValueWeightPostingSource
get_description	api/documentvaluelist.cc	/^DocumentValueList::get_description() const$/;"	f	class:DocumentValueList
get_description	api/emptypostlist.cc	/^EmptyPostList::get_description() const$/;"	f	class:EmptyPostList
get_description	api/error.cc	/^Xapian::Error::get_description() const$/;"	f	class:Xapian::Error
get_description	api/matchspy.cc	/^MatchSpy::get_description() const {$/;"	f	class:MatchSpy
get_description	api/matchspy.cc	/^ValueCountMatchSpy::get_description() const {$/;"	f	class:ValueCountMatchSpy
get_description	api/omdatabase.cc	/^Database::get_description() const$/;"	f	class:Xapian::Database
get_description	api/omdatabase.cc	/^WritableDatabase::get_description() const$/;"	f	class:Xapian::WritableDatabase
get_description	api/omdocument.cc	/^Document::get_description() const$/;"	f	class:Xapian::Document
get_description	api/omdocument.cc	/^OmDocumentTerm::get_description() const$/;"	f	class:OmDocumentTerm
get_description	api/omdocument.cc	/^Xapian::Document::Internal::get_description() const$/;"	f	class:Xapian::Document::Internal
get_description	api/omenquire.cc	/^ESet::get_description() const$/;"	f	class:Xapian::ESet
get_description	api/omenquire.cc	/^ESetIterator::get_description() const$/;"	f	class:Xapian::ESetIterator
get_description	api/omenquire.cc	/^Enquire::Internal::get_description() const$/;"	f	class:Xapian::Enquire::Internal
get_description	api/omenquire.cc	/^Enquire::get_description() const$/;"	f	class:Xapian::Enquire
get_description	api/omenquire.cc	/^MSet::Internal::get_description() const$/;"	f	class:Xapian::MSet::Internal
get_description	api/omenquire.cc	/^MSet::get_description() const$/;"	f	class:Xapian::MSet
get_description	api/omenquire.cc	/^MSetItem::get_description() const$/;"	f	class:Xapian::Internal::MSetItem
get_description	api/omenquire.cc	/^MSetIterator::get_description() const$/;"	f	class:Xapian::MSetIterator
get_description	api/omenquire.cc	/^RSet::Internal::get_description() const$/;"	f	class:Xapian::RSet::Internal
get_description	api/omenquire.cc	/^RSet::get_description() const$/;"	f	class:Xapian::RSet
get_description	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::get_description() const$/;"	f	class:Xapian::PositionIterator
get_description	api/ompostlistiterator.cc	/^Xapian::PostingIterator::get_description() const$/;"	f	class:Xapian::PostingIterator
get_description	api/omquery.cc	/^Query::get_description() const$/;"	f	class:Xapian::Query
get_description	api/omqueryinternal.cc	/^Xapian::Query::Internal::get_description() const$/;"	f	class:Xapian::Query::Internal
get_description	api/omtermlistiterator.cc	/^Xapian::TermIterator::get_description() const$/;"	f	class:Xapian::TermIterator
get_description	api/postingsource.cc	/^FixedWeightPostingSource::get_description() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_description	api/postingsource.cc	/^PostingSource::get_description() const$/;"	f	class:Xapian::PostingSource
get_description	api/postingsource.cc	/^ValueMapPostingSource::get_description() const$/;"	f	class:Xapian::ValueMapPostingSource
get_description	api/postingsource.cc	/^ValueWeightPostingSource::get_description() const$/;"	f	class:Xapian::ValueWeightPostingSource
get_description	api/replication.cc	/^    string get_description() const { return path; }$/;"	f	class:DatabaseReplica::Internal
get_description	api/replication.cc	/^DatabaseMaster::get_description() const$/;"	f	class:DatabaseMaster
get_description	api/replication.cc	/^DatabaseReplica::get_description() const$/;"	f	class:DatabaseReplica
get_description	api/valueiterator.cc	/^ValueIterator::get_description() const$/;"	f	class:Xapian::ValueIterator
get_description	backends/brass/brass_alldocspostlist.cc	/^BrassAllDocsPostList::get_description() const$/;"	f	class:BrassAllDocsPostList
get_description	backends/brass/brass_postlist.cc	/^BrassPostList::get_description() const$/;"	f	class:BrassPostList
get_description	backends/brass/brass_valuelist.cc	/^BrassValueList::get_description() const$/;"	f	class:BrassValueList
get_description	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::get_description() const$/;"	f	class:ChertAllDocsModifiedPostList
get_description	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_description() const$/;"	f	class:ChertAllDocsPostList
get_description	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_description() const$/;"	f	class:ChertModifiedPostList
get_description	backends/chert/chert_postlist.cc	/^ChertPostList::get_description() const$/;"	f	class:ChertPostList
get_description	backends/chert/chert_valuelist.cc	/^ChertValueList::get_description() const$/;"	f	class:ChertValueList
get_description	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_description() const$/;"	f	class:ContiguousAllDocsPostList
get_description	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::get_description() const$/;"	f	class:FlintAllDocsPostList
get_description	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::get_description() const$/;"	f	class:FlintModifiedPostList
get_description	backends/flint/flint_postlist.cc	/^FlintPostList::get_description() const$/;"	f	class:FlintPostList
get_description	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_description() const$/;"	f	class:InMemoryAllDocsPostList
get_description	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_description() const$/;"	f	class:InMemoryPostList
get_description	backends/multi/multi_postlist.cc	/^MultiPostList::get_description() const$/;"	f	class:MultiPostList
get_description	backends/multi/multi_valuelist.cc	/^MultiValueList::get_description() const$/;"	f	class:MultiValueList
get_description	backends/remote/net_postlist.cc	/^NetworkPostList::get_description() const$/;"	f	class:NetworkPostList
get_description	backends/slowvaluelist.cc	/^SlowValueList::get_description() const$/;"	f	class:SlowValueList
get_description	expand/esetinternal.cc	/^ESet::Internal::get_description() const$/;"	f	class:Xapian::ESet::Internal
get_description	expand/esetinternal.cc	/^Internal::ExpandTerm::get_description() const$/;"	f	class:Xapian::Internal::ExpandTerm
get_description	languages/danish.cc	/^Xapian::InternalStemDanish::get_description() const$/;"	f	class:Xapian::InternalStemDanish
get_description	languages/dutch.cc	/^Xapian::InternalStemDutch::get_description() const$/;"	f	class:Xapian::InternalStemDutch
get_description	languages/english.cc	/^Xapian::InternalStemEnglish::get_description() const$/;"	f	class:Xapian::InternalStemEnglish
get_description	languages/finnish.cc	/^Xapian::InternalStemFinnish::get_description() const$/;"	f	class:Xapian::InternalStemFinnish
get_description	languages/french.cc	/^Xapian::InternalStemFrench::get_description() const$/;"	f	class:Xapian::InternalStemFrench
get_description	languages/german.cc	/^Xapian::InternalStemGerman::get_description() const$/;"	f	class:Xapian::InternalStemGerman
get_description	languages/german2.cc	/^Xapian::InternalStemGerman2::get_description() const$/;"	f	class:Xapian::InternalStemGerman2
get_description	languages/hungarian.cc	/^Xapian::InternalStemHungarian::get_description() const$/;"	f	class:Xapian::InternalStemHungarian
get_description	languages/italian.cc	/^Xapian::InternalStemItalian::get_description() const$/;"	f	class:Xapian::InternalStemItalian
get_description	languages/kraaij_pohlmann.cc	/^Xapian::InternalStemKraaij_pohlmann::get_description() const$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
get_description	languages/lovins.cc	/^Xapian::InternalStemLovins::get_description() const$/;"	f	class:Xapian::InternalStemLovins
get_description	languages/norwegian.cc	/^Xapian::InternalStemNorwegian::get_description() const$/;"	f	class:Xapian::InternalStemNorwegian
get_description	languages/porter.cc	/^Xapian::InternalStemPorter::get_description() const$/;"	f	class:Xapian::InternalStemPorter
get_description	languages/portuguese.cc	/^Xapian::InternalStemPortuguese::get_description() const$/;"	f	class:Xapian::InternalStemPortuguese
get_description	languages/romanian.cc	/^Xapian::InternalStemRomanian::get_description() const$/;"	f	class:Xapian::InternalStemRomanian
get_description	languages/russian.cc	/^Xapian::InternalStemRussian::get_description() const$/;"	f	class:Xapian::InternalStemRussian
get_description	languages/spanish.cc	/^Xapian::InternalStemSpanish::get_description() const$/;"	f	class:Xapian::InternalStemSpanish
get_description	languages/stem.cc	/^Stem::get_description() const$/;"	f	class:Xapian::Stem
get_description	languages/swedish.cc	/^Xapian::InternalStemSwedish::get_description() const$/;"	f	class:Xapian::InternalStemSwedish
get_description	languages/turkish.cc	/^Xapian::InternalStemTurkish::get_description() const$/;"	f	class:Xapian::InternalStemTurkish
get_description	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_description() const$/;"	f	class:AndMaybePostList
get_description	matcher/andnotpostlist.cc	/^AndNotPostList::get_description() const$/;"	f	class:AndNotPostList
get_description	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_description() const$/;"	f	class:ExactPhrasePostList
get_description	matcher/externalpostlist.cc	/^ExternalPostList::get_description() const$/;"	f	class:ExternalPostList
get_description	matcher/extraweightpostlist.h	/^	std::string get_description() const {$/;"	f	class:ExtraWeightPostList
get_description	matcher/mergepostlist.cc	/^MergePostList::get_description() const$/;"	f	class:MergePostList
get_description	matcher/msetpostlist.cc	/^MSetPostList::get_description() const$/;"	f	class:MSetPostList
get_description	matcher/multiandpostlist.cc	/^MultiAndPostList::get_description() const$/;"	f	class:MultiAndPostList
get_description	matcher/multixorpostlist.cc	/^MultiXorPostList::get_description() const$/;"	f	class:MultiXorPostList
get_description	matcher/orpostlist.cc	/^OrPostList::get_description() const$/;"	f	class:OrPostList
get_description	matcher/phrasepostlist.cc	/^NearPostList::get_description() const$/;"	f	class:NearPostList
get_description	matcher/phrasepostlist.cc	/^PhrasePostList::get_description() const$/;"	f	class:PhrasePostList
get_description	matcher/selectpostlist.h	/^SelectPostList::get_description() const$/;"	f	class:SelectPostList
get_description	matcher/synonympostlist.cc	/^SynonymPostList::get_description() const$/;"	f	class:SynonymPostList
get_description	matcher/valuegepostlist.cc	/^ValueGePostList::get_description() const$/;"	f	class:ValueGePostList
get_description	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_description() const$/;"	f	class:ValueRangePostList
get_description	queryparser/queryparser.cc	/^QueryParser::get_description() const$/;"	f	class:QueryParser
get_description	queryparser/queryparser.cc	/^SimpleStopper::get_description() const$/;"	f	class:SimpleStopper
get_description	queryparser/queryparser.cc	/^Stopper::get_description() const$/;"	f	class:Stopper
get_description	queryparser/termgenerator.cc	/^TermGenerator::get_description() const$/;"	f	class:TermGenerator
get_description	tests/api_percentages.cc	/^    string get_description() const {$/;"	f	class:MyPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const { return "ChangeMaxweightPostingSource"; }$/;"	f	class:ChangeMaxweightPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const { return "MyOddPostingSource"; }$/;"	f	class:MyOddPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const {$/;"	f	class:MyDontAskWeightPostingSource
get_description	tests/api_postingsource.cc	/^    string get_description() const {$/;"	f	class:MyOddWeightingPostingSource
get_description	tests/api_serialise.cc	/^    std::string get_description() const {$/;"	f	class:MyPostingSource2
get_description	tests/api_stem.cc	/^    string get_description() const {$/;"	f	class:MyStemImpl	file:
get_description	weight/weightinternal.cc	/^TermFreqs::get_description() const {$/;"	f	class:TermFreqs
get_description	weight/weightinternal.cc	/^Weight::Internal::get_description() const$/;"	f	class:Xapian::Weight::Internal
get_distro	tests/perftest/perftest.cc	/^get_distro()$/;"	f	file:
get_doc_by_index	api/omenquire.cc	/^MSet::Internal::get_doc_by_index(Xapian::doccount index) const$/;"	f	class:Xapian::MSet::Internal
get_doccount	api/omdatabase.cc	/^Database::get_doccount() const$/;"	f	class:Xapian::Database
get_doccount	backends/brass/brass_database.cc	/^BrassDatabase::get_doccount() const$/;"	f	class:BrassDatabase
get_doccount	backends/brass/brass_record.cc	/^BrassRecordTable::get_doccount() const$/;"	f	class:BrassRecordTable
get_doccount	backends/chert/chert_database.cc	/^ChertDatabase::get_doccount() const$/;"	f	class:ChertDatabase
get_doccount	backends/chert/chert_record.cc	/^ChertRecordTable::get_doccount() const$/;"	f	class:ChertRecordTable
get_doccount	backends/flint/flint_database.cc	/^FlintDatabase::get_doccount() const$/;"	f	class:FlintDatabase
get_doccount	backends/flint/flint_record.cc	/^FlintRecordTable::get_doccount() const$/;"	f	class:FlintRecordTable
get_doccount	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_doccount() const$/;"	f	class:InMemoryDatabase
get_doccount	backends/remote/remote-database.cc	/^RemoteDatabase::get_doccount() const$/;"	f	class:RemoteDatabase
get_doccount	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_doccount() const$/;"	f	class:ConstDatabaseWrapper
get_docid	api/documentvaluelist.cc	/^DocumentValueList::get_docid() const$/;"	f	class:DocumentValueList
get_docid	api/emptypostlist.cc	/^EmptyPostList::get_docid() const$/;"	f	class:EmptyPostList
get_docid	api/omdocument.cc	/^Document::get_docid() const$/;"	f	class:Xapian::Document
get_docid	api/postingsource.cc	/^FixedWeightPostingSource::get_docid() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_docid	api/postingsource.cc	/^ValuePostingSource::get_docid() const$/;"	f	class:Xapian::ValuePostingSource
get_docid	api/valueiterator.cc	/^ValueIterator::get_docid() const$/;"	f	class:Xapian::ValueIterator
get_docid	backends/brass/brass_postlist.cc	/^    Xapian::docid get_docid() const {$/;"	f	class:Brass::PostlistChunkReader
get_docid	backends/brass/brass_postlist.h	/^	Xapian::docid get_docid() const { Assert(have_started); return did; }$/;"	f	class:BrassPostList
get_docid	backends/brass/brass_valuelist.cc	/^BrassValueList::get_docid() const$/;"	f	class:BrassValueList
get_docid	backends/brass/brass_values.h	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:Brass::ValueChunkReader
get_docid	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::get_docid() const$/;"	f	class:ChertAllDocsModifiedPostList
get_docid	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_docid() const$/;"	f	class:ChertModifiedPostList
get_docid	backends/chert/chert_postlist.cc	/^    Xapian::docid get_docid() const {$/;"	f	class:Chert::PostlistChunkReader
get_docid	backends/chert/chert_postlist.h	/^	Xapian::docid get_docid() const { Assert(have_started); return did; }$/;"	f	class:ChertPostList
get_docid	backends/chert/chert_valuelist.cc	/^ChertValueList::get_docid() const$/;"	f	class:ChertValueList
get_docid	backends/chert/chert_values.h	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:ValueChunkReader
get_docid	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_docid() const$/;"	f	class:ContiguousAllDocsPostList
get_docid	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::get_docid() const$/;"	f	class:FlintAllDocsPostList
get_docid	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::get_docid() const$/;"	f	class:FlintModifiedPostList
get_docid	backends/flint/flint_postlist.cc	/^	Xapian::docid get_docid() const {$/;"	f	class:FlintPostlistChunkReader
get_docid	backends/flint/flint_postlist.h	/^	Xapian::docid get_docid() const { Assert(have_started); return did; }$/;"	f	class:FlintPostList
get_docid	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_docid() const$/;"	f	class:InMemoryAllDocsPostList
get_docid	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_docid() const$/;"	f	class:InMemoryPostList
get_docid	backends/multi/multi_postlist.cc	/^MultiPostList::get_docid() const$/;"	f	class:MultiPostList
get_docid	backends/multi/multi_valuelist.cc	/^    Xapian::docid get_docid() const {$/;"	f	struct:SubValueList
get_docid	backends/multi/multi_valuelist.cc	/^MultiValueList::get_docid() const$/;"	f	class:MultiValueList
get_docid	backends/remote/net_postlist.cc	/^NetworkPostList::get_docid() const$/;"	f	class:NetworkPostList
get_docid	backends/slowvaluelist.cc	/^SlowValueList::get_docid() const$/;"	f	class:SlowValueList
get_docid	common/document.h	/^	Xapian::docid get_docid() const { return did; }$/;"	f	class:Xapian::Document::Internal
get_docid	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_docid() const$/;"	f	class:AndMaybePostList
get_docid	matcher/andnotpostlist.cc	/^AndNotPostList::get_docid() const$/;"	f	class:AndNotPostList
get_docid	matcher/externalpostlist.cc	/^ExternalPostList::get_docid() const$/;"	f	class:ExternalPostList
get_docid	matcher/extraweightpostlist.h	/^	Xapian::docid  get_docid() const { return pl->get_docid(); }$/;"	f	class:ExtraWeightPostList
get_docid	matcher/mergepostlist.cc	/^MergePostList::get_docid() const$/;"	f	class:MergePostList
get_docid	matcher/msetpostlist.cc	/^MSetPostList::get_docid() const$/;"	f	class:MSetPostList
get_docid	matcher/multiandpostlist.cc	/^MultiAndPostList::get_docid() const$/;"	f	class:MultiAndPostList
get_docid	matcher/multixorpostlist.cc	/^MultiXorPostList::get_docid() const$/;"	f	class:MultiXorPostList
get_docid	matcher/orpostlist.cc	/^OrPostList::get_docid() const$/;"	f	class:OrPostList
get_docid	matcher/selectpostlist.h	/^	Xapian::docid get_docid() const { return source->get_docid(); }$/;"	f	class:SelectPostList
get_docid	matcher/synonympostlist.cc	/^SynonymPostList::get_docid() const {$/;"	f	class:SynonymPostList
get_docid	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_docid() const$/;"	f	class:ValueRangePostList
get_docid	tests/api_percentages.cc	/^    Xapian::docid get_docid() const { return i->first; }$/;"	f	class:MyPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:ChangeMaxweightPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:MyDontAskWeightPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:MyOddPostingSource
get_docid	tests/api_postingsource.cc	/^    Xapian::docid get_docid() const { return did; }$/;"	f	class:MyOddWeightingPostingSource
get_docid	tests/api_serialise.cc	/^    Xapian::docid get_docid() const { return 0; }$/;"	f	class:ExceptionalPostingSource
get_doclength	api/emptypostlist.cc	/^EmptyPostList::get_doclength() const$/;"	f	class:EmptyPostList
get_doclength	api/omdatabase.cc	/^Database::get_doclength(Xapian::docid did) const$/;"	f	class:Xapian::Database
get_doclength	api/ompostlistiterator.cc	/^Xapian::PostingIterator::get_doclength() const$/;"	f	class:Xapian::PostingIterator
get_doclength	backends/brass/brass_alldocspostlist.cc	/^BrassAllDocsPostList::get_doclength() const$/;"	f	class:BrassAllDocsPostList
get_doclength	backends/brass/brass_database.cc	/^BrassDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:BrassDatabase
get_doclength	backends/brass/brass_database.cc	/^BrassWritableDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:BrassWritableDatabase
get_doclength	backends/brass/brass_inverter.h	/^    bool get_doclength(Xapian::docid did, Xapian::termcount & doclen) const  {$/;"	f	class:Inverter
get_doclength	backends/brass/brass_postlist.cc	/^BrassPostList::get_doclength() const$/;"	f	class:BrassPostList
get_doclength	backends/brass/brass_postlist.cc	/^BrassPostListTable::get_doclength(Xapian::docid did,$/;"	f	class:BrassPostListTable
get_doclength	backends/brass/brass_termlist.cc	/^BrassTermList::get_doclength() const$/;"	f	class:BrassTermList
get_doclength	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::get_doclength() const$/;"	f	class:ChertAllDocsModifiedPostList
get_doclength	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_doclength() const$/;"	f	class:ChertAllDocsPostList
get_doclength	backends/chert/chert_database.cc	/^ChertDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:ChertDatabase
get_doclength	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:ChertWritableDatabase
get_doclength	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_doclength() const$/;"	f	class:ChertModifiedPostList
get_doclength	backends/chert/chert_postlist.cc	/^ChertPostList::get_doclength() const$/;"	f	class:ChertPostList
get_doclength	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_doclength(Xapian::docid did,$/;"	f	class:ChertPostListTable
get_doclength	backends/chert/chert_termlist.cc	/^ChertTermList::get_doclength() const$/;"	f	class:ChertTermList
get_doclength	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_doclength() const$/;"	f	class:ContiguousAllDocsPostList
get_doclength	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::get_doclength() const$/;"	f	class:FlintAllDocsPostList
get_doclength	backends/flint/flint_database.cc	/^FlintDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:FlintDatabase
get_doclength	backends/flint/flint_database.cc	/^FlintWritableDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:FlintWritableDatabase
get_doclength	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::get_doclength() const$/;"	f	class:FlintModifiedPostList
get_doclength	backends/flint/flint_postlist.cc	/^	flint_doclen_t get_doclength() const {$/;"	f	class:FlintPostlistChunkReader
get_doclength	backends/flint/flint_postlist.cc	/^FlintPostList::get_doclength() const$/;"	f	class:FlintPostList
get_doclength	backends/flint/flint_termlist.cc	/^FlintTermList::get_doclength() const$/;"	f	class:FlintTermList
get_doclength	backends/flint/flint_termlisttable.cc	/^FlintTermListTable::get_doclength(Xapian::docid did) const$/;"	f	class:FlintTermListTable
get_doclength	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_doclength() const$/;"	f	class:InMemoryAllDocsPostList
get_doclength	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:InMemoryDatabase
get_doclength	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_doclength() const$/;"	f	class:InMemoryPostList
get_doclength	backends/multi/multi_postlist.cc	/^MultiPostList::get_doclength() const$/;"	f	class:MultiPostList
get_doclength	backends/remote/net_postlist.cc	/^NetworkPostList::get_doclength() const$/;"	f	class:NetworkPostList
get_doclength	backends/remote/remote-database.cc	/^RemoteDatabase::get_doclength(Xapian::docid did) const$/;"	f	class:RemoteDatabase
get_doclength	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_doclength(Xapian::docid did) const$/;"	f	class:ConstDatabaseWrapper
get_doclength	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_doclength() const$/;"	f	class:AndMaybePostList
get_doclength	matcher/andnotpostlist.cc	/^AndNotPostList::get_doclength() const$/;"	f	class:AndNotPostList
get_doclength	matcher/externalpostlist.cc	/^ExternalPostList::get_doclength() const$/;"	f	class:ExternalPostList
get_doclength	matcher/extraweightpostlist.h	/^	virtual Xapian::termcount get_doclength() const {$/;"	f	class:ExtraWeightPostList
get_doclength	matcher/mergepostlist.cc	/^MergePostList::get_doclength() const$/;"	f	class:MergePostList
get_doclength	matcher/msetpostlist.cc	/^MSetPostList::get_doclength() const$/;"	f	class:MSetPostList
get_doclength	matcher/multiandpostlist.cc	/^MultiAndPostList::get_doclength() const$/;"	f	class:MultiAndPostList
get_doclength	matcher/multixorpostlist.cc	/^MultiXorPostList::get_doclength() const$/;"	f	class:MultiXorPostList
get_doclength	matcher/orpostlist.cc	/^OrPostList::get_doclength() const$/;"	f	class:OrPostList
get_doclength	matcher/selectpostlist.h	/^	Xapian::termcount get_doclength() const { return source->get_doclength(); }$/;"	f	class:SelectPostList
get_doclength	matcher/synonympostlist.cc	/^SynonymPostList::get_doclength() const {$/;"	f	class:SynonymPostList
get_doclength	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_doclength() const$/;"	f	class:ValueRangePostList
get_doclength_lower_bound	api/omdatabase.cc	/^Database::get_doclength_lower_bound() const$/;"	f	class:Xapian::Database
get_doclength_lower_bound	backends/brass/brass_database.cc	/^BrassDatabase::get_doclength_lower_bound() const$/;"	f	class:BrassDatabase
get_doclength_lower_bound	backends/brass/brass_dbstats.h	/^    Xapian::termcount get_doclength_lower_bound() const {$/;"	f	class:BrassDatabaseStats
get_doclength_lower_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_doclength_lower_bound() const$/;"	f	class:ChertDatabase
get_doclength_lower_bound	backends/chert/chert_dbstats.h	/^    Xapian::termcount get_doclength_lower_bound() const {$/;"	f	class:ChertDatabaseStats
get_doclength_lower_bound	backends/database.cc	/^Database::Internal::get_doclength_lower_bound() const$/;"	f	class:Xapian::Database::Internal
get_doclength_lower_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_doclength_lower_bound() const$/;"	f	class:RemoteDatabase
get_doclength_lower_bound	include/xapian/weight.h	/^    Xapian::termcount get_doclength_lower_bound() const {$/;"	f	class:Xapian::Weight
get_doclength_upper_bound	api/omdatabase.cc	/^Database::get_doclength_upper_bound() const$/;"	f	class:Xapian::Database
get_doclength_upper_bound	backends/brass/brass_database.cc	/^BrassDatabase::get_doclength_upper_bound() const$/;"	f	class:BrassDatabase
get_doclength_upper_bound	backends/brass/brass_dbstats.h	/^    Xapian::termcount get_doclength_upper_bound() const {$/;"	f	class:BrassDatabaseStats
get_doclength_upper_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_doclength_upper_bound() const$/;"	f	class:ChertDatabase
get_doclength_upper_bound	backends/chert/chert_dbstats.h	/^    Xapian::termcount get_doclength_upper_bound() const {$/;"	f	class:ChertDatabaseStats
get_doclength_upper_bound	backends/database.cc	/^Database::Internal::get_doclength_upper_bound() const$/;"	f	class:Xapian::Database::Internal
get_doclength_upper_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_doclength_upper_bound() const$/;"	f	class:RemoteDatabase
get_doclength_upper_bound	include/xapian/weight.h	/^    Xapian::termcount get_doclength_upper_bound() const {$/;"	f	class:Xapian::Weight
get_docs_considered	matcher/collapser.h	/^    Xapian::doccount get_docs_considered() const { return docs_considered; }$/;"	f	class:Collapser
get_document	api/omdatabase.cc	/^Database::get_document(Xapian::docid did) const$/;"	f	class:Xapian::Database
get_document	api/omenquire.cc	/^MSetIterator::get_document() const$/;"	f	class:Xapian::MSetIterator
get_document	queryparser/termgenerator.cc	/^TermGenerator::get_document() const$/;"	f	class:TermGenerator
get_document_lazily	api/omdatabase.cc	/^Database::get_document_lazily(Xapian::docid did) const$/;"	f	class:Xapian::Database
get_dups_ignored	matcher/collapser.h	/^    Xapian::doccount get_dups_ignored() const { return dups_ignored; }$/;"	f	class:Collapser
get_ebound	api/omenquire.cc	/^ESet::get_ebound() const$/;"	f	class:Xapian::ESet
get_entry_count	backends/brass/brass_table.h	/^	brass_tablesize_t get_entry_count() const {$/;"	f	class:BrassTable
get_entry_count	backends/chert/chert_table.h	/^	chert_tablesize_t get_entry_count() const {$/;"	f	class:ChertTable
get_entry_count	backends/flint/flint_table.h	/^	flint_tablesize_t get_entry_count() const {$/;"	f	class:FlintTable
get_error_string	api/error.cc	/^Xapian::Error::get_error_string() const$/;"	f	class:Xapian::Error
get_eset	api/omenquire.cc	/^Enquire::Internal::get_eset(Xapian::termcount maxitems,$/;"	f	class:Xapian::Enquire::Internal
get_eset	api/omenquire.cc	/^Enquire::get_eset(Xapian::termcount maxitems, const RSet & rset, int flags,$/;"	f	class:Xapian::Enquire
get_eset	include/xapian/enquire.h	/^	inline ESet get_eset(Xapian::termcount maxitems, const RSet & omrset,$/;"	f	class:Xapian::Enquire
get_exact_entry	backends/brass/brass_table.cc	/^BrassTable::get_exact_entry(const string &key, string & tag) const$/;"	f	class:BrassTable
get_exact_entry	backends/chert/chert_table.cc	/^ChertTable::get_exact_entry(const string &key, string & tag) const$/;"	f	class:ChertTable
get_exact_entry	backends/flint/flint_table.cc	/^FlintTable::get_exact_entry(const string &key, string & tag) const$/;"	f	class:FlintTable
get_f_kp	api/editdistance.cc	/^    int get_f_kp(int k, int p) const {$/;"	f	class:edist_state
get_filter_group_id	queryparser/queryparser_internal.cc	/^    filter_group_id get_filter_group_id() const {$/;"	f	class:Term
get_firstitem	api/omenquire.cc	/^MSet::get_firstitem() const$/;"	f	class:Xapian::MSet
get_free_physical_memory	tests/perftest/freemem.cc	/^get_free_physical_memory()$/;"	f
get_frequency	api/matchspy.cc	/^    Xapian::doccount get_frequency() const { return frequency; }$/;"	f	class:StringAndFrequency
get_have_fakeroot	backends/brass/brass_btreebase.h	/^	bool get_have_fakeroot() const { return have_fakeroot; }$/;"	f	class:BrassTable_base
get_have_fakeroot	backends/chert/chert_btreebase.h	/^	bool get_have_fakeroot() const { return have_fakeroot; }$/;"	f	class:ChertTable_base
get_have_fakeroot	backends/flint/flint_btreebase.h	/^	bool get_have_fakeroot() const { return have_fakeroot; }$/;"	f	class:FlintTable_base
get_hostname	tests/perftest/perftest.cc	/^get_hostname()$/;"	f	file:
get_input	languages/compiler/tokeniser.c	/^extern symbol * get_input(symbol * p) {$/;"	f
get_item_count	backends/brass/brass_btreebase.h	/^	brass_tablesize_t get_item_count() const { return item_count; }$/;"	f	class:BrassTable_base
get_item_count	backends/chert/chert_btreebase.h	/^	chert_tablesize_t get_item_count() const { return item_count; }$/;"	f	class:ChertTable_base
get_item_count	backends/flint/flint_btreebase.h	/^	uint4 get_item_count() const { return item_count; }$/;"	f	class:FlintTable_base
get_items	common/omenquireinternal.h	/^	const set<Xapian::docid> & get_items() const { return items; }$/;"	f	class:Xapian::RSet::Internal
get_key	backends/brass/brass_cursor.cc	/^BrassCursor::get_key(string * key) const$/;"	f	class:BrassCursor
get_key	backends/chert/chert_cursor.cc	/^ChertCursor::get_key(string * key) const$/;"	f	class:ChertCursor
get_key	backends/flint/flint_cursor.cc	/^FlintCursor::get_key(string * key) const$/;"	f	class:FlintCursor
get_last_block	backends/brass/brass_btreebase.h	/^	uint4 get_last_block() const { return last_block; }$/;"	f	class:BrassTable_base
get_last_block	backends/chert/chert_btreebase.h	/^	uint4 get_last_block() const { return last_block; }$/;"	f	class:ChertTable_base
get_last_block	backends/flint/flint_btreebase.h	/^	uint4 get_last_block() const { return last_block; }$/;"	f	class:FlintTable_base
get_last_docid	backends/brass/brass_dbstats.h	/^    Xapian::docid get_last_docid() const { return last_docid; }$/;"	f	class:BrassDatabaseStats
get_last_docid	backends/chert/chert_dbstats.h	/^    Xapian::docid get_last_docid() const { return last_docid; }$/;"	f	class:ChertDatabaseStats
get_lastdocid	api/omdatabase.cc	/^Database::get_lastdocid() const$/;"	f	class:Xapian::Database
get_lastdocid	backends/brass/brass_database.cc	/^BrassDatabase::get_lastdocid() const$/;"	f	class:BrassDatabase
get_lastdocid	backends/chert/chert_database.cc	/^ChertDatabase::get_lastdocid() const$/;"	f	class:ChertDatabase
get_lastdocid	backends/flint/flint_database.cc	/^FlintDatabase::get_lastdocid() const$/;"	f	class:FlintDatabase
get_lastdocid	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_lastdocid() const$/;"	f	class:InMemoryDatabase
get_lastdocid	backends/remote/remote-database.cc	/^RemoteDatabase::get_lastdocid() const$/;"	f	class:RemoteDatabase
get_lastdocid	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_lastdocid() const$/;"	f	class:ConstDatabaseWrapper
get_latest_revision_number	backends/brass/brass_table.h	/^	brass_revision_number_t get_latest_revision_number() const {$/;"	f	class:BrassTable
get_latest_revision_number	backends/chert/chert_table.h	/^	chert_revision_number_t get_latest_revision_number() const {$/;"	f	class:ChertTable
get_latest_revision_number	backends/flint/flint_table.h	/^	flint_revision_number_t get_latest_revision_number() const {$/;"	f	class:FlintTable
get_length	api/omquery.cc	/^termcount Query::get_length() const$/;"	f	class:Xapian::Query
get_length	api/omqueryinternal.cc	/^Xapian::Query::Internal::get_length() const$/;"	f	class:Xapian::Query::Internal
get_length	queryparser/cjk-tokenizer.h	/^    unsigned get_length() const { return len; }$/;"	f	class:CJKTokenIterator
get_level	backends/brass/brass_btreebase.h	/^	uint4 get_level() const { return level; }$/;"	f	class:BrassTable_base
get_level	backends/chert/chert_btreebase.h	/^	uint4 get_level() const { return level; }$/;"	f	class:ChertTable_base
get_level	backends/flint/flint_btreebase.h	/^	uint4 get_level() const { return level; }$/;"	f	class:FlintTable_base
get_listening_socket	net/tcpserver.cc	/^TcpServer::get_listening_socket(const std::string & host, int port,$/;"	f	class:TcpServer
get_loadavg	tests/perftest/perftest.cc	/^get_loadavg()$/;"	f	file:
get_match_spy	api/registry.cc	/^Registry::get_match_spy(const string & name) const$/;"	f	class:Xapian::Registry
get_matches_estimated	api/omenquire.cc	/^MSet::get_matches_estimated() const$/;"	f	class:Xapian::MSet
get_matches_lower_bound	api/omenquire.cc	/^MSet::get_matches_lower_bound() const$/;"	f	class:Xapian::MSet
get_matches_lower_bound	matcher/collapser.cc	/^Collapser::get_matches_lower_bound() const$/;"	f	class:Collapser
get_matches_upper_bound	api/omenquire.cc	/^MSet::get_matches_upper_bound() const$/;"	f	class:Xapian::MSet
get_matching_terms	api/omenquire.cc	/^Enquire::Internal::get_matching_terms(Xapian::docid did) const$/;"	f	class:Xapian::Enquire::Internal
get_matching_terms	api/omenquire.cc	/^Enquire::Internal::get_matching_terms(const MSetIterator &it) const$/;"	f	class:Xapian::Enquire::Internal
get_matching_terms_begin	api/omenquire.cc	/^Enquire::get_matching_terms_begin(Xapian::docid did) const$/;"	f	class:Xapian::Enquire
get_matching_terms_begin	api/omenquire.cc	/^Enquire::get_matching_terms_begin(const MSetIterator &it) const$/;"	f	class:Xapian::Enquire
get_matching_terms_end	include/xapian/enquire.h	/^	TermIterator get_matching_terms_end(Xapian::docid \/*did*\/) const {$/;"	f	class:Xapian::Enquire
get_matching_terms_end	include/xapian/enquire.h	/^	TermIterator get_matching_terms_end(const MSetIterator &\/*it*\/) const {$/;"	f	class:Xapian::Enquire
get_max_attained	api/omenquire.cc	/^MSet::get_max_attained() const$/;"	f	class:Xapian::MSet
get_max_possible	api/omenquire.cc	/^MSet::get_max_possible() const$/;"	f	class:Xapian::MSet
get_max_subqs	api/omqueryinternal.cc	/^get_max_subqs(Xapian::Query::Internal::op_t op)$/;"	f	file:
get_max_wildcard_expansion	queryparser/queryparser_internal.cc	/^    Xapian::termcount get_max_wildcard_expansion() const {$/;"	f	class:State
get_maxextra	tests/api_db.cc	/^    Xapian::weight get_maxextra() const { return 0; }$/;"	f	class:MyWeight
get_maxextra	tests/api_serialise.cc	/^    Xapian::weight get_maxextra() const { return 0; }$/;"	f	class:ExceptionalWeight
get_maxextra	tests/api_weight.cc	/^    double get_maxextra() const { return 1.0; }$/;"	f	class:CheckInitWeight
get_maxextra	tests/api_weight.cc	/^    double get_maxextra() const { return 1.0; }$/;"	f	class:CheckStatsWeight
get_maxextra	weight/bm25weight.cc	/^BM25Weight::get_maxextra() const$/;"	f	class:Xapian::BM25Weight
get_maxextra	weight/boolweight.cc	/^BoolWeight::get_maxextra() const$/;"	f	class:Xapian::BoolWeight
get_maxextra	weight/tradweight.cc	/^TradWeight::get_maxextra() const$/;"	f	class:Xapian::TradWeight
get_maxfd	common/closefrom.cc	/^get_maxfd() {$/;"	f	file:
get_maxpart	tests/api_db.cc	/^    Xapian::weight get_maxpart() const { return scale_factor; }$/;"	f	class:MyWeight
get_maxpart	tests/api_serialise.cc	/^    Xapian::weight get_maxpart() const { return 0; }$/;"	f	class:ExceptionalWeight
get_maxpart	tests/api_weight.cc	/^    double get_maxpart() const { return 1.0; }$/;"	f	class:CheckInitWeight
get_maxpart	tests/api_weight.cc	/^    double get_maxpart() const {$/;"	f	class:CheckStatsWeight
get_maxpart	weight/bm25weight.cc	/^BM25Weight::get_maxpart() const$/;"	f	class:Xapian::BM25Weight
get_maxpart	weight/boolweight.cc	/^BoolWeight::get_maxpart() const$/;"	f	class:Xapian::BoolWeight
get_maxpart	weight/tradweight.cc	/^TradWeight::get_maxpart() const$/;"	f	class:Xapian::TradWeight
get_maxweight	api/emptypostlist.cc	/^EmptyPostList::get_maxweight() const$/;"	f	class:EmptyPostList
get_maxweight	api/leafpostlist.cc	/^LeafPostList::get_maxweight() const$/;"	f	class:LeafPostList
get_maxweight	backends/multi/multi_postlist.cc	/^MultiPostList::get_maxweight() const$/;"	f	class:MultiPostList
get_maxweight	include/xapian/postingsource.h	/^    Xapian::weight get_maxweight() const { return max_weight_; }$/;"	f	class:Xapian::PostingSource
get_maxweight	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_maxweight() const$/;"	f	class:AndMaybePostList
get_maxweight	matcher/andnotpostlist.cc	/^AndNotPostList::get_maxweight() const$/;"	f	class:AndNotPostList
get_maxweight	matcher/externalpostlist.cc	/^ExternalPostList::get_maxweight() const$/;"	f	class:ExternalPostList
get_maxweight	matcher/extraweightpostlist.h	/^	Xapian::weight get_maxweight() const {$/;"	f	class:ExtraWeightPostList
get_maxweight	matcher/mergepostlist.cc	/^MergePostList::get_maxweight() const$/;"	f	class:MergePostList
get_maxweight	matcher/msetpostlist.cc	/^MSetPostList::get_maxweight() const$/;"	f	class:MSetPostList
get_maxweight	matcher/multiandpostlist.cc	/^MultiAndPostList::get_maxweight() const$/;"	f	class:MultiAndPostList
get_maxweight	matcher/multixorpostlist.cc	/^MultiXorPostList::get_maxweight() const$/;"	f	class:MultiXorPostList
get_maxweight	matcher/orpostlist.cc	/^OrPostList::get_maxweight() const$/;"	f	class:OrPostList
get_maxweight	matcher/selectpostlist.h	/^	Xapian::weight get_maxweight() const { return source->get_maxweight(); }$/;"	f	class:SelectPostList
get_maxweight	matcher/synonympostlist.cc	/^SynonymPostList::get_maxweight() const$/;"	f	class:SynonymPostList
get_maxweight	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_maxweight() const$/;"	f	class:ValueRangePostList
get_merged_docid	backends/multi/multi_valuelist.cc	/^    Xapian::docid get_merged_docid(unsigned multiplier) const {$/;"	f	struct:SubValueList
get_message	backends/remote/remote-database.cc	/^RemoteDatabase::get_message(string &result, reply_type required_type) const$/;"	f	class:RemoteDatabase
get_message	net/remoteconnection.cc	/^RemoteConnection::get_message(string &result, double end_time)$/;"	f	class:RemoteConnection
get_message	net/remoteserver.cc	/^RemoteServer::get_message(double timeout, string & result,$/;"	f	class:RemoteServer
get_message	tests/harness/fdtracker.h	/^    const std::string & get_message() const { return message; }$/;"	f	class:FDTracker
get_message_chunk	net/remoteconnection.cc	/^RemoteConnection::get_message_chunk(string &result, size_t at_least,$/;"	f	class:RemoteConnection
get_message_chunked	net/remoteconnection.cc	/^RemoteConnection::get_message_chunked(double end_time)$/;"	f	class:RemoteConnection
get_metadata	api/omdatabase.cc	/^Database::get_metadata(const string & key) const$/;"	f	class:Xapian::Database
get_metadata	backends/brass/brass_database.cc	/^BrassDatabase::get_metadata(const string & key) const$/;"	f	class:BrassDatabase
get_metadata	backends/chert/chert_database.cc	/^ChertDatabase::get_metadata(const string & key) const$/;"	f	class:ChertDatabase
get_metadata	backends/database.cc	/^Database::Internal::get_metadata(const string &) const$/;"	f	class:Xapian::Database::Internal
get_metadata	backends/flint/flint_database.cc	/^FlintDatabase::get_metadata(const string & key) const$/;"	f	class:FlintDatabase
get_metadata	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_metadata(const std::string & key) const$/;"	f	class:InMemoryDatabase
get_metadata	backends/remote/remote-database.cc	/^RemoteDatabase::get_metadata(const string & key) const$/;"	f	class:RemoteDatabase
get_metadata	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_metadata(const string & key) const$/;"	f	class:ConstDatabaseWrapper
get_min_subqs	api/omqueryinternal.cc	/^get_min_subqs(Xapian::Query::Internal::op_t op)$/;"	f	file:
get_most_frequent_items	api/matchspy.cc	/^get_most_frequent_items(vector<StringAndFrequency> & result,$/;"	f	file:
get_mset	api/omenquire.cc	/^Enquire::Internal::get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:Xapian::Enquire::Internal
get_mset	api/omenquire.cc	/^Enquire::get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:Xapian::Enquire
get_mset	backends/remote/remote-database.cc	/^RemoteDatabase::get_mset(Xapian::MSet &mset,$/;"	f	class:RemoteDatabase
get_mset	include/xapian/enquire.h	/^	MSet get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:Xapian::Enquire
get_mset	matcher/multimatch.cc	/^MultiMatch::get_mset(Xapian::doccount first, Xapian::doccount maxitems,$/;"	f	class:MultiMatch
get_mset	matcher/remotesubmatch.h	/^    void get_mset(Xapian::MSet & mset) { db->get_mset(mset, matchspies); }$/;"	f	class:RemoteSubMatch
get_msetcmp_function	matcher/msetcmp.cc	/^mset_cmp get_msetcmp_function(Xapian::Enquire::Internal::sort_setting sort_by, bool sort_forward, bool sort_value_forward) {$/;"	f
get_msg	include/xapian/error.h	/^    const std::string & get_msg() const { return msg; }$/;"	f	class:Xapian::Error
get_named_writable_database	tests/apitest.cc	/^get_named_writable_database(const std::string &name, const std::string &source)$/;"	f
get_named_writable_database_path	tests/apitest.cc	/^get_named_writable_database_path(const std::string &name)$/;"	f
get_ncpus	tests/perftest/perftest.cc	/^get_ncpus()$/;"	f	file:
get_next_best_weight	matcher/collapser.h	/^    Xapian::weight get_next_best_weight() const { return next_best_weight; }$/;"	f	class:CollapseData
get_next_docid	backends/brass/brass_dbstats.h	/^    Xapian::docid get_next_docid() { return ++last_docid; }$/;"	f	class:BrassDatabaseStats
get_next_docid	backends/chert/chert_dbstats.h	/^    Xapian::docid get_next_docid() { return ++last_docid; }$/;"	f	class:ChertDatabaseStats
get_next_revision_number	backends/brass/brass_database.cc	/^BrassDatabase::get_next_revision_number() const$/;"	f	class:BrassDatabase
get_next_revision_number	backends/chert/chert_database.cc	/^ChertDatabase::get_next_revision_number() const$/;"	f	class:ChertDatabase
get_next_revision_number	backends/flint/flint_database.cc	/^FlintDatabase::get_next_revision_number() const$/;"	f	class:FlintDatabase
get_number	languages/compiler/tokeniser.c	/^static int get_number(int n, symbol * p) {$/;"	f	file:
get_oldest_changeset	backends/brass/brass_dbstats.h	/^    brass_revision_number_t get_oldest_changeset() const { return oldest_changeset; }$/;"	f	class:BrassDatabaseStats
get_op_name	api/omqueryinternal.cc	/^Xapian::Query::Internal::get_op_name(Xapian::Query::Internal::op_t op)$/;"	f	class:Xapian::Query::Internal
get_open_revision_number	backends/brass/brass_table.h	/^	brass_revision_number_t get_open_revision_number() const {$/;"	f	class:BrassTable
get_open_revision_number	backends/chert/chert_table.h	/^	chert_revision_number_t get_open_revision_number() const {$/;"	f	class:ChertTable
get_open_revision_number	backends/flint/flint_table.h	/^	flint_revision_number_t get_open_revision_number() const {$/;"	f	class:FlintTable
get_output	languages/compiler/driver.c	/^static FILE * get_output(symbol * b) {$/;"	f	file:
get_paragraph	tests/harness/index_utils.cc	/^get_paragraph(istream &input)$/;"	f	file:
get_parameter	include/xapian/query.h	/^	Xapian::termcount get_parameter() const { return parameter; }$/;"	f	class:Xapian::Query::Internal
get_percent	api/omenquire.cc	/^MSetIterator::get_percent() const$/;"	f	class:Xapian::MSetIterator
get_percent_factor	matcher/remotesubmatch.h	/^    double get_percent_factor() const { return percent_factor; }$/;"	f	class:RemoteSubMatch
get_position	backends/brass/brass_positionlist.cc	/^BrassPositionList::get_position() const$/;"	f	class:BrassPositionList
get_position	backends/chert/chert_positionlist.cc	/^ChertPositionList::get_position() const$/;"	f	class:ChertPositionList
get_position	backends/flint/flint_positionlist.cc	/^FlintPositionList::get_position() const$/;"	f	class:FlintPositionList
get_position	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::get_position() const$/;"	f	class:InMemoryPositionList
get_posting_source	api/registry.cc	/^Registry::get_posting_source(const string & name) const$/;"	f	class:Xapian::Registry
get_postlist_and_term_info	matcher/localsubmatch.cc	/^LocalSubMatch::get_postlist_and_term_info(MultiMatch * matcher,$/;"	f	class:LocalSubMatch
get_postlist_and_term_info	matcher/remotesubmatch.cc	/^RemoteSubMatch::get_postlist_and_term_info(MultiMatch *,$/;"	f	class:RemoteSubMatch
get_postlist_cursor	backends/brass/brass_database.h	/^	BrassCursor * get_postlist_cursor() const {$/;"	f	class:BrassDatabase
get_postlist_cursor	backends/chert/chert_database.h	/^	ChertCursor * get_postlist_cursor() const {$/;"	f	class:ChertDatabase
get_progcontext	net/progclient.cc	/^ProgClient::get_progcontext(const string &progname, const string &args)$/;"	f	class:ProgClient
get_query	api/omenquire.cc	/^Enquire::Internal::get_query()$/;"	f	class:Xapian::Enquire::Internal
get_query	api/omenquire.cc	/^Enquire::get_query() const$/;"	f	class:Xapian::Enquire
get_query	queryparser/queryparser_internal.cc	/^Term::get_query() const$/;"	f	class:Term
get_query_length	include/xapian/weight.h	/^    Xapian::termcount get_query_length() const { return query_length_; }$/;"	f	class:Xapian::Weight
get_query_with_auto_synonyms	queryparser/queryparser_internal.cc	/^Term::get_query_with_auto_synonyms() const$/;"	f	class:Term
get_query_with_synonyms	queryparser/queryparser_internal.cc	/^Term::get_query_with_synonyms() const$/;"	f	class:Term
get_rank	include/xapian/enquire.h	/^	Xapian::doccount get_rank() const {$/;"	f	class:Xapian::MSetIterator
get_record	backends/brass/brass_record.cc	/^BrassRecordTable::get_record(Xapian::docid did) const$/;"	f	class:BrassRecordTable
get_record	backends/chert/chert_record.cc	/^ChertRecordTable::get_record(Xapian::docid did) const$/;"	f	class:ChertRecordTable
get_record	backends/flint/flint_record.cc	/^FlintRecordTable::get_record(Xapian::docid did) const$/;"	f	class:FlintRecordTable
get_registry	common/remoteserver.h	/^    const Xapian::Registry & get_registry() const { return reg; }$/;"	f	class:RemoteServer
get_reltermfreq	include/xapian/weight.h	/^    Xapian::doccount get_reltermfreq() const { return reltermfreq_; }$/;"	f	class:Xapian::Weight
get_reltermfreq	weight/weightinternal.cc	/^Weight::Internal::get_reltermfreq(const string & term) const$/;"	f	class:Xapian::Weight::Internal
get_remote_database	tests/apitest.cc	/^get_remote_database(const string &dbname, unsigned int timeout)$/;"	f
get_remote_database	tests/harness/backendmanager.cc	/^BackendManager::get_remote_database(const vector<string> &, unsigned int)$/;"	f	class:BackendManager
get_remote_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_remote_database(const vector<string> & files,$/;"	f	class:BackendManagerRemoteProg
get_remote_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_remote_database(const vector<string> & files,$/;"	f	class:BackendManagerRemoteTcp
get_remote_database_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_remote_database_args(const std::vector<std::string> & files,$/;"	f	class:BackendManagerRemote
get_remote_stats	backends/remote/remote-database.cc	/^RemoteDatabase::get_remote_stats(bool nowait, Xapian::Weight::Internal &out)$/;"	f	class:RemoteDatabase
get_replica_path	api/replication.cc	/^    string get_replica_path(int id) const {$/;"	f	class:DatabaseReplica::Internal	file:
get_revision	backends/brass/brass_btreebase.h	/^	uint4 get_revision() const { return revision; }$/;"	f	class:BrassTable_base
get_revision	backends/chert/chert_btreebase.h	/^	uint4 get_revision() const { return revision; }$/;"	f	class:ChertTable_base
get_revision	backends/flint/flint_btreebase.h	/^	uint4 get_revision() const { return revision; }$/;"	f	class:FlintTable_base
get_revision_info	api/replication.cc	/^DatabaseReplica::Internal::get_revision_info() const$/;"	f	class:DatabaseReplica::Internal
get_revision_info	api/replication.cc	/^DatabaseReplica::get_revision_info() const$/;"	f	class:DatabaseReplica
get_revision_info	backends/brass/brass_database.cc	/^BrassDatabase::get_revision_info() const$/;"	f	class:BrassDatabase
get_revision_info	backends/chert/chert_database.cc	/^ChertDatabase::get_revision_info() const$/;"	f	class:ChertDatabase
get_revision_info	backends/database.cc	/^Database::Internal::get_revision_info() const$/;"	f	class:Xapian::Database::Internal
get_revision_info	backends/flint/flint_database.cc	/^FlintDatabase::get_revision_info() const$/;"	f	class:FlintDatabase
get_revision_info	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_revision_info() const$/;"	f	class:ConstDatabaseWrapper
get_revision_number	backends/brass/brass_database.cc	/^BrassDatabase::get_revision_number() const$/;"	f	class:BrassDatabase
get_revision_number	backends/chert/chert_database.cc	/^ChertDatabase::get_revision_number() const$/;"	f	class:ChertDatabase
get_revision_number	backends/flint/flint_database.cc	/^FlintDatabase::get_revision_number() const$/;"	f	class:FlintDatabase
get_root	backends/brass/brass_btreebase.h	/^	uint4 get_root() const { return root; }$/;"	f	class:BrassTable_base
get_root	backends/chert/chert_btreebase.h	/^	uint4 get_root() const { return root; }$/;"	f	class:ChertTable_base
get_root	backends/flint/flint_btreebase.h	/^	uint4 get_root() const { return root; }$/;"	f	class:FlintTable_base
get_rset_size	include/xapian/weight.h	/^    Xapian::doccount get_rset_size() const { return rset_size_; }$/;"	f	class:Xapian::Weight
get_sequential	backends/brass/brass_btreebase.h	/^	bool get_sequential() const { return sequential; }$/;"	f	class:BrassTable_base
get_sequential	backends/chert/chert_btreebase.h	/^	bool get_sequential() const { return sequential; }$/;"	f	class:ChertTable_base
get_sequential	backends/flint/flint_btreebase.h	/^	bool get_sequential() const { return sequential; }$/;"	f	class:FlintTable_base
get_size	backends/brass/brass_positionlist.cc	/^BrassPositionList::get_size() const$/;"	f	class:BrassPositionList
get_size	backends/chert/chert_positionlist.cc	/^ChertPositionList::get_size() const$/;"	f	class:ChertPositionList
get_size	backends/flint/flint_positionlist.cc	/^FlintPositionList::get_size() const$/;"	f	class:FlintPositionList
get_size	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::get_size() const$/;"	f	class:InMemoryPositionList
get_spelling_frequency	backends/brass/brass_database.cc	/^BrassDatabase::get_spelling_frequency(const string & word) const$/;"	f	class:BrassDatabase
get_spelling_frequency	backends/chert/chert_database.cc	/^ChertDatabase::get_spelling_frequency(const string & word) const$/;"	f	class:ChertDatabase
get_spelling_frequency	backends/database.cc	/^Database::Internal::get_spelling_frequency(const string &) const$/;"	f	class:Xapian::Database::Internal
get_spelling_frequency	backends/flint/flint_database.cc	/^FlintDatabase::get_spelling_frequency(const string & word) const$/;"	f	class:FlintDatabase
get_spelling_frequency	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_spelling_frequency(const string & word) const$/;"	f	class:ConstDatabaseWrapper
get_spelling_suggestion	api/omdatabase.cc	/^Database::get_spelling_suggestion(const string &word,$/;"	f	class:Xapian::Database
get_srcdir	tests/harness/testsuite.cc	/^test_driver::get_srcdir()$/;"	f	class:test_driver
get_stopper	queryparser/queryparser_internal.cc	/^    const Stopper * get_stopper() const {$/;"	f	class:State
get_string	api/matchspy.cc	/^    std::string get_string() const { return str; }$/;"	f	class:StringAndFrequency
get_sumextra	tests/api_db.cc	/^    Xapian::weight get_sumextra(Xapian::termcount) const { return 0; }$/;"	f	class:MyWeight
get_sumextra	tests/api_serialise.cc	/^    Xapian::weight get_sumextra(Xapian::termcount) const { return 0; }$/;"	f	class:ExceptionalWeight
get_sumextra	tests/api_weight.cc	/^    double get_sumextra(Xapian::termcount doclen) const {$/;"	f	class:CheckInitWeight
get_sumextra	tests/api_weight.cc	/^    double get_sumextra(Xapian::termcount doclen) const {$/;"	f	class:CheckStatsWeight
get_sumextra	weight/bm25weight.cc	/^BM25Weight::get_sumextra(Xapian::termcount len) const$/;"	f	class:Xapian::BM25Weight
get_sumextra	weight/boolweight.cc	/^BoolWeight::get_sumextra(Xapian::termcount) const$/;"	f	class:Xapian::BoolWeight
get_sumextra	weight/tradweight.cc	/^TradWeight::get_sumextra(Xapian::termcount) const$/;"	f	class:Xapian::TradWeight
get_sumpart	tests/api_db.cc	/^    Xapian::weight get_sumpart(Xapian::termcount, Xapian::termcount) const {$/;"	f	class:MyWeight
get_sumpart	tests/api_serialise.cc	/^    Xapian::weight get_sumpart(Xapian::termcount, Xapian::termcount) const {$/;"	f	class:ExceptionalWeight
get_sumpart	tests/api_weight.cc	/^    double get_sumpart(Xapian::termcount wdf, Xapian::termcount doclen) const {$/;"	f	class:CheckStatsWeight
get_sumpart	tests/api_weight.cc	/^    double get_sumpart(Xapian::termcount, Xapian::termcount) const {$/;"	f	class:CheckInitWeight
get_sumpart	weight/bm25weight.cc	/^BM25Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len) const$/;"	f	class:Xapian::BM25Weight
get_sumpart	weight/boolweight.cc	/^BoolWeight::get_sumpart(Xapian::termcount, Xapian::termcount) const$/;"	f	class:Xapian::BoolWeight
get_sumpart	weight/tradweight.cc	/^TradWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len) const$/;"	f	class:Xapian::TradWeight
get_sumpart_needs_doclength_	include/xapian/weight.h	/^    bool get_sumpart_needs_doclength_() const {$/;"	f	class:Xapian::Weight
get_sumpart_needs_wdf_	include/xapian/weight.h	/^    bool get_sumpart_needs_wdf_() const {$/;"	f	class:Xapian::Weight
get_table	backends/brass/brass_cursor.h	/^	const BrassTable * get_table() const { return B; }$/;"	f	class:BrassCursor
get_table	backends/chert/chert_cursor.h	/^	const ChertTable * get_table() const { return B; }$/;"	f	class:ChertCursor
get_table	backends/flint/flint_cursor.h	/^	FlintTable * get_table() const { return B; }$/;"	f	class:FlintCursor
get_tcpcontext	net/remotetcpclient.cc	/^RemoteTcpClient::get_tcpcontext(const string & hostname, int port)$/;"	f	class:RemoteTcpClient
get_termfreq	api/maptermlist.h	/^	Xapian::doccount get_termfreq() const {$/;"	f	class:MapTermList
get_termfreq	api/matchspy.cc	/^    Xapian::doccount get_termfreq() const {$/;"	f	class:StringAndFreqTermList
get_termfreq	api/matchspy.cc	/^    Xapian::doccount get_termfreq() const {$/;"	f	class:ValueCountTermList
get_termfreq	api/omdatabase.cc	/^Database::get_termfreq(const string & tname) const$/;"	f	class:Xapian::Database
get_termfreq	api/omenquire.cc	/^Enquire::Internal::get_termfreq(const string &tname) const$/;"	f	class:Xapian::Enquire::Internal
get_termfreq	api/omenquire.cc	/^MSet::get_termfreq(const string &tname) const$/;"	f	class:Xapian::MSet
get_termfreq	api/omtermlistiterator.cc	/^Xapian::TermIterator::get_termfreq() const$/;"	f	class:Xapian::TermIterator
get_termfreq	backends/brass/brass_alldocspostlist.cc	/^BrassAllDocsPostList::get_termfreq() const$/;"	f	class:BrassAllDocsPostList
get_termfreq	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::get_termfreq() const$/;"	f	class:BrassAllTermsList
get_termfreq	backends/brass/brass_database.cc	/^BrassDatabase::get_termfreq(const string & term) const$/;"	f	class:BrassDatabase
get_termfreq	backends/brass/brass_database.cc	/^BrassWritableDatabase::get_termfreq(const string & term) const$/;"	f	class:BrassWritableDatabase
get_termfreq	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::get_termfreq() const$/;"	f	class:BrassMetadataTermList
get_termfreq	backends/brass/brass_postlist.cc	/^BrassPostListTable::get_termfreq(const string & term) const$/;"	f	class:BrassPostListTable
get_termfreq	backends/brass/brass_postlist.h	/^	Xapian::doccount get_termfreq() const { return number_of_entries; }$/;"	f	class:BrassPostList
get_termfreq	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::get_termfreq() const$/;"	f	class:BrassSpellingTermList
get_termfreq	backends/brass/brass_spellingwordslist.cc	/^BrassSpellingWordsList::get_termfreq() const$/;"	f	class:BrassSpellingWordsList
get_termfreq	backends/brass/brass_synonym.cc	/^BrassSynonymTermList::get_termfreq() const$/;"	f	class:BrassSynonymTermList
get_termfreq	backends/brass/brass_termlist.cc	/^BrassTermList::get_termfreq() const$/;"	f	class:BrassTermList
get_termfreq	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_termfreq() const$/;"	f	class:ChertAllDocsPostList
get_termfreq	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::get_termfreq() const$/;"	f	class:ChertAllTermsList
get_termfreq	backends/chert/chert_database.cc	/^ChertDatabase::get_termfreq(const string & term) const$/;"	f	class:ChertDatabase
get_termfreq	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_termfreq(const string & tname) const$/;"	f	class:ChertWritableDatabase
get_termfreq	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::get_termfreq() const$/;"	f	class:ChertMetadataTermList
get_termfreq	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_termfreq() const$/;"	f	class:ChertModifiedPostList
get_termfreq	backends/chert/chert_postlist.cc	/^ChertPostListTable::get_termfreq(const string & term) const$/;"	f	class:ChertPostListTable
get_termfreq	backends/chert/chert_postlist.h	/^	Xapian::doccount get_termfreq() const { return number_of_entries; }$/;"	f	class:ChertPostList
get_termfreq	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_termfreq() const$/;"	f	class:ChertSpellingTermList
get_termfreq	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::get_termfreq() const$/;"	f	class:ChertSpellingWordsList
get_termfreq	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::get_termfreq() const$/;"	f	class:ChertSynonymTermList
get_termfreq	backends/chert/chert_termlist.cc	/^ChertTermList::get_termfreq() const$/;"	f	class:ChertTermList
get_termfreq	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_termfreq() const$/;"	f	class:ContiguousAllDocsPostList
get_termfreq	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::get_termfreq() const$/;"	f	class:FlintAllDocsPostList
get_termfreq	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::get_termfreq() const$/;"	f	class:FlintAllTermsList
get_termfreq	backends/flint/flint_database.cc	/^FlintDatabase::get_termfreq(const string & term) const$/;"	f	class:FlintDatabase
get_termfreq	backends/flint/flint_database.cc	/^FlintWritableDatabase::get_termfreq(const string & tname) const$/;"	f	class:FlintWritableDatabase
get_termfreq	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::get_termfreq() const$/;"	f	class:FlintMetadataTermList
get_termfreq	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::get_termfreq() const$/;"	f	class:FlintModifiedPostList
get_termfreq	backends/flint/flint_postlist.cc	/^FlintPostListTable::get_termfreq(const string & term) const$/;"	f	class:FlintPostListTable
get_termfreq	backends/flint/flint_postlist.h	/^	Xapian::doccount get_termfreq() const { return number_of_entries; }$/;"	f	class:FlintPostList
get_termfreq	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::get_termfreq() const$/;"	f	class:FlintSpellingTermList
get_termfreq	backends/flint/flint_spellingwordslist.cc	/^FlintSpellingWordsList::get_termfreq() const$/;"	f	class:FlintSpellingWordsList
get_termfreq	backends/flint/flint_synonym.cc	/^FlintSynonymTermList::get_termfreq() const$/;"	f	class:FlintSynonymTermList
get_termfreq	backends/flint/flint_termlist.cc	/^FlintTermList::get_termfreq() const$/;"	f	class:FlintTermList
get_termfreq	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::get_termfreq() const$/;"	f	class:InMemoryAllTermsList
get_termfreq	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_termfreq() const$/;"	f	class:InMemoryAllDocsPostList
get_termfreq	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_termfreq(const string & tname) const$/;"	f	class:InMemoryDatabase
get_termfreq	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_termfreq() const$/;"	f	class:InMemoryPostList
get_termfreq	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_termfreq() const$/;"	f	class:InMemoryTermList
get_termfreq	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::get_termfreq() const$/;"	f	class:MultiAllTermsList
get_termfreq	backends/multi/multi_termlist.cc	/^Xapian::doccount MultiTermList::get_termfreq() const$/;"	f	class:MultiTermList
get_termfreq	backends/remote/net_postlist.cc	/^NetworkPostList::get_termfreq() const$/;"	f	class:NetworkPostList
get_termfreq	backends/remote/net_termlist.cc	/^NetworkTermList::get_termfreq() const$/;"	f	class:NetworkTermList
get_termfreq	backends/remote/remote-database.cc	/^RemoteDatabase::get_termfreq(const string & tname) const$/;"	f	class:RemoteDatabase
get_termfreq	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_termfreq(const string & tname) const$/;"	f	class:ConstDatabaseWrapper
get_termfreq	common/vectortermlist.h	/^	Xapian::doccount get_termfreq() const {$/;"	f	class:VectorTermList
get_termfreq	expand/ortermlist.cc	/^FreqAdderOrTermList::get_termfreq() const$/;"	f	class:FreqAdderOrTermList
get_termfreq	expand/ortermlist.cc	/^OrTermList::get_termfreq() const$/;"	f	class:OrTermList
get_termfreq	include/xapian/weight.h	/^    Xapian::doccount get_termfreq() const { return termfreq_; }$/;"	f	class:Xapian::Weight
get_termfreq	weight/weightinternal.cc	/^Weight::Internal::get_termfreq(const string & term) const$/;"	f	class:Xapian::Weight::Internal
get_termfreq_est	api/emptypostlist.cc	/^EmptyPostList::get_termfreq_est() const$/;"	f	class:EmptyPostList
get_termfreq_est	api/leafpostlist.cc	/^LeafPostList::get_termfreq_est() const$/;"	f	class:LeafPostList
get_termfreq_est	api/postingsource.cc	/^FixedWeightPostingSource::get_termfreq_est() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_termfreq_est	api/postingsource.cc	/^ValuePostingSource::get_termfreq_est() const$/;"	f	class:Xapian::ValuePostingSource
get_termfreq_est	backends/multi/multi_postlist.cc	/^MultiPostList::get_termfreq_est() const$/;"	f	class:MultiPostList
get_termfreq_est	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_est() const$/;"	f	class:AndMaybePostList
get_termfreq_est	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_est() const$/;"	f	class:AndNotPostList
get_termfreq_est	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_termfreq_est() const$/;"	f	class:ExactPhrasePostList
get_termfreq_est	matcher/externalpostlist.cc	/^ExternalPostList::get_termfreq_est() const$/;"	f	class:ExternalPostList
get_termfreq_est	matcher/extraweightpostlist.h	/^	Xapian::doccount get_termfreq_est() const {$/;"	f	class:ExtraWeightPostList
get_termfreq_est	matcher/mergepostlist.cc	/^MergePostList::get_termfreq_est() const$/;"	f	class:MergePostList
get_termfreq_est	matcher/msetpostlist.cc	/^MSetPostList::get_termfreq_est() const$/;"	f	class:MSetPostList
get_termfreq_est	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_est() const$/;"	f	class:MultiAndPostList
get_termfreq_est	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_est() const$/;"	f	class:MultiXorPostList
get_termfreq_est	matcher/orpostlist.cc	/^OrPostList::get_termfreq_est() const$/;"	f	class:OrPostList
get_termfreq_est	matcher/phrasepostlist.h	/^	Xapian::doccount get_termfreq_est() const$/;"	f	class:NearPostList
get_termfreq_est	matcher/phrasepostlist.h	/^	Xapian::doccount get_termfreq_est() const$/;"	f	class:PhrasePostList
get_termfreq_est	matcher/synonympostlist.cc	/^SynonymPostList::get_termfreq_est() const {$/;"	f	class:SynonymPostList
get_termfreq_est	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_est() const$/;"	f	class:ValueRangePostList
get_termfreq_est	tests/api_percentages.cc	/^    Xapian::doccount get_termfreq_est() const { return weights.size(); }$/;"	f	class:MyPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return 4; }$/;"	f	class:ChangeMaxweightPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return num_docs \/ 2; }$/;"	f	class:MyOddPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return num_docs \/ 2; }$/;"	f	class:MyOddWeightingPostingSource
get_termfreq_est	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_est() const { return num_docs; }$/;"	f	class:MyDontAskWeightPostingSource
get_termfreq_est	tests/api_serialise.cc	/^    Xapian::doccount get_termfreq_est() const { return 1; }$/;"	f	class:ExceptionalPostingSource
get_termfreq_est_using_stats	api/leafpostlist.cc	/^LeafPostList::get_termfreq_est_using_stats($/;"	f	class:LeafPostList
get_termfreq_est_using_stats	api/postlist.cc	/^PostingIterator::Internal::get_termfreq_est_using_stats($/;"	f	class:Xapian::PostingIterator::Internal
get_termfreq_est_using_stats	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_est_using_stats($/;"	f	class:AndMaybePostList
get_termfreq_est_using_stats	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_est_using_stats($/;"	f	class:AndNotPostList
get_termfreq_est_using_stats	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_termfreq_est_using_stats($/;"	f	class:ExactPhrasePostList
get_termfreq_est_using_stats	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_est_using_stats($/;"	f	class:MultiAndPostList
get_termfreq_est_using_stats	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_est_using_stats($/;"	f	class:MultiXorPostList
get_termfreq_est_using_stats	matcher/orpostlist.cc	/^OrPostList::get_termfreq_est_using_stats($/;"	f	class:OrPostList
get_termfreq_est_using_stats	matcher/phrasepostlist.cc	/^NearPostList::get_termfreq_est_using_stats($/;"	f	class:NearPostList
get_termfreq_est_using_stats	matcher/phrasepostlist.cc	/^PhrasePostList::get_termfreq_est_using_stats($/;"	f	class:PhrasePostList
get_termfreq_est_using_stats	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_est_using_stats($/;"	f	class:ValueRangePostList
get_termfreq_max	api/emptypostlist.cc	/^EmptyPostList::get_termfreq_max() const$/;"	f	class:EmptyPostList
get_termfreq_max	api/leafpostlist.cc	/^LeafPostList::get_termfreq_max() const$/;"	f	class:LeafPostList
get_termfreq_max	api/postingsource.cc	/^FixedWeightPostingSource::get_termfreq_max() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_termfreq_max	api/postingsource.cc	/^ValuePostingSource::get_termfreq_max() const$/;"	f	class:Xapian::ValuePostingSource
get_termfreq_max	backends/multi/multi_postlist.cc	/^MultiPostList::get_termfreq_max() const$/;"	f	class:MultiPostList
get_termfreq_max	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_max() const$/;"	f	class:AndMaybePostList
get_termfreq_max	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_max() const$/;"	f	class:AndNotPostList
get_termfreq_max	matcher/externalpostlist.cc	/^ExternalPostList::get_termfreq_max() const$/;"	f	class:ExternalPostList
get_termfreq_max	matcher/extraweightpostlist.h	/^	Xapian::doccount get_termfreq_max() const {$/;"	f	class:ExtraWeightPostList
get_termfreq_max	matcher/mergepostlist.cc	/^MergePostList::get_termfreq_max() const$/;"	f	class:MergePostList
get_termfreq_max	matcher/msetpostlist.cc	/^MSetPostList::get_termfreq_max() const$/;"	f	class:MSetPostList
get_termfreq_max	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_max() const$/;"	f	class:MultiAndPostList
get_termfreq_max	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_max() const$/;"	f	class:MultiXorPostList
get_termfreq_max	matcher/orpostlist.cc	/^OrPostList::get_termfreq_max() const$/;"	f	class:OrPostList
get_termfreq_max	matcher/selectpostlist.h	/^	Xapian::doccount get_termfreq_max() const { return source->get_termfreq_max(); }$/;"	f	class:SelectPostList
get_termfreq_max	matcher/synonympostlist.cc	/^SynonymPostList::get_termfreq_max() const {$/;"	f	class:SynonymPostList
get_termfreq_max	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_max() const$/;"	f	class:ValueRangePostList
get_termfreq_max	tests/api_percentages.cc	/^    Xapian::doccount get_termfreq_max() const { return weights.size(); }$/;"	f	class:MyPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return 4; }$/;"	f	class:ChangeMaxweightPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return num_docs; }$/;"	f	class:MyDontAskWeightPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return num_docs; }$/;"	f	class:MyOddPostingSource
get_termfreq_max	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_max() const { return num_docs; }$/;"	f	class:MyOddWeightingPostingSource
get_termfreq_max	tests/api_serialise.cc	/^    Xapian::doccount get_termfreq_max() const { return 2; }$/;"	f	class:ExceptionalPostingSource
get_termfreq_min	api/emptypostlist.cc	/^EmptyPostList::get_termfreq_min() const$/;"	f	class:EmptyPostList
get_termfreq_min	api/leafpostlist.cc	/^LeafPostList::get_termfreq_min() const$/;"	f	class:LeafPostList
get_termfreq_min	api/postingsource.cc	/^FixedWeightPostingSource::get_termfreq_min() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_termfreq_min	api/postingsource.cc	/^ValuePostingSource::get_termfreq_min() const$/;"	f	class:Xapian::ValuePostingSource
get_termfreq_min	backends/multi/multi_postlist.cc	/^MultiPostList::get_termfreq_min() const$/;"	f	class:MultiPostList
get_termfreq_min	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_termfreq_min() const$/;"	f	class:AndMaybePostList
get_termfreq_min	matcher/andnotpostlist.cc	/^AndNotPostList::get_termfreq_min() const$/;"	f	class:AndNotPostList
get_termfreq_min	matcher/externalpostlist.cc	/^ExternalPostList::get_termfreq_min() const$/;"	f	class:ExternalPostList
get_termfreq_min	matcher/extraweightpostlist.h	/^	Xapian::doccount get_termfreq_min() const {$/;"	f	class:ExtraWeightPostList
get_termfreq_min	matcher/mergepostlist.cc	/^MergePostList::get_termfreq_min() const$/;"	f	class:MergePostList
get_termfreq_min	matcher/msetpostlist.cc	/^MSetPostList::get_termfreq_min() const$/;"	f	class:MSetPostList
get_termfreq_min	matcher/multiandpostlist.cc	/^MultiAndPostList::get_termfreq_min() const$/;"	f	class:MultiAndPostList
get_termfreq_min	matcher/multixorpostlist.cc	/^MultiXorPostList::get_termfreq_min() const$/;"	f	class:MultiXorPostList
get_termfreq_min	matcher/orpostlist.cc	/^OrPostList::get_termfreq_min() const$/;"	f	class:OrPostList
get_termfreq_min	matcher/selectpostlist.h	/^	Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:SelectPostList
get_termfreq_min	matcher/synonympostlist.cc	/^SynonymPostList::get_termfreq_min() const {$/;"	f	class:SynonymPostList
get_termfreq_min	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_termfreq_min() const$/;"	f	class:ValueRangePostList
get_termfreq_min	tests/api_percentages.cc	/^    Xapian::doccount get_termfreq_min() const { return weights.size(); }$/;"	f	class:MyPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:MyOddPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:MyOddWeightingPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return 4; }$/;"	f	class:ChangeMaxweightPostingSource
get_termfreq_min	tests/api_postingsource.cc	/^    Xapian::doccount get_termfreq_min() const { return num_docs; }$/;"	f	class:MyDontAskWeightPostingSource
get_termfreq_min	tests/api_serialise.cc	/^    Xapian::doccount get_termfreq_min() const { return 0; }$/;"	f	class:ExceptionalPostingSource
get_termname	api/maptermlist.h	/^	string get_termname() const {$/;"	f	class:MapTermList
get_termname	api/matchspy.cc	/^    string get_termname() const {$/;"	f	class:StringAndFreqTermList
get_termname	api/matchspy.cc	/^    string get_termname() const {$/;"	f	class:ValueCountTermList
get_termname	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::get_termname() const$/;"	f	class:BrassAllTermsList
get_termname	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::get_termname() const$/;"	f	class:BrassMetadataTermList
get_termname	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::get_termname() const$/;"	f	class:BrassSpellingTermList
get_termname	backends/brass/brass_spellingwordslist.cc	/^BrassSpellingWordsList::get_termname() const$/;"	f	class:BrassSpellingWordsList
get_termname	backends/brass/brass_synonym.cc	/^BrassSynonymTermList::get_termname() const$/;"	f	class:BrassSynonymTermList
get_termname	backends/brass/brass_termlist.cc	/^BrassTermList::get_termname() const$/;"	f	class:BrassTermList
get_termname	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::get_termname() const$/;"	f	class:ChertAllTermsList
get_termname	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::get_termname() const$/;"	f	class:ChertMetadataTermList
get_termname	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_termname() const$/;"	f	class:ChertSpellingTermList
get_termname	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::get_termname() const$/;"	f	class:ChertSpellingWordsList
get_termname	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::get_termname() const$/;"	f	class:ChertSynonymTermList
get_termname	backends/chert/chert_termlist.cc	/^ChertTermList::get_termname() const$/;"	f	class:ChertTermList
get_termname	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::get_termname() const$/;"	f	class:FlintAllTermsList
get_termname	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::get_termname() const$/;"	f	class:FlintMetadataTermList
get_termname	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::get_termname() const$/;"	f	class:FlintSpellingTermList
get_termname	backends/flint/flint_spellingwordslist.cc	/^FlintSpellingWordsList::get_termname() const$/;"	f	class:FlintSpellingWordsList
get_termname	backends/flint/flint_synonym.cc	/^FlintSynonymTermList::get_termname() const$/;"	f	class:FlintSynonymTermList
get_termname	backends/flint/flint_termlist.cc	/^FlintTermList::get_termname() const$/;"	f	class:FlintTermList
get_termname	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::get_termname() const$/;"	f	class:InMemoryAllTermsList
get_termname	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_termname() const$/;"	f	class:InMemoryTermList
get_termname	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::get_termname() const$/;"	f	class:MultiAllTermsList
get_termname	backends/multi/multi_termlist.cc	/^MultiTermList::get_termname() const$/;"	f	class:MultiTermList
get_termname	backends/remote/net_termlist.cc	/^NetworkTermList::get_termname() const$/;"	f	class:NetworkTermList
get_termname	common/vectortermlist.h	/^	string get_termname() const {$/;"	f	class:VectorTermList
get_termname	expand/ortermlist.cc	/^OrTermList::get_termname() const$/;"	f	class:OrTermList
get_termpos	queryparser/queryparser_internal.cc	/^    termpos get_termpos() const { return pos; }$/;"	f	class:Term
get_termpos	queryparser/termgenerator.cc	/^TermGenerator::get_termpos() const$/;"	f	class:TermGenerator
get_terms	api/omqueryinternal.cc	/^Xapian::Query::Internal::get_terms() const$/;"	f	class:Xapian::Query::Internal
get_terms_begin	api/omquery.cc	/^TermIterator Query::get_terms_begin() const$/;"	f	class:Xapian::Query
get_terms_end	include/xapian/query.h	/^	TermIterator get_terms_end() const {$/;"	f	class:Xapian::Query
get_termweight	api/omenquire.cc	/^MSet::get_termweight(const string &tname) const$/;"	f	class:Xapian::MSet
get_tfdelta	backends/brass/brass_inverter.h	/^	Xapian::termcount_diff get_tfdelta() const { return tf_delta; }$/;"	f	class:Inverter::PostingChanges
get_tfdelta	backends/brass/brass_inverter.h	/^    Xapian::termcount_diff get_tfdelta(const std::string & term) const {$/;"	f	class:Inverter
get_time	tests/harness/cputimer.h	/^    double get_time() const {$/;"	f	class:CPUTimer
get_tname_from_key	backends/brass/brass_postlist.cc	/^static inline bool get_tname_from_key(const char **src, const char *end,$/;"	f	file:
get_tname_from_key	backends/chert/chert_postlist.cc	/^static inline bool get_tname_from_key(const char **src, const char *end,$/;"	f	file:
get_tname_from_key	backends/flint/flint_postlist.cc	/^static inline bool get_tname_from_key(const char **src, const char *end,$/;"	f	file:
get_token	languages/compiler/analyser.c	/^static int get_token(struct analyser * a, int code) {$/;"	f	file:
get_total	include/xapian/matchspy.h	/^    size_t get_total() const {$/;"	f	class:Xapian::ValueCountMatchSpy
get_total_doclen	backends/brass/brass_dbstats.h	/^    totlen_t get_total_doclen() const { return total_doclen; }$/;"	f	class:BrassDatabaseStats
get_total_doclen	backends/chert/chert_dbstats.h	/^    totlen_t get_total_doclen() const { return total_doclen; }$/;"	f	class:ChertDatabaseStats
get_total_length	backends/brass/brass_database.cc	/^BrassDatabase::get_total_length() const$/;"	f	class:BrassDatabase
get_total_length	backends/chert/chert_database.cc	/^ChertDatabase::get_total_length() const$/;"	f	class:ChertDatabase
get_total_length	backends/flint/flint_database.cc	/^FlintDatabase::get_total_length() const$/;"	f	class:FlintDatabase
get_total_length	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_total_length() const$/;"	f	class:InMemoryDatabase
get_total_length	backends/remote/remote-database.cc	/^RemoteDatabase::get_total_length() const$/;"	f	class:RemoteDatabase
get_total_length	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_total_length() const$/;"	f	class:ConstDatabaseWrapper
get_total_physical_memory	tests/perftest/freemem.cc	/^get_total_physical_memory()$/;"	f
get_total_subqueries	matcher/queryoptimiser.h	/^    Xapian::termcount get_total_subqueries() const { return total_subqs; }$/;"	f	class:QueryOptimiser
get_type	include/xapian/error.h	/^    const char * get_type() const { return type; }$/;"	f	class:Xapian::Error
get_uncollapsed_matches_estimated	api/omenquire.cc	/^MSet::get_uncollapsed_matches_estimated() const$/;"	f	class:Xapian::MSet
get_uncollapsed_matches_lower_bound	api/omenquire.cc	/^MSet::get_uncollapsed_matches_lower_bound() const$/;"	f	class:Xapian::MSet
get_uncollapsed_matches_upper_bound	api/omenquire.cc	/^MSet::get_uncollapsed_matches_upper_bound() const$/;"	f	class:Xapian::MSet
get_utf8	languages/compiler/space.c	/^extern int get_utf8(const symbol * p, int * slot) {$/;"	f
get_utf8	languages/steminternal.cc	/^int SnowballStemImplementation::get_utf8(int * slot) {$/;"	f	class:Xapian::SnowballStemImplementation
get_uuid	api/omdatabase.cc	/^Database::get_uuid() const$/;"	f	class:Xapian::Database
get_uuid	backends/brass/brass_database.cc	/^BrassDatabase::get_uuid() const$/;"	f	class:BrassDatabase
get_uuid	backends/brass/brass_databasereplicator.cc	/^BrassDatabaseReplicator::get_uuid() const$/;"	f	class:BrassDatabaseReplicator
get_uuid	backends/brass/brass_version.h	/^    const char * get_uuid() const {$/;"	f	class:BrassVersion
get_uuid	backends/chert/chert_database.cc	/^ChertDatabase::get_uuid() const$/;"	f	class:ChertDatabase
get_uuid	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::get_uuid() const$/;"	f	class:ChertDatabaseReplicator
get_uuid	backends/chert/chert_version.h	/^    const char * get_uuid() const {$/;"	f	class:ChertVersion
get_uuid	backends/database.cc	/^Database::Internal::get_uuid() const$/;"	f	class:Xapian::Database::Internal
get_uuid	backends/flint/flint_database.cc	/^FlintDatabase::get_uuid() const$/;"	f	class:FlintDatabase
get_uuid	backends/flint/flint_databasereplicator.cc	/^FlintDatabaseReplicator::get_uuid() const$/;"	f	class:FlintDatabaseReplicator
get_uuid	backends/flint/flint_version.h	/^    const char * get_uuid() const {$/;"	f	class:FlintVersion
get_uuid	backends/remote/remote-database.cc	/^RemoteDatabase::get_uuid() const$/;"	f	class:RemoteDatabase
get_uuid	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_uuid() const$/;"	f	class:ConstDatabaseWrapper
get_uuid_string	backends/brass/brass_version.h	/^    std::string get_uuid_string() const {$/;"	f	class:BrassVersion
get_uuid_string	backends/chert/chert_version.h	/^    std::string get_uuid_string() const {$/;"	f	class:ChertVersion
get_uuid_string	backends/flint/flint_version.h	/^    std::string get_uuid_string() const {$/;"	f	class:FlintVersion
get_value	api/documentvaluelist.cc	/^DocumentValueList::get_value() const$/;"	f	class:DocumentValueList
get_value	api/omdocument.cc	/^Document::get_value(Xapian::valueno slot) const$/;"	f	class:Xapian::Document
get_value	api/omdocument.cc	/^Xapian::Document::Internal::get_value(Xapian::valueno slot) const$/;"	f	class:Xapian::Document::Internal
get_value	backends/brass/brass_valuelist.cc	/^BrassValueList::get_value() const$/;"	f	class:BrassValueList
get_value	backends/brass/brass_values.cc	/^BrassValueManager::get_value(Xapian::docid did, Xapian::valueno slot) const$/;"	f	class:BrassValueManager
get_value	backends/brass/brass_values.h	/^    const std::string & get_value() const { return value; }$/;"	f	class:Brass::ValueChunkReader
get_value	backends/chert/chert_valuelist.cc	/^ChertValueList::get_value() const$/;"	f	class:ChertValueList
get_value	backends/chert/chert_values.cc	/^ChertValueManager::get_value(Xapian::docid did, Xapian::valueno slot) const$/;"	f	class:ChertValueManager
get_value	backends/chert/chert_values.h	/^    const std::string & get_value() const { return value; }$/;"	f	class:ValueChunkReader
get_value	backends/flint/flint_values.cc	/^FlintValueTable::get_value(string & value,$/;"	f	class:FlintValueTable
get_value	backends/multi/multi_valuelist.cc	/^    std::string get_value() const { return valuelist->get_value(); }$/;"	f	struct:SubValueList
get_value	backends/multi/multi_valuelist.cc	/^MultiValueList::get_value() const$/;"	f	class:MultiValueList
get_value	backends/slowvaluelist.cc	/^SlowValueList::get_value() const$/;"	f	class:SlowValueList
get_value	matcher/valuestreamdocument.h	/^    string get_value(Xapian::valueno slot) const {$/;"	f	class:ValueStreamDocument
get_value_freq	api/omdatabase.cc	/^Database::get_value_freq(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
get_value_freq	backends/brass/brass_database.cc	/^BrassDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:BrassDatabase
get_value_freq	backends/brass/brass_database.cc	/^BrassWritableDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:BrassWritableDatabase
get_value_freq	backends/brass/brass_values.h	/^    Xapian::doccount get_value_freq(Xapian::valueno slot) const {$/;"	f	class:BrassValueManager
get_value_freq	backends/chert/chert_database.cc	/^ChertDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
get_value_freq	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
get_value_freq	backends/chert/chert_values.h	/^    Xapian::doccount get_value_freq(Xapian::valueno slot) const {$/;"	f	class:ChertValueManager
get_value_freq	backends/database.cc	/^Database::Internal::get_value_freq(Xapian::valueno) const$/;"	f	class:Xapian::Database::Internal
get_value_freq	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:InMemoryDatabase
get_value_freq	backends/remote/remote-database.cc	/^RemoteDatabase::get_value_freq(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
get_value_freq	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_value_freq(Xapian::valueno slot) const$/;"	f	class:ConstDatabaseWrapper
get_value_lower_bound	api/omdatabase.cc	/^Database::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
get_value_lower_bound	backends/brass/brass_database.cc	/^BrassDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:BrassDatabase
get_value_lower_bound	backends/brass/brass_database.cc	/^BrassWritableDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:BrassWritableDatabase
get_value_lower_bound	backends/brass/brass_values.h	/^    std::string get_value_lower_bound(Xapian::valueno slot) const {$/;"	f	class:BrassValueManager
get_value_lower_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
get_value_lower_bound	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
get_value_lower_bound	backends/chert/chert_values.h	/^    std::string get_value_lower_bound(Xapian::valueno slot) const {$/;"	f	class:ChertValueManager
get_value_lower_bound	backends/database.cc	/^Database::Internal::get_value_lower_bound(Xapian::valueno) const$/;"	f	class:Xapian::Database::Internal
get_value_lower_bound	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:InMemoryDatabase
get_value_lower_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
get_value_lower_bound	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_value_lower_bound(Xapian::valueno slot) const$/;"	f	class:ConstDatabaseWrapper
get_value_stats	backends/brass/brass_values.cc	/^BrassValueManager::get_value_stats(Xapian::valueno slot) const$/;"	f	class:BrassValueManager
get_value_stats	backends/brass/brass_values.cc	/^BrassValueManager::get_value_stats(Xapian::valueno slot, ValueStats & stats) const$/;"	f	class:BrassValueManager
get_value_stats	backends/chert/chert_values.cc	/^ChertValueManager::get_value_stats(Xapian::valueno slot) const$/;"	f	class:ChertValueManager
get_value_stats	backends/chert/chert_values.cc	/^ChertValueManager::get_value_stats(Xapian::valueno slot, ValueStats & stats) const$/;"	f	class:ChertValueManager
get_value_upper_bound	api/omdatabase.cc	/^Database::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
get_value_upper_bound	backends/brass/brass_database.cc	/^BrassDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:BrassDatabase
get_value_upper_bound	backends/brass/brass_database.cc	/^BrassWritableDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:BrassWritableDatabase
get_value_upper_bound	backends/brass/brass_values.h	/^    std::string get_value_upper_bound(Xapian::valueno slot) const {$/;"	f	class:BrassValueManager
get_value_upper_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
get_value_upper_bound	backends/chert/chert_database.cc	/^ChertWritableDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
get_value_upper_bound	backends/chert/chert_values.h	/^    std::string get_value_upper_bound(Xapian::valueno slot) const {$/;"	f	class:ChertValueManager
get_value_upper_bound	backends/database.cc	/^Database::Internal::get_value_upper_bound(Xapian::valueno) const$/;"	f	class:Xapian::Database::Internal
get_value_upper_bound	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:InMemoryDatabase
get_value_upper_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
get_value_upper_bound	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::get_value_upper_bound(Xapian::valueno slot) const$/;"	f	class:ConstDatabaseWrapper
get_valueno	api/documentvaluelist.cc	/^DocumentValueList::get_valueno() const$/;"	f	class:DocumentValueList
get_valueno	api/valueiterator.cc	/^ValueIterator::get_valueno() const$/;"	f	class:Xapian::ValueIterator
get_valueno	backends/brass/brass_valuelist.cc	/^BrassValueList::get_valueno() const$/;"	f	class:BrassValueList
get_valueno	backends/chert/chert_valuelist.cc	/^ChertValueList::get_valueno() const$/;"	f	class:ChertValueList
get_valueno	backends/multi/multi_valuelist.cc	/^MultiValueList::get_valueno() const$/;"	f	class:MultiValueList
get_valueno	backends/slowvaluelist.cc	/^SlowValueList::get_valueno() const$/;"	f	class:SlowValueList
get_wdf	api/maptermlist.h	/^	Xapian::termcount get_wdf() const {$/;"	f	class:MapTermList
get_wdf	api/matchspy.cc	/^    Xapian::termcount get_wdf() const { unsupported_method(); return 0; }$/;"	f	class:StringAndFreqTermList
get_wdf	api/matchspy.cc	/^    Xapian::termcount get_wdf() const { unsupported_method(); return 0; }$/;"	f	class:ValueCountTermList
get_wdf	api/ompostlistiterator.cc	/^Xapian::PostingIterator::get_wdf() const$/;"	f	class:Xapian::PostingIterator
get_wdf	api/omtermlistiterator.cc	/^Xapian::TermIterator::get_wdf() const$/;"	f	class:Xapian::TermIterator
get_wdf	api/postlist.cc	/^PostingIterator::Internal::get_wdf() const$/;"	f	class:Xapian::PostingIterator::Internal
get_wdf	backends/alltermslist.cc	/^AllTermsList::get_wdf() const$/;"	f	class:AllTermsList
get_wdf	backends/brass/brass_alldocspostlist.cc	/^BrassAllDocsPostList::get_wdf() const$/;"	f	class:BrassAllDocsPostList
get_wdf	backends/brass/brass_postlist.cc	/^    Xapian::termcount get_wdf() const {$/;"	f	class:Brass::PostlistChunkReader
get_wdf	backends/brass/brass_postlist.h	/^	Xapian::termcount get_wdf() const { Assert(have_started); return wdf; }$/;"	f	class:BrassPostList
get_wdf	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::get_wdf() const$/;"	f	class:BrassSpellingTermList
get_wdf	backends/brass/brass_termlist.cc	/^BrassTermList::get_wdf() const$/;"	f	class:BrassTermList
get_wdf	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::get_wdf() const$/;"	f	class:ChertAllDocsPostList
get_wdf	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::get_wdf() const$/;"	f	class:ChertModifiedPostList
get_wdf	backends/chert/chert_postlist.cc	/^    Xapian::termcount get_wdf() const {$/;"	f	class:Chert::PostlistChunkReader
get_wdf	backends/chert/chert_postlist.h	/^	Xapian::termcount get_wdf() const { Assert(have_started); return wdf; }$/;"	f	class:ChertPostList
get_wdf	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::get_wdf() const$/;"	f	class:ChertSpellingTermList
get_wdf	backends/chert/chert_termlist.cc	/^ChertTermList::get_wdf() const$/;"	f	class:ChertTermList
get_wdf	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::get_wdf() const$/;"	f	class:ContiguousAllDocsPostList
get_wdf	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::get_wdf() const$/;"	f	class:FlintAllDocsPostList
get_wdf	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::get_wdf() const$/;"	f	class:FlintModifiedPostList
get_wdf	backends/flint/flint_postlist.cc	/^	Xapian::termcount get_wdf() const {$/;"	f	class:FlintPostlistChunkReader
get_wdf	backends/flint/flint_postlist.h	/^	Xapian::termcount get_wdf() const { Assert(have_started); return wdf; }$/;"	f	class:FlintPostList
get_wdf	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::get_wdf() const$/;"	f	class:FlintSpellingTermList
get_wdf	backends/flint/flint_termlist.cc	/^FlintTermList::get_wdf() const$/;"	f	class:FlintTermList
get_wdf	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::get_wdf() const$/;"	f	class:InMemoryAllDocsPostList
get_wdf	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::get_wdf() const$/;"	f	class:InMemoryPostList
get_wdf	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::get_wdf() const$/;"	f	class:InMemoryTermList
get_wdf	backends/multi/multi_postlist.cc	/^MultiPostList::get_wdf() const$/;"	f	class:MultiPostList
get_wdf	backends/multi/multi_termlist.cc	/^Xapian::termcount MultiTermList::get_wdf() const$/;"	f	class:MultiTermList
get_wdf	backends/remote/net_postlist.cc	/^NetworkPostList::get_wdf() const$/;"	f	class:NetworkPostList
get_wdf	backends/remote/net_termlist.cc	/^NetworkTermList::get_wdf() const$/;"	f	class:NetworkTermList
get_wdf	common/documentterm.h	/^    Xapian::termcount get_wdf() const { return wdf; }$/;"	f	class:OmDocumentTerm
get_wdf	common/vectortermlist.h	/^	Xapian::termcount get_wdf() const {$/;"	f	class:VectorTermList
get_wdf	expand/ortermlist.cc	/^OrTermList::get_wdf() const$/;"	f	class:OrTermList
get_wdf	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_wdf() const$/;"	f	class:AndMaybePostList
get_wdf	matcher/andnotpostlist.cc	/^AndNotPostList::get_wdf() const$/;"	f	class:AndNotPostList
get_wdf	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::get_wdf() const$/;"	f	class:ExactPhrasePostList
get_wdf	matcher/mergepostlist.cc	/^MergePostList::get_wdf() const$/;"	f	class:MergePostList
get_wdf	matcher/multiandpostlist.cc	/^MultiAndPostList::get_wdf() const$/;"	f	class:MultiAndPostList
get_wdf	matcher/multixorpostlist.cc	/^MultiXorPostList::get_wdf() const$/;"	f	class:MultiXorPostList
get_wdf	matcher/orpostlist.cc	/^OrPostList::get_wdf() const$/;"	f	class:OrPostList
get_wdf	matcher/phrasepostlist.cc	/^NearPostList::get_wdf() const$/;"	f	class:NearPostList
get_wdf	matcher/phrasepostlist.cc	/^PhrasePostList::get_wdf() const$/;"	f	class:PhrasePostList
get_wdf	matcher/synonympostlist.cc	/^SynonymPostList::get_wdf() const {$/;"	f	class:SynonymPostList
get_wdf_upper_bound	api/omdatabase.cc	/^Database::get_wdf_upper_bound(const string & term) const$/;"	f	class:Xapian::Database
get_wdf_upper_bound	backends/brass/brass_database.cc	/^BrassDatabase::get_wdf_upper_bound(const string & term) const$/;"	f	class:BrassDatabase
get_wdf_upper_bound	backends/brass/brass_dbstats.h	/^    Xapian::termcount get_wdf_upper_bound() const { return wdf_ubound; }$/;"	f	class:BrassDatabaseStats
get_wdf_upper_bound	backends/chert/chert_database.cc	/^ChertDatabase::get_wdf_upper_bound(const string & term) const$/;"	f	class:ChertDatabase
get_wdf_upper_bound	backends/chert/chert_dbstats.h	/^    Xapian::termcount get_wdf_upper_bound() const { return wdf_ubound; }$/;"	f	class:ChertDatabaseStats
get_wdf_upper_bound	backends/database.cc	/^Database::Internal::get_wdf_upper_bound(const string & term) const$/;"	f	class:Xapian::Database::Internal
get_wdf_upper_bound	backends/remote/remote-database.cc	/^RemoteDatabase::get_wdf_upper_bound(const string &) const$/;"	f	class:RemoteDatabase
get_wdf_upper_bound	include/xapian/weight.h	/^    Xapian::termcount get_wdf_upper_bound() const {$/;"	f	class:Xapian::Weight
get_weight	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::get_weight() const {$/;"	f	class:DecreasingValueWeightPostingSource
get_weight	api/emptypostlist.cc	/^EmptyPostList::get_weight() const$/;"	f	class:EmptyPostList
get_weight	api/leafpostlist.cc	/^LeafPostList::get_weight() const$/;"	f	class:LeafPostList
get_weight	api/omenquire.cc	/^ESetIterator::get_weight() const$/;"	f	class:Xapian::ESetIterator
get_weight	api/omenquire.cc	/^MSetIterator::get_weight() const$/;"	f	class:Xapian::MSetIterator
get_weight	api/postingsource.cc	/^FixedWeightPostingSource::get_weight() const$/;"	f	class:Xapian::FixedWeightPostingSource
get_weight	api/postingsource.cc	/^PostingSource::get_weight() const$/;"	f	class:Xapian::PostingSource
get_weight	api/postingsource.cc	/^ValueMapPostingSource::get_weight() const$/;"	f	class:Xapian::ValueMapPostingSource
get_weight	api/postingsource.cc	/^ValueWeightPostingSource::get_weight() const$/;"	f	class:Xapian::ValueWeightPostingSource
get_weight	backends/multi/multi_postlist.cc	/^MultiPostList::get_weight() const$/;"	f	class:MultiPostList
get_weight	expand/expandweight.cc	/^ExpandWeight::get_weight(TermList * merger, const string & term) const$/;"	f	class:Xapian::Internal::ExpandWeight
get_weight	matcher/andmaybepostlist.cc	/^AndMaybePostList::get_weight() const$/;"	f	class:AndMaybePostList
get_weight	matcher/andnotpostlist.cc	/^AndNotPostList::get_weight() const$/;"	f	class:AndNotPostList
get_weight	matcher/externalpostlist.cc	/^ExternalPostList::get_weight() const$/;"	f	class:ExternalPostList
get_weight	matcher/extraweightpostlist.h	/^	Xapian::weight get_weight() const {$/;"	f	class:ExtraWeightPostList
get_weight	matcher/mergepostlist.cc	/^MergePostList::get_weight() const$/;"	f	class:MergePostList
get_weight	matcher/msetpostlist.cc	/^MSetPostList::get_weight() const$/;"	f	class:MSetPostList
get_weight	matcher/multiandpostlist.cc	/^MultiAndPostList::get_weight() const$/;"	f	class:MultiAndPostList
get_weight	matcher/multixorpostlist.cc	/^MultiXorPostList::get_weight() const$/;"	f	class:MultiXorPostList
get_weight	matcher/orpostlist.cc	/^OrPostList::get_weight() const$/;"	f	class:OrPostList
get_weight	matcher/selectpostlist.h	/^	Xapian::weight get_weight() const {$/;"	f	class:SelectPostList
get_weight	matcher/synonympostlist.cc	/^SynonymPostList::get_weight() const$/;"	f	class:SynonymPostList
get_weight	matcher/valuerangepostlist.cc	/^ValueRangePostList::get_weight() const$/;"	f	class:ValueRangePostList
get_weight	tests/api_percentages.cc	/^    Xapian::weight get_weight() const { return i->second; }$/;"	f	class:MyPostingSource
get_weight	tests/api_postingsource.cc	/^    Xapian::weight get_weight() const {$/;"	f	class:ChangeMaxweightPostingSource
get_weight	tests/api_postingsource.cc	/^    Xapian::weight get_weight() const {$/;"	f	class:MyDontAskWeightPostingSource
get_weight	tests/api_postingsource.cc	/^    Xapian::weight get_weight() const {$/;"	f	class:MyOddWeightingPostingSource
get_weight	tests/api_serialise.cc	/^    Xapian::weight get_weight() const { return 1.0; }$/;"	f	class:MyPostingSource2
get_weighting_scheme	api/registry.cc	/^Registry::get_weighting_scheme(const string & name) const$/;"	f	class:Xapian::Registry
get_word_frequency	backends/brass/brass_spelling.cc	/^BrassSpellingTable::get_word_frequency(const string & word) const$/;"	f	class:BrassSpellingTable
get_word_frequency	backends/chert/chert_spelling.cc	/^ChertSpellingTable::get_word_frequency(const string & word) const$/;"	f	class:ChertSpellingTable
get_word_frequency	backends/flint/flint_spelling.cc	/^FlintSpellingTable::get_word_frequency(const string & word) const$/;"	f	class:FlintSpellingTable
get_wqf	include/xapian/query.h	/^	Xapian::termcount get_wqf() const { return parameter; }$/;"	f	class:Xapian::Query::Internal
get_wqf	include/xapian/weight.h	/^    Xapian::termcount get_wqf() const { return wqf_; }$/;"	f	class:Xapian::Weight
get_writable_database	tests/apitest.cc	/^get_writable_database(const string &dbname)$/;"	f
get_writable_database	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database(const string &, const string &)$/;"	f	class:BackendManager
get_writable_database	tests/harness/backendmanager_brass.cc	/^BackendManagerBrass::get_writable_database(const string & name,$/;"	f	class:BackendManagerBrass
get_writable_database	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database(const string & name,$/;"	f	class:BackendManagerChert
get_writable_database	tests/harness/backendmanager_flint.cc	/^BackendManagerFlint::get_writable_database(const string & name,$/;"	f	class:BackendManagerFlint
get_writable_database	tests/harness/backendmanager_inmemory.cc	/^BackendManagerInMemory::get_writable_database(const string &,$/;"	f	class:BackendManagerInMemory
get_writable_database	tests/harness/backendmanager_multi.cc	/^BackendManagerMulti::get_writable_database(const string &, const string &)$/;"	f	class:BackendManagerMulti
get_writable_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_writable_database(const string & name,$/;"	f	class:BackendManagerRemoteProg
get_writable_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_writable_database(const string & name,$/;"	f	class:BackendManagerRemoteTcp
get_writable_database_again	tests/apitest.cc	/^get_writable_database_again()$/;"	f
get_writable_database_again	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database_again()$/;"	f	class:BackendManager
get_writable_database_again	tests/harness/backendmanager_brass.cc	/^BackendManagerBrass::get_writable_database_again()$/;"	f	class:BackendManagerBrass
get_writable_database_again	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database_again()$/;"	f	class:BackendManagerChert
get_writable_database_again	tests/harness/backendmanager_flint.cc	/^BackendManagerFlint::get_writable_database_again()$/;"	f	class:BackendManagerFlint
get_writable_database_again	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_writable_database_again()$/;"	f	class:BackendManagerRemoteProg
get_writable_database_again	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_writable_database_again()$/;"	f	class:BackendManagerRemoteTcp
get_writable_database_again_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_writable_database_again_args()$/;"	f	class:BackendManagerRemote
get_writable_database_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_writable_database_args(const std::string & name,$/;"	f	class:BackendManagerRemote
get_writable_database_as_database	tests/apitest.cc	/^get_writable_database_as_database()$/;"	f
get_writable_database_as_database	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database_as_database()$/;"	f	class:BackendManager
get_writable_database_as_database	tests/harness/backendmanager_brass.cc	/^BackendManagerBrass::get_writable_database_as_database()$/;"	f	class:BackendManagerBrass
get_writable_database_as_database	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database_as_database()$/;"	f	class:BackendManagerChert
get_writable_database_as_database	tests/harness/backendmanager_flint.cc	/^BackendManagerFlint::get_writable_database_as_database()$/;"	f	class:BackendManagerFlint
get_writable_database_as_database	tests/harness/backendmanager_remoteprog.cc	/^BackendManagerRemoteProg::get_writable_database_as_database()$/;"	f	class:BackendManagerRemoteProg
get_writable_database_as_database	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::get_writable_database_as_database()$/;"	f	class:BackendManagerRemoteTcp
get_writable_database_as_database_args	tests/harness/backendmanager_remote.cc	/^BackendManagerRemote::get_writable_database_as_database_args()$/;"	f	class:BackendManagerRemote
get_writable_database_path	tests/harness/backendmanager.cc	/^BackendManager::get_writable_database_path(const std::string &)$/;"	f	class:BackendManager
get_writable_database_path	tests/harness/backendmanager_brass.cc	/^BackendManagerBrass::get_writable_database_path(const string & name)$/;"	f	class:BackendManagerBrass
get_writable_database_path	tests/harness/backendmanager_chert.cc	/^BackendManagerChert::get_writable_database_path(const string & name)$/;"	f	class:BackendManagerChert
get_writable_database_path	tests/harness/backendmanager_flint.cc	/^BackendManagerFlint::get_writable_database_path(const string & name)$/;"	f	class:BackendManagerFlint
get_xapian_progsrv_command	tests/harness/backendmanager.cc	/^BackendManager::get_xapian_progsrv_command()$/;"	f	class:BackendManager
getint1	common/unaligned.h	/^getint1(const unsigned char *p, int c)$/;"	f
getint2	common/unaligned.h	/^getint2(const unsigned char *p, int c)$/;"	f
getint4	common/unaligned.h	/^getint4(const unsigned char *p, int c)$/;"	f
getopt_initialize	common/getopt.cc	/^getopt_initialize (int argc, char *const *argv, const char *optstring)$/;"	f	file:
getopt_initialized	common/getopt.cc	/^static int getopt_initialized;$/;"	v	file:
getorrecalc_maxweight	matcher/multimatch.cc	/^MultiMatch::getorrecalc_maxweight(PostList *pl)$/;"	f	class:MultiMatch
getstate	queryparser/lemon.c	/^PRIVATE struct state *getstate(lemp)$/;"	f
getwritedb_brass	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_brass(const string & name,$/;"	f	class:BackendManager
getwritedb_brass_path	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_brass_path(const string & name)$/;"	f	class:BackendManager
getwritedb_chert	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_chert(const string & name,$/;"	f	class:BackendManager
getwritedb_chert_path	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_chert_path(const string & name)$/;"	f	class:BackendManager
getwritedb_flint	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_flint(const string & name,$/;"	f	class:BackendManager
getwritedb_flint_path	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_flint_path(const string & name)$/;"	f	class:BackendManager
getwritedb_inmemory	tests/harness/backendmanager.cc	/^BackendManager::getwritedb_inmemory(const vector<string> &files)$/;"	f	class:BackendManager
gnu_getopt	common/gnu_getopt.h	/^gnu_getopt(int argc_, char *const *argv_, const char *shortopts_) {$/;"	f
gnu_getopt_internal_	common/getopt.cc	/^gnu_getopt_internal_(int argc, char *const *argv, const char *optstring, const struct option *longopts, int *longind, int long_only)$/;"	f
gnu_getopt_long	common/gnu_getopt.h	/^gnu_getopt_long(int argc_, char *const *argv_, const char *shortopts_,$/;"	f
gnu_getopt_long_only	common/gnu_getopt.h	/^gnu_getopt_long_only(int argc_, char *const *argv_, const char *shortopts_,$/;"	f
gp	queryparser/lemon.c	/^  struct lemon *gp;     \/* Global state vector *\/$/;"	m	struct:pstate	typeref:struct:pstate::lemon	file:
groupMap	unicode/unicode-data.cc	/^static const unsigned char groupMap[] = {$/;"	v	file:
grouping	languages/compiler/header.h	/^    struct grouping * grouping; \/* for grouping names *\/$/;"	m	struct:name	typeref:struct:name::grouping
grouping	languages/compiler/header.h	/^struct grouping {$/;"	s
groupings	languages/compiler/header.h	/^    struct grouping * groupings;$/;"	m	struct:analyser	typeref:struct:analyser::grouping
groupings_end	languages/compiler/header.h	/^    struct grouping * groupings_end;$/;"	m	struct:analyser	typeref:struct:analyser::grouping
groups	unicode/unicode-data.cc	/^static const int groups[] = {$/;"	v	file:
hFile	backends/flint_lock.h	/^    HANDLE hFile;$/;"	m	class:FlintLock
hFile	backends/flint_lock.h	/^    HFILE hFile;$/;"	m	class:FlintLock
handle	backends/brass/brass_table.h	/^	int handle;$/;"	m	class:BrassTable
handle	backends/chert/chert_table.h	/^	int handle;$/;"	m	class:ChertTable
handle	backends/flint/flint_table.h	/^	int handle;$/;"	m	class:FlintTable
handle	common/msvc_dirent.cc	/^    long                handle; \/* -1 for failed rewind *\/$/;"	m	struct:DIR	file:
handle_D_option	queryparser/lemon.c	/^static void handle_D_option(char *z){$/;"	f	file:
handle_h_option	queryparser/lemon.c	/^static void handle_h_option(char *z){$/;"	f	file:
handle_o_option	queryparser/lemon.c	/^static void handle_o_option(char *z){$/;"	f	file:
handle_one_connection	net/remotetcpserver.cc	/^RemoteTcpServer::handle_one_connection(int socket)$/;"	f	class:RemoteTcpServer
handle_one_connection	net/replicatetcpserver.cc	/^ReplicateTcpServer::handle_one_connection(int socket)$/;"	f	class:ReplicateTcpServer
handle_prune	api/omtermlistiterator.cc	/^handle_prune(Xapian::Internal::RefCntPtr<TermList>& old, TermList * result)$/;"	f
handle_prune	expand/ortermlist.cc	/^handle_prune(TermList *& old, TermList * result)$/;"	f
handle_prune	matcher/branchpostlist.h	/^	void handle_prune(PostList *&kid, PostList *ret) {$/;"	f	class:BranchPostList
handle_sig	tests/harness/testsuite.cc	/^static void handle_sig(int signum_)$/;"	f	file:
handle_sig	tests/harness/testsuite.cc	/^static void handle_sig(int signum_, siginfo_t *si, void *)$/;"	f	file:
handleflags	queryparser/lemon.c	/^static int handleflags(i,err)$/;"	f	file:
handleswitch	queryparser/lemon.c	/^static int handleswitch(i,err)$/;"	f	file:
has_arg	common/gnu_getopt.h	/^    int has_arg;$/;"	m	struct:option
has_destructor	queryparser/lemon.c	/^int has_destructor(sp, lemp)$/;"	f
has_drive	common/fileutils.cc	/^has_drive(const string &path)$/;"	f	file:
has_fallback	queryparser/lemon.c	/^  int has_fallback;        \/* True if any %fallback is seen in the grammar *\/$/;"	m	struct:lemon	file:
has_positional_info	common/remote-database.h	/^    mutable bool has_positional_info;$/;"	m	class:RemoteDatabase
has_positions	api/omdatabase.cc	/^Database::has_positions() const$/;"	f	class:Xapian::Database
has_positions	backends/brass/brass_database.cc	/^BrassDatabase::has_positions() const$/;"	f	class:BrassDatabase
has_positions	backends/chert/chert_database.cc	/^ChertDatabase::has_positions() const$/;"	f	class:ChertDatabase
has_positions	backends/flint/flint_database.cc	/^FlintDatabase::has_positions() const$/;"	f	class:FlintDatabase
has_positions	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::has_positions() const$/;"	f	class:InMemoryDatabase
has_positions	backends/remote/remote-database.cc	/^RemoteDatabase::has_positions() const$/;"	f	class:RemoteDatabase
has_positions	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::has_positions() const$/;"	f	class:ConstDatabaseWrapper
hate	queryparser/queryparser_internal.cc	/^    Query * hate;$/;"	m	struct:ProbQuery	file:
have_calculated_subtree_maxweights	matcher/synonympostlist.h	/^    bool have_calculated_subtree_maxweights;$/;"	m	class:SynonymPostList
have_fakeroot	backends/brass/brass_btreebase.h	/^	bool have_fakeroot;$/;"	m	class:BrassTable_base
have_fakeroot	backends/chert/chert_btreebase.h	/^	bool have_fakeroot;$/;"	m	class:ChertTable_base
have_fakeroot	backends/flint/flint_btreebase.h	/^	bool have_fakeroot;$/;"	m	class:FlintTable_base
have_funcs	languages/compiler/header.h	/^    int have_funcs;	      \/* does this among have any funcs? *\/$/;"	m	struct:among
have_offline_db	api/replication.cc	/^    bool have_offline_db;$/;"	m	class:DatabaseReplica::Internal	file:
have_started	backends/brass/brass_positionlist.h	/^    bool have_started;$/;"	m	class:BrassPositionList
have_started	backends/brass/brass_postlist.h	/^	bool have_started;$/;"	m	class:BrassPostList
have_started	backends/chert/chert_positionlist.h	/^    bool have_started;$/;"	m	class:ChertPositionList
have_started	backends/chert/chert_postlist.h	/^	bool have_started;$/;"	m	class:ChertPostList
have_started	backends/flint/flint_positionlist.h	/^    bool have_started;$/;"	m	class:FlintPositionList
have_started	backends/flint/flint_postlist.h	/^	bool have_started;$/;"	m	class:FlintPostList
hex_display_encode	backends/brass/brass_cursor.cc	/^hex_display_encode(const string & input)$/;"	f	file:
hex_display_encode	backends/chert/chert_cursor.cc	/^hex_display_encode(const string & input)$/;"	f	file:
hex_display_encode	backends/flint/flint_cursor.cc	/^hex_display_encode(const string & input)$/;"	f	file:
hex_to_num	languages/compiler/tokeniser.c	/^static int hex_to_num(int ch) {$/;"	f	file:
host	Makefile	/^host = x86_64-apple-darwin14.3.0$/;"	m
host	docs/Makefile	/^host = x86_64-apple-darwin14.3.0$/;"	m
host	tests/Makefile	/^host = x86_64-apple-darwin14.3.0$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	docs/Makefile	/^host_alias = $/;"	m
host_alias	tests/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	docs/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	tests/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = darwin14.3.0$/;"	m
host_os	docs/Makefile	/^host_os = darwin14.3.0$/;"	m
host_os	tests/Makefile	/^host_os = darwin14.3.0$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-apple-darwin14.3.0$/;"	m
host_triplet	docs/Makefile	/^host_triplet = x86_64-apple-darwin14.3.0$/;"	m
host_triplet	tests/Makefile	/^host_triplet = x86_64-apple-darwin14.3.0$/;"	m
host_vendor	Makefile	/^host_vendor = apple$/;"	m
host_vendor	docs/Makefile	/^host_vendor = apple$/;"	m
host_vendor	tests/Makefile	/^host_vendor = apple$/;"	m
ht	queryparser/lemon.c	/^  struct s_x1node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
ht	queryparser/lemon.c	/^  struct s_x2node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
ht	queryparser/lemon.c	/^  struct s_x3node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
ht	queryparser/lemon.c	/^  struct s_x4node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
html_escape	docs/gen_codestructure_doc	/^sub html_escape {$/;"	s
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	docs/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	tests/Makefile	/^htmldir = ${docdir}$/;"	m
i	languages/compiler/header.h	/^    int i;           \/* the amongvec index of the longest substring of b *\/$/;"	m	struct:amongvec
i	tests/api_percentages.cc	/^    vector<pair<Xapian::docid, Xapian::weight> >::const_iterator i;$/;"	m	class:MyPostingSource	file:
iDflt	queryparser/lemon.c	/^  int iDflt;               \/* Default action *\/$/;"	m	struct:state	file:
iNtOfst	queryparser/lemon.c	/^  int iTknOfst, iNtOfst;   \/* yy_action[] offset for terminals and nonterms *\/$/;"	m	struct:state	file:
iTknOfst	queryparser/lemon.c	/^  int iTknOfst, iNtOfst;   \/* yy_action[] offset for terminals and nonterms *\/$/;"	m	struct:state	file:
idle_timeout	common/remoteserver.h	/^    double idle_timeout;$/;"	m	class:RemoteServer
idle_timeout	common/remotetcpserver.h	/^    double idle_timeout;$/;"	m	class:RemoteTcpServer
idx	common/bitstream.h	/^    size_t idx;$/;"	m	class:Xapian::BitReader
in_grouping_U	languages/steminternal.cc	/^SnowballStemImplementation::in_grouping_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
in_grouping_b_U	languages/steminternal.cc	/^SnowballStemImplementation::in_grouping_b_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
inc_HEADERS	Makefile	/^inc_HEADERS = \\$/;"	m
inc_HEADERS	include/Makefile.mk	/^inc_HEADERS =\\$/;"	m
inc_wdf	common/documentterm.h	/^    void inc_wdf(Xapian::termcount inc) { wdf += inc; }$/;"	f	class:OmDocumentTerm
incdir	Makefile	/^incdir = ${prefix}\/include$/;"	m
incdir	docs/Makefile	/^incdir = ${prefix}\/include$/;"	m
incdir	tests/Makefile	/^incdir = ${prefix}\/include$/;"	m
include	languages/compiler/header.h	/^struct include {$/;"	s
include	queryparser/lemon.c	/^  char *include;           \/* Code to put at the start of the C file *\/$/;"	m	struct:lemon	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	docs/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	tests/Makefile	/^includedir = ${prefix}\/include$/;"	m
includes	languages/compiler/header.h	/^    struct include * includes;$/;"	m	struct:options	typeref:struct:options::include
includes	languages/compiler/header.h	/^    struct include * includes;$/;"	m	struct:tokeniser	typeref:struct:tokeniser::include
includes_end	languages/compiler/header.h	/^    struct include * includes_end;$/;"	m	struct:options	typeref:struct:options::include
inclusive	include/xapian/valuesetmatchdecider.h	/^    bool inclusive;$/;"	m	class:Xapian::ValueSetMatchDecider
increase_capacity	languages/compiler/space.c	/^extern symbol * increase_capacity(symbol * p, int n) {$/;"	f
increase_size	languages/steminternal.cc	/^static symbol * increase_size(symbol * p, int n) {$/;"	f	file:
increase_termpos	queryparser/termgenerator.cc	/^TermGenerator::increase_termpos(Xapian::termcount delta)$/;"	f	class:TermGenerator
indent	common/debuglog.h	/^    void indent() { ++indent_level; }$/;"	f	class:DebugLogger
indent_level	common/debuglog.h	/^    int indent_level;$/;"	m	class:DebugLogger
index	common/positionlist.h	/^	Xapian::termcount index;$/;"	m	class:Xapian::PositionIterator::Internal
index	include/xapian/enquire.h	/^	Xapian::doccount index;$/;"	m	class:Xapian::MSetIterator
index	include/xapian/enquire.h	/^	Xapian::termcount index;$/;"	m	class:Xapian::ESetIterator
index	queryparser/lemon.c	/^  int index;               \/* An index number for this rule *\/$/;"	m	struct:rule	file:
index	queryparser/lemon.c	/^  int index;               \/* Index number for this symbol *\/$/;"	m	struct:symbol	file:
index_files_to_database	tests/harness/backendmanager.cc	/^BackendManager::index_files_to_database(Xapian::WritableDatabase & database,$/;"	f	class:BackendManager
index_text	include/xapian/termgenerator.h	/^    void index_text(const std::string & text,$/;"	f	class:Xapian::TermGenerator
index_text	queryparser/termgenerator.cc	/^TermGenerator::index_text(const Xapian::Utf8Iterator & itor,$/;"	f	class:TermGenerator
index_text	queryparser/termgenerator_internal.cc	/^TermGenerator::Internal::index_text(Utf8Iterator itor, termcount wdf_inc,$/;"	f	class:Xapian::TermGenerator::Internal
index_text_without_positions	include/xapian/termgenerator.h	/^    void index_text_without_positions(const std::string & text,$/;"	f	class:Xapian::TermGenerator
index_text_without_positions	queryparser/termgenerator.cc	/^TermGenerator::index_text_without_positions(const Xapian::Utf8Iterator & itor,$/;"	f	class:TermGenerator
indexeddocs	common/omenquireinternal.h	/^	mutable map<Xapian::doccount, Xapian::Document> indexeddocs;$/;"	m	class:Xapian::MSet::Internal
indexing_add	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_add()$/;"	f	class:PerfTestLogger
indexing_addcount	tests/perftest/perftest.h	/^    Xapian::doccount indexing_addcount;$/;"	m	class:PerfTestLogger
indexing_begin	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_begin(const string & dbname,$/;"	f	class:PerfTestLogger
indexing_end	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_end()$/;"	f	class:PerfTestLogger
indexing_log	tests/perftest/perftest.cc	/^PerfTestLogger::indexing_log()$/;"	f	class:PerfTestLogger
indexing_started	tests/perftest/perftest.h	/^    bool indexing_started;$/;"	m	class:PerfTestLogger
indexing_timer	tests/perftest/perftest.h	/^    double indexing_timer;$/;"	m	class:PerfTestLogger
indexing_unlogged_changes	tests/perftest/perftest.h	/^    bool indexing_unlogged_changes;$/;"	m	class:PerfTestLogger
inflate_zstream	backends/brass/brass_table.h	/^	mutable z_stream *inflate_zstream;$/;"	m	class:BrassTable
inflate_zstream	backends/chert/chert_table.h	/^	mutable z_stream *inflate_zstream;$/;"	m	class:ChertTable
inflate_zstream	backends/flint/flint_table.h	/^	mutable z_stream *inflate_zstream;$/;"	m	class:FlintTable
info	common/msvc_dirent.cc	/^    struct _finddata_t  info;$/;"	m	struct:DIR	typeref:struct:DIR::_finddata_t	file:
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	docs/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	tests/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inherited	docs/apidoc/html/classXapian_1_1BM25Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1BoolWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1FixedWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1LogicError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1RuntimeError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1Sorter.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1TradWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1ValueCountMatchSpy.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1ValueMapPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1ValuePostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	docs/apidoc/html/classXapian_1_1ValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
init	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::init(const Xapian::Database & db_) {$/;"	f	class:DecreasingValueWeightPostingSource
init	api/matchspy.cc	/^    void init() {$/;"	f	class:StringAndFreqTermList
init	api/postingsource.cc	/^FixedWeightPostingSource::init(const Xapian::Database & db_)$/;"	f	class:Xapian::FixedWeightPostingSource
init	api/postingsource.cc	/^ValueMapPostingSource::init(const Database & db_)$/;"	f	class:Xapian::ValueMapPostingSource
init	api/postingsource.cc	/^ValuePostingSource::init(const Database & db_)$/;"	f	class:Xapian::ValuePostingSource
init	api/postingsource.cc	/^ValueWeightPostingSource::init(const Database & db_)$/;"	f	class:Xapian::ValueWeightPostingSource
init	tests/api_db.cc	/^    void init(double factor) {$/;"	f	class:MyWeight
init	tests/api_percentages.cc	/^    void init(const Xapian::Database &) { started = false; }$/;"	f	class:MyPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &) { did = 0; }$/;"	f	class:ChangeMaxweightPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &) { did = 0; }$/;"	f	class:MyOddPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &) { did = 0; }$/;"	f	class:MyOddWeightingPostingSource
init	tests/api_postingsource.cc	/^    void init(const Xapian::Database &db) {$/;"	f	class:MyDontAskWeightPostingSource
init	tests/api_serialise.cc	/^    void init(const Xapian::Database &) { }$/;"	f	class:ExceptionalPostingSource
init	tests/api_serialise.cc	/^    void init(double) { }$/;"	f	class:ExceptionalWeight
init	tests/api_weight.cc	/^    void init(double factor_) {$/;"	f	class:CheckInitWeight
init	tests/api_weight.cc	/^    void init(double factor_) {$/;"	f	class:CheckStatsWeight
init	tests/harness/fdtracker.cc	/^FDTracker::init()$/;"	f	class:FDTracker
init	weight/bm25weight.cc	/^BM25Weight::init(double factor)$/;"	f	class:Xapian::BM25Weight
init	weight/boolweight.cc	/^BoolWeight::init(double)$/;"	f	class:Xapian::BoolWeight
init	weight/tradweight.cc	/^TradWeight::init(double factor)$/;"	f	class:Xapian::TradWeight
init_	weight/weight.cc	/^Weight::init_(const Internal & stats, Xapian::termcount query_length)$/;"	f	class:Xapian::Weight
init_	weight/weight.cc	/^Weight::init_(const Internal & stats, Xapian::termcount query_length,$/;"	f	class:Xapian::Weight
initialise_categories_mask	common/debuglog.cc	/^DebugLogger::initialise_categories_mask()$/;"	f	class:DebugLogger
initrand	tests/soaktest/soaktest.cc	/^extern unsigned int initrand()$/;"	f
inmemory	tests/harness/testrunner.h	/^    bool inmemory;$/;"	m	class:TestRunner
input	languages/compiler/header.h	/^struct input {$/;"	s
input	tests/harness/index_utils.h	/^    std::ifstream input;$/;"	m	class:FileIndexer
insertLineMacro	queryparser/lemon.c	/^  int insertLineMacro;       \/* Add #line before declaration insert *\/$/;"	m	struct:pstate	file:
insert_mod_plist	backends/chert/chert_database.cc	/^ChertWritableDatabase::insert_mod_plist(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
insert_mod_plist	backends/flint/flint_database.cc	/^FlintWritableDatabase::insert_mod_plist(Xapian::docid did,$/;"	f	class:FlintWritableDatabase
insert_s	languages/steminternal.cc	/^SnowballStemImplementation::insert_s(int c_bra, int c_ket, int s_size,$/;"	f	class:Xapian::SnowballStemImplementation
insert_v	languages/steminternal.h	/^    void insert_v(int c_bra, int c_ket, const symbol * v) {$/;"	f	class:Xapian::SnowballStemImplementation
install_sh	Makefile	/^install_sh = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/install-sh$/;"	m
install_sh	docs/Makefile	/^install_sh = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/install-sh$/;"	m
install_sh	tests/Makefile	/^install_sh = ${SHELL} \/Users\/hefeng\/Downloads\/xapian-core-1.2.20\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	docs/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	tests/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	docs/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	tests/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	docs/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	tests/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
internal	common/replication.h	/^    Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::DatabaseReplica
internal	include/xapian/compactor.h	/^    Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::Compactor
internal	include/xapian/database.h	/^	std::vector<Xapian::Internal::RefCntPtr<Internal> > internal;$/;"	m	class:Xapian::Database
internal	include/xapian/document.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::Document
internal	include/xapian/enquire.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::ESet
internal	include/xapian/enquire.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::Enquire
internal	include/xapian/enquire.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::MSet
internal	include/xapian/enquire.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::RSet
internal	include/xapian/matchspy.h	/^    Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::ValueCountMatchSpy
internal	include/xapian/positioniterator.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::PositionIterator
internal	include/xapian/postingiterator.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::PostingIterator
internal	include/xapian/query.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::Query
internal	include/xapian/queryparser.h	/^    Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::QueryParser
internal	include/xapian/registry.h	/^    Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::Registry
internal	include/xapian/stem.h	/^    Xapian::Internal::RefCntPtr<StemImplementation> internal;$/;"	m	class:Xapian::Stem
internal	include/xapian/termgenerator.h	/^    Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::TermGenerator
internal	include/xapian/termiterator.h	/^	Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::TermIterator
internal	include/xapian/valueiterator.h	/^    Xapian::Internal::RefCntPtr<Internal> internal;$/;"	m	class:Xapian::ValueIterator
internaltest_DEPENDENCIES	tests/Makefile	/^internaltest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
internaltest_LDADD	tests/Makefile	/^internaltest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
internaltest_LDFLAGS	tests/Makefile	/^internaltest_LDFLAGS = -no-fast-install $(ldflags)$/;"	m
internaltest_LINK	tests/Makefile	/^internaltest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
internaltest_OBJECTS	tests/Makefile	/^internaltest_OBJECTS = $(am_internaltest_OBJECTS)$/;"	m
internaltest_SOURCES	tests/Makefile	/^internaltest_SOURCES = internaltest.cc $(testharness_sources)$/;"	m
invalidate_doc_object	backends/brass/brass_database.cc	/^BrassWritableDatabase::invalidate_doc_object(Xapian::Document::Internal * obj) const$/;"	f	class:BrassWritableDatabase
invalidate_doc_object	backends/chert/chert_database.cc	/^ChertWritableDatabase::invalidate_doc_object(Xapian::Document::Internal * obj) const$/;"	f	class:ChertWritableDatabase
invalidate_doc_object	backends/database.cc	/^Database::Internal::invalidate_doc_object(Xapian::Document::Internal *) const$/;"	f	class:Xapian::Database::Internal
invalidate_doc_object	backends/flint/flint_database.cc	/^FlintWritableDatabase::invalidate_doc_object(Xapian::Document::Internal * obj) const$/;"	f	class:FlintWritableDatabase
invalidate_doc_object	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::invalidate_doc_object(Xapian::Document::Internal * obj) const$/;"	f	class:ConstDatabaseWrapper
inverter	backends/brass/brass_database.h	/^	mutable Inverter inverter;$/;"	m	class:BrassWritableDatabase
io_full_sync	common/io_utils.h	/^inline bool io_full_sync(int fd)$/;"	f
io_read	common/io_utils.cc	/^io_read(int fd, char * p, size_t n, size_t min)$/;"	f
io_sync	common/io_utils.h	/^inline bool io_sync(int fd)$/;"	f
io_unlink	common/io_utils.cc	/^io_unlink(const std::string & filename)$/;"	f
io_write	common/io_utils.cc	/^io_write(int fd, const char * p, size_t n)$/;"	f
isTkn	queryparser/lemon.c	/^  int isTkn;           \/* True to use tokens.  False for non-terminals *\/$/;"	m	struct:axset	file:
is_after_end	backends/brass/brass_cursor.h	/^	bool is_after_end;$/;"	m	class:BrassCursor
is_after_end	backends/chert/chert_cursor.h	/^	bool is_after_end;$/;"	m	class:ChertCursor
is_after_end	backends/flint/flint_cursor.h	/^	bool is_after_end;$/;"	m	class:FlintCursor
is_and_like	matcher/queryoptimiser.cc	/^inline bool is_and_like(Xapian::Query::Internal::op_t op) {$/;"	f
is_at_end	backends/brass/brass_postlist.cc	/^    bool is_at_end() const {$/;"	f	class:Brass::PostlistChunkReader
is_at_end	backends/brass/brass_postlist.h	/^	bool is_at_end;$/;"	m	class:BrassPostList
is_at_end	backends/chert/chert_postlist.cc	/^    bool is_at_end() const {$/;"	f	class:Chert::PostlistChunkReader
is_at_end	backends/chert/chert_postlist.h	/^	bool is_at_end;$/;"	m	class:ChertPostList
is_at_end	backends/flint/flint_postlist.cc	/^	bool is_at_end() const {$/;"	f	class:FlintPostlistChunkReader
is_at_end	backends/flint/flint_postlist.h	/^	bool is_at_end;$/;"	m	class:FlintPostList
is_category_wanted	common/debuglog.h	/^    bool is_category_wanted() const {$/;"	f	class:DebugLogFunc
is_category_wanted	common/debuglog.h	/^    bool is_category_wanted() const {$/;"	f	class:DebugLogFuncVoid
is_category_wanted	common/debuglog.h	/^    bool is_category_wanted(debuglog_categories category) {$/;"	f	class:DebugLogger
is_cjk_enabled	queryparser/cjk-tokenizer.cc	/^CJK::is_cjk_enabled()$/;"	f	class:CJK
is_closed	backends/inmemory/inmemory_database.h	/^    bool is_closed() const { return closed; }$/;"	f	class:InMemoryDatabase
is_currency	include/xapian/unicode.h	/^inline bool is_currency(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
is_digit	queryparser/queryparser_internal.cc	/^is_digit(unsigned ch) {$/;"	f
is_digit	queryparser/termgenerator_internal.cc	/^is_digit(unsigned ch) {$/;"	f	namespace:Xapian
is_distributable	api/omqueryinternal.cc	/^is_distributable(Xapian::Query::Internal::op_t op)$/;"	f
is_doclenchunk_key	backends/brass/brass_compact.cc	/^is_doclenchunk_key(const string & key)$/;"	f	namespace:BrassCompact
is_doclenchunk_key	backends/chert/chert_compact.cc	/^is_doclenchunk_key(const string & key)$/;"	f	namespace:ChertCompact
is_empty	backends/brass/brass_btreebase.cc	/^BrassTable_base::is_empty() const$/;"	f	class:BrassTable_base
is_empty	backends/chert/chert_btreebase.cc	/^ChertTable_base::is_empty() const$/;"	f	class:ChertTable_base
is_empty	backends/flint/flint_btreebase.cc	/^FlintTable_base::is_empty() const$/;"	f	class:FlintTable_base
is_first_chunk	backends/brass/brass_postlist.cc	/^	bool is_first_chunk;$/;"	m	class:Brass::PostlistChunkWriter	file:
is_first_chunk	backends/chert/chert_postlist.cc	/^	bool is_first_chunk;$/;"	m	class:Chert::PostlistChunkWriter	file:
is_first_chunk	backends/flint/flint_postlist.cc	/^	bool is_first_chunk;$/;"	m	class:FlintPostlistChunkWriter	file:
is_last_chunk	backends/brass/brass_postlist.cc	/^	bool is_last_chunk;$/;"	m	class:Brass::PostlistChunkWriter	file:
is_last_chunk	backends/brass/brass_postlist.h	/^	bool is_last_chunk;$/;"	m	class:BrassPostList
is_last_chunk	backends/chert/chert_postlist.cc	/^	bool is_last_chunk;$/;"	m	class:Chert::PostlistChunkWriter	file:
is_last_chunk	backends/chert/chert_postlist.h	/^	bool is_last_chunk;$/;"	m	class:ChertPostList
is_last_chunk	backends/flint/flint_postlist.cc	/^	bool is_last_chunk;$/;"	m	class:FlintPostlistChunkWriter	file:
is_last_chunk	backends/flint/flint_postlist.h	/^	bool is_last_chunk;$/;"	m	class:FlintPostList
is_leaf	api/omqueryinternal.cc	/^is_leaf(Xapian::Query::Internal::op_t op)$/;"	f	file:
is_metainfo_key	backends/brass/brass_compact.cc	/^is_metainfo_key(const string & key)$/;"	f	namespace:BrassCompact
is_metainfo_key	backends/chert/chert_compact.cc	/^is_metainfo_key(const string & key)$/;"	f	namespace:ChertCompact
is_metainfo_key	backends/flint/flint_compact.cc	/^is_metainfo_key(const string & key)$/;"	f	namespace:FlintCompact
is_modified	backends/brass/brass_spelling.h	/^    bool is_modified() const {$/;"	f	class:BrassSpellingTable
is_modified	backends/brass/brass_synonym.h	/^    bool is_modified() const {$/;"	f	class:BrassSynonymTable
is_modified	backends/brass/brass_table.h	/^	bool is_modified() const { return Btree_modified; }$/;"	f	class:BrassTable
is_modified	backends/brass/brass_values.h	/^    bool is_modified() const {$/;"	f	class:BrassValueManager
is_modified	backends/chert/chert_spelling.h	/^    bool is_modified() const {$/;"	f	class:ChertSpellingTable
is_modified	backends/chert/chert_synonym.h	/^    bool is_modified() const {$/;"	f	class:ChertSynonymTable
is_modified	backends/chert/chert_table.h	/^	bool is_modified() const { return Btree_modified; }$/;"	f	class:ChertTable
is_modified	backends/chert/chert_values.h	/^    bool is_modified() const {$/;"	f	class:ChertValueManager
is_modified	backends/flint/flint_spelling.h	/^    bool is_modified() const {$/;"	f	class:FlintSpellingTable
is_modified	backends/flint/flint_synonym.h	/^    bool is_modified() const {$/;"	f	class:FlintSynonymTable
is_modified	backends/flint/flint_table.h	/^	bool is_modified() const { return Btree_modified; }$/;"	f	class:FlintTable
is_not_whitespace	queryparser/queryparser_internal.cc	/^is_not_whitespace(unsigned ch) {$/;"	f
is_not_wordchar	queryparser/queryparser_internal.cc	/^is_not_wordchar(unsigned ch) {$/;"	f
is_open	backends/brass/brass_table.h	/^	bool is_open() const { return handle >= 0; }$/;"	f	class:BrassTable
is_open	backends/chert/chert_table.h	/^	bool is_open() const { return handle >= 0; }$/;"	f	class:ChertTable
is_phrase_generator	queryparser/queryparser_internal.cc	/^is_phrase_generator(unsigned ch)$/;"	f
is_positional	queryparser/queryparser_internal.cc	/^is_positional(Xapian::Query::op op)$/;"	f
is_positioned	backends/brass/brass_cursor.h	/^	bool is_positioned;$/;"	m	class:BrassCursor
is_positioned	backends/chert/chert_cursor.h	/^	bool is_positioned;$/;"	m	class:ChertCursor
is_positioned	backends/flint/flint_cursor.h	/^	bool is_positioned;$/;"	m	class:FlintCursor
is_remote	common/multimatch.h	/^	vector<bool> is_remote;$/;"	m	class:MultiMatch
is_stem_preventer	queryparser/queryparser_internal.cc	/^is_stem_preventer(unsigned ch)$/;"	f
is_stopword	queryparser/queryparser_internal.cc	/^    bool is_stopword(const Term *term) const {$/;"	f	class:State
is_suffix	queryparser/queryparser_internal.cc	/^is_suffix(unsigned ch) {$/;"	f
is_tab	common/stringutils.cc	/^const unsigned char is_tab[('\\x20' == ' ') ? 256 : -1] = {$/;"	m	namespace:Xapian::Internal	file:
is_transposed	api/editdistance.cc	/^    bool is_transposed(int pos1, int pos2) const {$/;"	f	class:edist_state
is_uninstalled	xapian-config	/^is_uninstalled()$/;"	f
is_user_metadata_key	backends/brass/brass_compact.cc	/^is_user_metadata_key(const string & key)$/;"	f	namespace:BrassCompact
is_user_metadata_key	backends/chert/chert_compact.cc	/^is_user_metadata_key(const string & key)$/;"	f	namespace:ChertCompact
is_user_metadata_key	backends/flint/flint_compact.cc	/^is_user_metadata_key(const string & key)$/;"	f	namespace:FlintCompact
is_user_metadata_key	bin/xapian-check-brass.cc	/^is_user_metadata_key(const string & key)$/;"	f	file:
is_user_metadata_key	bin/xapian-check-chert.cc	/^is_user_metadata_key(const string & key)$/;"	f	file:
is_user_metadata_key	bin/xapian-check-flint.cc	/^is_user_metadata_key(const string & key)$/;"	f	file:
is_valid	backends/inmemory/inmemory_database.h	/^	bool is_valid;$/;"	m	class:InMemoryDoc
is_valuechunk_key	backends/brass/brass_compact.cc	/^is_valuechunk_key(const string & key)$/;"	f	namespace:BrassCompact
is_valuechunk_key	backends/chert/chert_compact.cc	/^is_valuechunk_key(const string & key)$/;"	f	namespace:ChertCompact
is_valuestats_key	backends/brass/brass_compact.cc	/^is_valuestats_key(const string & key)$/;"	f	namespace:BrassCompact
is_valuestats_key	backends/chert/chert_compact.cc	/^is_valuestats_key(const string & key)$/;"	f	namespace:ChertCompact
is_whitespace	include/xapian/unicode.h	/^inline bool is_whitespace(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
is_wordchar	include/xapian/unicode.h	/^inline bool is_wordchar(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
is_yyyy_mm_dd	api/valuerangeproc.cc	/^is_yyyy_mm_dd(const string &s)$/;"	f	namespace:Xapian
it	api/documentvaluelist.h	/^    Xapian::Document::Internal::document_values::const_iterator it;$/;"	m	class:DocumentValueList
it	api/maptermlist.h	/^	Xapian::Document::Internal::document_terms::const_iterator it;$/;"	m	class:MapTermList
it	api/matchspy.cc	/^    map<string, Xapian::doccount>::const_iterator it;$/;"	m	class:ValueCountTermList	file:
it	api/matchspy.cc	/^    vector<StringAndFrequency>::const_iterator it;$/;"	m	class:StringAndFreqTermList	file:
it	backends/chert/chert_modifiedpostlist.h	/^    map<Xapian::docid, pair<char, Xapian::termcount> >::const_iterator it;$/;"	m	class:ChertModifiedPostList
it	backends/flint/flint_modifiedpostlist.h	/^    map<Xapian::docid, pair<char, Xapian::termcount> >::const_iterator it;$/;"	m	class:FlintModifiedPostList
it	backends/inmemory/inmemory_alltermslist.h	/^	std::map<string, InMemoryTerm>::const_iterator it;$/;"	m	class:InMemoryAllTermsList
it	include/xapian/postingsource.h	/^    Xapian::PostingIterator it;$/;"	m	class:Xapian::FixedWeightPostingSource
it	queryparser/cjk-tokenizer.h	/^    Xapian::Utf8Iterator it;$/;"	m	class:CJKTokenIterator
it_end	api/maptermlist.h	/^	Xapian::Document::Internal::document_terms::const_iterator it_end;$/;"	m	class:MapTermList
item_count	backends/brass/brass_btreebase.h	/^	brass_tablesize_t item_count;$/;"	m	class:BrassTable_base
item_count	backends/brass/brass_table.h	/^	brass_tablesize_t item_count;$/;"	m	class:BrassTable
item_count	backends/chert/chert_btreebase.h	/^	chert_tablesize_t item_count;$/;"	m	class:ChertTable_base
item_count	backends/chert/chert_table.h	/^	chert_tablesize_t item_count;$/;"	m	class:ChertTable
item_count	backends/flint/flint_btreebase.h	/^	uint4 item_count;$/;"	m	class:FlintTable_base
item_count	backends/flint/flint_table.h	/^	uint4 item_count;$/;"	m	class:FlintTable
items	backends/remote/net_termlist.h	/^	vector<NetworkTermListItem> items;$/;"	m	class:NetworkTermList
items	common/esetinternal.h	/^    std::vector<Xapian::Internal::ExpandTerm> items;$/;"	m	class:Xapian::ESet::Internal
items	common/omenquireinternal.h	/^	set<Xapian::docid> items;$/;"	m	class:Xapian::RSet::Internal
items	common/omenquireinternal.h	/^	vector<Xapian::Internal::MSetItem> items;$/;"	m	class:Xapian::MSet::Internal
items	matcher/collapser.h	/^    vector<Xapian::Internal::MSetItem> items;$/;"	m	class:CollapseData
items_at_end	include/xapian/postingsource.h	/^    bool items_at_end;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
iterating_in_progress	common/inmemory_positionlist.h	/^	bool iterating_in_progress;$/;"	m	class:InMemoryPositionList
iterator	include/xapian/enquire.h	/^	typedef MSetIterator iterator;$/;"	t	class:Xapian::MSet
iterator_category	include/xapian/enquire.h	/^	typedef std::bidirectional_iterator_tag iterator_category; \/\/ FIXME: could enhance to be a randomaccess_iterator$/;"	t	class:Xapian::MSetIterator
iterator_category	include/xapian/enquire.h	/^	typedef std::bidirectional_iterator_tag iterator_category; \/\/ FIXME: go for randomaccess_iterator!$/;"	t	class:Xapian::ESetIterator
iterator_category	include/xapian/positioniterator.h	/^	typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::PositionIterator
iterator_category	include/xapian/postingiterator.h	/^	typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::PostingIterator
iterator_category	include/xapian/termiterator.h	/^	typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::TermIterator
iterator_category	include/xapian/unicode.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::Utf8Iterator
iterator_category	include/xapian/valueiterator.h	/^    typedef std::input_iterator_tag iterator_category;$/;"	t	class:Xapian::ValueIterator
jb	tests/harness/testsuite.cc	/^static SIGJMP_BUF jb;$/;"	v	file:
jump_to	backends/brass/brass_postlist.cc	/^BrassPostList::jump_to(Xapian::docid desired_did)$/;"	f	class:BrassPostList
jump_to	backends/chert/chert_postlist.cc	/^ChertPostList::jump_to(Xapian::docid desired_did)$/;"	f	class:ChertPostList
keep_alive	api/omdatabase.cc	/^Database::keep_alive()$/;"	f	class:Xapian::Database
keep_alive	backends/database.cc	/^Database::Internal::keep_alive()$/;"	f	class:Xapian::Database::Internal
keep_alive	backends/remote/remote-database.cc	/^RemoteDatabase::keep_alive()$/;"	f	class:RemoteDatabase
keep_count	languages/compiler/header.h	/^    int keep_count;	 \/* used to number keep\/restore pairs to avoid compiler warnings about shadowed variables *\/$/;"	m	struct:generator
ket	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
key	backends/brass/brass_compact.cc	/^    string key, tag;$/;"	m	class:BrassCompact::PostlistCursor	file:
key	backends/brass/brass_table.h	/^    Key key() const { return Key(p + I2); }$/;"	f	class:Brass::Item_base
key	backends/chert/chert_compact.cc	/^    string key, tag;$/;"	m	class:ChertCompact::PostlistCursor	file:
key	backends/chert/chert_table.h	/^    Key key() const { return Key(p + I2); }$/;"	f	class:Item_base
key	backends/flint/flint_compact.cc	/^    string key, tag;$/;"	m	class:FlintCompact::PostlistCursor	file:
key	backends/flint/flint_table.h	/^    Key_ key() const { return Key_(p + I2); }$/;"	f	class:Item_base_
key	queryparser/lemon.c	/^  char *key;                   \/* The key *\/$/;"	m	struct:s_x2node	file:
key	queryparser/lemon.c	/^  struct config *key;                   \/* The key *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::config	file:
key_exists	backends/brass/brass_table.cc	/^BrassTable::key_exists(const string &key) const$/;"	f	class:BrassTable
key_exists	backends/chert/chert_table.cc	/^ChertTable::key_exists(const string &key) const$/;"	f	class:ChertTable
key_exists	backends/flint/flint_table.cc	/^FlintTable::key_exists(const string &key) const$/;"	f	class:FlintTable
kt	backends/brass/brass_table.h	/^	mutable Brass::Item_wr kt;$/;"	m	class:BrassTable
kt	backends/chert/chert_table.h	/^	mutable Item_wr kt;$/;"	m	class:ChertTable
kt	backends/flint/flint_table.h	/^	mutable Item_wr_ kt;$/;"	m	class:FlintTable
l	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
l	matcher/branchpostlist.h	/^	PostList *l;$/;"	m	class:BranchPostList
label	queryparser/lemon.c	/^  char *label;$/;"	m	struct:s_options	file:
label_used	languages/compiler/header.h	/^    int label_used;     \/* Keep track of whether the failure label is used. *\/$/;"	m	struct:generator
lambda	queryparser/lemon.c	/^  Boolean lambda;          \/* True if NT and can generate an empty string *\/$/;"	m	struct:symbol	file:
language	tests/stemtest.cc	/^static string language;$/;"	v	file:
largest_ch	languages/compiler/header.h	/^    int largest_ch;           \/* character with max code *\/$/;"	m	struct:grouping
last_allowed_did	backends/brass/brass_values.cc	/^    Xapian::docid last_allowed_did;$/;"	m	class:Brass::ValueUpdater	file:
last_allowed_did	backends/chert/chert_values.cc	/^    Xapian::docid last_allowed_did;$/;"	m	class:ValueUpdater	file:
last_block	backends/brass/brass_btreebase.h	/^	uint4 last_block;$/;"	m	class:BrassTable_base
last_block	backends/chert/chert_btreebase.h	/^	uint4 last_block;$/;"	m	class:ChertTable_base
last_block	backends/flint/flint_btreebase.h	/^	uint4 last_block;$/;"	m	class:FlintTable_base
last_did_in_chunk	backends/brass/brass_postlist.h	/^	Xapian::docid last_did_in_chunk;$/;"	m	class:BrassPostList
last_did_in_chunk	backends/chert/chert_postlist.h	/^	Xapian::docid last_did_in_chunk;$/;"	m	class:ChertPostList
last_did_in_chunk	backends/flint/flint_postlist.h	/^	Xapian::docid last_did_in_chunk;$/;"	m	class:FlintPostList
last_docid	api/compactor.cc	/^    Xapian::docid last_docid;$/;"	m	class:Xapian::Compactor::Internal	file:
last_docid	backends/brass/brass_dbstats.h	/^    Xapian::docid last_docid;$/;"	m	class:BrassDatabaseStats
last_docid	backends/chert/chert_dbstats.h	/^    Xapian::docid last_docid;$/;"	m	class:ChertDatabaseStats
last_docid	backends/slowvaluelist.h	/^    Xapian::docid last_docid;$/;"	m	class:SlowValueList
last_docid	tests/api_postingsource.cc	/^    Xapian::doccount last_docid;$/;"	m	class:MyDontAskWeightPostingSource	file:
last_docid	tests/api_postingsource.cc	/^    Xapian::doccount last_docid;$/;"	m	class:MyOddPostingSource	file:
last_docid	tests/api_postingsource.cc	/^    Xapian::doccount last_docid;$/;"	m	class:MyOddWeightingPostingSource	file:
last_indexlog_timer	tests/perftest/perftest.h	/^    double last_indexlog_timer;$/;"	m	class:PerfTestLogger
last_live_changeset_time	api/replication.cc	/^    double last_live_changeset_time;$/;"	m	class:DatabaseReplica::Internal	file:
last_nonopt	common/getopt.cc	/^static int last_nonopt;$/;"	v	file:
last_synonyms	backends/brass/brass_synonym.h	/^    mutable std::set<std::string> last_synonyms;$/;"	m	class:BrassSynonymTable
last_synonyms	backends/chert/chert_synonym.h	/^    mutable std::set<std::string> last_synonyms;$/;"	m	class:ChertSynonymTable
last_synonyms	backends/flint/flint_synonym.h	/^    mutable std::set<std::string> last_synonyms;$/;"	m	class:FlintSynonymTable
last_term	backends/brass/brass_synonym.h	/^    mutable std::string last_term;$/;"	m	class:BrassSynonymTable
last_term	backends/chert/chert_synonym.h	/^    mutable std::string last_term;$/;"	m	class:ChertSynonymTable
last_term	backends/flint/flint_synonym.h	/^    mutable std::string last_term;$/;"	m	class:FlintSynonymTable
last_wdb_name	tests/harness/backendmanager_brass.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerBrass
last_wdb_name	tests/harness/backendmanager_chert.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerChert
last_wdb_name	tests/harness/backendmanager_flint.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerFlint
last_wdb_name	tests/harness/backendmanager_remote.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerRemote
last_wdb_name	tests/harness/backendmanager_remoteprog.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerRemoteProg
last_wdb_name	tests/harness/backendmanager_remotetcp.h	/^    std::string last_wdb_name;$/;"	m	class:BackendManagerRemoteTcp
lastdocid	backends/flint/flint_database.h	/^	mutable Xapian::docid lastdocid;$/;"	m	class:FlintDatabase
lastdocid	backends/remote/net_postlist.h	/^    Xapian::docid lastdocid;$/;"	m	class:NetworkPostList
lastdocid	common/remote-database.h	/^    mutable Xapian::docid lastdocid;$/;"	m	class:RemoteDatabase
lastposlist	backends/remote/net_postlist.h	/^    Xapian::Internal::RefCntPtr<PositionList> lastposlist;$/;"	m	class:NetworkPostList
lastrule	queryparser/lemon.c	/^  struct rule *lastrule;     \/* Pointer to the most recently parsed rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
lastwdf	backends/remote/net_postlist.h	/^    Xapian::termcount lastwdf;$/;"	m	class:NetworkPostList
latest_revision_number	backends/brass/brass_table.h	/^	mutable brass_revision_number_t latest_revision_number;$/;"	m	class:BrassTable
latest_revision_number	backends/chert/chert_table.h	/^	mutable chert_revision_number_t latest_revision_number;$/;"	m	class:ChertTable
latest_revision_number	backends/flint/flint_table.h	/^	mutable flint_revision_number_t latest_revision_number;$/;"	m	class:FlintTable
launch_xapian_tcpsrv	tests/harness/backendmanager_remotetcp.cc	/^launch_xapian_tcpsrv(const string & args)$/;"	f	file:
lazy	backends/brass/brass_table.h	/^	bool lazy;$/;"	m	class:BrassTable
lazy	backends/chert/chert_table.h	/^	bool lazy;$/;"	m	class:ChertTable
lazy	backends/flint/flint_table.h	/^	bool lazy;$/;"	m	class:FlintTable
lazy_alloc_deflate_zstream	backends/brass/brass_table.cc	/^BrassTable::lazy_alloc_deflate_zstream() const {$/;"	f	class:BrassTable
lazy_alloc_deflate_zstream	backends/chert/chert_table.cc	/^ChertTable::lazy_alloc_deflate_zstream() const {$/;"	f	class:ChertTable
lazy_alloc_deflate_zstream	backends/flint/flint_table.cc	/^FlintTable::lazy_alloc_deflate_zstream() const {$/;"	f	class:FlintTable
lazy_alloc_inflate_zstream	backends/brass/brass_table.cc	/^BrassTable::lazy_alloc_inflate_zstream() const {$/;"	f	class:BrassTable
lazy_alloc_inflate_zstream	backends/chert/chert_table.cc	/^ChertTable::lazy_alloc_inflate_zstream() const {$/;"	f	class:ChertTable
lazy_alloc_inflate_zstream	backends/flint/flint_table.cc	/^FlintTable::lazy_alloc_inflate_zstream() const {$/;"	f	class:FlintTable
lb	languages/steminternal.h	/^    int c, l, lb, bra, ket;$/;"	m	class:Xapian::SnowballStemImplementation
lcov_branch_coverage	Makefile	/^	lcov --capture -d . --quiet --rc 'lcov_branch_coverage=1' --no-external -o xapian-core.lcov$/;"	m
ldflags	Makefile	/^ldflags = $/;"	m
ldflags	docs/Makefile	/^ldflags = $/;"	m
ldflags	tests/Makefile	/^ldflags = $/;"	m
leaves	common/multimatch.h	/^	std::vector<Xapian::Internal::RefCntPtr<SubMatch> > leaves;$/;"	m	class:MultiMatch
left	backends/byte_length_strings.h	/^    size_t left;$/;"	m	class:ByteLengthPrefixedStringItor
left	backends/prefix_compressed_strings.h	/^    size_t left;$/;"	m	class:PrefixCompressedStringItor
left	common/ortermlist.h	/^    TermList *left, *right;$/;"	m	class:OrTermList
left	include/xapian/unicode.h	/^    size_t left() const { return p ? end - p : 0; }$/;"	f	class:Xapian::Utf8Iterator
left	languages/compiler/header.h	/^    struct node * left;$/;"	m	struct:node	typeref:struct:node::node
left_current	common/ortermlist.h	/^    std::string left_current, right_current;$/;"	m	class:OrTermList
lemon	queryparser/lemon.c	/^struct lemon {$/;"	s	file:
lemonStrlen	queryparser/lemon.c	/^#define lemonStrlen(/;"	d	file:
lemon_built_sources	Makefile	/^lemon_built_sources = \\$/;"	m
lemon_built_sources	queryparser/Makefile.mk	/^lemon_built_sources =\\$/;"	m
len	api/editdistance.cc	/^    int len;$/;"	m	struct:edist_seq	file:
len	queryparser/cjk-tokenizer.h	/^    mutable unsigned len;$/;"	m	class:CJKTokenIterator
len_factor	include/xapian/weight.h	/^    mutable Xapian::doclength len_factor;$/;"	m	class:Xapian::BM25Weight
len_factor	include/xapian/weight.h	/^    mutable Xapian::doclength len_factor;$/;"	m	class:Xapian::TradWeight
len_lower	tests/api_weight.cc	/^    mutable Xapian::termcount len_lower;$/;"	m	class:CheckStatsWeight	file:
len_upper	tests/api_weight.cc	/^    mutable Xapian::termcount len_upper;$/;"	m	class:CheckStatsWeight	file:
length	backends/brass/brass_table.h	/^    int length() const {$/;"	f	class:Brass::Key
length	backends/chert/chert_table.h	/^    int length() const {$/;"	f	class:Key
length	backends/flint/flint_table.h	/^    int length() const {$/;"	f	class:Key_
letter_A	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_A"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;A&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_B	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_B"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;B&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_C	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_C"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;C&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_D	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_D"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;D&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_E	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_E"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;E&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_F	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_F"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;F&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_I	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_I"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;I&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_K	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1BoolWeight.html">BoolWeight<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_K"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;K&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_L	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1Compactor.html">Compactor<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_L"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;L&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_M	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1Database.html">Database<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_M"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;M&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_N	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1DateValueRangeProcessor.html">DateValueRangeProcessor<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_N"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;N&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_P	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_P"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;P&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_Q	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1ESetIterator.html">ESetIterator<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_Q"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;Q&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_R	docs/apidoc/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_R"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;R&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_S	docs/apidoc/html/classes.html	/^<\/td><td valign="top"><a class="el" href="classXapian_1_1InternalError.html">InternalError<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_S"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;S&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_T	docs/apidoc/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_T"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;T&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_U	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1DatabaseModifiedError.html">DatabaseModifiedError<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classXapian_1_1MSetIterator.html">MSetIterator<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_U"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;U&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_V	docs/apidoc/html/classes.html	/^<tr><td valign="top"><a class="el" href="classXapian_1_1DecreasingValueWeightPostingSource.html">DecreasingValueWeightPostingSource<\/a> (<a class="el" href="namespaceXapian.html">Xapian<\/a>)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_V"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;V&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_W	docs/apidoc/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_W"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;W&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
level	backends/brass/brass_btreebase.h	/^	uint4 level;$/;"	m	class:BrassTable_base
level	backends/brass/brass_cursor.h	/^	int level;$/;"	m	class:BrassCursor
level	backends/brass/brass_table.h	/^	int level;$/;"	m	class:BrassTable
level	backends/chert/chert_btreebase.h	/^	uint4 level;$/;"	m	class:ChertTable_base
level	backends/chert/chert_cursor.h	/^	int level;$/;"	m	class:ChertCursor
level	backends/chert/chert_table.h	/^	int level;$/;"	m	class:ChertTable
level	backends/flint/flint_btreebase.h	/^	uint4 level;$/;"	m	class:FlintTable_base
level	backends/flint/flint_cursor.h	/^	int level;$/;"	m	class:FlintCursor
level	backends/flint/flint_table.h	/^	int level;$/;"	m	class:FlintTable
lhead	matcher/andmaybepostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:AndMaybePostList
lhead	matcher/andnotpostlist.h	/^        Xapian::docid lhead, rhead;$/;"	m	class:AndNotPostList
lhead	matcher/orpostlist.h	/^        Xapian::docid lhead, rhead;$/;"	m	class:OrPostList
lhs	queryparser/lemon.c	/^  struct symbol *lhs;        \/* Left-hand side of current rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
lhs	queryparser/lemon.c	/^  struct symbol *lhs;      \/* Left-hand side of the rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
lhs	queryparser/queryparser_internal.cc	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon29	file:
lhsStart	queryparser/lemon.c	/^  int lhsStart;            \/* True if left-hand side is the start symbol *\/$/;"	m	struct:rule	file:
lhsalias	queryparser/lemon.c	/^  char *lhsalias;            \/* Alias for the LHS *\/$/;"	m	struct:pstate	file:
lhsalias	queryparser/lemon.c	/^  char *lhsalias;          \/* Alias for the LHS (NULL if none) *\/$/;"	m	struct:rule	file:
lib_LTLIBRARIES	Makefile	/^lib_LTLIBRARIES = libxapian.la$/;"	m
lib_src	Makefile	/^lib_src = api\/compactor.cc api\/decvalwtsource.cc \\$/;"	m
libbrasscheck_la_LIBADD	Makefile	/^libbrasscheck_la_LIBADD =$/;"	m
libbrasscheck_la_OBJECTS	Makefile	/^libbrasscheck_la_OBJECTS = $(am_libbrasscheck_la_OBJECTS)$/;"	m
libbrasscheck_la_SOURCES	Makefile	/^libbrasscheck_la_SOURCES = \\$/;"	m
libbrasscheck_la_SOURCES	backends/brass/Makefile.mk	/^libbrasscheck_la_SOURCES =\\$/;"	m
libchertcheck_la_LIBADD	Makefile	/^libchertcheck_la_LIBADD =$/;"	m
libchertcheck_la_OBJECTS	Makefile	/^libchertcheck_la_OBJECTS = $(am_libchertcheck_la_OBJECTS)$/;"	m
libchertcheck_la_SOURCES	Makefile	/^libchertcheck_la_SOURCES = \\$/;"	m
libchertcheck_la_SOURCES	backends/chert/Makefile.mk	/^libchertcheck_la_SOURCES =\\$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	docs/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	tests/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	docs/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	tests/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libflintcheck_la_LIBADD	Makefile	/^libflintcheck_la_LIBADD =$/;"	m
libflintcheck_la_OBJECTS	Makefile	/^libflintcheck_la_OBJECTS = $(am_libflintcheck_la_OBJECTS)$/;"	m
libflintcheck_la_SOURCES	Makefile	/^libflintcheck_la_SOURCES = \\$/;"	m
libflintcheck_la_SOURCES	backends/flint/Makefile.mk	/^libflintcheck_la_SOURCES =\\$/;"	m
libgetopt_la_LIBADD	Makefile	/^libgetopt_la_LIBADD =$/;"	m
libgetopt_la_OBJECTS	Makefile	/^libgetopt_la_OBJECTS = $(am_libgetopt_la_OBJECTS)$/;"	m
libgetopt_la_SOURCES	Makefile	/^libgetopt_la_SOURCES = \\$/;"	m
libgetopt_la_SOURCES	common/Makefile.mk	/^libgetopt_la_SOURCES =\\$/;"	m
libxapian_la	Makefile	/^libxapian_la = libxapian.la$/;"	m
libxapian_la	tests/Makefile	/^libxapian_la = libxapian.la$/;"	m
libxapian_la_DEPENDENCIES	Makefile	/^libxapian_la_DEPENDENCIES = $(am__DEPENDENCIES_1)$/;"	m
libxapian_la_LDFLAGS	Makefile	/^libxapian_la_LDFLAGS = $(XAPIAN_LDFLAGS) -no-undefined -version-info \\$/;"	m
libxapian_la_LIBADD	Makefile	/^libxapian_la_LIBADD = $(XAPIAN_LIBS)$/;"	m
libxapian_la_LINK	Makefile	/^libxapian_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
libxapian_la_OBJECTS	Makefile	/^libxapian_la_OBJECTS = $(am_libxapian_la_OBJECTS)$/;"	m
libxapian_la_SOURCES	Makefile	/^libxapian_la_SOURCES = $(lib_src)$/;"	m
line	queryparser/lemon.c	/^  int line;                \/* Line number at which code begins *\/$/;"	m	struct:rule	file:
line_count	languages/compiler/header.h	/^    int line_count;      \/* counts number of lines output *\/$/;"	m	struct:generator
line_labelled	languages/compiler/header.h	/^    int line_labelled;   \/* in ANSI C, will need extra ';' if it is a block end *\/$/;"	m	struct:generator
line_number	languages/compiler/header.h	/^    int line_number;$/;"	m	struct:input
line_number	languages/compiler/header.h	/^    int line_number;$/;"	m	struct:node
line_number	languages/compiler/header.h	/^    int line_number;$/;"	m	struct:tokeniser
link	common/remote-database.h	/^    mutable RemoteConnection link;$/;"	m	class:RemoteDatabase
link_all_deplibs_CXX	Makefile	/^link_all_deplibs_CXX = yes$/;"	m
link_all_deplibs_CXX	docs/Makefile	/^link_all_deplibs_CXX = yes$/;"	m
link_all_deplibs_CXX	tests/Makefile	/^link_all_deplibs_CXX = yes$/;"	m
listen_socket	common/tcpserver.h	/^    int listen_socket;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
literalstring	languages/compiler/header.h	/^    symbol * literalstring;$/;"	m	struct:node
literalstring	languages/compiler/header.h	/^struct literalstring {$/;"	s
literalstring_count	languages/compiler/header.h	/^    int literalstring_count;  \/* in this among *\/$/;"	m	struct:among
literalstring_count	languages/compiler/header.h	/^    int literalstring_count;$/;"	m	struct:generator
literalstrings	languages/compiler/header.h	/^    struct literalstring * literalstrings;$/;"	m	struct:analyser	typeref:struct:analyser::literalstring
live_db	api/replication.cc	/^    mutable WritableDatabase live_db;$/;"	m	class:DatabaseReplica::Internal	file:
live_id	api/replication.cc	/^    int live_id;$/;"	m	class:DatabaseReplica::Internal	file:
lmax	matcher/andmaybepostlist.h	/^	Xapian::weight lmax, rmax;$/;"	m	class:AndMaybePostList
lmax	matcher/orpostlist.h	/^        Xapian::weight lmax, rmax, minmax;$/;"	m	class:OrPostList
lo_tab	common/stringutils.cc	/^const unsigned char lo_tab[257] =$/;"	m	namespace:Xapian::Internal	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	docs/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	tests/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	docs/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	tests/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localsubmatch	matcher/queryoptimiser.h	/^    LocalSubMatch & localsubmatch;$/;"	m	class:QueryOptimiser
lock	backends/brass/brass_database.h	/^	FlintLock lock;$/;"	m	class:BrassDatabase
lock	backends/chert/chert_database.h	/^	FlintLock lock;$/;"	m	class:ChertDatabase
lock	backends/flint/flint_database.h	/^	FlintLock lock;$/;"	m	class:FlintDatabase
lock	backends/flint_lock.cc	/^FlintLock::lock(bool exclusive, string & explanation) {$/;"	f	class:FlintLock
log_line	common/debuglog.cc	/^DebugLogger::log_line(debuglog_categories category, const string & msg)$/;"	f	class:DebugLogger
log_return_value	common/debuglog.h	/^    void log_return_value(const std::string & return_value) {$/;"	f	class:DebugLogFunc
long_opts	bin/xapian-progsrv.cc	/^static const struct option long_opts[] = {$/;"	v	typeref:struct:option	file:
long_opts	bin/xapian-tcpsrv.cc	/^static const struct option long_opts[] = {$/;"	v	typeref:struct:option	file:
look_for_name	languages/compiler/analyser.c	/^static struct name * look_for_name(struct analyser * a) {$/;"	f	file:
lookahead	queryparser/lemon.c	/^    int lookahead;             \/* Value of the lookahead token *\/$/;"	m	struct:acttab::__anon27	file:
lookup_object	api/registry.cc	/^lookup_object(map<string, T*> registry, const string & name)$/;"	f	file:
lose_b	languages/compiler/space.c	/^extern void lose_b(symbol * p) {$/;"	f
lose_s	languages/steminternal.h	/^inline void lose_s(symbol * p) {$/;"	f
love	queryparser/queryparser_internal.cc	/^    Query * love;$/;"	m	struct:ProbQuery	file:
lower_bound	common/valuestats.h	/^    std::string lower_bound;$/;"	m	struct:ValueStats
lseek	common/safeunistd.h	/^#  undef lseek$/;"	d
lseek	common/safeunistd.h	/^# define lseek(/;"	d
lvalid	matcher/orpostlist.h	/^	bool lvalid, rvalid;$/;"	m	class:OrPostList
m4datadir	Makefile	/^m4datadir = $(datadir)\/aclocal$/;"	m
m_backward	languages/compiler/header.h	/^    m_forward = 0, m_backward \/*, m_integer *\/$/;"	e	enum:analyser_modes
m_end	languages/compiler/header.h	/^    int m_end;$/;"	m	struct:tokeniser
m_forward	languages/compiler/header.h	/^    m_forward = 0, m_backward \/*, m_integer *\/$/;"	e	enum:analyser_modes
m_pair	languages/compiler/header.h	/^struct m_pair {$/;"	s
m_pairs	languages/compiler/header.h	/^    struct m_pair * m_pairs;$/;"	m	struct:tokeniser	typeref:struct:tokeniser::m_pair
m_start	languages/compiler/header.h	/^    int m_start;$/;"	m	struct:tokeniser
main	bin/xapian-check.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-chert-update.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-compact.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-inspect.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-progsrv.cc	/^int main(int argc, char **argv)$/;"	f
main	bin/xapian-replicate-server.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-replicate.cc	/^main(int argc, char **argv)$/;"	f
main	bin/xapian-tcpsrv.cc	/^int main(int argc, char **argv) {$/;"	f
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	examples/copydatabase.cc	/^main(int argc, char **argv)$/;"	f
main	examples/delve.cc	/^main(int argc, char **argv) try {$/;"	f
main	examples/quest.cc	/^main(int argc, char **argv)$/;"	f
main	examples/simpleexpand.cc	/^main(int argc, char **argv)$/;"	f
main	examples/simpleindex.cc	/^main(int argc, char **argv)$/;"	f
main	examples/simplesearch.cc	/^main(int argc, char **argv)$/;"	f
main	examples/xapian-metadata.cc	/^main(int argc, char **argv)$/;"	f
main	languages/compiler/driver.c	/^extern int main(int argc, char * argv[]) {$/;"	f
main	queryparser/lemon.c	/^int main(argc,argv)$/;"	f
main	tests/apitest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/internaltest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/perftest/perftest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/queryparsertest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/soaktest/soaktest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/stemtest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/submitperftest	/^def main():$/;"	f
main	tests/submitperftest.in	/^def main():$/;"	f
main	tests/termgentest.cc	/^int main(int argc, char **argv)$/;"	f
main	tests/unittest.cc	/^int main()$/;"	f
major	queryparser/queryparser_internal.cc	/^  YYCODETYPE major;       \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major_version	api/version.cc	/^int major_version() { return XAPIAN_MAJOR_VERSION; }$/;"	f	namespace:Xapian
make_all_tables	tests/api_compact.cc	/^make_all_tables(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_all_tables2	tests/api_compact.cc	/^make_all_tables2(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_among	languages/compiler/analyser.c	/^static void make_among(struct analyser * a, struct node * p, struct node * substring) {$/;"	f	file:
make_doc	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::make_doc(const string & docdata)$/;"	f	class:InMemoryDatabase
make_key	backends/brass/brass_positionlist.h	/^    static string make_key(Xapian::docid did, const string & term) {$/;"	f	class:BrassPositionListTable
make_key	backends/brass/brass_postlist.h	/^	static string make_key(const string & term) {$/;"	f	class:BrassPostListTable
make_key	backends/brass/brass_postlist.h	/^	static string make_key(const string & term, Xapian::docid did) {$/;"	f	class:BrassPostListTable
make_key	backends/brass/brass_record.cc	/^make_key(Xapian::docid did)$/;"	f
make_key	backends/brass/brass_termlisttable.h	/^    static std::string make_key(Xapian::docid did) {$/;"	f	class:BrassTermListTable
make_key	backends/chert/chert_positionlist.h	/^    static string make_key(Xapian::docid did, const string & term) {$/;"	f	class:ChertPositionListTable
make_key	backends/chert/chert_postlist.h	/^	static string make_key(const string & term) {$/;"	f	class:ChertPostListTable
make_key	backends/chert/chert_postlist.h	/^	static string make_key(const string & term, Xapian::docid did) {$/;"	f	class:ChertPostListTable
make_key	backends/chert/chert_record.cc	/^make_key(Xapian::docid did)$/;"	f
make_key	backends/chert/chert_termlisttable.h	/^    static std::string make_key(Xapian::docid did) {$/;"	f	class:ChertTermListTable
make_key	backends/flint/flint_positionlist.h	/^    static string make_key(Xapian::docid did, const string & tname) {$/;"	f	class:FlintPositionListTable
make_key	backends/flint/flint_postlist.h	/^	static string make_key(const string & term) {$/;"	f	class:FlintPostListTable
make_key	backends/flint/flint_postlist.h	/^	static string make_key(const string & term, Xapian::docid did) {$/;"	f	class:FlintPostListTable
make_key	backends/flint/flint_values.cc	/^make_key(string & key, Xapian::docid did)$/;"	f
make_lang	languages/compiler/header.h	/^    enum { LANG_JAVA, LANG_C, LANG_CPLUSPLUS } make_lang;$/;"	m	struct:options	typeref:enum:options::__anon20
make_matchspy2_db	tests/api_matchspy.cc	/^make_matchspy2_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_missing_tables	tests/api_compact.cc	/^make_missing_tables(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_msize1_db	tests/api_backend.cc	/^make_msize1_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_msize2_db	tests/api_backend.cc	/^make_msize2_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_multichunk_db	tests/api_compact.cc	/^make_multichunk_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_orcheck_db	tests/api_backend.cc	/^make_orcheck_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_ordecay_db	tests/api_backend.cc	/^make_ordecay_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_phrasebug1_db	tests/api_backend.cc	/^make_phrasebug1_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_posting	backends/inmemory/inmemory_database.cc	/^void InMemoryDatabase::make_posting(InMemoryDoc * doc,$/;"	f	class:InMemoryDatabase
make_query	tests/soaktest/soaktest_queries.cc	/^    Xapian::Query make_query() {$/;"	f	class:QueryBuilder
make_slot_key	backends/brass/brass_values.cc	/^make_slot_key(Xapian::docid did)$/;"	f
make_slot_key	backends/chert/chert_values.cc	/^make_slot_key(Xapian::docid did)$/;"	f
make_sparse_db	tests/api_compact.cc	/^make_sparse_db(Xapian::WritableDatabase &db, const string & s)$/;"	f	file:
make_start_of_chunk	backends/brass/brass_postlist.cc	/^make_start_of_chunk(bool new_is_last_chunk,$/;"	f	file:
make_start_of_chunk	backends/chert/chert_postlist.cc	/^make_start_of_chunk(bool new_is_last_chunk,$/;"	f	file:
make_start_of_chunk	backends/flint/flint_postlist.cc	/^make_start_of_chunk(bool new_is_last_chunk,$/;"	f	file:
make_start_of_first_chunk	backends/brass/brass_postlist.cc	/^make_start_of_first_chunk(Xapian::doccount entries,$/;"	f	file:
make_start_of_first_chunk	backends/chert/chert_postlist.cc	/^make_start_of_first_chunk(Xapian::doccount entries,$/;"	f	file:
make_start_of_first_chunk	backends/flint/flint_postlist.cc	/^make_start_of_first_chunk(Xapian::doccount entries,$/;"	f	file:
make_synonym_postlist	matcher/localsubmatch.cc	/^LocalSubMatch::make_synonym_postlist(PostList * or_pl, MultiMatch * matcher,$/;"	f	class:LocalSubMatch
make_term	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::make_term(const string & tname)$/;"	f	class:InMemoryDatabase
make_term	queryparser/queryparser_internal.cc	/^Term::make_term(const string & prefix) const$/;"	f	class:Term
make_topercent7_db	tests/api_percentages.cc	/^make_topercent7_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_valuechunk_key	backends/brass/brass_values.h	/^make_valuechunk_key(Xapian::valueno slot, Xapian::docid did)$/;"	f	namespace:Brass
make_valuechunk_key	backends/chert/chert_values.h	/^make_valuechunk_key(Xapian::valueno slot, Xapian::docid did)$/;"	f
make_valuerange5	tests/api_opvalue.cc	/^make_valuerange5(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
make_valuestats_key	backends/brass/brass_values.cc	/^make_valuestats_key(Xapian::valueno slot)$/;"	f
make_valuestats_key	backends/chert/chert_values.cc	/^make_valuestats_key(Xapian::valueno slot)$/;"	f
make_wdf_and_length	backends/flint/flint_postlist.cc	/^static string make_wdf_and_length(Xapian::termcount wdf, flint_doclen_t doclength)$/;"	f	file:
make_xordecay1_db	tests/api_backend.cc	/^make_xordecay1_db(Xapian::WritableDatabase &db, const string &)$/;"	f	file:
man1dir	Makefile	/^man1dir = $(mandir)\/man1$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	docs/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	tests/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
margin	languages/compiler/header.h	/^    int margin;$/;"	m	struct:generator
mark_wanted_terms	common/weightinternal.h	/^    void mark_wanted_terms(const Xapian::Query::Internal &query) {$/;"	f	class:Xapian::Weight::Internal
matcher	matcher/branchpostlist.h	/^	MultiMatch *matcher;$/;"	m	class:BranchPostList
matcher	matcher/extraweightpostlist.h	/^	MultiMatch * matcher;$/;"	m	class:ExtraWeightPostList
matcher	matcher/mergepostlist.h	/^	MultiMatch *matcher;$/;"	m	class:MergePostList
matcher	matcher/multiandpostlist.h	/^    MultiMatch *matcher;$/;"	m	class:MultiAndPostList
matcher	matcher/multixorpostlist.h	/^    MultiMatch *matcher;$/;"	m	class:MultiXorPostList
matcher	matcher/queryoptimiser.h	/^    MultiMatch * matcher;$/;"	m	class:QueryOptimiser
matcher	matcher/synonympostlist.h	/^    MultiMatch * matcher;$/;"	m	class:SynonymPostList
matcher_	include/xapian/postingsource.h	/^    void * matcher_;$/;"	m	class:Xapian::PostingSource
matches_estimated	common/omenquireinternal.h	/^	Xapian::doccount matches_estimated;$/;"	m	class:Xapian::MSet::Internal
matches_lower_bound	common/omenquireinternal.h	/^	Xapian::doccount matches_lower_bound;$/;"	m	class:Xapian::MSet::Internal
matches_upper_bound	common/omenquireinternal.h	/^	Xapian::doccount matches_upper_bound;$/;"	m	class:Xapian::MSet::Internal
matchspies	common/multimatch.h	/^	const vector<Xapian::MatchSpy *> & matchspies;$/;"	m	class:MultiMatch
matchspies	common/registryinternal.h	/^    std::map<std::string, Xapian::MatchSpy *> matchspies;$/;"	m	class:Xapian::Registry::Internal
matchspies	matcher/remotesubmatch.h	/^    const vector<Xapian::MatchSpy *> & matchspies;$/;"	m	class:RemoteSubMatch
max_attained	common/omenquireinternal.h	/^	Xapian::weight max_attained;$/;"	m	class:Xapian::MSet::Internal
max_changesets	backends/brass/brass_database.h	/^	unsigned int max_changesets;$/;"	m	class:BrassDatabase
max_changesets	backends/chert/chert_database.h	/^	unsigned int max_changesets;$/;"	m	class:ChertDatabase
max_changesets	backends/chert/chert_databasereplicator.h	/^	unsigned int max_changesets;$/;"	m	class:ChertDatabaseReplicator
max_changesets	backends/flint/flint_database.h	/^	unsigned int max_changesets;$/;"	m	class:FlintDatabase
max_changesets	backends/flint/flint_databasereplicator.h	/^	unsigned int max_changesets;$/;"	m	class:FlintDatabaseReplicator
max_item_size	backends/brass/brass_table.h	/^	size_t max_item_size;$/;"	m	class:BrassTable
max_item_size	backends/chert/chert_table.h	/^	size_t max_item_size;$/;"	m	class:ChertTable
max_item_size	backends/flint/flint_table.h	/^	size_t max_item_size;$/;"	m	class:FlintTable
max_month_length	api/valuerangeproc.cc	/^static const char max_month_length[12] = {$/;"	m	namespace:Xapian	file:
max_possible	common/omenquireinternal.h	/^	Xapian::weight max_possible;$/;"	m	class:Xapian::MSet::Internal
max_size	include/xapian/enquire.h	/^	Xapian::doccount max_size() const { return size(); }$/;"	f	class:Xapian::MSet
max_size	include/xapian/enquire.h	/^	Xapian::termcount max_size() const { return size(); }$/;"	f	class:Xapian::ESet
max_total	matcher/multiandpostlist.h	/^    Xapian::weight max_total;$/;"	m	class:MultiAndPostList
max_total	matcher/multixorpostlist.h	/^    Xapian::weight max_total;$/;"	m	class:MultiXorPostList
max_weight	matcher/extraweightpostlist.h	/^	Xapian::weight max_weight;$/;"	m	class:ExtraWeightPostList
max_weight_	include/xapian/postingsource.h	/^    double max_weight_;$/;"	m	class:Xapian::PostingSource
max_weight_in_map	include/xapian/postingsource.h	/^    double max_weight_in_map;$/;"	m	class:Xapian::ValueMapPostingSource
max_wildcard_expansion	queryparser/queryparser_internal.h	/^    Xapian::termcount max_wildcard_expansion;$/;"	m	class:Xapian::QueryParser::Internal
max_word_length	queryparser/termgenerator_internal.h	/^    unsigned max_word_length;$/;"	m	class:Xapian::TermGenerator::Internal
max_wt	matcher/multiandpostlist.h	/^    Xapian::weight * max_wt;$/;"	m	class:MultiAndPostList
maxchildren	tests/soaktest/soaktest_queries.cc	/^    unsigned int maxchildren;$/;"	m	struct:QueryBuilderEnv	file:
maxdist	api/editdistance.cc	/^    int maxdist;$/;"	m	class:edist_state	file:
maxid_accessed	tests/api_postingsource.cc	/^    Xapian::docid maxid_accessed;$/;"	m	class:ChangeMaxweightPostingSource	file:
maxsteps	tests/soaktest/soaktest_queries.cc	/^    unsigned int maxsteps;$/;"	m	class:QueryBuilder	file:
maxtermsperfield	tests/soaktest/soaktest_queries.cc	/^    unsigned int maxtermsperfield;$/;"	m	struct:QueryBuilderEnv	file:
memory_error	queryparser/lemon.c	/^void memory_error(){$/;"	f
merge	backends/inmemory/inmemory_database.h	/^	void merge(const InMemoryPosting & post) {$/;"	f	class:InMemoryPosting
merge	backends/inmemory/inmemory_database.h	/^	void merge(const InMemoryTermEntry & post) {$/;"	f	class:InMemoryTermEntry
merge	queryparser/lemon.c	/^static char *merge($/;"	f	file:
merge_changes	backends/brass/brass_postlist.cc	/^BrassPostListTable::merge_changes(const string &term,$/;"	f	class:BrassPostListTable
merge_changes	backends/brass/brass_spelling.cc	/^BrassSpellingTable::merge_changes()$/;"	f	class:BrassSpellingTable
merge_changes	backends/brass/brass_synonym.cc	/^BrassSynonymTable::merge_changes()$/;"	f	class:BrassSynonymTable
merge_changes	backends/brass/brass_values.cc	/^BrassValueManager::merge_changes()$/;"	f	class:BrassValueManager
merge_changes	backends/chert/chert_postlist.cc	/^ChertPostListTable::merge_changes($/;"	f	class:ChertPostListTable
merge_changes	backends/chert/chert_spelling.cc	/^ChertSpellingTable::merge_changes()$/;"	f	class:ChertSpellingTable
merge_changes	backends/chert/chert_synonym.cc	/^ChertSynonymTable::merge_changes()$/;"	f	class:ChertSynonymTable
merge_changes	backends/chert/chert_values.cc	/^ChertValueManager::merge_changes()$/;"	f	class:ChertValueManager
merge_changes	backends/flint/flint_postlist.cc	/^FlintPostListTable::merge_changes($/;"	f	class:FlintPostListTable
merge_changes	backends/flint/flint_spelling.cc	/^FlintSpellingTable::merge_changes()$/;"	f	class:FlintSpellingTable
merge_changes	backends/flint/flint_synonym.cc	/^FlintSynonymTable::merge_changes()$/;"	f	class:FlintSynonymTable
merge_docid_keyed	backends/brass/brass_compact.cc	/^merge_docid_keyed(const char * tablename,$/;"	f	namespace:BrassCompact
merge_docid_keyed	backends/chert/chert_compact.cc	/^merge_docid_keyed(const char * tablename,$/;"	f	namespace:ChertCompact
merge_docid_keyed	backends/flint/flint_compact.cc	/^merge_docid_keyed(const char * tablename,$/;"	f	namespace:FlintCompact
merge_doclen_changes	backends/brass/brass_postlist.cc	/^BrassPostListTable::merge_doclen_changes(const map<Xapian::docid, Xapian::termcount> & doclens)$/;"	f	class:BrassPostListTable
merge_filters	queryparser/queryparser_internal.cc	/^    Query merge_filters() const {$/;"	f	struct:ProbQuery
merge_postlists	backends/brass/brass_compact.cc	/^merge_postlists(Xapian::Compactor & compactor,$/;"	f	namespace:BrassCompact
merge_postlists	backends/chert/chert_compact.cc	/^merge_postlists(Xapian::Compactor & compactor,$/;"	f	namespace:ChertCompact
merge_postlists	backends/flint/flint_compact.cc	/^merge_postlists(Xapian::Compactor & compactor,$/;"	f	namespace:FlintCompact
merge_results	api/matchspy.cc	/^MatchSpy::merge_results(const string &) {$/;"	f	class:MatchSpy
merge_results	api/matchspy.cc	/^ValueCountMatchSpy::merge_results(const string & s) {$/;"	f	class:ValueCountMatchSpy
merge_spellings	backends/brass/brass_compact.cc	/^merge_spellings(BrassTable * out,$/;"	f	namespace:BrassCompact
merge_spellings	backends/chert/chert_compact.cc	/^merge_spellings(ChertTable * out,$/;"	f	namespace:ChertCompact
merge_spellings	backends/flint/flint_compact.cc	/^merge_spellings(FlintTable * out,$/;"	f	namespace:FlintCompact
merge_synonyms	backends/brass/brass_compact.cc	/^merge_synonyms(BrassTable * out,$/;"	f	namespace:BrassCompact
merge_synonyms	backends/chert/chert_compact.cc	/^merge_synonyms(ChertTable * out,$/;"	f	namespace:ChertCompact
merge_synonyms	backends/flint/flint_compact.cc	/^merge_synonyms(FlintTable * out,$/;"	f	namespace:FlintCompact
message	queryparser/lemon.c	/^  char *message;$/;"	m	struct:s_options	file:
message	tests/harness/fdtracker.h	/^    std::string message;$/;"	m	class:FDTracker
message_type	common/remoteprotocol.h	/^enum message_type {$/;"	g
metadata	backends/inmemory/inmemory_database.h	/^    std::map<string, string> metadata;$/;"	m	class:InMemoryDatabase
metadata	tests/harness/testrunner.h	/^    bool metadata;$/;"	m	class:TestRunner
metadata_keys_begin	api/omdatabase.cc	/^Database::metadata_keys_begin(const std::string &prefix) const$/;"	f	class:Xapian::Database
metadata_keys_end	include/xapian/database.h	/^	Xapian::TermIterator metadata_keys_end(const std::string & = std::string()) const {$/;"	f	class:Xapian::Database
mid_point	backends/brass/brass_table.cc	/^BrassTable::mid_point(byte * p)$/;"	f	class:BrassTable
mid_point	backends/chert/chert_table.cc	/^ChertTable::mid_point(byte * p)$/;"	f	class:ChertTable
mid_point	backends/flint/flint_table.cc	/^FlintTable::mid_point(byte * p)$/;"	f	class:FlintTable
minimum_size_type	queryparser/lemon.c	/^static const char *minimum_size_type(int lwr, int upr){$/;"	f	file:
minmax	matcher/orpostlist.h	/^        Xapian::weight lmax, rmax, minmax;$/;"	m	class:OrPostList
minor	queryparser/queryparser_internal.cc	/^  YYMINORTYPE minor;      \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor_version	api/version.cc	/^int minor_version() { return XAPIAN_MINOR_VERSION; }$/;"	f	namespace:Xapian
mkdir	common/safesysstat.h	/^inline int (mkdir)(const char *pathname, mode_t \/*mode*\/) {$/;"	f
mkdir	common/utils.h	/^inline int mkdir(const string &filename, mode_t mode) {$/;"	f
mkdir_p	Makefile	/^mkdir_p = $(top_builddir)\/.\/install-sh -c -d$/;"	m
mkdir_p	docs/Makefile	/^mkdir_p = $(top_builddir)\/.\/install-sh -c -d$/;"	m
mkdir_p	tests/Makefile	/^mkdir_p = $(top_builddir)\/.\/install-sh -c -d$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	docs/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	tests/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mktmpdir	tests/api_replicate.cc	/^static void mktmpdir(const string & path) {$/;"	f	file:
mnAction	queryparser/lemon.c	/^  int mnAction;                \/* Action associated with mnLookahead *\/$/;"	m	struct:acttab	file:
mnLookahead	queryparser/lemon.c	/^  int mnLookahead;             \/* Minimum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
mod_plists	backends/chert/chert_database.h	/^				pair<char, Xapian::termcount> > > mod_plists;$/;"	m	class:ChertWritableDatabase
mod_plists	backends/flint/flint_database.h	/^				pair<char, Xapian::termcount> > > mod_plists;$/;"	m	class:FlintWritableDatabase
mode	languages/compiler/header.h	/^    int mode;                   \/*    )_  for routines, externals *\/$/;"	m	struct:name
mode	languages/compiler/header.h	/^    int mode;$/;"	m	struct:analyser
mode	languages/compiler/header.h	/^    int mode;$/;"	m	struct:node
modifications_failed	backends/brass/brass_database.cc	/^BrassDatabase::modifications_failed(brass_revision_number_t old_revision,$/;"	f	class:BrassDatabase
modifications_failed	backends/chert/chert_database.cc	/^ChertDatabase::modifications_failed(chert_revision_number_t old_revision,$/;"	f	class:ChertDatabase
modifications_failed	backends/flint/flint_database.cc	/^FlintDatabase::modifications_failed(flint_revision_number_t old_revision,$/;"	f	class:FlintDatabase
modified	common/document.h	/^	bool modified() const {$/;"	f	class:Xapian::Document::Internal
modify_shortcut_docid	backends/brass/brass_database.h	/^	mutable Xapian::docid modify_shortcut_docid;$/;"	m	class:BrassWritableDatabase
modify_shortcut_docid	backends/chert/chert_database.h	/^	mutable Xapian::docid modify_shortcut_docid;$/;"	m	class:ChertWritableDatabase
modify_shortcut_docid	backends/flint/flint_database.h	/^	mutable Xapian::docid modify_shortcut_docid;$/;"	m	class:FlintWritableDatabase
modify_shortcut_document	backends/brass/brass_database.h	/^	mutable Xapian::Document::Internal * modify_shortcut_document;$/;"	m	class:BrassWritableDatabase
modify_shortcut_document	backends/chert/chert_database.h	/^	mutable Xapian::Document::Internal * modify_shortcut_document;$/;"	m	class:ChertWritableDatabase
modify_shortcut_document	backends/flint/flint_database.h	/^	mutable Xapian::Document::Internal * modify_shortcut_document;$/;"	m	class:FlintWritableDatabase
modifyable	languages/compiler/header.h	/^    byte modifyable;          \/* false inside reverse(...) *\/$/;"	m	struct:analyser
mods	backends/chert/chert_modifiedpostlist.h	/^    map<Xapian::docid, pair<char, Xapian::termcount> > mods;$/;"	m	class:ChertModifiedPostList
mods	backends/flint/flint_modifiedpostlist.h	/^    map<Xapian::docid, pair<char, Xapian::termcount> > mods;$/;"	m	class:FlintModifiedPostList
move_forward_in_chunk_to_at_least	backends/brass/brass_postlist.cc	/^BrassPostList::move_forward_in_chunk_to_at_least(Xapian::docid desired_did)$/;"	f	class:BrassPostList
move_forward_in_chunk_to_at_least	backends/chert/chert_postlist.cc	/^ChertPostList::move_forward_in_chunk_to_at_least(Xapian::docid desired_did)$/;"	f	class:ChertPostList
move_forward_in_chunk_to_at_least	backends/flint/flint_postlist.cc	/^FlintPostList::move_forward_in_chunk_to_at_least(Xapian::docid desired_did)$/;"	f	class:FlintPostList
move_to_b	languages/compiler/space.c	/^extern symbol * move_to_b(symbol * p, int n, symbol * q) {$/;"	f
move_to_chunk_containing	backends/brass/brass_postlist.cc	/^BrassPostList::move_to_chunk_containing(Xapian::docid desired_did)$/;"	f	class:BrassPostList
move_to_chunk_containing	backends/chert/chert_postlist.cc	/^ChertPostList::move_to_chunk_containing(Xapian::docid desired_did)$/;"	f	class:ChertPostList
move_to_chunk_containing	backends/flint/flint_postlist.cc	/^FlintPostList::move_to_chunk_containing(Xapian::docid desired_did)$/;"	f	class:FlintPostList
mru_slot	backends/brass/brass_values.h	/^    mutable Xapian::valueno mru_slot;$/;"	m	class:BrassValueManager
mru_slot	backends/chert/chert_values.h	/^    mutable Xapian::valueno mru_slot;$/;"	m	class:ChertValueManager
mru_slot	common/remote-database.h	/^    mutable Xapian::valueno mru_slot;$/;"	m	class:RemoteDatabase
mru_valstats	backends/brass/brass_values.h	/^    mutable ValueStats mru_valstats;$/;"	m	class:BrassValueManager
mru_valstats	backends/chert/chert_values.h	/^    mutable ValueStats mru_valstats;$/;"	m	class:ChertValueManager
mru_valstats	common/remote-database.h	/^    mutable ValueStats mru_valstats;$/;"	m	class:RemoteDatabase
mset	include/xapian/enquire.h	/^	MSet mset;$/;"	m	class:Xapian::MSetIterator
mset_cmp	matcher/msetcmp.h	/^typedef bool (* mset_cmp)(const Xapian::Internal::MSetItem &,$/;"	t
mset_cmp_table	matcher/msetcmp.cc	/^static mset_cmp mset_cmp_table[] = {$/;"	v	file:
mset_expect_order	tests/harness/testutils.cc	/^mset_expect_order(const Xapian::MSet &A,$/;"	f
mset_expect_order_	tests/harness/testutils.cc	/^mset_expect_order_(const Xapian::MSet &A, bool beginning,$/;"	f	file:
mset_internal	matcher/msetpostlist.h	/^    Xapian::Internal::RefCntPtr<Xapian::MSet::Internal> mset_internal;$/;"	m	class:MSetPostList
mset_range_is_same	tests/harness/testutils.cc	/^mset_range_is_same(const Xapian::MSet &mset1, unsigned int first1,$/;"	f
mset_range_is_same_weights	tests/harness/testutils.cc	/^mset_range_is_same_weights(const Xapian::MSet &mset1, unsigned int first1,$/;"	f
msetcmp_by_did	matcher/msetcmp.cc	/^msetcmp_by_did(const Xapian::Internal::MSetItem &a,$/;"	f
msetcmp_by_relevance	matcher/msetcmp.cc	/^msetcmp_by_relevance(const Xapian::Internal::MSetItem &a,$/;"	f
msetcmp_by_relevance_then_value	matcher/msetcmp.cc	/^msetcmp_by_relevance_then_value(const Xapian::Internal::MSetItem &a,$/;"	f
msetcmp_by_value	matcher/msetcmp.cc	/^msetcmp_by_value(const Xapian::Internal::MSetItem &a,$/;"	f
msetcmp_by_value_then_relevance	matcher/msetcmp.cc	/^msetcmp_by_value_then_relevance(const Xapian::Internal::MSetItem &a,$/;"	f
msg	include/xapian/error.h	/^    std::string msg;$/;"	m	class:Xapian::Error
msg_adddocument	net/remoteserver.cc	/^RemoteServer::msg_adddocument(const string & message)$/;"	f	class:RemoteServer
msg_addspelling	net/remoteserver.cc	/^RemoteServer::msg_addspelling(const string & message)$/;"	f	class:RemoteServer
msg_allterms	net/remoteserver.cc	/^RemoteServer::msg_allterms(const string &message)$/;"	f	class:RemoteServer
msg_cancel	net/remoteserver.cc	/^RemoteServer::msg_cancel(const string &)$/;"	f	class:RemoteServer
msg_collfreq	net/remoteserver.cc	/^RemoteServer::msg_collfreq(const string &term)$/;"	f	class:RemoteServer
msg_commit	net/remoteserver.cc	/^RemoteServer::msg_commit(const string &)$/;"	f	class:RemoteServer
msg_deletedocument	net/remoteserver.cc	/^RemoteServer::msg_deletedocument(const string & message)$/;"	f	class:RemoteServer
msg_deletedocumentterm	net/remoteserver.cc	/^RemoteServer::msg_deletedocumentterm(const string & message)$/;"	f	class:RemoteServer
msg_doclength	net/remoteserver.cc	/^RemoteServer::msg_doclength(const string &message)$/;"	f	class:RemoteServer
msg_document	net/remoteserver.cc	/^RemoteServer::msg_document(const string &message)$/;"	f	class:RemoteServer
msg_getmetadata	net/remoteserver.cc	/^RemoteServer::msg_getmetadata(const string & message)$/;"	f	class:RemoteServer
msg_keepalive	net/remoteserver.cc	/^RemoteServer::msg_keepalive(const string &)$/;"	f	class:RemoteServer
msg_openmetadatakeylist	net/remoteserver.cc	/^RemoteServer::msg_openmetadatakeylist(const string & message)$/;"	f	class:RemoteServer
msg_positionlist	net/remoteserver.cc	/^RemoteServer::msg_positionlist(const string &message)$/;"	f	class:RemoteServer
msg_postlist	net/remoteserver.cc	/^RemoteServer::msg_postlist(const string &message)$/;"	f	class:RemoteServer
msg_query	net/remoteserver.cc	/^RemoteServer::msg_query(const string &message_in)$/;"	f	class:RemoteServer
msg_removespelling	net/remoteserver.cc	/^RemoteServer::msg_removespelling(const string & message)$/;"	f	class:RemoteServer
msg_reopen	net/remoteserver.cc	/^RemoteServer::msg_reopen(const string & msg)$/;"	f	class:RemoteServer
msg_replacedocument	net/remoteserver.cc	/^RemoteServer::msg_replacedocument(const string & message)$/;"	f	class:RemoteServer
msg_replacedocumentterm	net/remoteserver.cc	/^RemoteServer::msg_replacedocumentterm(const string & message)$/;"	f	class:RemoteServer
msg_setmetadata	net/remoteserver.cc	/^RemoteServer::msg_setmetadata(const string & message)$/;"	f	class:RemoteServer
msg_termexists	net/remoteserver.cc	/^RemoteServer::msg_termexists(const string &term)$/;"	f	class:RemoteServer
msg_termfreq	net/remoteserver.cc	/^RemoteServer::msg_termfreq(const string &term)$/;"	f	class:RemoteServer
msg_termlist	net/remoteserver.cc	/^RemoteServer::msg_termlist(const string &message)$/;"	f	class:RemoteServer
msg_update	net/remoteserver.cc	/^RemoteServer::msg_update(const string &)$/;"	f	class:RemoteServer
msg_valuestats	net/remoteserver.cc	/^RemoteServer::msg_valuestats(const string & message)$/;"	f	class:RemoteServer
msg_writeaccess	net/remoteserver.cc	/^RemoteServer::msg_writeaccess(const string & msg)$/;"	f	class:RemoteServer
msort	queryparser/lemon.c	/^static char *msort($/;"	f	file:
msvc_posix_open	common/msvc_posix_wrapper.cc	/^msvc_posix_open(const char *filename, int flags)$/;"	f
msvc_posix_rename	common/msvc_posix_wrapper.cc	/^int msvc_posix_rename(const char *from, const char *to)$/;"	f
msvc_posix_unlink	common/msvc_posix_wrapper.cc	/^msvc_posix_unlink(const char * filename)$/;"	f
msvc_set_errno_from_getlasterror	common/msvc_posix_wrapper.cc	/^msvc_set_errno_from_getlasterror()$/;"	f	file:
multi	tests/harness/testrunner.h	/^    bool multi;$/;"	m	class:TestRunner
multimerge_postlists	backends/brass/brass_compact.cc	/^multimerge_postlists(Xapian::Compactor & compactor,$/;"	f	namespace:BrassCompact
multimerge_postlists	backends/chert/chert_compact.cc	/^multimerge_postlists(Xapian::Compactor & compactor,$/;"	f	namespace:ChertCompact
multimerge_postlists	backends/flint/flint_compact.cc	/^multimerge_postlists(Xapian::Compactor & compactor,$/;"	f	namespace:FlintCompact
multipass	api/compactor.cc	/^    bool multipass;$/;"	m	class:Xapian::Compactor::Internal	file:
multiplier	backends/multi/multi_postlist.h	/^	Xapian::doccount multiplier;$/;"	m	class:MultiPostList
multiplier	common/expandweight.h	/^    Xapian::weight multiplier;$/;"	m	class:Xapian::Internal::ExpandStats
multiplier	common/multivaluelist.h	/^    size_t multiplier;$/;"	m	class:MultiValueList
munge_term	tests/harness/index_utils.cc	/^munge_term(const string &term)$/;"	f
mutex	common/tcpserver.h	/^    HANDLE mutex;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
mxLookahead	queryparser/lemon.c	/^  int mxLookahead;             \/* Maximum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
myExpandFunctor	tests/api_anydb.cc	/^class myExpandFunctor : public Xapian::ExpandDecider {$/;"	c	file:
myMatchDecider	tests/api_db.cc	/^class myMatchDecider : public Xapian::MatchDecider {$/;"	c	file:
myMatchDecider2	tests/api_db.cc	/^class myMatchDecider2 : public Xapian::MatchDecider {$/;"	c	file:
my_errno	include/xapian/error.h	/^    int my_errno;$/;"	m	class:Xapian::Error
my_fls	common/bitstream.cc	/^inline int my_fls(unsigned mask)$/;"	f
mypos	common/inmemory_positionlist.h	/^	vector<Xapian::termpos>::const_iterator mypos;$/;"	m	class:InMemoryPositionList
mypositions	backends/inmemory/inmemory_database.h	/^	InMemoryPositionList mypositions;$/;"	m	class:InMemoryPostList
n	backends/brass/brass_cursor.h	/^	uint4 n;$/;"	m	class:Brass::Cursor
n	backends/chert/chert_cursor.h	/^	uint4 n;$/;"	m	class:Cursor
n	backends/flint/flint_cursor.h	/^	uint4 n;$/;"	m	class:Cursor_
n	tests/api_unicode.cc	/^    unsigned long n;$/;"	m	struct:testcase2	file:
nAction	queryparser/lemon.c	/^  int nAction;                 \/* Number of used slots in aAction[] *\/$/;"	m	struct:acttab	file:
nAction	queryparser/lemon.c	/^  int nAction;         \/* Number of actions *\/$/;"	m	struct:axset	file:
nActionAlloc	queryparser/lemon.c	/^  int nActionAlloc;            \/* Slots allocated for aAction[] *\/$/;"	m	struct:acttab	file:
nDefine	queryparser/lemon.c	/^static int nDefine = 0;      \/* Number of -D options on the command line *\/$/;"	v	file:
nLookahead	queryparser/lemon.c	/^  int nLookahead;              \/* Used slots in aLookahead[] *\/$/;"	m	struct:acttab	file:
nLookaheadAlloc	queryparser/lemon.c	/^  int nLookaheadAlloc;         \/* Slots allocated in aLookahead[] *\/$/;"	m	struct:acttab	file:
nNtAct	queryparser/lemon.c	/^  int nTknAct, nNtAct;     \/* Number of actions on terminals and nonterminals *\/$/;"	m	struct:state	file:
nTknAct	queryparser/lemon.c	/^  int nTknAct, nNtAct;     \/* Number of actions on terminals and nonterminals *\/$/;"	m	struct:state	file:
n_bits	common/bitstream.h	/^    int n_bits;$/;"	m	class:Xapian::BitReader
n_bits	common/bitstream.h	/^    int n_bits;$/;"	m	class:Xapian::BitWriter
n_flag_tab	examples/quest.cc	/^const int n_flag_tab = sizeof(flag_tab) \/ sizeof(flag_tab[0]);$/;"	v
n_kids	matcher/multiandpostlist.h	/^    size_t n_kids;$/;"	m	class:MultiAndPostList
n_kids	matcher/multixorpostlist.h	/^    size_t n_kids;$/;"	m	class:MultiXorPostList
n_op_tab	examples/quest.cc	/^const int n_op_tab = sizeof(op_tab) \/ sizeof(op_tab[0]);$/;"	v
n_wt_tab	examples/quest.cc	/^const int n_wt_tab = sizeof(wt_tab) \/ sizeof(wt_tab[0]);$/;"	v
name	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::name() const {$/;"	f	class:DecreasingValueWeightPostingSource
name	api/matchspy.cc	/^MatchSpy::name() const {$/;"	f	class:MatchSpy
name	api/matchspy.cc	/^ValueCountMatchSpy::name() const {$/;"	f	class:ValueCountMatchSpy
name	api/postingsource.cc	/^FixedWeightPostingSource::name() const$/;"	f	class:Xapian::FixedWeightPostingSource
name	api/postingsource.cc	/^PostingSource::name() const$/;"	f	class:Xapian::PostingSource
name	api/postingsource.cc	/^ValueMapPostingSource::name() const$/;"	f	class:Xapian::ValueMapPostingSource
name	api/postingsource.cc	/^ValueWeightPostingSource::name() const$/;"	f	class:Xapian::ValueWeightPostingSource
name	backends/brass/brass_table.h	/^	std::string name;$/;"	m	class:BrassTable
name	backends/chert/chert_table.h	/^	std::string name;$/;"	m	class:ChertTable
name	backends/flint/flint_table.h	/^	std::string name;$/;"	m	class:FlintTable
name	common/gnu_getopt.h	/^    const char *name;$/;"	m	struct:option
name	common/msvc_dirent.cc	/^    char                *name;  \/* null-terminated char string *\/$/;"	m	struct:DIR	file:
name	languages/compiler/header.h	/^    char * name;$/;"	m	struct:options
name	languages/compiler/header.h	/^    struct name * name;       \/* so g->name->grouping == g *\/$/;"	m	struct:grouping	typeref:struct:grouping::name
name	languages/compiler/header.h	/^    struct name * name;$/;"	m	struct:node	typeref:struct:node::name
name	languages/compiler/header.h	/^    symbol * name;$/;"	m	struct:m_pair
name	languages/compiler/header.h	/^struct name {$/;"	s
name	queryparser/lemon.c	/^  char *name;              \/* Name of the generated parser *\/$/;"	m	struct:lemon	file:
name	queryparser/lemon.c	/^  char *name;              \/* Name of the symbol *\/$/;"	m	struct:symbol	file:
name	queryparser/queryparser_internal.cc	/^    string name;$/;"	m	class:Term	file:
name	tests/api_db.cc	/^    std::string name() const { return "MyWeight"; }$/;"	f	class:MyWeight
name	tests/api_serialise.cc	/^    std::string name() const {$/;"	f	class:MyPostingSource2
name	tests/api_serialise.cc	/^    string name() const {$/;"	f	class:ExceptionalMatchSpy
name	tests/api_serialise.cc	/^    string name() const {$/;"	f	class:ExceptionalPostingSource
name	tests/api_serialise.cc	/^    string name() const {$/;"	f	class:ExceptionalWeight
name	tests/harness/testrunner.cc	/^    const char * name;$/;"	m	struct:BackendProperties	file:
name	tests/harness/testsuite.h	/^    const char *name;$/;"	m	struct:test_desc
name	weight/bm25weight.cc	/^BM25Weight::name() const$/;"	f	class:Xapian::BM25Weight
name	weight/boolweight.cc	/^BoolWeight::name() const$/;"	f	class:Xapian::BoolWeight
name	weight/tradweight.cc	/^TradWeight::name() const$/;"	f	class:Xapian::TradWeight
name	weight/weight.cc	/^Weight::name() const$/;"	f	class:Xapian::Weight
name_count	languages/compiler/header.h	/^    int name_count[t_size];   \/* name_count[i] counts the number of names of type i *\/$/;"	m	struct:analyser
name_of_mode	languages/compiler/analyser.c	/^static char * name_of_mode(int n) {$/;"	f	file:
name_of_token	languages/compiler/tokeniser.c	/^extern byte * name_of_token(int code) {$/;"	f
name_of_type	languages/compiler/analyser.c	/^static char * name_of_type(int n) {$/;"	f	file:
name_to_node	languages/compiler/analyser.c	/^static void name_to_node(struct analyser * a, struct node * p, int type) {$/;"	f	file:
name_types	languages/compiler/header.h	/^enum name_types {$/;"	g
names	languages/compiler/header.h	/^    struct name * names;$/;"	m	struct:analyser	typeref:struct:analyser::name
namespaces	docs/apidoc/html/compactor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/database_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/dbfactory_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/document_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/enquire_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/error_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/errorhandler_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/expanddecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/keymaker_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/matchspy_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/positioniterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/postingiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/postingsource_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/queryparser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/registry_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/stem_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/termgenerator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/termiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/types_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/valueiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/valuesetmatchdecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/weight_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/apidoc/html/xapian_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
nconflict	queryparser/lemon.c	/^  int nconflict;           \/* Number of parsing conflicts *\/$/;"	m	struct:lemon	file:
need_copy_next	api/replication.cc	/^    bool need_copy_next;$/;"	m	class:DatabaseReplica::Internal	file:
need_doclength	common/leafpostlist.h	/^    bool need_doclength;$/;"	m	class:LeafPostList
need_explicit_dependencies	xapian-config	/^need_explicit_dependencies()$/;"	f
need_positions	queryparser/queryparser_internal.cc	/^    void need_positions() {$/;"	f	class:Term
need_stat	include/xapian/weight.h	/^    void need_stat(stat_flags flag) {$/;"	f	class:Xapian::Weight
need_terms	api/omdocument.cc	/^Xapian::Document::Internal::need_terms() const$/;"	f	class:Xapian::Document::Internal
need_values	api/omdocument.cc	/^Xapian::Document::Internal::need_values() const$/;"	f	class:Xapian::Document::Internal
nested-classes	docs/apidoc/html/compactor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/database_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/document_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/enquire_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/error_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/errorhandler_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/expanddecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/keymaker_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/matchspy_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/positioniterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/postingiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/postingsource_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/queryparser_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/registry_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/stem_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/termgenerator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/termiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/unicode_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/valueiterator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/valuesetmatchdecider_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/apidoc/html/weight_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
new_first_did	backends/brass/brass_values.cc	/^    Xapian::docid new_first_did;$/;"	m	class:Brass::ValueUpdater	file:
new_first_did	backends/chert/chert_values.cc	/^    Xapian::docid new_first_did;$/;"	m	class:ValueUpdater	file:
new_label	languages/compiler/generator.c	/^static int new_label(struct generator * g) {$/;"	f	file:
new_literalstring	languages/compiler/analyser.c	/^static symbol * new_literalstring(struct analyser * a) {$/;"	f	file:
new_min	matcher/multiandpostlist.h	/^    Xapian::weight new_min(Xapian::weight w_min, size_t n) {$/;"	f	class:MultiAndPostList
new_node	languages/compiler/analyser.c	/^static struct node * new_node(struct analyser * a, int type) {$/;"	f	file:
new_subdb	matcher/valuestreamdocument.cc	/^ValueStreamDocument::new_subdb(int n)$/;"	f	class:ValueStreamDocument
newconfig	queryparser/lemon.c	/^PRIVATE struct config *newconfig(){$/;"	f
next	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::next(Xapian::weight min_wt) {$/;"	f	class:DecreasingValueWeightPostingSource
next	api/documentvaluelist.cc	/^DocumentValueList::next()$/;"	f	class:DocumentValueList
next	api/emptypostlist.cc	/^EmptyPostList::next(Xapian::weight)$/;"	f	class:EmptyPostList
next	api/maptermlist.h	/^	TermList * next() {$/;"	f	class:MapTermList
next	api/matchspy.cc	/^    TermList * next() {$/;"	f	class:StringAndFreqTermList
next	api/matchspy.cc	/^    TermList * next() {$/;"	f	class:ValueCountTermList
next	api/postingsource.cc	/^FixedWeightPostingSource::next(Xapian::weight min_wt)$/;"	f	class:Xapian::FixedWeightPostingSource
next	api/postingsource.cc	/^ValuePostingSource::next(Xapian::weight min_wt)$/;"	f	class:Xapian::ValuePostingSource
next	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::next()$/;"	f	class:BrassAllTermsList
next	backends/brass/brass_compact.cc	/^    bool next() {$/;"	f	class:BrassCompact::PostlistCursor
next	backends/brass/brass_cursor.cc	/^BrassCursor::next()$/;"	f	class:BrassCursor
next	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::next()$/;"	f	class:BrassMetadataTermList
next	backends/brass/brass_positionlist.cc	/^BrassPositionList::next()$/;"	f	class:BrassPositionList
next	backends/brass/brass_postlist.cc	/^BrassPostList::next(Xapian::weight w_min)$/;"	f	class:BrassPostList
next	backends/brass/brass_postlist.cc	/^PostlistChunkReader::next()$/;"	f	class:PostlistChunkReader
next	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::next()$/;"	f	class:BrassSpellingTermList
next	backends/brass/brass_spellingwordslist.cc	/^BrassSpellingWordsList::next()$/;"	f	class:BrassSpellingWordsList
next	backends/brass/brass_synonym.cc	/^BrassSynonymTermList::next()$/;"	f	class:BrassSynonymTermList
next	backends/brass/brass_table.h	/^	bool next(Brass::Cursor *C_, int j) const {$/;"	f	class:BrassTable
next	backends/brass/brass_termlist.cc	/^BrassTermList::next()$/;"	f	class:BrassTermList
next	backends/brass/brass_valuelist.cc	/^BrassValueList::next()$/;"	f	class:BrassValueList
next	backends/brass/brass_values.cc	/^ValueChunkReader::next()$/;"	f	class:ValueChunkReader
next	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::next(Xapian::weight w_min)$/;"	f	class:ChertAllDocsModifiedPostList
next	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::next()$/;"	f	class:ChertAllTermsList
next	backends/chert/chert_compact.cc	/^    bool next() {$/;"	f	class:ChertCompact::PostlistCursor
next	backends/chert/chert_cursor.cc	/^ChertCursor::next()$/;"	f	class:ChertCursor
next	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::next()$/;"	f	class:ChertMetadataTermList
next	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::next(Xapian::weight w_min)$/;"	f	class:ChertModifiedPostList
next	backends/chert/chert_positionlist.cc	/^ChertPositionList::next()$/;"	f	class:ChertPositionList
next	backends/chert/chert_postlist.cc	/^ChertPostList::next(Xapian::weight w_min)$/;"	f	class:ChertPostList
next	backends/chert/chert_postlist.cc	/^PostlistChunkReader::next()$/;"	f	class:PostlistChunkReader
next	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::next()$/;"	f	class:ChertSpellingTermList
next	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::next()$/;"	f	class:ChertSpellingWordsList
next	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::next()$/;"	f	class:ChertSynonymTermList
next	backends/chert/chert_table.h	/^	bool next(Cursor *C_, int j) const {$/;"	f	class:ChertTable
next	backends/chert/chert_termlist.cc	/^ChertTermList::next()$/;"	f	class:ChertTermList
next	backends/chert/chert_valuelist.cc	/^ChertValueList::next()$/;"	f	class:ChertValueList
next	backends/chert/chert_values.cc	/^ValueChunkReader::next()$/;"	f	class:ValueChunkReader
next	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::next(Xapian::weight)$/;"	f	class:ContiguousAllDocsPostList
next	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::next(Xapian::weight \/*w_min*\/)$/;"	f	class:FlintAllDocsPostList
next	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::next()$/;"	f	class:FlintAllTermsList
next	backends/flint/flint_compact.cc	/^    bool next() {$/;"	f	class:FlintCompact::PostlistCursor
next	backends/flint/flint_cursor.cc	/^FlintCursor::next()$/;"	f	class:FlintCursor
next	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::next()$/;"	f	class:FlintMetadataTermList
next	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::next(Xapian::weight w_min)$/;"	f	class:FlintModifiedPostList
next	backends/flint/flint_positionlist.cc	/^FlintPositionList::next()$/;"	f	class:FlintPositionList
next	backends/flint/flint_postlist.cc	/^FlintPostList::next(Xapian::weight w_min)$/;"	f	class:FlintPostList
next	backends/flint/flint_postlist.cc	/^FlintPostlistChunkReader::next()$/;"	f	class:FlintPostlistChunkReader
next	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::next()$/;"	f	class:FlintSpellingTermList
next	backends/flint/flint_spellingwordslist.cc	/^FlintSpellingWordsList::next()$/;"	f	class:FlintSpellingWordsList
next	backends/flint/flint_synonym.cc	/^FlintSynonymTermList::next()$/;"	f	class:FlintSynonymTermList
next	backends/flint/flint_table.h	/^	bool next(Cursor_ *C_, int j) const {$/;"	f	class:FlintTable
next	backends/flint/flint_termlist.cc	/^FlintTermList::next()$/;"	f	class:FlintTermList
next	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::next()$/;"	f	class:InMemoryAllTermsList
next	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::next(Xapian::weight \/*w_min*\/)$/;"	f	class:InMemoryAllDocsPostList
next	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::next(Xapian::weight \/*w_min*\/)$/;"	f	class:InMemoryPostList
next	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::next()$/;"	f	class:InMemoryTermList
next	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::next()$/;"	f	class:InMemoryPositionList
next	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::next()$/;"	f	class:MultiAllTermsList
next	backends/multi/multi_postlist.cc	/^MultiPostList::next(Xapian::weight w_min)$/;"	f	class:MultiPostList
next	backends/multi/multi_termlist.cc	/^TermList * MultiTermList::next()$/;"	f	class:MultiTermList
next	backends/multi/multi_valuelist.cc	/^    void next() {$/;"	f	struct:SubValueList
next	backends/multi/multi_valuelist.cc	/^MultiValueList::next()$/;"	f	class:MultiValueList
next	backends/remote/net_postlist.cc	/^NetworkPostList::next(Xapian::weight)$/;"	f	class:NetworkPostList
next	backends/remote/net_termlist.cc	/^NetworkTermList::next()$/;"	f	class:NetworkTermList
next	backends/slowvaluelist.cc	/^SlowValueList::next()$/;"	f	class:SlowValueList
next	common/postlist.h	/^    Internal * next() { return next(0.0); }$/;"	f	class:Xapian::PostingIterator::Internal
next	common/vectortermlist.h	/^	TermList * next() {$/;"	f	class:VectorTermList
next	expand/ortermlist.cc	/^OrTermList::next()$/;"	f	class:OrTermList
next	languages/compiler/header.h	/^    struct among * next;$/;"	m	struct:among	typeref:struct:among::among
next	languages/compiler/header.h	/^    struct grouping * next;$/;"	m	struct:grouping	typeref:struct:grouping::grouping
next	languages/compiler/header.h	/^    struct include * next;$/;"	m	struct:include	typeref:struct:include::include
next	languages/compiler/header.h	/^    struct input * next;$/;"	m	struct:input	typeref:struct:input::input
next	languages/compiler/header.h	/^    struct input * next;$/;"	m	struct:tokeniser	typeref:struct:tokeniser::input
next	languages/compiler/header.h	/^    struct literalstring * next;$/;"	m	struct:literalstring	typeref:struct:literalstring::literalstring
next	languages/compiler/header.h	/^    struct m_pair * next;$/;"	m	struct:m_pair	typeref:struct:m_pair::m_pair
next	languages/compiler/header.h	/^    struct name * next;$/;"	m	struct:name	typeref:struct:name::name
next	languages/compiler/header.h	/^    struct node * next;$/;"	m	struct:node	typeref:struct:node::node
next	matcher/andmaybepostlist.cc	/^AndMaybePostList::next(Xapian::weight w_min)$/;"	f	class:AndMaybePostList
next	matcher/andnotpostlist.cc	/^AndNotPostList::next(Xapian::weight w_min)$/;"	f	class:AndNotPostList
next	matcher/externalpostlist.cc	/^ExternalPostList::next(Xapian::weight w_min)$/;"	f	class:ExternalPostList
next	matcher/extraweightpostlist.h	/^	PostList *next(Xapian::weight w_min) {$/;"	f	class:ExtraWeightPostList
next	matcher/mergepostlist.cc	/^MergePostList::next(Xapian::weight w_min)$/;"	f	class:MergePostList
next	matcher/msetpostlist.cc	/^MSetPostList::next(Xapian::weight w_min)$/;"	f	class:MSetPostList
next	matcher/multiandpostlist.cc	/^MultiAndPostList::next(Xapian::weight w_min)$/;"	f	class:MultiAndPostList
next	matcher/multixorpostlist.cc	/^MultiXorPostList::next(Xapian::weight w_min)$/;"	f	class:MultiXorPostList
next	matcher/orpostlist.cc	/^OrPostList::next(Xapian::weight w_min)$/;"	f	class:OrPostList
next	matcher/selectpostlist.cc	/^SelectPostList::next(Xapian::weight w_min)$/;"	f	class:SelectPostList
next	matcher/synonympostlist.cc	/^SynonymPostList::next(Xapian::weight w_min)$/;"	f	class:SynonymPostList
next	matcher/valuegepostlist.cc	/^ValueGePostList::next(Xapian::weight)$/;"	f	class:ValueGePostList
next	matcher/valuerangepostlist.cc	/^ValueRangePostList::next(Xapian::weight)$/;"	f	class:ValueRangePostList
next	queryparser/lemon.c	/^  struct action *next;     \/* Next action for this state *\/$/;"	m	struct:action	typeref:struct:action::action	file:
next	queryparser/lemon.c	/^  struct config *next;     \/* Next configuration in the state *\/$/;"	m	struct:config	typeref:struct:config::config	file:
next	queryparser/lemon.c	/^  struct plink *next;      \/* The next propagate link *\/$/;"	m	struct:plink	typeref:struct:plink::plink	file:
next	queryparser/lemon.c	/^  struct rule *next;       \/* Next rule in the global list *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
next	queryparser/lemon.c	/^  struct s_x1node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
next	queryparser/lemon.c	/^  struct s_x2node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
next	queryparser/lemon.c	/^  struct s_x3node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
next	queryparser/lemon.c	/^  struct s_x4node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
next	tests/api_percentages.cc	/^    void next(Xapian::weight \/*wt*\/) {$/;"	f	class:MyPostingSource
next	tests/api_postingsource.cc	/^    void next(Xapian::weight wt) {$/;"	f	class:MyDontAskWeightPostingSource
next	tests/api_postingsource.cc	/^    void next(Xapian::weight wt) {$/;"	f	class:MyOddPostingSource
next	tests/api_postingsource.cc	/^    void next(Xapian::weight wt) {$/;"	f	class:MyOddWeightingPostingSource
next	tests/api_postingsource.cc	/^    void next(Xapian::weight) {$/;"	f	class:ChangeMaxweightPostingSource
next	tests/api_serialise.cc	/^    void next(Xapian::weight) { }$/;"	f	class:ExceptionalPostingSource
next	tests/harness/index_utils.cc	/^FileIndexer::next()$/;"	f	class:FileIndexer
next_best_weight	matcher/collapser.h	/^    Xapian::weight next_best_weight;$/;"	m	class:CollapseData
next_char	languages/compiler/tokeniser.c	/^static int next_char(struct tokeniser * t) {$/;"	f	file:
next_chunk	backends/brass/brass_postlist.cc	/^BrassPostList::next_chunk()$/;"	f	class:BrassPostList
next_chunk	backends/chert/chert_postlist.cc	/^ChertPostList::next_chunk()$/;"	f	class:ChertPostList
next_chunk	backends/flint/flint_postlist.cc	/^FlintPostList::next_chunk()$/;"	f	class:FlintPostList
next_default	backends/brass/brass_table.cc	/^BrassTable::next_default(Brass::Cursor * C_, int j) const$/;"	f	class:BrassTable
next_default	backends/chert/chert_table.cc	/^ChertTable::next_default(Cursor * C_, int j) const$/;"	f	class:ChertTable
next_default	backends/flint/flint_table.cc	/^FlintTable::next_default(Cursor_ * C_, int j) const$/;"	f	class:FlintTable
next_file	tests/harness/index_utils.cc	/^FileIndexer::next_file()$/;"	f	class:FileIndexer
next_for_sequential	backends/brass/brass_table.cc	/^BrassTable::next_for_sequential(Brass::Cursor * C_, int \/*dummy*\/) const$/;"	f	class:BrassTable
next_for_sequential	backends/chert/chert_table.cc	/^ChertTable::next_for_sequential(Cursor * C_, int \/*dummy*\/) const$/;"	f	class:ChertTable
next_for_sequential	backends/flint/flint_table.cc	/^FlintTable::next_for_sequential(Cursor_ * C_, int \/*dummy*\/) const$/;"	f	class:FlintTable
next_free_block	backends/brass/brass_btreebase.cc	/^BrassTable_base::next_free_block()$/;"	f	class:BrassTable_base
next_free_block	backends/chert/chert_btreebase.cc	/^ChertTable_base::next_free_block()$/;"	f	class:ChertTable_base
next_free_block	backends/flint/flint_btreebase.cc	/^FlintTable_base::next_free_block()$/;"	f	class:FlintTable_base
next_handling_prune	matcher/branchpostlist.h	/^next_handling_prune(PostList * & pl, Xapian::weight w_min,$/;"	f
next_helper	matcher/multiandpostlist.h	/^    void next_helper(size_t n, Xapian::weight w_min) {$/;"	f	class:MultiAndPostList
next_in_chunk	backends/brass/brass_postlist.cc	/^BrassPostList::next_in_chunk()$/;"	f	class:BrassPostList
next_in_chunk	backends/chert/chert_postlist.cc	/^ChertPostList::next_in_chunk()$/;"	f	class:ChertPostList
next_in_chunk	backends/flint/flint_postlist.cc	/^FlintPostList::next_in_chunk()$/;"	f	class:FlintPostList
next_label	languages/compiler/header.h	/^    int next_label;$/;"	m	struct:generator
next_real_char	languages/compiler/tokeniser.c	/^static int next_real_char(struct tokeniser * t) {$/;"	f	file:
next_symbol	languages/compiler/analyser.c	/^static int next_symbol(symbol * p, symbol * W, int utf8) {$/;"	f	file:
next_token	languages/compiler/tokeniser.c	/^static int next_token(struct tokeniser * t) {$/;"	f	file:
nextchar	common/getopt.cc	/^static char *nextchar;$/;"	v	file:
nextlhs	queryparser/lemon.c	/^  struct rule *nextlhs;    \/* Next rule with the same LHS *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
no_argument	common/gnu_getopt.h	/^# define no_argument	/;"	d
no_collapse_key	matcher/collapser.h	/^    Xapian::doccount no_collapse_key;$/;"	m	class:Collapser
no_gaps	languages/compiler/header.h	/^    byte no_gaps;             \/* not used in generator.c after 11\/5\/05 *\/$/;"	m	struct:grouping
no_subdatabases	api/omdatabase.cc	/^static void no_subdatabases()$/;"	f	file:
node	languages/compiler/header.h	/^struct node {$/;"	s
nodes	languages/compiler/header.h	/^    struct node * nodes;$/;"	m	struct:analyser	typeref:struct:analyser::node
nodist_pkgconfig_DATA	Makefile	/^nodist_pkgconfig_DATA = pkgconfig\/xapian-core.pc$/;"	m
nodist_xapianinclude_HEADERS	Makefile	/^nodist_xapianinclude_HEADERS = \\$/;"	m
nodist_xapianinclude_HEADERS	include/Makefile.mk	/^nodist_xapianinclude_HEADERS =\\$/;"	m
noinst_HEADERS	Makefile	/^noinst_HEADERS = api\/documentvaluelist.h api\/editdistance.h \\$/;"	m
noinst_HEADERS	tests/Makefile	/^noinst_HEADERS = apitest.h dbcheck.h harness\/backendmanager.h \\$/;"	m
noinst_LTLIBRARIES	Makefile	/^noinst_LTLIBRARIES = $(am__append_20) $(am__append_23) \\$/;"	m
nolinenosflag	queryparser/lemon.c	/^  int nolinenosflag;       \/* True if #line statements should not be printed *\/$/;"	m	struct:lemon	file:
non_zero_inits	tests/api_weight.cc	/^    unsigned & zero_inits, & non_zero_inits;$/;"	m	class:CheckInitWeight	file:
nonascii_to_utf8	unicode/utf8itor.cc	/^nonascii_to_utf8(unsigned ch, char * buf)$/;"	f	namespace:Xapian::Unicode
nonconst_access	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::nonconst_access() const$/;"	f	class:ConstDatabaseWrapper
now	common/realtime.h	/^inline double now() {$/;"	f	namespace:RealTime
nrhs	queryparser/lemon.c	/^  int nrhs;                  \/* Number of right-hand side symbols seen *\/$/;"	m	struct:pstate	file:
nrhs	queryparser/lemon.c	/^  int nrhs;                \/* Number of RHS symbols *\/$/;"	m	struct:rule	file:
nrhs	queryparser/queryparser_internal.cc	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon29	file:
nrule	queryparser/lemon.c	/^  int nrule;               \/* Number of rules *\/$/;"	m	struct:lemon	file:
nstate	queryparser/lemon.c	/^  int nstate;              \/* Number of states *\/$/;"	m	struct:lemon	file:
nsubsym	queryparser/lemon.c	/^  int nsubsym;             \/* Number of constituent symbols in the MULTI *\/$/;"	m	struct:symbol	file:
nsymbol	queryparser/lemon.c	/^  int nsymbol;             \/* Number of terminal and nonterminal symbols *\/$/;"	m	struct:lemon	file:
nterminal	queryparser/lemon.c	/^  int nterminal;           \/* Number of terminal symbols *\/$/;"	m	struct:lemon	file:
num_docs	tests/api_postingsource.cc	/^    Xapian::doccount num_docs;$/;"	m	class:MyDontAskWeightPostingSource	file:
num_docs	tests/api_postingsource.cc	/^    Xapian::doccount num_docs;$/;"	m	class:MyOddPostingSource	file:
num_docs	tests/api_postingsource.cc	/^    Xapian::doccount num_docs;$/;"	m	class:MyOddWeightingPostingSource	file:
number	languages/compiler/header.h	/^    int number;               \/* amongs are numbered 0, 1, 2 ... *\/$/;"	m	struct:among
number	languages/compiler/header.h	/^    int number;               \/* groupings are numbered 0, 1, 2 ... *\/$/;"	m	struct:grouping
number	languages/compiler/header.h	/^    int number;$/;"	m	struct:node
number	languages/compiler/header.h	/^    int number;$/;"	m	struct:tokeniser
number_of_entries	backends/brass/brass_postlist.h	/^	Xapian::doccount number_of_entries;$/;"	m	class:BrassPostList
number_of_entries	backends/chert/chert_postlist.h	/^	Xapian::doccount number_of_entries;$/;"	m	class:ChertPostList
number_of_entries	backends/flint/flint_postlist.h	/^	Xapian::doccount number_of_entries;$/;"	m	class:FlintPostList
numfromstr	api/sortable-serialise.cc	/^numfromstr(const std::string & str, std::string::size_type pos)$/;"	f	file:
off_t	common/safeunistd.h	/^#  undef off_t$/;"	d
off_t	common/safeunistd.h	/^# define off_t /;"	d
offline_needed_revision	api/replication.cc	/^    string offline_needed_revision;$/;"	m	class:DatabaseReplica::Internal	file:
offline_revision	api/replication.cc	/^    string offline_revision;$/;"	m	class:DatabaseReplica::Internal	file:
offline_uuid	api/replication.cc	/^    string offline_uuid;$/;"	m	class:DatabaseReplica::Internal	file:
offset	api/compactor.cc	/^    vector<Xapian::docid> offset;$/;"	m	class:Xapian::Compactor::Internal	file:
offset	backends/brass/brass_compact.cc	/^    Xapian::docid offset;$/;"	m	class:BrassCompact::PostlistCursor	file:
offset	backends/chert/chert_compact.cc	/^    Xapian::docid offset;$/;"	m	class:ChertCompact::PostlistCursor	file:
offset	backends/flint/flint_compact.cc	/^    Xapian::docid offset;$/;"	m	class:FlintCompact::PostlistCursor	file:
offset	common/vectortermlist.h	/^	vector<string>::size_type offset;$/;"	m	class:VectorTermList
old_handler	common/socket_utils.cc	/^    _invalid_parameter_handler old_handler;$/;"	m	class:MSVCIgnoreInvalidParameter	file:
old_item	matcher/collapser.h	/^    Xapian::Internal::MSetItem old_item;$/;"	m	class:Collapser
old_report_mode	common/socket_utils.cc	/^    int old_report_mode;$/;"	m	class:MSVCIgnoreInvalidParameter	file:
oldest_changeset	backends/brass/brass_dbstats.h	/^    brass_revision_number_t oldest_changeset;$/;"	m	class:BrassDatabaseStats
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	docs/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	tests/Makefile	/^oldincludedir = \/usr\/include$/;"	m
om_byte	backends/flint/flint_utils.h	/^typedef unsigned char       om_byte;$/;"	t
om_int32	backends/flint/flint_utils.h	/^typedef int                 om_int32;$/;"	t
om_uint32	backends/flint/flint_utils.h	/^typedef unsigned int        om_uint32;$/;"	t
omission	languages/compiler/header.h	/^    int omission;$/;"	m	struct:tokeniser
omission_error	languages/compiler/analyser.c	/^static void omission_error(struct analyser * a, int n) {$/;"	f	file:
on_SIGCHLD	net/tcpserver.cc	/^on_SIGCHLD(int \/*sig*\/)$/;"	f	file:
on_SIGCHLD	tests/harness/backendmanager_remotetcp.cc	/^on_SIGCHLD(int \/*sig*\/)$/;"	f	file:
on_SIGTERM	net/tcpserver.cc	/^on_SIGTERM(int \/*sig*\/)$/;"	f	file:
only_one_subdatabase_allowed	api/omdatabase.cc	/^static void only_one_subdatabase_allowed()$/;"	f	namespace:Xapian
op	include/xapian/query.h	/^	Xapian::Query::Internal::op_t op;$/;"	m	class:Xapian::Query::Internal
op	include/xapian/query.h	/^	} op;$/;"	t	class:Xapian::Query	typeref:enum:Xapian::Query::__anon14
op	matcher/queryoptimiser.cc	/^    Xapian::Query::Internal::op_t op;$/;"	m	struct:PosFilter	file:
op	queryparser/lemon.c	/^static struct s_options *op;$/;"	v	typeref:struct:s_options	file:
op_t	include/xapian/query.h	/^	typedef int op_t;$/;"	t	class:Xapian::Query::Internal
op_tab	examples/quest.cc	/^static qp_op op_tab[] = {$/;"	v	file:
open	backends/brass/brass_postlist.h	/^	bool open(brass_revision_number_t revno) {$/;"	f	class:BrassPostListTable
open	backends/brass/brass_table.cc	/^BrassTable::open()$/;"	f	class:BrassTable
open	backends/brass/brass_table.cc	/^BrassTable::open(brass_revision_number_t revision)$/;"	f	class:BrassTable
open	backends/chert/chert_postlist.h	/^	bool open(chert_revision_number_t revno) {$/;"	f	class:ChertPostListTable
open	backends/chert/chert_table.cc	/^ChertTable::open()$/;"	f	class:ChertTable
open	backends/chert/chert_table.cc	/^ChertTable::open(chert_revision_number_t revision)$/;"	f	class:ChertTable
open	backends/databasereplicator.cc	/^DatabaseReplicator::open(const string & path)$/;"	f	class:Xapian::DatabaseReplicator
open	backends/dbfactory.cc	/^Brass::open(const string &dir) {$/;"	f	class:Xapian::Brass
open	backends/dbfactory.cc	/^Brass::open(const string &dir, int action, int block_size) {$/;"	f	class:Xapian::Brass
open	backends/dbfactory.cc	/^Chert::open(const string &dir) {$/;"	f	class:Xapian::Chert
open	backends/dbfactory.cc	/^Chert::open(const string &dir, int action, int block_size) {$/;"	f	class:Xapian::Chert
open	backends/dbfactory.cc	/^Flint::open(const string &dir) {$/;"	f	class:Xapian::Flint
open	backends/dbfactory.cc	/^Flint::open(const string &dir, int action, int block_size) {$/;"	f	class:Xapian::Flint
open	backends/dbfactory.cc	/^InMemory::open() {$/;"	f	class:Xapian::InMemory
open	backends/dbfactory_remote.cc	/^Remote::open(const string &host, unsigned int port, Xapian::timeout timeout_,$/;"	f	class:Xapian::Remote
open	backends/dbfactory_remote.cc	/^Remote::open(const string &program, const string &args,$/;"	f	class:Xapian::Remote
open	backends/flint/flint_table.cc	/^FlintTable::open()$/;"	f	class:FlintTable
open	backends/flint/flint_table.cc	/^FlintTable::open(flint_revision_number_t revision)$/;"	f	class:FlintTable
open	common/safefcntl.h	/^# undef open$/;"	d
open	common/safefcntl.h	/^#undef open$/;"	d
open	common/safefcntl.h	/^inline int open(const char *filename, int flags) {$/;"	f
open	common/safefcntl.h	/^inline int open(const char *filename, int flags, mode_t mode) {$/;"	f
open	tests/perftest/perftest.cc	/^PerfTestLogger::open(const string & logpath)$/;"	f	class:PerfTestLogger
open_allterms	backends/brass/brass_database.cc	/^BrassDatabase::open_allterms(const string & prefix) const$/;"	f	class:BrassDatabase
open_allterms	backends/brass/brass_database.cc	/^BrassWritableDatabase::open_allterms(const string & prefix) const$/;"	f	class:BrassWritableDatabase
open_allterms	backends/chert/chert_database.cc	/^ChertDatabase::open_allterms(const string & prefix) const$/;"	f	class:ChertDatabase
open_allterms	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_allterms(const string & prefix) const$/;"	f	class:ChertWritableDatabase
open_allterms	backends/flint/flint_database.cc	/^FlintDatabase::open_allterms(const string & prefix) const$/;"	f	class:FlintDatabase
open_allterms	backends/flint/flint_database.cc	/^FlintWritableDatabase::open_allterms(const string & prefix) const$/;"	f	class:FlintWritableDatabase
open_allterms	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_allterms(const string & prefix) const$/;"	f	class:InMemoryDatabase
open_allterms	backends/remote/remote-database.cc	/^RemoteDatabase::open_allterms(const string & prefix) const {$/;"	f	class:RemoteDatabase
open_allterms	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_allterms(const string & prefix) const$/;"	f	class:ConstDatabaseWrapper
open_document	backends/brass/brass_database.cc	/^BrassDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:BrassDatabase
open_document	backends/brass/brass_database.cc	/^BrassWritableDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:BrassWritableDatabase
open_document	backends/chert/chert_database.cc	/^ChertDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:ChertDatabase
open_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:ChertWritableDatabase
open_document	backends/flint/flint_database.cc	/^FlintDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:FlintDatabase
open_document	backends/flint/flint_database.cc	/^FlintWritableDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:FlintWritableDatabase
open_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:InMemoryDatabase
open_document	backends/remote/remote-database.cc	/^RemoteDatabase::open_document(Xapian::docid did, bool \/*lazy*\/) const$/;"	f	class:RemoteDatabase
open_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_document(Xapian::docid did, bool lazy) const$/;"	f	class:ConstDatabaseWrapper
open_metadata_keylist	backends/brass/brass_database.cc	/^BrassDatabase::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:BrassDatabase
open_metadata_keylist	backends/chert/chert_database.cc	/^ChertDatabase::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:ChertDatabase
open_metadata_keylist	backends/database.cc	/^Database::Internal::open_metadata_keylist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_metadata_keylist	backends/flint/flint_database.cc	/^FlintDatabase::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:FlintDatabase
open_metadata_keylist	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_metadata_keylist(const string &) const$/;"	f	class:InMemoryDatabase
open_metadata_keylist	backends/remote/remote-database.cc	/^RemoteDatabase::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:RemoteDatabase
open_metadata_keylist	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_metadata_keylist(const std::string &prefix) const$/;"	f	class:ConstDatabaseWrapper
open_position_list	api/postlist.cc	/^PostList::open_position_list() const$/;"	f	class:Xapian::PostList
open_position_list	backends/brass/brass_alldocspostlist.cc	/^BrassAllDocsPostList::open_position_list() const$/;"	f	class:BrassAllDocsPostList
open_position_list	backends/brass/brass_database.cc	/^BrassDatabase::open_position_list(Xapian::docid did, const string & term) const$/;"	f	class:BrassDatabase
open_position_list	backends/brass/brass_postlist.cc	/^BrassPostList::open_position_list() const$/;"	f	class:BrassPostList
open_position_list	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::open_position_list() const$/;"	f	class:ChertAllDocsPostList
open_position_list	backends/chert/chert_database.cc	/^ChertDatabase::open_position_list(Xapian::docid did, const string & term) const$/;"	f	class:ChertDatabase
open_position_list	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::open_position_list() const$/;"	f	class:ChertModifiedPostList
open_position_list	backends/chert/chert_postlist.cc	/^ChertPostList::open_position_list() const$/;"	f	class:ChertPostList
open_position_list	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::open_position_list() const$/;"	f	class:ContiguousAllDocsPostList
open_position_list	backends/flint/flint_database.cc	/^FlintDatabase::open_position_list(Xapian::docid did, const string & term) const$/;"	f	class:FlintDatabase
open_position_list	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::open_position_list() const$/;"	f	class:FlintModifiedPostList
open_position_list	backends/flint/flint_postlist.cc	/^FlintPostList::open_position_list() const$/;"	f	class:FlintPostList
open_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::open_position_list() const$/;"	f	class:InMemoryAllDocsPostList
open_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_position_list(Xapian::docid did,$/;"	f	class:InMemoryDatabase
open_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::open_position_list() const$/;"	f	class:InMemoryPostList
open_position_list	backends/multi/multi_postlist.cc	/^MultiPostList::open_position_list() const$/;"	f	class:MultiPostList
open_position_list	backends/remote/net_postlist.cc	/^NetworkPostList::open_position_list() const$/;"	f	class:NetworkPostList
open_position_list	backends/remote/remote-database.cc	/^RemoteDatabase::open_position_list(Xapian::docid did, const string &term) const$/;"	f	class:RemoteDatabase
open_position_list	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_position_list(Xapian::docid did,$/;"	f	class:ConstDatabaseWrapper
open_position_list	matcher/externalpostlist.cc	/^ExternalPostList::open_position_list() const$/;"	f	class:ExternalPostList
open_position_list	matcher/selectpostlist.h	/^	PositionList * open_position_list() const { return source->open_position_list(); }$/;"	f	class:SelectPostList
open_position_list	matcher/valuerangepostlist.cc	/^ValueRangePostList::open_position_list() const$/;"	f	class:ValueRangePostList
open_post_list	backends/brass/brass_database.cc	/^BrassDatabase::open_post_list(const string& term) const$/;"	f	class:BrassDatabase
open_post_list	backends/brass/brass_database.cc	/^BrassWritableDatabase::open_post_list(const string& tname) const$/;"	f	class:BrassWritableDatabase
open_post_list	backends/chert/chert_database.cc	/^ChertDatabase::open_post_list(const string& term) const$/;"	f	class:ChertDatabase
open_post_list	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_post_list(const string& tname) const$/;"	f	class:ChertWritableDatabase
open_post_list	backends/flint/flint_database.cc	/^FlintDatabase::open_post_list(const string& term) const$/;"	f	class:FlintDatabase
open_post_list	backends/flint/flint_database.cc	/^FlintWritableDatabase::open_post_list(const string& tname) const$/;"	f	class:FlintWritableDatabase
open_post_list	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_post_list(const string & tname) const$/;"	f	class:InMemoryDatabase
open_post_list	backends/remote/remote-database.cc	/^RemoteDatabase::open_post_list(const string &term) const$/;"	f	class:RemoteDatabase
open_post_list	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_post_list(const string & tname) const$/;"	f	class:ConstDatabaseWrapper
open_socket	net/remotetcpclient.cc	/^RemoteTcpClient::open_socket(const string & hostname, int port,$/;"	f	class:RemoteTcpClient
open_socket	net/replicatetcpclient.cc	/^ReplicateTcpClient::open_socket(const string & hostname, int port,$/;"	f	class:ReplicateTcpClient
open_socket	net/tcpclient.cc	/^TcpClient::open_socket(const std::string & hostname, int port,$/;"	f	class:TcpClient
open_spelling_termlist	backends/brass/brass_database.cc	/^BrassDatabase::open_spelling_termlist(const string & word) const$/;"	f	class:BrassDatabase
open_spelling_termlist	backends/chert/chert_database.cc	/^ChertDatabase::open_spelling_termlist(const string & word) const$/;"	f	class:ChertDatabase
open_spelling_termlist	backends/database.cc	/^Database::Internal::open_spelling_termlist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_spelling_termlist	backends/flint/flint_database.cc	/^FlintDatabase::open_spelling_termlist(const string & word) const$/;"	f	class:FlintDatabase
open_spelling_termlist	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_spelling_termlist(const string & word) const$/;"	f	class:ConstDatabaseWrapper
open_spelling_wordlist	backends/brass/brass_database.cc	/^BrassDatabase::open_spelling_wordlist() const$/;"	f	class:BrassDatabase
open_spelling_wordlist	backends/brass/brass_database.cc	/^BrassWritableDatabase::open_spelling_wordlist() const$/;"	f	class:BrassWritableDatabase
open_spelling_wordlist	backends/chert/chert_database.cc	/^ChertDatabase::open_spelling_wordlist() const$/;"	f	class:ChertDatabase
open_spelling_wordlist	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_spelling_wordlist() const$/;"	f	class:ChertWritableDatabase
open_spelling_wordlist	backends/database.cc	/^Database::Internal::open_spelling_wordlist() const$/;"	f	class:Xapian::Database::Internal
open_spelling_wordlist	backends/flint/flint_database.cc	/^FlintDatabase::open_spelling_wordlist() const$/;"	f	class:FlintDatabase
open_spelling_wordlist	backends/flint/flint_database.cc	/^FlintWritableDatabase::open_spelling_wordlist() const$/;"	f	class:FlintWritableDatabase
open_spelling_wordlist	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_spelling_wordlist() const$/;"	f	class:ConstDatabaseWrapper
open_stub	backends/dbfactory.cc	/^Auto::open_stub(const string &file)$/;"	f	class:Xapian::Auto
open_stub	backends/dbfactory.cc	/^Auto::open_stub(const string &file, int action)$/;"	f	class:Xapian::Auto
open_stub	backends/dbfactory.cc	/^open_stub(Database &db, const string &file)$/;"	f	namespace:Xapian
open_stub	backends/dbfactory.cc	/^open_stub(WritableDatabase &db, const string &file, int action)$/;"	f	namespace:Xapian
open_synonym_keylist	backends/brass/brass_database.cc	/^BrassDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:BrassDatabase
open_synonym_keylist	backends/brass/brass_database.cc	/^BrassWritableDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:BrassWritableDatabase
open_synonym_keylist	backends/chert/chert_database.cc	/^ChertDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:ChertDatabase
open_synonym_keylist	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:ChertWritableDatabase
open_synonym_keylist	backends/database.cc	/^Database::Internal::open_synonym_keylist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_synonym_keylist	backends/flint/flint_database.cc	/^FlintDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:FlintDatabase
open_synonym_keylist	backends/flint/flint_database.cc	/^FlintWritableDatabase::open_synonym_keylist(const string & prefix) const$/;"	f	class:FlintWritableDatabase
open_synonym_keylist	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_synonym_keylist(const string & prefix) const$/;"	f	class:ConstDatabaseWrapper
open_synonym_termlist	backends/brass/brass_database.cc	/^BrassDatabase::open_synonym_termlist(const string & term) const$/;"	f	class:BrassDatabase
open_synonym_termlist	backends/chert/chert_database.cc	/^ChertDatabase::open_synonym_termlist(const string & term) const$/;"	f	class:ChertDatabase
open_synonym_termlist	backends/database.cc	/^Database::Internal::open_synonym_termlist(const string &) const$/;"	f	class:Xapian::Database::Internal
open_synonym_termlist	backends/flint/flint_database.cc	/^FlintDatabase::open_synonym_termlist(const string & term) const$/;"	f	class:FlintDatabase
open_synonym_termlist	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_synonym_termlist(const string & term) const$/;"	f	class:ConstDatabaseWrapper
open_tables	backends/brass/brass_database.cc	/^BrassDatabase::open_tables(brass_revision_number_t revision)$/;"	f	class:BrassDatabase
open_tables	backends/chert/chert_database.cc	/^ChertDatabase::open_tables(chert_revision_number_t revision)$/;"	f	class:ChertDatabase
open_tables	backends/flint/flint_database.cc	/^FlintDatabase::open_tables(flint_revision_number_t revision)$/;"	f	class:FlintDatabase
open_tables_consistent	backends/brass/brass_database.cc	/^BrassDatabase::open_tables_consistent()$/;"	f	class:BrassDatabase
open_tables_consistent	backends/chert/chert_database.cc	/^ChertDatabase::open_tables_consistent()$/;"	f	class:ChertDatabase
open_tables_consistent	backends/flint/flint_database.cc	/^FlintDatabase::open_tables_consistent()$/;"	f	class:FlintDatabase
open_term_list	api/omdocument.cc	/^Xapian::Document::Internal::open_term_list() const$/;"	f	class:Xapian::Document::Internal
open_term_list	backends/brass/brass_database.cc	/^BrassDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:BrassDatabase
open_term_list	backends/chert/chert_database.cc	/^ChertDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:ChertDatabase
open_term_list	backends/flint/flint_database.cc	/^FlintDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:FlintDatabase
open_term_list	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:InMemoryDatabase
open_term_list	backends/remote/remote-database.cc	/^RemoteDatabase::open_term_list(Xapian::docid did) const$/;"	f	class:RemoteDatabase
open_term_list	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_term_list(Xapian::docid did) const$/;"	f	class:ConstDatabaseWrapper
open_termlist	backends/brass/brass_spelling.cc	/^BrassSpellingTable::open_termlist(const string & word)$/;"	f	class:BrassSpellingTable
open_termlist	backends/brass/brass_synonym.cc	/^BrassSynonymTable::open_termlist(const string & term)$/;"	f	class:BrassSynonymTable
open_termlist	backends/chert/chert_spelling.cc	/^ChertSpellingTable::open_termlist(const string & word)$/;"	f	class:ChertSpellingTable
open_termlist	backends/chert/chert_synonym.cc	/^ChertSynonymTable::open_termlist(const string & term)$/;"	f	class:ChertSynonymTable
open_termlist	backends/flint/flint_spelling.cc	/^FlintSpellingTable::open_termlist(const string & word)$/;"	f	class:FlintSpellingTable
open_termlist	backends/flint/flint_synonym.cc	/^FlintSynonymTable::open_termlist(const string & term)$/;"	f	class:FlintSynonymTable
open_value_list	backends/brass/brass_database.cc	/^BrassDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:BrassDatabase
open_value_list	backends/brass/brass_database.cc	/^BrassWritableDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:BrassWritableDatabase
open_value_list	backends/chert/chert_database.cc	/^ChertDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:ChertDatabase
open_value_list	backends/chert/chert_database.cc	/^ChertWritableDatabase::open_value_list(Xapian::valueno slot) const$/;"	f	class:ChertWritableDatabase
open_value_list	backends/database.cc	/^Database::Internal::open_value_list(Xapian::valueno slot) const$/;"	f	class:Xapian::Database::Internal
open_value_list	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::open_value_list(Xapian::valueno slot) const$/;"	f	class:ConstDatabaseWrapper
open_writable	backends/dbfactory_remote.cc	/^Remote::open_writable(const string &host, unsigned int port,$/;"	f	class:Xapian::Remote
open_writable	backends/dbfactory_remote.cc	/^Remote::open_writable(const string &program, const string &args,$/;"	f	class:Xapian::Remote
opendir	common/msvc_dirent.cc	/^DIR *opendir(const char *name)$/;"	f
operator !=	backends/brass/brass_table.h	/^    bool operator!=(Key key2) const { return !(*this == key2); }$/;"	f	class:Brass::Key
operator !=	backends/chert/chert_table.h	/^    bool operator!=(Key key2) const { return !(*this == key2); }$/;"	f	class:Key
operator !=	backends/flint/flint_table.h	/^    bool operator!=(Key_ key2) const { return !(*this == key2); }$/;"	f	class:Key_
operator !=	include/xapian/enquire.h	/^inline bool operator!=(const ESetIterator &a, const ESetIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/enquire.h	/^inline bool operator!=(const MSetIterator &a, const MSetIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/positioniterator.h	/^operator!=(const PositionIterator &a, const PositionIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/postingiterator.h	/^inline bool operator!=(const PostingIterator &a, const PostingIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/termiterator.h	/^operator!=(const TermIterator &a, const TermIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/unicode.h	/^    bool operator!=(const Utf8Iterator &other) const { return p != other.p; }$/;"	f	class:Xapian::Utf8Iterator
operator !=	include/xapian/valueiterator.h	/^operator!=(const ValueIterator &a, const ValueIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/valueiterator.h	/^operator!=(const ValueIterator &a, const ValueIteratorEnd_ &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/valueiterator.h	/^operator!=(const ValueIteratorEnd_ &a, const ValueIterator &b)$/;"	f	namespace:Xapian
operator !=	include/xapian/valueiterator.h	/^operator!=(const ValueIteratorEnd_ &a, const ValueIteratorEnd_ &b)$/;"	f	namespace:Xapian
operator !=	queryparser/cjk-tokenizer.h	/^operator!=(const CJKTokenIterator & a, const CJKTokenIterator & b)$/;"	f
operator !=	tests/harness/testutils.h	/^inline bool operator!=(const Xapian::MSet &first, const Xapian::MSet &second)$/;"	f
operator ()	api/compactor.cc	/^    bool operator()(size_t a, size_t b) {$/;"	f	class:CmpByFirstUsed
operator ()	api/errorhandler.cc	/^Xapian::ErrorHandler::operator()(Xapian::Error & error)$/;"	f	class:Xapian::ErrorHandler
operator ()	api/expanddecider.cc	/^ExpandDeciderAnd::operator()(const string &term) const$/;"	f	class:Xapian::ExpandDeciderAnd
operator ()	api/expanddecider.cc	/^ExpandDeciderFilterTerms::operator()(const string &term) const$/;"	f	class:Xapian::ExpandDeciderFilterTerms
operator ()	api/keymaker.cc	/^MultiValueKeyMaker::operator()(const Xapian::Document & doc) const$/;"	f	class:Xapian::MultiValueKeyMaker
operator ()	api/keymaker.cc	/^MultiValueSorter::operator()(const Xapian::Document & doc) const$/;"	f	class:Xapian::MultiValueSorter
operator ()	api/matchspy.cc	/^    bool operator()(const StringAndFrequency &a,$/;"	f	class:StringAndFreqCmpByFreq
operator ()	api/matchspy.cc	/^ValueCountMatchSpy::operator()(const Document &doc, weight) {$/;"	f	class:ValueCountMatchSpy
operator ()	api/omenquire.cc	/^    bool operator()(const string &left,$/;"	f	class:Xapian::ByQueryIndexCmp
operator ()	api/omqueryinternal.cc	/^    bool operator()(argtype &left, argtype &right) {$/;"	f	struct:LessByTermpos
operator ()	api/omqueryinternal.cc	/^    bool operator()(const Xapian::Query::Internal * left,$/;"	f	struct:SortPosName
operator ()	api/valuerangeproc.cc	/^DateValueRangeProcessor::operator()(string &begin, string &end)$/;"	f	class:Xapian::DateValueRangeProcessor
operator ()	api/valuerangeproc.cc	/^NumberValueRangeProcessor::operator()(string &begin, string &end)$/;"	f	class:Xapian::NumberValueRangeProcessor
operator ()	api/valuerangeproc.cc	/^StringValueRangeProcessor::operator()(string &begin, string &end)$/;"	f	class:Xapian::StringValueRangeProcessor
operator ()	api/valuesetmatchdecider.cc	/^ValueSetMatchDecider::operator()(const Xapian::Document& doc) const$/;"	f	class:Xapian::ValueSetMatchDecider
operator ()	backends/brass/brass_compact.cc	/^    bool operator()(const BrassCursor *a, const BrassCursor *b) {$/;"	f	struct:BrassCompact::CursorGt
operator ()	backends/brass/brass_compact.cc	/^    bool operator()(const PostlistCursor *a, const PostlistCursor *b) {$/;"	f	class:BrassCompact::PostlistCursorGt
operator ()	backends/brass/brass_spelling.cc	/^    bool operator()(const TermList *a, const TermList *b) {$/;"	f	struct:TermListGreaterApproxSize
operator ()	backends/byte_length_strings.h	/^    bool operator()(const ByteLengthPrefixedStringItor *a,$/;"	f	struct:ByteLengthPrefixedStringItorGt
operator ()	backends/chert/chert_compact.cc	/^    bool operator()(const ChertCursor *a, const ChertCursor *b) {$/;"	f	struct:ChertCompact::CursorGt
operator ()	backends/chert/chert_compact.cc	/^    bool operator()(const PostlistCursor *a, const PostlistCursor *b) {$/;"	f	class:ChertCompact::PostlistCursorGt
operator ()	backends/chert/chert_spelling.cc	/^    bool operator()(const TermList *a, const TermList *b) {$/;"	f	struct:TermListGreaterApproxSize
operator ()	backends/flint/flint_compact.cc	/^    bool operator()(const FlintCursor *a, const FlintCursor *b) {$/;"	f	struct:FlintCompact::CursorGt
operator ()	backends/flint/flint_compact.cc	/^    bool operator()(const PostlistCursor *a, const PostlistCursor *b) {$/;"	f	class:FlintCompact::PostlistCursorGt
operator ()	backends/flint/flint_spelling.cc	/^    bool operator()(const TermList *a, const TermList *b) {$/;"	f	struct:TermListGreaterApproxSize
operator ()	backends/inmemory/inmemory_database.h	/^	int operator() (const InMemoryPosting &p1, const InMemoryPosting &p2)$/;"	f	class:InMemoryPostingLessThan
operator ()	backends/inmemory/inmemory_database.h	/^	int operator() (const InMemoryTermEntry&p1, const InMemoryTermEntry&p2)$/;"	f	class:InMemoryTermEntryLessThan
operator ()	backends/multi/multi_alltermslist.cc	/^    bool operator()(const TermList *a, const TermList *b) {$/;"	f	struct:CompareTermListsByTerm
operator ()	backends/multi/multi_alltermslist.cc	/^    void operator()(CLASS *p) { delete p; }$/;"	f	struct:delete_ptr
operator ()	backends/multi/multi_valuelist.cc	/^    bool operator()(const SubValueList *a, const SubValueList *b) {$/;"	f	struct:CompareSubValueListsByDocId
operator ()	backends/multi/multi_valuelist.cc	/^    void operator()(CLASS *p) { delete p; }$/;"	f	struct:delete_ptr
operator ()	backends/prefix_compressed_strings.h	/^    bool operator()(const PrefixCompressedStringItor *a,$/;"	f	struct:PrefixCompressedStringItorGt
operator ()	expand/esetinternal.cc	/^    bool operator()(const TermList *a, const TermList *b) {$/;"	f	struct:Xapian::CompareTermListSizeAscending
operator ()	expand/esetinternal.cc	/^    void operator()(CLASS *p) { delete p; }$/;"	f	struct:Xapian::delete_ptr
operator ()	include/xapian/queryparser.h	/^    virtual bool operator()(const std::string & term) const {$/;"	f	class:Xapian::SimpleStopper
operator ()	languages/stem.cc	/^Stem::operator()(const std::string &word) const$/;"	f	class:Xapian::Stem
operator ()	languages/steminternal.cc	/^SnowballStemImplementation::operator()(const string & word)$/;"	f	class:Xapian::SnowballStemImplementation
operator ()	matcher/exactphrasepostlist.cc	/^    bool operator()(unsigned a, unsigned b) const {$/;"	f	class:TermCompare
operator ()	matcher/msetcmp.h	/^    bool operator()(const Xapian::Internal::MSetItem &a,$/;"	f	class:MSetCmp
operator ()	matcher/multiandpostlist.h	/^        bool operator()(const PostList *a, const PostList *b) {$/;"	f	struct:MultiAndPostList::ComparePostListTermFreqAscending
operator ()	matcher/multimatch.cc	/^MultipleMatchSpy::operator()(const Xapian::Document &doc, Xapian::weight wt) {$/;"	f	class:MultipleMatchSpy
operator ()	matcher/phrasepostlist.cc	/^        bool operator()(const PositionList *a, const PositionList *b) {$/;"	f	class:PositionListCmpLt
operator ()	matcher/queryoptimiser.cc	/^    bool operator()(const PostList *a, const PostList *b) {$/;"	f	struct:CmpMaxOrTerms
operator ()	matcher/queryoptimiser.cc	/^    bool operator()(const PostList *a, const PostList *b) {$/;"	f	struct:ComparePostListTermFreqAscending
operator ()	matcher/queryoptimiser.cc	/^    void operator()(CLASS *p) { delete p; }$/;"	f	struct:delete_ptr
operator ()	tests/api_anydb.cc	/^	bool operator()(const string & tname) const {$/;"	f	class:myExpandFunctor
operator ()	tests/api_backend.cc	/^    bool operator()(const Xapian::Document &) const {$/;"	f	struct:MyMatchDecider
operator ()	tests/api_db.cc	/^	bool operator()(const Xapian::Document &doc) const {$/;"	f	class:myMatchDecider
operator ()	tests/api_db.cc	/^	bool operator()(const Xapian::Document &doc) const {$/;"	f	class:myMatchDecider2
operator ()	tests/api_matchspy.cc	/^    void operator()(const Xapian::Document &, Xapian::weight) {$/;"	f	class:MySpy	file:
operator ()	tests/api_matchspy.cc	/^    void operator()(const Xapian::Document &doc,$/;"	f	class:SimpleMatchSpy
operator ()	tests/api_serialise.cc	/^    void operator()(const Xapian::Document &, Xapian::weight) {$/;"	f	class:ExceptionalMatchSpy
operator ()	tests/api_sorting.cc	/^    std::string operator() (const Xapian::Document &) const$/;"	f	class:NeverUseMeKeyMaker
operator ()	tests/api_sortingold.cc	/^    std::string operator() (const Xapian::Document &) const$/;"	f	class:NeverUseMeSorter
operator ()	tests/api_stem.cc	/^    string operator()(const string & word) {$/;"	f	class:MyStemImpl	file:
operator ()	tests/queryparsertest.cc	/^    Xapian::valueno operator()(std::string &begin, std::string &end) {$/;"	f	struct:AuthorValueRangeProcessor
operator *	api/omenquire.cc	/^ESetIterator::operator *() const$/;"	f	class:Xapian::ESetIterator
operator *	api/omenquire.cc	/^MSetIterator::operator *() const$/;"	f	class:Xapian::MSetIterator
operator *	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::operator *() const$/;"	f	class:Xapian::PositionIterator
operator *	api/ompostlistiterator.cc	/^Xapian::PostingIterator::operator *() const$/;"	f	class:Xapian::PostingIterator
operator *	api/omtermlistiterator.cc	/^Xapian::TermIterator::operator *() const$/;"	f	class:Xapian::TermIterator
operator *	api/valueiterator.cc	/^ValueIterator::operator*() const$/;"	f	class:Xapian::ValueIterator
operator *	backends/byte_length_strings.h	/^    std::string operator*() const {$/;"	f	class:ByteLengthPrefixedStringItor
operator *	backends/prefix_compressed_strings.h	/^    const std::string & operator*() const {$/;"	f	class:PrefixCompressedStringItor
operator *	include/xapian/base.h	/^inline T &RefCntPtr<T>::operator*() const$/;"	f	class:Xapian::Internal::RefCntPtr
operator *	include/xapian/derefwrapper.h	/^    const T & operator*() const { return res; }$/;"	f	class:Xapian::DerefWrapper_
operator *	queryparser/cjk-tokenizer.cc	/^CJKTokenIterator::operator*() const$/;"	f	class:CJKTokenIterator
operator *	unicode/utf8itor.cc	/^unsigned Utf8Iterator::operator*() const {$/;"	f	class:Xapian::Utf8Iterator
operator ++	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::operator++()$/;"	f	class:Xapian::PositionIterator
operator ++	api/ompostlistiterator.cc	/^Xapian::PostingIterator::operator++()$/;"	f	class:Xapian::PostingIterator
operator ++	api/omtermlistiterator.cc	/^Xapian::TermIterator::operator++()$/;"	f	class:Xapian::TermIterator
operator ++	api/valueiterator.cc	/^ValueIterator::operator++()$/;"	f	class:Xapian::ValueIterator
operator ++	backends/byte_length_strings.h	/^    ByteLengthPrefixedStringItor & operator++() {$/;"	f	class:ByteLengthPrefixedStringItor
operator ++	backends/byte_length_strings.h	/^    ByteLengthPrefixedStringItor operator++(int) {$/;"	f	class:ByteLengthPrefixedStringItor
operator ++	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringItor & operator++() {$/;"	f	class:PrefixCompressedStringItor
operator ++	backends/prefix_compressed_strings.h	/^    PrefixCompressedStringItor operator++(int) {$/;"	f	class:PrefixCompressedStringItor
operator ++	include/xapian/enquire.h	/^	ESetIterator & operator++() {$/;"	f	class:Xapian::ESetIterator
operator ++	include/xapian/enquire.h	/^	ESetIterator operator++(int) {$/;"	f	class:Xapian::ESetIterator
operator ++	include/xapian/enquire.h	/^	MSetIterator & operator++() {$/;"	f	class:Xapian::MSetIterator
operator ++	include/xapian/enquire.h	/^	MSetIterator operator++(int) {$/;"	f	class:Xapian::MSetIterator
operator ++	include/xapian/positioniterator.h	/^	DerefWrapper_<termpos> operator++(int) {$/;"	f	class:Xapian::PositionIterator
operator ++	include/xapian/postingiterator.h	/^	DerefWrapper_<docid> operator++(int) {$/;"	f	class:Xapian::PostingIterator
operator ++	include/xapian/termiterator.h	/^	DerefWrapper_<std::string> operator++(int) {$/;"	f	class:Xapian::TermIterator
operator ++	include/xapian/unicode.h	/^    Utf8Iterator & operator++() {$/;"	f	class:Xapian::Utf8Iterator
operator ++	include/xapian/unicode.h	/^    Utf8Iterator operator++(int) {$/;"	f	class:Xapian::Utf8Iterator
operator ++	include/xapian/valueiterator.h	/^    DerefWrapper_<std::string> operator++(int) {$/;"	f	class:Xapian::ValueIterator
operator ++	queryparser/cjk-tokenizer.cc	/^CJKTokenIterator::operator++()$/;"	f	class:CJKTokenIterator
operator +=	common/weightinternal.h	/^    void operator +=(const TermFreqs & other) {$/;"	f	struct:TermFreqs
operator +=	tests/harness/testsuite.h	/^	    result & operator+=(const result & o) {$/;"	f	struct:test_driver::result
operator +=	weight/weightinternal.cc	/^Weight::Internal::operator +=(const Weight::Internal & inc)$/;"	f	class:Xapian::Weight::Internal
operator --	include/xapian/enquire.h	/^	ESetIterator & operator--() {$/;"	f	class:Xapian::ESetIterator
operator --	include/xapian/enquire.h	/^	ESetIterator operator--(int) {$/;"	f	class:Xapian::ESetIterator
operator --	include/xapian/enquire.h	/^	MSetIterator & operator--() {$/;"	f	class:Xapian::MSetIterator
operator --	include/xapian/enquire.h	/^	MSetIterator operator--(int) {$/;"	f	class:Xapian::MSetIterator
operator ->	include/xapian/base.h	/^inline T *RefCntPtr<T>::operator->() const$/;"	f	class:Xapian::Internal::RefCntPtr
operator <	backends/brass/brass_spelling.h	/^    bool operator<(const fragment &b) const {$/;"	f	struct:Brass::fragment
operator <	backends/brass/brass_table.cc	/^bool Key::operator<(Key key2) const$/;"	f	class:Key
operator <	backends/chert/chert_spelling.h	/^inline bool operator<(const fragment &a, const fragment &b) {$/;"	f
operator <	backends/chert/chert_table.cc	/^bool Key::operator<(Key key2) const$/;"	f	class:Key
operator <	backends/flint/flint_spelling.h	/^inline bool operator<(const F_fragment &a, const F_fragment &b) {$/;"	f
operator <	backends/flint/flint_table.cc	/^bool Key_::operator<(Key_ key2) const$/;"	f	class:Key_
operator <	common/esetinternal.h	/^    bool operator<(const ExpandTerm & o) const {$/;"	f	class:Xapian::Internal::ExpandTerm
operator <	examples/quest.cc	/^inline bool operator<(const qp_flag & f1, const qp_flag & f2) {$/;"	f
operator <	examples/quest.cc	/^inline bool operator<(const qp_op & f1, const qp_op & f2) {$/;"	f
operator <	examples/quest.cc	/^inline bool operator<(const wt & f1, const wt & f2) {$/;"	f
operator <	queryparser/queryparser_internal.cc	/^    bool operator<(const filter_group_id & other) const {$/;"	f	struct:filter_group_id
operator <<	common/debuglog.h	/^inline std::ostream & operator<<(std::ostream &o, Xapian::NoArguments_) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, Xapian::Internal::RefCntPtr<const T> t) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, Xapian::termcount * p)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, bool b)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const FlintCursor *) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Literal & t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const RemoteConnection &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const T & t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const T * t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const T ** t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Xapian::Database::Internal *p) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Xapian::Internal::ExpandStats &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Xapian::Internal::ExpandWeight &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const Xapian::Weight *p) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const char * str)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::list<T> &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::map<K, V> & m) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::string & str)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const std::vector<T> & v) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, const void * t)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::list<T> &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::map<K, V> &) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::map<K, V> *) {$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::string &)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, std::string *)$/;"	f
operator <<	common/pretty.h	/^operator<<(PrettyOStream<S> &ps, unsigned char ch)$/;"	f
operator <<	tests/harness/testutils.cc	/^operator<<(ostream &os, const vector<unsigned int> &ints)$/;"	f
operator <=	backends/brass/brass_table.h	/^    bool operator<=(Key key2) const { return !(key2 < *this); }$/;"	f	class:Brass::Key
operator <=	backends/chert/chert_table.h	/^    bool operator<=(Key key2) const { return !(key2 < *this); }$/;"	f	class:Key
operator <=	backends/flint/flint_table.h	/^    bool operator<=(Key_ key2) const { return !(key2 < *this); }$/;"	f	class:Key_
operator =	api/omdatabase.cc	/^Database::operator=(const Database &other)$/;"	f	class:Xapian::Database
operator =	api/omdatabase.cc	/^WritableDatabase::operator=(const WritableDatabase &other)$/;"	f	class:Xapian::WritableDatabase
operator =	api/omdocument.cc	/^Document::operator=(const Document &other)$/;"	f	class:Xapian::Document
operator =	api/omenquire.cc	/^ESet::operator=(const ESet &other)$/;"	f	class:Xapian::ESet
operator =	api/omenquire.cc	/^Enquire::operator=(const Enquire & other)$/;"	f	class:Xapian::Enquire
operator =	api/omenquire.cc	/^MSet::operator=(const MSet &other)$/;"	f	class:Xapian::MSet
operator =	api/omenquire.cc	/^RSet::operator=(const RSet &other)$/;"	f	class:Xapian::RSet
operator =	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::operator=(const Xapian::PositionIterator &o)$/;"	f	class:Xapian::PositionIterator
operator =	api/ompostlistiterator.cc	/^Xapian::PostingIterator::operator=(const Xapian::PostingIterator &other)$/;"	f	class:Xapian::PostingIterator
operator =	api/omquery.cc	/^Query::operator=(const Query & copyme)$/;"	f	class:Xapian::Query
operator =	api/omtermlistiterator.cc	/^Xapian::TermIterator::operator=(const Xapian::TermIterator &other)$/;"	f	class:Xapian::TermIterator
operator =	api/registry.cc	/^Registry::operator=(const Registry & other)$/;"	f	class:Xapian::Registry
operator =	api/replication.cc	/^DatabaseReplica::operator=(const DatabaseReplica & other)$/;"	f	class:DatabaseReplica
operator =	api/valueiterator.cc	/^ValueIterator::operator=(const ValueIterator & o)$/;"	f	class:Xapian::ValueIterator
operator =	api/valueiterator.cc	/^ValueIterator::operator=(const ValueIteratorEnd_ &)$/;"	f	class:Xapian::ValueIterator
operator =	include/xapian/base.h	/^inline void RefCntPtr<T>::operator=(T *dest_) {$/;"	f	class:Xapian::Internal::RefCntPtr
operator =	include/xapian/base.h	/^inline void RefCntPtr<T>::operator=(const RefCntPtr &other) {$/;"	f	class:Xapian::Internal::RefCntPtr
operator =	include/xapian/enquire.h	/^	void operator=(const ESetIterator &other) {$/;"	f	class:Xapian::ESetIterator
operator =	include/xapian/enquire.h	/^	void operator=(const MSetIterator &other) {$/;"	f	class:Xapian::MSetIterator
operator =	languages/stem.cc	/^Stem::operator=(const Stem & o)$/;"	f	class:Xapian::Stem
operator =	queryparser/queryparser.cc	/^QueryParser::operator=(const QueryParser & o)$/;"	f	class:QueryParser
operator =	queryparser/termgenerator.cc	/^TermGenerator::operator=(const TermGenerator & o) {$/;"	f	class:TermGenerator
operator ==	backends/brass/brass_table.cc	/^bool Key::operator==(Key key2) const$/;"	f	class:Key
operator ==	backends/chert/chert_table.cc	/^bool Key::operator==(Key key2) const$/;"	f	class:Key
operator ==	backends/flint/flint_table.cc	/^bool Key_::operator==(Key_ key2) const$/;"	f	class:Key_
operator ==	include/xapian/enquire.h	/^inline bool operator==(const ESetIterator &a, const ESetIterator &b)$/;"	f	namespace:Xapian
operator ==	include/xapian/enquire.h	/^inline bool operator==(const MSetIterator &a, const MSetIterator &b)$/;"	f	namespace:Xapian
operator ==	include/xapian/positioniterator.h	/^operator==(const PositionIterator &a, const PositionIterator &b)$/;"	f	namespace:Xapian
operator ==	include/xapian/postingiterator.h	/^inline bool operator==(const PostingIterator &a, const PostingIterator &b)$/;"	f	namespace:Xapian
operator ==	include/xapian/termiterator.h	/^operator==(const TermIterator &a, const TermIterator &b)$/;"	f	namespace:Xapian
operator ==	include/xapian/unicode.h	/^    bool operator==(const Utf8Iterator &other) const { return p == other.p; }$/;"	f	class:Xapian::Utf8Iterator
operator ==	include/xapian/valueiterator.h	/^operator==(const ValueIterator &a, const ValueIterator &b)$/;"	f	namespace:Xapian
operator ==	include/xapian/valueiterator.h	/^operator==(const ValueIterator &a, const ValueIteratorEnd_ &)$/;"	f	namespace:Xapian
operator ==	include/xapian/valueiterator.h	/^operator==(const ValueIteratorEnd_ &, const ValueIteratorEnd_ &)$/;"	f	namespace:Xapian
operator ==	include/xapian/valueiterator.h	/^operator==(const ValueIteratorEnd_ &a, const ValueIterator &b)$/;"	f	namespace:Xapian
operator ==	queryparser/cjk-tokenizer.h	/^operator==(const CJKTokenIterator & a, const CJKTokenIterator & b)$/;"	f
operator ==	tests/harness/testutils.cc	/^bool operator==(const Xapian::MSet &first, const Xapian::MSet &second)$/;"	f
operator >	backends/brass/brass_table.h	/^    bool operator>(Key key2) const { return key2 < *this; }$/;"	f	class:Brass::Key
operator >	backends/chert/chert_table.h	/^    bool operator>(Key key2) const { return key2 < *this; }$/;"	f	class:Key
operator >	backends/flint/flint_table.h	/^    bool operator>(Key_ key2) const { return key2 < *this; }$/;"	f	class:Key_
operator >=	backends/brass/brass_table.h	/^    bool operator>=(Key key2) const { return !(*this < key2); }$/;"	f	class:Brass::Key
operator >=	backends/chert/chert_table.h	/^    bool operator>=(Key key2) const { return !(*this < key2); }$/;"	f	class:Key
operator >=	backends/flint/flint_table.h	/^    bool operator>=(Key_ key2) const { return !(*this < key2); }$/;"	f	class:Key_
operator []	api/omenquire.cc	/^ESet::operator[](Xapian::termcount i) const$/;"	f	class:Xapian::ESet
operator []	api/omenquire.cc	/^MSet::operator[](Xapian::doccount i) const$/;"	f	class:Xapian::MSet
operator []	backends/brass/brass_spelling.h	/^    char & operator[] (unsigned i) { return data[i]; }$/;"	f	struct:Brass::fragment
operator []	backends/brass/brass_spelling.h	/^    const char & operator[] (unsigned i) const { return data[i]; }$/;"	f	struct:Brass::fragment
operator []	backends/brass/brass_table.h	/^    char operator[](size_t i) const {$/;"	f	class:Brass::Key
operator []	backends/chert/chert_spelling.h	/^    char & operator[] (unsigned i) { return data[i]; }$/;"	f	struct:fragment
operator []	backends/chert/chert_spelling.h	/^    const char & operator[] (unsigned i) const { return data[i]; }$/;"	f	struct:fragment
operator []	backends/chert/chert_table.h	/^    char operator[](size_t i) const {$/;"	f	class:Key
operator []	backends/flint/flint_spelling.h	/^    char & operator[] (unsigned i) { return data[i]; }$/;"	f	struct:F_fragment
operator []	backends/flint/flint_spelling.h	/^    const char & operator[] (unsigned i) const { return data[i]; }$/;"	f	struct:F_fragment
operator []	backends/flint/flint_table.h	/^    char operator[](size_t i) const {$/;"	f	class:Key_
operator bool	backends/flint_lock.h	/^    operator bool() const { return fd != -1; }$/;"	f	class:FlintLock
operator bool	backends/flint_lock.h	/^    operator bool() const { return hFile != INVALID_HANDLE_VALUE; }$/;"	f	class:FlintLock
operator bool	backends/flint_lock.h	/^    operator bool() const { return hFile != NULLHANDLE; }$/;"	f	class:FlintLock
operator bool	matcher/collapser.h	/^    operator bool() const { return collapse_max != 0; }$/;"	f	class:Collapser
operator bool	tests/harness/index_utils.h	/^    operator bool() {$/;"	f	class:FileIndexer
operator std::string	backends/brass/brass_spelling.h	/^    operator std::string () const {$/;"	f	struct:Brass::fragment
operator std::string	backends/chert/chert_spelling.h	/^    operator std::string () const {$/;"	f	struct:fragment
operator std::string	backends/flint/flint_spelling.h	/^    operator std::string () const {$/;"	f	struct:F_fragment
operator yyParser*	queryparser/queryparser_internal.cc	/^    operator yyParser*() { return parser; }$/;"	f	class:ParserHandler
operator |	common/pretty.h	/^operator|(PrettyOStream<S> &ps, const T & t) {$/;"	f
opt_help	tests/harness/testsuite.cc	/^string test_driver::opt_help;$/;"	m	class:test_driver	file:
opt_help	tests/harness/testsuite.h	/^	static std::string opt_help;$/;"	m	class:test_driver
optarg	common/getopt.cc	/^char *optarg;$/;"	v
opterr	common/getopt.cc	/^int opterr = 1;$/;"	v
optimise_query	matcher/queryoptimiser.h	/^    PostList * optimise_query(const Xapian::Query::Internal * query) {$/;"	f	class:QueryOptimiser
optind	common/getopt.cc	/^int optind = 1;$/;"	v
option	common/gnu_getopt.h	/^struct option {$/;"	s
optional_argument	common/gnu_getopt.h	/^# define optional_argument	/;"	d
options	languages/compiler/header.h	/^    struct options * options;$/;"	m	struct:generator	typeref:struct:generator::options
options	languages/compiler/header.h	/^struct options {$/;"	s
options	tests/soaktest/soaktest_queries.cc	/^    vector<QueryStep> options;$/;"	m	class:QueryBuilder	file:
options	tests/termgentest.cc	/^    const char *options;$/;"	m	struct:test	file:
optopt	common/getopt.cc	/^int optopt = '?';$/;"	v
opts	bin/xapian-progsrv.cc	/^static const char * opts = "t:w";$/;"	v	file:
opts	bin/xapian-tcpsrv.cc	/^static const char * opts = "I:p:a:i:t:oqw";$/;"	v	file:
order	common/multimatch.h	/^	Xapian::Enquire::docid_order order;$/;"	m	class:MultiMatch
order	common/omenquireinternal.h	/^	Xapian::Enquire::docid_order order;$/;"	m	class:Xapian::Enquire::Internal
order	matcher/exactphrasepostlist.h	/^    unsigned * order;$/;"	m	class:ExactPhrasePostList
ordering	common/getopt.cc	/^} ordering;$/;"	v	typeref:enum:__anon9	file:
orig_key	backends/brass/brass_postlist.cc	/^	string orig_key;$/;"	m	class:Brass::PostlistChunkWriter	file:
orig_key	backends/chert/chert_postlist.cc	/^	string orig_key;$/;"	m	class:Chert::PostlistChunkWriter	file:
orig_key	backends/flint/flint_postlist.cc	/^	string orig_key;$/;"	m	class:FlintPostlistChunkWriter	file:
os	common/pretty.h	/^    S & os;$/;"	m	struct:PrettyOStream
os	tests/submitperftest	/^import os$/;"	i
os	tests/submitperftest.in	/^import os$/;"	i
other_base_letter	backends/brass/brass_table.h	/^	char other_base_letter() const {$/;"	f	class:BrassTable
other_base_letter	backends/chert/chert_table.h	/^	char other_base_letter() const {$/;"	f	class:ChertTable
other_base_letter	backends/flint/flint_table.h	/^	char other_base_letter() const {$/;"	f	class:FlintTable
out	backends/brass/brass_check.h	/^	std::ostream &out;$/;"	m	class:BrassTableCheck
out	backends/chert/chert_check.h	/^	std::ostream &out;$/;"	m	class:ChertTableCheck
out	backends/flint/flint_check.h	/^	std::ostream &out;$/;"	m	class:BtreeCheck
out	backends/prefix_compressed_strings.h	/^    std::string & out;$/;"	m	class:PrefixCompressedStringWriter
out	tests/harness/testsuite.h	/^	std::ostream out;$/;"	m	class:test_driver
out	tests/perftest/perftest.h	/^    std::ofstream out;$/;"	m	class:PerfTestLogger
out_grouping_U	languages/steminternal.cc	/^SnowballStemImplementation::out_grouping_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
out_grouping_b_U	languages/steminternal.cc	/^SnowballStemImplementation::out_grouping_b_U(const unsigned char * s, int min,$/;"	f	class:Xapian::SnowballStemImplementation
outbuf	languages/compiler/header.h	/^    struct str * outbuf;       \/* temporary str to store output *\/$/;"	m	struct:generator	typeref:struct:generator::str
outdent	common/debuglog.h	/^    void outdent() {$/;"	f	class:DebugLogger
outname	queryparser/lemon.c	/^  char *outname;           \/* Name of the current output file *\/$/;"	m	struct:lemon	file:
output_c	languages/compiler/header.h	/^    FILE * output_c;$/;"	m	struct:options
output_file	languages/compiler/header.h	/^    char * output_file;$/;"	m	struct:options
output_filename	queryparser/lemon.c	/^static char *output_filename = 0;  \/* Output filename from -o *\/$/;"	v	file:
output_h	languages/compiler/header.h	/^    FILE * output_h;$/;"	m	struct:options
output_header_filename	queryparser/lemon.c	/^static char *output_header_filename = 0;  \/* Output filename from -h *\/$/;"	v	file:
output_java	languages/compiler/header.h	/^    FILE * output_java;$/;"	m	struct:options
output_str	languages/compiler/generator.c	/^static void output_str(FILE * outfile, struct str * str) {$/;"	f	file:
overflow	queryparser/lemon.c	/^  char *overflow;          \/* Code to execute on a stack overflow *\/$/;"	m	struct:lemon	file:
overlapped	common/remoteconnection.h	/^    WSAOVERLAPPED overlapped;$/;"	m	class:RemoteConnection
p	api/omqueryinternal.cc	/^    const char *p;$/;"	m	class:QUnserial	file:
p	backends/brass/brass_cursor.h	/^	byte * p;$/;"	m	class:Brass::Cursor
p	backends/brass/brass_spelling.h	/^    unsigned p;$/;"	m	class:BrassSpellingTermList
p	backends/brass/brass_table.h	/^    T p;$/;"	m	class:Brass::Item_base
p	backends/brass/brass_table.h	/^    const byte *p;$/;"	m	class:Brass::Key
p	backends/brass/brass_values.h	/^    const char *p;$/;"	m	class:Brass::ValueChunkReader
p	backends/byte_length_strings.h	/^    const unsigned char * p;$/;"	m	class:ByteLengthPrefixedStringItor
p	backends/chert/chert_cursor.h	/^	byte * p;$/;"	m	class:Cursor
p	backends/chert/chert_spelling.h	/^    unsigned p;$/;"	m	class:ChertSpellingTermList
p	backends/chert/chert_table.h	/^    T p;$/;"	m	class:Item_base
p	backends/chert/chert_table.h	/^    const byte *p;$/;"	m	class:Key
p	backends/chert/chert_values.h	/^    const char *p;$/;"	m	class:ValueChunkReader
p	backends/flint/flint_cursor.h	/^	byte * p;$/;"	m	class:Cursor_
p	backends/flint/flint_spelling.h	/^    unsigned p;$/;"	m	class:FlintSpellingTermList
p	backends/flint/flint_table.h	/^    T p;$/;"	m	class:Item_base_
p	backends/flint/flint_table.h	/^    const byte *p;$/;"	m	class:Key_
p	backends/prefix_compressed_strings.h	/^    const unsigned char * p;$/;"	m	class:PrefixCompressedStringItor
p	include/xapian/unicode.h	/^    const unsigned char *p;$/;"	m	class:Xapian::Utf8Iterator
p	languages/compiler/header.h	/^    struct node * p; \/* the corresponding command *\/$/;"	m	struct:amongvec	typeref:struct:amongvec::node
p	languages/compiler/header.h	/^    symbol * p;$/;"	m	struct:input
p	languages/compiler/header.h	/^    symbol * p;$/;"	m	struct:tokeniser
p	languages/steminternal.h	/^    symbol * p;$/;"	m	class:Xapian::SnowballStemImplementation
p	queryparser/cjk-tokenizer.h	/^    mutable Xapian::Utf8Iterator p;$/;"	m	class:CJKTokenIterator
pShutdownSocket	net/tcpserver.cc	/^static const int *pShutdownSocket = NULL;$/;"	v	file:
pack_bool	common/pack.h	/^pack_bool(std::string & s, bool value)$/;"	f
pack_brass_postlist_key	common/pack.h	/^pack_brass_postlist_key(const std::string &term)$/;"	f
pack_brass_postlist_key	common/pack.h	/^pack_brass_postlist_key(const std::string &term, Xapian::docid did)$/;"	f
pack_chert_postlist_key	common/pack.h	/^pack_chert_postlist_key(const std::string &term)$/;"	f
pack_chert_postlist_key	common/pack.h	/^pack_chert_postlist_key(const std::string &term, Xapian::docid did)$/;"	f
pack_string	common/pack.h	/^pack_string(std::string & s, const char * ptr)$/;"	f
pack_string	common/pack.h	/^pack_string(std::string & s, const std::string & value)$/;"	f
pack_string_preserving_sort	common/pack.h	/^pack_string_preserving_sort(std::string & s, const std::string & value,$/;"	f
pack_uint	common/pack.h	/^pack_uint(std::string & s, U value)$/;"	f
pack_uint	common/pack.h	/^pack_uint(std::string & s, bool value)$/;"	f
pack_uint_last	common/pack.h	/^pack_uint_last(std::string & s, U value)$/;"	f
pack_uint_preserving_sort	common/pack.h	/^pack_uint_preserving_sort(std::string & s, U value)$/;"	f
pageMap	unicode/unicode-data.cc	/^static const unsigned char pageMap[] = {$/;"	v	file:
param_b	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_k	include/xapian/weight.h	/^    double param_k;$/;"	m	class:Xapian::TradWeight
param_k1	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_k2	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_k3	include/xapian/weight.h	/^    double param_k1, param_k2, param_k3, param_b;$/;"	m	class:Xapian::BM25Weight
param_min_normlen	include/xapian/weight.h	/^    Xapian::doclength param_min_normlen;$/;"	m	class:Xapian::BM25Weight
parameter	include/xapian/query.h	/^	Xapian::termcount parameter;$/;"	m	class:Xapian::Query::Internal
parent_class_name	languages/compiler/header.h	/^    char * parent_class_name;$/;"	m	struct:options
parse_command_line	tests/harness/testsuite.cc	/^test_driver::parse_command_line(int argc, char **argv)$/;"	f	class:test_driver
parse_makefile_am	preautoreconf	/^sub parse_makefile_am {$/;"	s
parse_query	queryparser/queryparser.cc	/^QueryParser::parse_query(const string &query_string, unsigned flags,$/;"	f	class:QueryParser
parse_query	queryparser/queryparser_internal.cc	/^QueryParser::Internal::parse_query(const string &qs, unsigned flags,$/;"	f	class:QueryParser::Internal
parse_term	queryparser/queryparser_internal.cc	/^QueryParser::Internal::parse_term(Utf8Iterator &it, const Utf8Iterator &end,$/;"	f	class:QueryParser::Internal
parseonetoken	queryparser/lemon.c	/^static void parseonetoken(psp)$/;"	f	file:
parser	queryparser/queryparser_internal.cc	/^    yyParser * parser;$/;"	m	class:ParserHandler	file:
path	api/replication.cc	/^    string path;$/;"	m	class:DatabaseReplica::Internal	file:
path	common/replicatetcpserver.h	/^    std::string path;$/;"	m	class:ReplicateTcpServer
path	common/replication.h	/^    std::string path;$/;"	m	class:Xapian::DatabaseMaster
pathsearch	queryparser/lemon.c	/^PRIVATE char *pathsearch(argv0,name,modemask)$/;"	f
pclose	tests/perftest/runprocess.cc	/^# define pclose /;"	d	file:
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	docs/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	tests/Makefile	/^pdfdir = ${docdir}$/;"	m
pending	preautoreconf	/^pending:$/;"	l
percent	include/xapian/types.h	/^typedef int percent;$/;"	t	namespace:Xapian
percent_cutoff	common/multimatch.h	/^	int percent_cutoff;$/;"	m	class:MultiMatch
percent_cutoff	common/omenquireinternal.h	/^	percent percent_cutoff;$/;"	m	class:Xapian::Enquire::Internal
percent_factor	common/omenquireinternal.h	/^	double percent_factor;$/;"	m	class:Xapian::MSet::Internal
percent_factor	matcher/remotesubmatch.h	/^    double percent_factor;$/;"	m	class:RemoteSubMatch
perform	tests/api_closedb.cc	/^    int perform() {$/;"	f	struct:closedb1_iterators
perftest_perftest_DEPENDENCIES	tests/Makefile	/^perftest_perftest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
perftest_perftest_LDADD	tests/Makefile	/^perftest_perftest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
perftest_perftest_LDADD	tests/perftest/Makefile.mk	/^perftest_perftest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
perftest_perftest_LDFLAGS	tests/Makefile	/^perftest_perftest_LDFLAGS = -no-fast-install $(ldflags)$/;"	m
perftest_perftest_LDFLAGS	tests/perftest/Makefile.mk	/^perftest_perftest_LDFLAGS = @NO_INSTALL@ $(ldflags)$/;"	m
perftest_perftest_LINK	tests/Makefile	/^perftest_perftest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
perftest_perftest_OBJECTS	tests/Makefile	/^perftest_perftest_OBJECTS = $(am_perftest_perftest_OBJECTS)$/;"	m
perftest_perftest_SOURCES	tests/Makefile	/^perftest_perftest_SOURCES = perftest\/perftest.cc $(collated_perftest_sources) \\$/;"	m
perftest_perftest_SOURCES	tests/perftest/Makefile.mk	/^perftest_perftest_SOURCES = perftest\/perftest.cc $(collated_perftest_sources) \\$/;"	m
pick	tests/soaktest/soaktest_queries.cc	/^    list<Xapian::Query>::iterator pick(unsigned int num) {$/;"	f	struct:QueryBuilderEnv
pid	backends/flint_lock.h	/^    pid_t pid;$/;"	m	class:FlintLock
pid	common/progclient.h	/^    pid_t pid;$/;"	m	class:ProgClient
pid	tests/harness/backendmanager_remotetcp.cc	/^    pid_t pid;$/;"	m	struct:pid_fd	file:
pid_fd	tests/harness/backendmanager_remotetcp.cc	/^struct pid_fd {$/;"	s	file:
pid_to_fd	tests/harness/backendmanager_remotetcp.cc	/^static pid_fd pid_to_fd[16];$/;"	v	file:
pieces	tests/soaktest/soaktest_queries.cc	/^    list<Xapian::Query> pieces;$/;"	m	struct:QueryBuilderEnv	file:
pkgconfigdir	Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/xapian-core$/;"	m
pkgdatadir	docs/Makefile	/^pkgdatadir = $(datadir)\/xapian-core$/;"	m
pkgdatadir	tests/Makefile	/^pkgdatadir = $(datadir)\/xapian-core$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/xapian-core$/;"	m
pkgincludedir	docs/Makefile	/^pkgincludedir = $(includedir)\/xapian-core$/;"	m
pkgincludedir	tests/Makefile	/^pkgincludedir = $(includedir)\/xapian-core$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/xapian-core$/;"	m
pkglibdir	docs/Makefile	/^pkglibdir = $(libdir)\/xapian-core$/;"	m
pkglibdir	tests/Makefile	/^pkglibdir = $(libdir)\/xapian-core$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/xapian-core$/;"	m
pkglibexecdir	docs/Makefile	/^pkglibexecdir = $(libexecdir)\/xapian-core$/;"	m
pkglibexecdir	tests/Makefile	/^pkglibexecdir = $(libexecdir)\/xapian-core$/;"	m
pl	matcher/extraweightpostlist.h	/^	PostList * pl;$/;"	m	class:ExtraWeightPostList
pl1	tests/api_closedb.cc	/^    Xapian::PostingIterator pl1;$/;"	m	struct:closedb1_iterators	file:
pl2	tests/api_closedb.cc	/^    Xapian::PostingIterator pl2;$/;"	m	struct:closedb1_iterators	file:
pl_changes	backends/brass/brass_inverter.h	/^	std::map<Xapian::docid, Xapian::termcount> pl_changes;$/;"	m	class:Inverter::PostingChanges
plend	tests/api_closedb.cc	/^    Xapian::PostingIterator plend;$/;"	m	struct:closedb1_iterators	file:
plink	queryparser/lemon.c	/^struct plink {$/;"	s	file:
plink_freelist	queryparser/lemon.c	/^static struct plink *plink_freelist = 0;$/;"	v	typeref:struct:plink	file:
plist	matcher/multiandpostlist.h	/^    PostList ** plist;$/;"	m	class:MultiAndPostList
plist	matcher/multixorpostlist.h	/^    PostList ** plist;$/;"	m	class:MultiXorPostList
plists	matcher/mergepostlist.h	/^	vector<PostList *> plists;$/;"	m	class:MergePostList
pointer	include/xapian/enquire.h	/^	typedef MSetIterator * pointer; \/\/ Hmm$/;"	t	class:Xapian::MSet
pointer	include/xapian/enquire.h	/^	typedef Xapian::docid * pointer;$/;"	t	class:Xapian::MSetIterator
pointer	include/xapian/enquire.h	/^	typedef std::string * pointer;$/;"	t	class:Xapian::ESetIterator
pointer	include/xapian/positioniterator.h	/^	typedef Xapian::termpos * pointer;$/;"	t	class:Xapian::PositionIterator
pointer	include/xapian/postingiterator.h	/^	typedef Xapian::docid * pointer;$/;"	t	class:Xapian::PostingIterator
pointer	include/xapian/termiterator.h	/^	typedef std::string * pointer;$/;"	t	class:Xapian::TermIterator
pointer	include/xapian/unicode.h	/^    typedef const unsigned * pointer;$/;"	t	class:Xapian::Utf8Iterator
pointer	include/xapian/valueiterator.h	/^    typedef std::string * pointer;$/;"	t	class:Xapian::ValueIterator
pool_size	languages/compiler/generator.c	/^static unsigned pool_size = 0;$/;"	v	file:
pop	tests/soaktest/soaktest_queries.cc	/^    Xapian::Query pop() {$/;"	f	struct:QueryBuilderEnv
popen	tests/perftest/runprocess.cc	/^# define popen /;"	d	file:
pos	backends/brass/brass_postlist.cc	/^    const char *pos;$/;"	m	class:Brass::PostlistChunkReader	file:
pos	backends/brass/brass_postlist.h	/^	const char * pos;$/;"	m	class:BrassPostList
pos	backends/brass/brass_termlist.h	/^    const char *pos;$/;"	m	class:BrassTermList
pos	backends/chert/chert_postlist.cc	/^    const char *pos;$/;"	m	class:Chert::PostlistChunkReader	file:
pos	backends/chert/chert_postlist.h	/^	const char * pos;$/;"	m	class:ChertPostList
pos	backends/chert/chert_termlist.h	/^    const char *pos;$/;"	m	class:ChertTermList
pos	backends/flint/flint_postlist.cc	/^	const char *pos;$/;"	m	class:FlintPostlistChunkReader	file:
pos	backends/flint/flint_postlist.h	/^	const char * pos;$/;"	m	class:FlintPostList
pos	backends/flint/flint_termlist.h	/^    const char *pos;$/;"	m	class:FlintTermList
pos	backends/inmemory/inmemory_database.h	/^	vector<InMemoryPosting>::const_iterator pos;$/;"	m	class:InMemoryPostList
pos	backends/inmemory/inmemory_database.h	/^	vector<InMemoryTermEntry>::const_iterator pos;$/;"	m	class:InMemoryTermList
pos	backends/remote/net_postlist.h	/^    const char * pos;$/;"	m	class:NetworkPostList
pos	queryparser/queryparser_internal.cc	/^    termpos pos;$/;"	m	class:Term	file:
pos_end	backends/remote/net_postlist.h	/^    const char * pos_end;$/;"	m	class:NetworkPostList
position_table	backends/brass/brass_database.h	/^	BrassPositionListTable position_table;$/;"	m	class:BrassDatabase
position_table	backends/chert/chert_database.h	/^	ChertPositionListTable position_table;$/;"	m	class:ChertDatabase
position_table	backends/flint/flint_database.h	/^	FlintPositionListTable position_table;$/;"	m	class:FlintDatabase
positional	tests/harness/testrunner.h	/^    bool positional;$/;"	m	class:TestRunner
positionlist	backends/brass/brass_postlist.h	/^	BrassPositionList positionlist;$/;"	m	class:BrassPostList
positionlist	backends/chert/chert_postlist.h	/^	ChertPositionList positionlist;$/;"	m	class:ChertPostList
positionlist	backends/flint/flint_postlist.h	/^	FlintPositionList positionlist;$/;"	m	class:FlintPostList
positionlist_begin	api/maptermlist.h	/^	Xapian::PositionIterator positionlist_begin() const {$/;"	f	class:MapTermList
positionlist_begin	api/matchspy.cc	/^    Xapian::PositionIterator positionlist_begin() const {$/;"	f	class:StringAndFreqTermList
positionlist_begin	api/matchspy.cc	/^    Xapian::PositionIterator positionlist_begin() const {$/;"	f	class:ValueCountTermList
positionlist_begin	api/omdatabase.cc	/^Database::positionlist_begin(Xapian::docid did, const string &tname) const$/;"	f	class:Xapian::Database
positionlist_begin	api/ompostlistiterator.cc	/^Xapian::PostingIterator::positionlist_begin() const$/;"	f	class:Xapian::PostingIterator
positionlist_begin	api/omtermlistiterator.cc	/^Xapian::TermIterator::positionlist_begin() const$/;"	f	class:Xapian::TermIterator
positionlist_begin	backends/alltermslist.cc	/^AllTermsList::positionlist_begin() const$/;"	f	class:AllTermsList
positionlist_begin	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::positionlist_begin() const$/;"	f	class:BrassSpellingTermList
positionlist_begin	backends/brass/brass_termlist.cc	/^BrassTermList::positionlist_begin() const$/;"	f	class:BrassTermList
positionlist_begin	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::positionlist_begin() const$/;"	f	class:ChertSpellingTermList
positionlist_begin	backends/chert/chert_termlist.cc	/^ChertTermList::positionlist_begin() const$/;"	f	class:ChertTermList
positionlist_begin	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::positionlist_begin() const$/;"	f	class:FlintSpellingTermList
positionlist_begin	backends/flint/flint_termlist.cc	/^FlintTermList::positionlist_begin() const$/;"	f	class:FlintTermList
positionlist_begin	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::positionlist_begin() const$/;"	f	class:InMemoryTermList
positionlist_begin	backends/multi/multi_termlist.cc	/^MultiTermList::positionlist_begin() const$/;"	f	class:MultiTermList
positionlist_begin	backends/remote/net_termlist.cc	/^NetworkTermList::positionlist_begin() const$/;"	f	class:NetworkTermList
positionlist_begin	common/vectortermlist.h	/^	Xapian::PositionIterator positionlist_begin() const {$/;"	f	class:VectorTermList
positionlist_begin	expand/ortermlist.cc	/^OrTermList::positionlist_begin() const$/;"	f	class:OrTermList
positionlist_count	api/maptermlist.h	/^	Xapian::termcount positionlist_count() const {$/;"	f	class:MapTermList
positionlist_count	api/matchspy.cc	/^    Xapian::termcount positionlist_count() const { unsupported_method(); return 0; }$/;"	f	class:StringAndFreqTermList
positionlist_count	api/matchspy.cc	/^    Xapian::termcount positionlist_count() const { unsupported_method(); return 0; }$/;"	f	class:ValueCountTermList
positionlist_count	api/omtermlistiterator.cc	/^Xapian::TermIterator::positionlist_count() const$/;"	f	class:Xapian::TermIterator
positionlist_count	backends/alltermslist.cc	/^AllTermsList::positionlist_count() const$/;"	f	class:AllTermsList
positionlist_count	backends/brass/brass_positionlist.cc	/^BrassPositionListTable::positionlist_count(Xapian::docid did,$/;"	f	class:BrassPositionListTable
positionlist_count	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::positionlist_count() const$/;"	f	class:BrassSpellingTermList
positionlist_count	backends/brass/brass_termlist.cc	/^BrassTermList::positionlist_count() const$/;"	f	class:BrassTermList
positionlist_count	backends/chert/chert_positionlist.cc	/^ChertPositionListTable::positionlist_count(Xapian::docid did,$/;"	f	class:ChertPositionListTable
positionlist_count	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::positionlist_count() const$/;"	f	class:ChertSpellingTermList
positionlist_count	backends/chert/chert_termlist.cc	/^ChertTermList::positionlist_count() const$/;"	f	class:ChertTermList
positionlist_count	backends/flint/flint_positionlist.cc	/^FlintPositionListTable::positionlist_count(Xapian::docid did,$/;"	f	class:FlintPositionListTable
positionlist_count	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::positionlist_count() const$/;"	f	class:FlintSpellingTermList
positionlist_count	backends/flint/flint_termlist.cc	/^FlintTermList::positionlist_count() const$/;"	f	class:FlintTermList
positionlist_count	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::positionlist_count(Xapian::docid did,$/;"	f	class:InMemoryDatabase
positionlist_count	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::positionlist_count() const$/;"	f	class:InMemoryTermList
positionlist_count	backends/multi/multi_termlist.cc	/^MultiTermList::positionlist_count() const$/;"	f	class:MultiTermList
positionlist_count	backends/remote/net_termlist.cc	/^NetworkTermList::positionlist_count() const$/;"	f	class:NetworkTermList
positionlist_count	common/vectortermlist.h	/^	Xapian::termcount positionlist_count() const {$/;"	f	class:VectorTermList
positionlist_count	expand/ortermlist.cc	/^OrTermList::positionlist_count() const$/;"	f	class:OrTermList
positionlist_end	include/xapian/database.h	/^	PositionIterator positionlist_end(Xapian::docid, const std::string &) const {$/;"	f	class:Xapian::Database
positionlist_end	include/xapian/postingiterator.h	/^	PositionIterator positionlist_end() const {$/;"	f	class:Xapian::PostingIterator
positionlist_end	include/xapian/termiterator.h	/^	PositionIterator positionlist_end() const {$/;"	f	class:Xapian::TermIterator
positions	backends/brass/brass_positionlist.h	/^    vector<Xapian::termpos> positions;$/;"	m	class:BrassPositionList
positions	backends/chert/chert_positionlist.h	/^    vector<Xapian::termpos> positions;$/;"	m	class:ChertPositionList
positions	backends/flint/flint_positionlist.h	/^    vector<Xapian::termpos> positions;$/;"	m	class:FlintPositionList
positions	backends/inmemory/inmemory_database.h	/^	vector<Xapian::termpos> positions; \/\/ Sorted vector of positions$/;"	m	class:InMemoryPosting
positions	backends/inmemory/inmemory_database.h	/^	vector<Xapian::termpos> positions; \/\/ Sorted vector of positions$/;"	m	class:InMemoryTermEntry
positions	common/documentterm.h	/^    term_positions positions;$/;"	m	class:OmDocumentTerm
positions	common/inmemory_positionlist.h	/^	vector<Xapian::termpos> positions;$/;"	m	class:InMemoryPositionList
positions_modified	common/document.h	/^	mutable bool positions_modified;$/;"	m	class:Xapian::Document::Internal
positions_present	backends/inmemory/inmemory_database.h	/^    bool positions_present;$/;"	m	class:InMemoryDatabase
positions_to_string	tests/dbcheck.cc	/^positions_to_string(Xapian::PositionIterator & it,$/;"	f
posixly_correct	common/getopt.cc	/^static char *posixly_correct;$/;"	v	file:
poslist	backends/chert/chert_modifiedpostlist.h	/^    PositionList * poslist;$/;"	m	class:ChertModifiedPostList
poslist	backends/flint/flint_modifiedpostlist.h	/^    PositionList * poslist;$/;"	m	class:FlintModifiedPostList
poslists	matcher/exactphrasepostlist.h	/^    PositionList ** poslists;$/;"	m	class:ExactPhrasePostList
possibly_make_offline_live	api/replication.cc	/^DatabaseReplica::Internal::possibly_make_offline_live()$/;"	f	class:DatabaseReplica::Internal
postings	backends/remote/net_postlist.h	/^    string postings;$/;"	m	class:NetworkPostList
postingsources	common/registryinternal.h	/^    std::map<std::string, Xapian::PostingSource *> postingsources;$/;"	m	class:Xapian::Registry::Internal
postlist_begin	api/omdatabase.cc	/^Database::postlist_begin(const string &tname) const$/;"	f	class:Xapian::Database
postlist_changes	backends/brass/brass_inverter.h	/^    std::map<std::string, PostingChanges> postlist_changes;$/;"	m	class:Inverter
postlist_end	include/xapian/database.h	/^	PostingIterator postlist_end(const std::string &) const {$/;"	f	class:Xapian::Database
postlist_from_op_leaf_query	matcher/localsubmatch.cc	/^LocalSubMatch::postlist_from_op_leaf_query(const Xapian::Query::Internal *leaf,$/;"	f	class:LocalSubMatch
postlist_table	backends/brass/brass_database.h	/^	mutable BrassPostListTable postlist_table;$/;"	m	class:BrassDatabase
postlist_table	backends/brass/brass_values.h	/^    BrassPostListTable * postlist_table;$/;"	m	class:BrassValueManager
postlist_table	backends/chert/chert_database.h	/^	mutable ChertPostListTable postlist_table;$/;"	m	class:ChertDatabase
postlist_table	backends/chert/chert_values.h	/^    ChertPostListTable * postlist_table;$/;"	m	class:ChertValueManager
postlist_table	backends/flint/flint_database.h	/^	mutable FlintPostListTable postlist_table;$/;"	m	class:FlintDatabase
postlist_to_string	tests/dbcheck.cc	/^postlist_to_string(const Xapian::Database & db, const string & tname)$/;"	f
postlists	backends/inmemory/inmemory_database.h	/^    map<string, InMemoryTerm> postlists;$/;"	m	class:InMemoryDatabase
postlists	backends/multi/multi_postlist.h	/^	std::vector<LeafPostList *> postlists;$/;"	m	class:MultiPostList
prec	queryparser/lemon.c	/^  int prec;                \/* Precedence if defined (-1 otherwise) *\/$/;"	m	struct:symbol	file:
preccounter	queryparser/lemon.c	/^  int preccounter;           \/* Assign this precedence to decl arguments *\/$/;"	m	struct:pstate	file:
precsym	queryparser/lemon.c	/^  struct symbol *precsym;  \/* Precedence symbol for this rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
prefer_mdy	include/xapian/queryparser.h	/^    bool prefer_mdy;$/;"	m	class:Xapian::DateValueRangeProcessor
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	backends/brass/brass_alltermslist.h	/^    std::string prefix;$/;"	m	class:BrassAllTermsList
prefix	backends/brass/brass_metadata.h	/^    std::string prefix;$/;"	m	class:BrassMetadataTermList
prefix	backends/brass/brass_synonym.h	/^    string prefix;$/;"	m	class:BrassSynonymTermList
prefix	backends/chert/chert_alltermslist.h	/^    std::string prefix;$/;"	m	class:ChertAllTermsList
prefix	backends/chert/chert_metadata.h	/^    std::string prefix;$/;"	m	class:ChertMetadataTermList
prefix	backends/chert/chert_synonym.h	/^    string prefix;$/;"	m	class:ChertSynonymTermList
prefix	backends/flint/flint_alltermslist.h	/^    std::string prefix;$/;"	m	class:FlintAllTermsList
prefix	backends/flint/flint_metadata.h	/^    std::string prefix;$/;"	m	class:FlintMetadataTermList
prefix	backends/flint/flint_synonym.h	/^    string prefix;$/;"	m	class:FlintSynonymTermList
prefix	backends/inmemory/inmemory_alltermslist.h	/^	string prefix;$/;"	m	class:InMemoryAllTermsList
prefix	docs/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	include/xapian/queryparser.h	/^    bool prefix;$/;"	m	class:Xapian::StringValueRangeProcessor
prefix	tests/Makefile	/^prefix = \/usr\/local$/;"	m
prefix_info	queryparser/queryparser_internal.cc	/^    const PrefixInfo * prefix_info;$/;"	m	class:Term	file:
prefix_info	queryparser/queryparser_internal.cc	/^    const PrefixInfo *prefix_info;$/;"	m	struct:filter_group_id	file:
prefix_needs_colon	queryparser/queryparser_internal.cc	/^prefix_needs_colon(const string & prefix, unsigned ch)$/;"	f
prefixes	queryparser/queryparser_internal.cc	/^    const list<string> * prefixes;$/;"	m	class:Terms	file:
prefixes	queryparser/queryparser_internal.h	/^    list<string> prefixes;$/;"	m	struct:PrefixInfo
prefixmap	queryparser/queryparser_internal.h	/^    map<string, PrefixInfo> prefixmap;$/;"	m	class:Xapian::QueryParser::Internal
prepare_match	matcher/localsubmatch.cc	/^LocalSubMatch::prepare_match(bool nowait,$/;"	f	class:LocalSubMatch
prepare_match	matcher/remotesubmatch.cc	/^RemoteSubMatch::prepare_match(bool nowait,$/;"	f	class:RemoteSubMatch
prepare_sub_matches	matcher/multimatch.cc	/^prepare_sub_matches(vector<Xapian::Internal::RefCntPtr<SubMatch> > & leaves,$/;"	f	file:
preprocess_input	queryparser/lemon.c	/^static void preprocess_input(char *z){$/;"	f	file:
prev	backends/brass/brass_cursor.cc	/^BrassCursor::prev()$/;"	f	class:BrassCursor
prev	backends/brass/brass_table.h	/^	bool prev(Brass::Cursor *C_, int j) const {$/;"	f	class:BrassTable
prev	backends/chert/chert_cursor.cc	/^ChertCursor::prev()$/;"	f	class:ChertCursor
prev	backends/chert/chert_table.h	/^	bool prev(Cursor *C_, int j) const {$/;"	f	class:ChertTable
prev	backends/flint/flint_cursor.cc	/^FlintCursor::prev()$/;"	f	class:FlintCursor
prev	backends/flint/flint_table.h	/^	bool prev(Cursor_ *C_, int j) const {$/;"	f	class:FlintTable
prev_default	backends/brass/brass_table.cc	/^BrassTable::prev_default(Brass::Cursor * C_, int j) const$/;"	f	class:BrassTable
prev_default	backends/chert/chert_table.cc	/^ChertTable::prev_default(Cursor * C_, int j) const$/;"	f	class:ChertTable
prev_default	backends/flint/flint_table.cc	/^FlintTable::prev_default(Cursor_ * C_, int j) const$/;"	f	class:FlintTable
prev_did	backends/brass/brass_values.cc	/^    Xapian::docid prev_did;$/;"	m	class:Brass::ValueUpdater	file:
prev_did	backends/chert/chert_values.cc	/^    Xapian::docid prev_did;$/;"	m	class:ValueUpdater	file:
prev_for_sequential	backends/brass/brass_table.cc	/^BrassTable::prev_for_sequential(Brass::Cursor * C_, int \/*dummy*\/) const$/;"	f	class:BrassTable
prev_for_sequential	backends/chert/chert_table.cc	/^ChertTable::prev_for_sequential(Cursor * C_, int \/*dummy*\/) const$/;"	f	class:ChertTable
prev_for_sequential	backends/flint/flint_table.cc	/^FlintTable::prev_for_sequential(Cursor_ * C_, int \/*dummy*\/) const$/;"	f	class:FlintTable
previous_token	languages/compiler/header.h	/^    int previous_token;$/;"	m	struct:tokeniser
prevrule	queryparser/lemon.c	/^  struct rule *prevrule;     \/* Previous rule parsed *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
print_arglist	languages/compiler/driver.c	/^static void print_arglist(void) {$/;"	f	file:
print_bytes	backends/brass/brass_check.cc	/^void BrassTableCheck::print_bytes(int n, const byte * p) const$/;"	f	class:BrassTableCheck
print_bytes	backends/chert/chert_check.cc	/^void ChertTableCheck::print_bytes(int n, const byte * p) const$/;"	f	class:ChertTableCheck
print_bytes	backends/flint/flint_check.cc	/^void BtreeCheck::print_bytes(int n, const byte * p) const$/;"	f	class:BtreeCheck
print_key	backends/brass/brass_check.cc	/^void BrassTableCheck::print_key(const byte * p, int c, int j) const$/;"	f	class:BrassTableCheck
print_key	backends/chert/chert_check.cc	/^void ChertTableCheck::print_key(const byte * p, int c, int j) const$/;"	f	class:ChertTableCheck
print_key	backends/flint/flint_check.cc	/^void BtreeCheck::print_key(const byte * p, int c, int j) const$/;"	f	class:BtreeCheck
print_mset_percentages	tests/api_anydb.cc	/^print_mset_percentages(const Xapian::MSet &mset)$/;"	f	file:
print_mset_weights	tests/api_anydb.cc	/^print_mset_weights(const Xapian::MSet &mset)$/;"	f	file:
print_node_	languages/compiler/analyser.c	/^static void print_node_(struct node * p, int n, char * s) {$/;"	f	file:
print_program	languages/compiler/analyser.c	/^extern void print_program(struct analyser * a) {$/;"	f
print_spaces	backends/brass/brass_check.cc	/^void BrassTableCheck::print_spaces(int n) const$/;"	f	class:BrassTableCheck
print_spaces	backends/chert/chert_check.cc	/^void ChertTableCheck::print_spaces(int n) const$/;"	f	class:ChertTableCheck
print_spaces	backends/flint/flint_check.cc	/^void BtreeCheck::print_spaces(int n) const$/;"	f	class:BtreeCheck
print_stack_union	queryparser/lemon.c	/^void print_stack_union(out,lemp,plineno,mhflag)$/;"	f
print_tag	backends/brass/brass_check.cc	/^void BrassTableCheck::print_tag(const byte * p, int c, int j) const$/;"	f	class:BrassTableCheck
print_tag	backends/chert/chert_check.cc	/^void ChertTableCheck::print_tag(const byte * p, int c, int j) const$/;"	f	class:ChertTableCheck
print_tag	backends/flint/flint_check.cc	/^void BtreeCheck::print_tag(const byte * p, int c, int j) const$/;"	f	class:BtreeCheck
pro-attribs	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	docs/apidoc/html/classXapian_1_1ValuePostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-methods	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	docs/apidoc/html/classXapian_1_1MatchSpy.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	docs/apidoc/html/classXapian_1_1PostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	docs/apidoc/html/classXapian_1_1Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-types	docs/apidoc/html/classXapian_1_1Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"><\/a>$/;"	a
process	matcher/collapser.cc	/^Collapser::process(Xapian::Internal::MSetItem & item,$/;"	f	class:Collapser
process_changeset_chunk_base	backends/brass/brass_databasereplicator.cc	/^BrassDatabaseReplicator::process_changeset_chunk_base(const string & tablename,$/;"	f	class:BrassDatabaseReplicator
process_changeset_chunk_base	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::process_changeset_chunk_base(const string & tablename,$/;"	f	class:ChertDatabaseReplicator
process_changeset_chunk_base	backends/flint/flint_databasereplicator.cc	/^FlintDatabaseReplicator::process_changeset_chunk_base(const string & tablename,$/;"	f	class:FlintDatabaseReplicator
process_changeset_chunk_blocks	backends/brass/brass_databasereplicator.cc	/^BrassDatabaseReplicator::process_changeset_chunk_blocks(const string & tablename,$/;"	f	class:BrassDatabaseReplicator
process_changeset_chunk_blocks	backends/chert/chert_databasereplicator.cc	/^ChertDatabaseReplicator::process_changeset_chunk_blocks(const string & tablename,$/;"	f	class:ChertDatabaseReplicator
process_changeset_chunk_blocks	backends/flint/flint_databasereplicator.cc	/^FlintDatabaseReplicator::process_changeset_chunk_blocks(const string & tablename,$/;"	f	class:FlintDatabaseReplicator
process_next_or_skip_to	matcher/andmaybepostlist.cc	/^AndMaybePostList::process_next_or_skip_to(Xapian::weight w_min, PostList *ret)$/;"	f	class:AndMaybePostList
program	languages/compiler/header.h	/^    struct node * program;$/;"	m	struct:analyser	typeref:struct:analyser::node
program_end	languages/compiler/header.h	/^    struct node * program_end;$/;"	m	struct:analyser	typeref:struct:analyser::node
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	docs/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	tests/Makefile	/^program_transform_name = s,x,x,$/;"	m
properties	tests/harness/testrunner.cc	/^    const char * properties;$/;"	m	struct:BackendProperties	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	docs/Makefile	/^psdir = ${docdir}$/;"	m
psdir	tests/Makefile	/^psdir = ${docdir}$/;"	m
pstate	queryparser/lemon.c	/^struct pstate {$/;"	s	file:
ptr	api/editdistance.cc	/^    const CHR * ptr;$/;"	m	struct:edist_seq	file:
pub-methods	docs/apidoc/html/classXapian_1_1AssertionError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1BM25Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1BoolWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Compactor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Database.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseCorruptError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseCreateError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseLockError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseModifiedError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseOpeningError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DatabaseVersionError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DateValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DecreasingValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1DocNotFoundError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Document.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ESet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ESetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Enquire.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Error.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ErrorHandler.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ExpandDecider.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ExpandDeciderAnd.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ExpandDeciderFilterTerms.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1FeatureUnavailableError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1FixedWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1InternalError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1InvalidArgumentError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1InvalidOperationError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1KeyMaker.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MSet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MSetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MatchDecider.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MatchSpy.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MultiValueKeyMaker.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1MultiValueSorter.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1NetworkError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1NetworkTimeoutError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1NumberValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PositionIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PostingIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1PostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1QueryParser.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1QueryParserError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1RSet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1RangeError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Registry.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1SerialisationError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1SimpleStopper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Stem.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Stopper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1StringValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1TermGenerator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1TermIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1TradWeight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1UnimplementedError.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Utf8Iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueCountMatchSpy.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueMapPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValuePostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueSetMatchDecider.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1ValueWeightPostingSource.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1Weight.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/classXapian_1_1WritableDatabase.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/structXapian_1_1StemImplementation.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/apidoc/html/structXapian_1_1ValueRangeProcessor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-static-attribs	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pub-static-methods	docs/apidoc/html/classXapian_1_1Document.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	docs/apidoc/html/classXapian_1_1Stem.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1ESetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1MSet.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1MSetIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1PostingIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1Query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1QueryParser.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1TermGenerator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1TermIterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	docs/apidoc/html/classXapian_1_1Utf8Iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
push_leaf_N	tests/soaktest/soaktest_queries.cc	/^static void push_leaf_N(QueryBuilderEnv & env)$/;"	f	file:
put_utf8	languages/compiler/space.c	/^extern int put_utf8(int ch, symbol * p) {$/;"	f
qint_from_vector	api/omqueryinternal.cc	/^qint_from_vector(Xapian::Query::op op,$/;"	f	file:
qlen	common/omenquireinternal.h	/^	termcount qlen;$/;"	m	class:Xapian::Enquire::Internal
qlen	matcher/localsubmatch.h	/^    Xapian::termcount qlen;$/;"	m	class:LocalSubMatch
qp_flag	examples/quest.cc	/^struct qp_flag { const char * s; unsigned f; };$/;"	s	file:
qp_op	examples/quest.cc	/^struct qp_op { const char * s; unsigned f; };$/;"	s	file:
qp_scale1_helper	tests/queryparsertest.cc	/^qp_scale1_helper(const Xapian::Database &db, const string & q, unsigned n,$/;"	f	file:
qpi	queryparser/queryparser_internal.cc	/^    QueryParser::Internal * qpi;$/;"	m	class:State	file:
query	common/multimatch.h	/^	const Xapian::Query::Internal *query;$/;"	m	class:MultiMatch
query	common/omenquireinternal.h	/^	Query query;$/;"	m	class:Xapian::Enquire::Internal
query	matcher/localsubmatch.h	/^    const Xapian::Query::Internal * query;$/;"	m	class:LocalSubMatch
query	queryparser/queryparser_internal.cc	/^    Query * query;$/;"	m	struct:ProbQuery	file:
query	queryparser/queryparser_internal.cc	/^    Query query;$/;"	m	class:State	file:
query	tests/api_anydb.cc	/^query(Xapian::Query::op op, Xapian::termcount parameter,$/;"	f	file:
query	tests/api_anydb.cc	/^query(Xapian::Query::op op,$/;"	f	file:
query	tests/api_anydb.cc	/^query(const string &t)$/;"	f	file:
query	tests/api_db.cc	/^query(const string &t)$/;"	f	file:
query	tests/api_qpbackend.cc	/^    const char *query;$/;"	m	struct:test	file:
query	tests/queryparsertest.cc	/^    const char *query;$/;"	m	struct:test	file:
query_length_	include/xapian/weight.h	/^    Xapian::termcount query_length_;$/;"	m	class:Xapian::Weight
queryparsertest_DEPENDENCIES	tests/Makefile	/^queryparsertest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
queryparsertest_LDADD	tests/Makefile	/^queryparsertest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
queryparsertest_LDFLAGS	tests/Makefile	/^queryparsertest_LDFLAGS = -no-fast-install $(ldflags)$/;"	m
queryparsertest_LINK	tests/Makefile	/^queryparsertest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
queryparsertest_OBJECTS	tests/Makefile	/^queryparsertest_OBJECTS = $(am_queryparsertest_OBJECTS)$/;"	m
queryparsertest_SOURCES	tests/Makefile	/^queryparsertest_SOURCES = queryparsertest.cc $(testharness_sources)$/;"	m
quiet	bin/xapian-compact.cc	/^    bool quiet;$/;"	m	class:MyCompactor	file:
r	matcher/branchpostlist.h	/^	PostList *r;$/;"	m	class:BranchPostList
r_A	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_A() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_AA	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_AA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_B	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_B() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_BB	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_BB() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_C	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_C() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_C	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_C() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_CC	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_CC() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_D	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_D() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_E	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_E() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_F	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_F() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_G	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_G() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_H	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_H() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_I	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_I() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_J	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_J() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_K	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_K() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_L	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_L() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_LONG	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_LONG() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_Lose_infix	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Lose_infix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Lose_prefix	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Lose_prefix() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_M	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_M() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_N	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_N() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_O	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_O() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_P	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_P() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Q	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_Q() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_R	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_R() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_R1	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_R1	languages/english.cc	/^int Xapian::InternalStemEnglish::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_R1	languages/french.cc	/^int Xapian::InternalStemFrench::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_R1	languages/german.cc	/^int Xapian::InternalStemGerman::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_R1	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_R1	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_R1	languages/italian.cc	/^int Xapian::InternalStemItalian::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_R1	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_R1	languages/porter.cc	/^int Xapian::InternalStemPorter::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_R1	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_R1	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_R1	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_R1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_R2	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_R2	languages/english.cc	/^int Xapian::InternalStemEnglish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_R2	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_R2	languages/french.cc	/^int Xapian::InternalStemFrench::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_R2	languages/german.cc	/^int Xapian::InternalStemGerman::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_R2	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_R2	languages/italian.cc	/^int Xapian::InternalStemItalian::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_R2	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_R2	languages/porter.cc	/^int Xapian::InternalStemPorter::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_R2	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_R2	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_R2	languages/russian.cc	/^int Xapian::InternalStemRussian::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_R2	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_R2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_RV	languages/french.cc	/^int Xapian::InternalStemFrench::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_RV	languages/italian.cc	/^int Xapian::InternalStemItalian::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_RV	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_RV	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_RV	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_RV() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_S	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_S() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Step_1	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_1() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_1a	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_1a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_1a	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_1a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_1b	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_1b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_1b	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_1b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_1c	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_1c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_1c	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_1c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_1c	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_1c() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_2	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_2	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_2	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_3	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_3	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_3	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_3() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_4	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_4() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_4	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_4() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_4	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_4() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_5	languages/english.cc	/^int Xapian::InternalStemEnglish::r_Step_5() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_Step_5a	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_5a() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_5b	languages/porter.cc	/^int Xapian::InternalStemPorter::r_Step_5b() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_Step_6	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_6() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_Step_7	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_Step_7() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_T	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_T() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_U	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_U() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_V	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_V() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_V	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_V() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_VI	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_VI() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_VX	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_VX() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_W	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_W() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_X	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_X() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Y	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_Y() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_Z	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_Z() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_adjectival	languages/russian.cc	/^int Xapian::InternalStemRussian::r_adjectival() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_adjective	languages/russian.cc	/^int Xapian::InternalStemRussian::r_adjective() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_append_U_to_stems_ending_with_d_or_g	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_append_U_to_stems_ending_with_d_or_g() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_attached_pronoun	languages/italian.cc	/^int Xapian::InternalStemItalian::r_attached_pronoun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_attached_pronoun	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_attached_pronoun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_case	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_case() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_case_ending	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_case_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_case_other	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_case_other() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_case_special	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_case_special() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_check_vowel_harmony	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_check_vowel_harmony() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_combo_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_combo_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_consonant_pair	languages/danish.cc	/^int Xapian::InternalStemDanish::r_consonant_pair() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_consonant_pair	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_consonant_pair() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_consonant_pair	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_consonant_pair() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_derivational	languages/russian.cc	/^int Xapian::InternalStemRussian::r_derivational() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_double	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_double() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_e_ending	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_e_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_en_ending	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_en_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_endings	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_endings() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_exception1	languages/english.cc	/^int Xapian::InternalStemEnglish::r_exception1() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_exception2	languages/english.cc	/^int Xapian::InternalStemEnglish::r_exception2() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_factive	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_factive() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_i_plural	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_i_plural() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_i_verb_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_i_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_instrum	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_instrum() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_is_reserved_word	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_is_reserved_word() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_lengthen_V	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_lengthen_V() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_main_suffix	languages/danish.cc	/^int Xapian::InternalStemDanish::r_main_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_main_suffix	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_main_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_main_suffix	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_main_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_mark_DA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_DA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_DAn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_DAn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_DUr	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_DUr() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_cAsInA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_cAsInA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ki	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ki() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_lAr	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_lAr() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_lArI	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_lArI() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nUn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nUn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_nUz	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_nUz() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ncA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ncA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ndA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ndA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ndAn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ndAn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_possessives	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_possessives() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_regions	languages/danish.cc	/^int Xapian::InternalStemDanish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_mark_regions	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_mark_regions	languages/english.cc	/^int Xapian::InternalStemEnglish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_mark_regions	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_mark_regions	languages/french.cc	/^int Xapian::InternalStemFrench::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_mark_regions	languages/german.cc	/^int Xapian::InternalStemGerman::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_mark_regions	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_mark_regions	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_mark_regions	languages/italian.cc	/^int Xapian::InternalStemItalian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_mark_regions	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_mark_regions	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_mark_regions	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_mark_regions	languages/russian.cc	/^int Xapian::InternalStemRussian::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_mark_regions	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_mark_regions	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_mark_regions() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_mark_sU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_sU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_sUn	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_sUn() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_sUnUz	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_sUnUz() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_U_vowel	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_U_vowel() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_n_consonant	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_n_consonant() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_s_consonant	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_s_consonant() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_suffix_with_optional_y_consonant	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_suffix_with_optional_y_consonant() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yDU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yDU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yU	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yU() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yUm	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yUm() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yUz	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yUz() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_yken	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_yken() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ylA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ylA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ymUs_	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ymUs_() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_mark_ysA	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_mark_ysA() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_measure	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::r_measure() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
r_more_than_one_syllable_word	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_more_than_one_syllable_word() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_noun	languages/russian.cc	/^int Xapian::InternalStemRussian::r_noun() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_other_endings	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_other_endings() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_other_suffix	languages/danish.cc	/^int Xapian::InternalStemDanish::r_other_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_other_suffix	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::r_other_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
r_other_suffix	languages/swedish.cc	/^int Xapian::InternalStemSwedish::r_other_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
r_owned	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_owned() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_particle_etc	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_particle_etc() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_perfective_gerund	languages/russian.cc	/^int Xapian::InternalStemRussian::r_perfective_gerund() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_plur_owner	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_plur_owner() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_plural	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_plural() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_possessive	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_possessive() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_post_process_last_consonants	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_post_process_last_consonants() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_postlude	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_postlude	languages/english.cc	/^int Xapian::InternalStemEnglish::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_postlude	languages/french.cc	/^int Xapian::InternalStemFrench::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_postlude	languages/german.cc	/^int Xapian::InternalStemGerman::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_postlude	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_postlude	languages/italian.cc	/^int Xapian::InternalStemItalian::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_postlude	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_postlude	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_postlude	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_postlude	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_postlude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_prelude	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_prelude	languages/english.cc	/^int Xapian::InternalStemEnglish::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_prelude	languages/french.cc	/^int Xapian::InternalStemFrench::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_prelude	languages/german.cc	/^int Xapian::InternalStemGerman::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_prelude	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_prelude	languages/italian.cc	/^int Xapian::InternalStemItalian::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_prelude	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_prelude	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_prelude() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_r_p	tests/unittest.cc	/^r_r_p(string a, const string & b)$/;"	f
r_reflexive	languages/russian.cc	/^int Xapian::InternalStemRussian::r_reflexive() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_residual_form	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_residual_form() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_residual_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_residual_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_residual_suffix	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_residual_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_residual_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_residual_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_respell	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_respell() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_shortv	languages/english.cc	/^int Xapian::InternalStemEnglish::r_shortv() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
r_shortv	languages/porter.cc	/^int Xapian::InternalStemPorter::r_shortv() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
r_sing_owner	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_sing_owner() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_standard_suffix	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_standard_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_standard_suffix	languages/german.cc	/^int Xapian::InternalStemGerman::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
r_standard_suffix	languages/german2.cc	/^int Xapian::InternalStemGerman2::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
r_standard_suffix	languages/italian.cc	/^int Xapian::InternalStemItalian::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_standard_suffix	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_standard_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_standard_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_standard_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_stem_nominal_verb_suffixes	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_stem_nominal_verb_suffixes() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_stem_noun_suffixes	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_stem_noun_suffixes() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_stem_suffix_chain_before_ki	languages/turkish.cc	/^int Xapian::InternalStemTurkish::r_stem_suffix_chain_before_ki() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
r_step_0	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_step_0() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_t_plural	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_t_plural() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_tidy	languages/finnish.cc	/^int Xapian::InternalStemFinnish::r_tidy() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
r_tidy_up	languages/russian.cc	/^int Xapian::InternalStemRussian::r_tidy_up() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_un_accent	languages/french.cc	/^int Xapian::InternalStemFrench::r_un_accent() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_un_double	languages/french.cc	/^int Xapian::InternalStemFrench::r_un_double() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_undouble	languages/danish.cc	/^int Xapian::InternalStemDanish::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
r_undouble	languages/dutch.cc	/^int Xapian::InternalStemDutch::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
r_undouble	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_undouble	languages/lovins.cc	/^int Xapian::InternalStemLovins::r_undouble() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
r_v_ending	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::r_v_ending() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
r_verb	languages/russian.cc	/^int Xapian::InternalStemRussian::r_verb() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
r_verb_suffix	languages/french.cc	/^int Xapian::InternalStemFrench::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
r_verb_suffix	languages/italian.cc	/^int Xapian::InternalStemItalian::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_verb_suffix	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
r_verb_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_verb_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
r_vowel_suffix	languages/italian.cc	/^int Xapian::InternalStemItalian::r_vowel_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
r_vowel_suffix	languages/romanian.cc	/^int Xapian::InternalStemRomanian::r_vowel_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
r_y_verb_suffix	languages/spanish.cc	/^int Xapian::InternalStemSpanish::r_y_verb_suffix() { \/* backwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
rand_01	tests/perftest/perftest_randomidx.cc	/^rand_01()$/;"	f	file:
rand_int	tests/perftest/perftest_randomidx.cc	/^rand_int(unsigned int min, unsigned int max)$/;"	f	file:
rand_int	tests/perftest/perftest_randomidx.cc	/^rand_int(unsigned int range)$/;"	f	file:
randint	tests/soaktest/soaktest.cc	/^extern unsigned int randint(unsigned int s)$/;"	f
range_end	include/xapian/postingsource.h	/^    Xapian::docid range_end;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
range_start	include/xapian/postingsource.h	/^    Xapian::docid range_start;$/;"	m	class:Xapian::DecreasingValueWeightPostingSource
rare	config.h	/^# define rare(/;"	d
raw	include/xapian/unicode.h	/^    const char * raw() const {$/;"	f	class:Xapian::Utf8Iterator
raw_append	backends/brass/brass_postlist.cc	/^	void raw_append(Xapian::docid first_did_, Xapian::docid current_did_,$/;"	f	class:Brass::PostlistChunkWriter
raw_append	backends/chert/chert_postlist.cc	/^	void raw_append(Xapian::docid first_did_, Xapian::docid current_did_,$/;"	f	class:Chert::PostlistChunkWriter
raw_append	backends/flint/flint_postlist.cc	/^	void raw_append(Xapian::docid first_did_, Xapian::docid current_did_,$/;"	f	class:FlintPostlistChunkWriter
re	tests/submitperftest	/^import re$/;"	i
re	tests/submitperftest.in	/^import re$/;"	i
read	backends/brass/brass_btreebase.cc	/^BrassTable_base::read(const string & name, char ch, bool read_bitmap,$/;"	f	class:BrassTable_base
read	backends/brass/brass_dbstats.cc	/^BrassDatabaseStats::read(BrassPostListTable & postlist_table)$/;"	f	class:BrassDatabaseStats
read	backends/brass/brass_table.h	/^    void read(std::string * key) const {$/;"	f	class:Brass::Key
read	backends/chert/chert_btreebase.cc	/^ChertTable_base::read(const string & name, char ch, bool read_bitmap,$/;"	f	class:ChertTable_base
read	backends/chert/chert_dbstats.cc	/^ChertDatabaseStats::read(ChertPostListTable & postlist_table)$/;"	f	class:ChertDatabaseStats
read	backends/chert/chert_table.h	/^    void read(std::string * key) const {$/;"	f	class:Key
read	backends/flint/flint_btreebase.cc	/^FlintTable_base::read(const string & name, char ch, bool read_bitmap,$/;"	f	class:FlintTable_base
read	backends/flint/flint_table.h	/^    void read(std::string * key) const {$/;"	f	class:Key_
read_AE	languages/compiler/analyser.c	/^static struct node * read_AE(struct analyser * a, int B) {$/;"	f	file:
read_AE_test	languages/compiler/analyser.c	/^static int read_AE_test(struct analyser * a) {$/;"	f	file:
read_C	languages/compiler/analyser.c	/^static struct node * read_C(struct analyser * a) {$/;"	f	file:
read_C_connection	languages/compiler/analyser.c	/^static struct node * read_C_connection(struct analyser * a, struct node * q, int op) {$/;"	f	file:
read_C_list	languages/compiler/analyser.c	/^static struct node * read_C_list(struct analyser * a) {$/;"	f	file:
read_among	languages/compiler/analyser.c	/^static struct node * read_among(struct analyser * a) {$/;"	f	file:
read_and_check	backends/brass/brass_version.cc	/^BrassVersion::read_and_check()$/;"	f	class:BrassVersion
read_and_check	backends/chert/chert_version.cc	/^ChertVersion::read_and_check()$/;"	f	class:ChertVersion
read_and_check	backends/flint/flint_version.cc	/^void FlintVersion::read_and_check(bool readonly)$/;"	f	class:FlintVersion
read_at_least	net/remoteconnection.cc	/^RemoteConnection::read_at_least(size_t min_len, double end_time)$/;"	f	class:RemoteConnection
read_backwardmode	languages/compiler/analyser.c	/^static void read_backwardmode(struct analyser * a) {$/;"	f	file:
read_bits	common/bitstream.cc	/^BitReader::read_bits(int count)$/;"	f	class:Xapian::BitReader
read_block	backends/brass/brass_table.cc	/^BrassTable::read_block(uint4 n, byte * p) const$/;"	f	class:BrassTable
read_block	backends/chert/chert_table.cc	/^ChertTable::read_block(uint4 n, byte * p) const$/;"	f	class:ChertTable
read_block	backends/flint/flint_table.cc	/^FlintTable::read_block(uint4 n, byte * p) const$/;"	f	class:FlintTable
read_chars	languages/compiler/tokeniser.c	/^static void read_chars(struct tokeniser * t) {$/;"	f	file:
read_data	backends/brass/brass_positionlist.cc	/^BrassPositionList::read_data(const BrassTable * table, Xapian::docid did,$/;"	f	class:BrassPositionList
read_data	backends/chert/chert_positionlist.cc	/^ChertPositionList::read_data(const ChertTable * table, Xapian::docid did,$/;"	f	class:ChertPositionList
read_data	backends/flint/flint_positionlist.cc	/^FlintPositionList::read_data(const FlintTable * table, Xapian::docid did,$/;"	f	class:FlintPositionList
read_define	languages/compiler/analyser.c	/^static void read_define(struct analyser * a) {$/;"	f	file:
read_define_grouping	languages/compiler/analyser.c	/^static void read_define_grouping(struct analyser * a, struct name * q) {$/;"	f	file:
read_define_routine	languages/compiler/analyser.c	/^static void read_define_routine(struct analyser * a, struct name * q) {$/;"	f	file:
read_did_from_current_key	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::read_did_from_current_key()$/;"	f	class:FlintAllDocsPostList
read_did_increase	backends/brass/brass_postlist.cc	/^read_did_increase(const char ** posptr, const char * end,$/;"	f	file:
read_did_increase	backends/chert/chert_postlist.cc	/^read_did_increase(const char ** posptr, const char * end,$/;"	f	file:
read_did_increase	backends/flint/flint_postlist.cc	/^static inline void read_did_increase(const char ** posptr,$/;"	f	file:
read_doc	api/omenquire.cc	/^Enquire::Internal::read_doc(const Xapian::Internal::MSetItem &item) const$/;"	f	class:Xapian::Enquire::Internal
read_docs	api/omenquire.cc	/^MSet::Internal::read_docs() const$/;"	f	class:Xapian::MSet::Internal
read_literal_string	languages/compiler/tokeniser.c	/^static int read_literal_string(struct tokeniser * t, int c) {$/;"	f	file:
read_literalstring	languages/compiler/analyser.c	/^static struct node * read_literalstring(struct analyser * a) {$/;"	f	file:
read_metainfo	backends/flint/flint_database.cc	/^FlintDatabase::read_metainfo()$/;"	f	class:FlintDatabase
read_names	languages/compiler/analyser.c	/^static void read_names(struct analyser * a, int type) {$/;"	f	file:
read_number_of_entries	backends/brass/brass_postlist.cc	/^void BrassPostList::read_number_of_entries(const char ** posptr,$/;"	f	class:BrassPostList
read_number_of_entries	backends/chert/chert_postlist.cc	/^void ChertPostList::read_number_of_entries(const char ** posptr,$/;"	f	class:ChertPostList
read_number_of_entries	backends/flint/flint_postlist.cc	/^void FlintPostList::read_number_of_entries(const char ** posptr,$/;"	f	class:FlintPostList
read_options	languages/compiler/driver.c	/^static void read_options(struct options * o, int argc, char * argv[]) {$/;"	f	file:
read_position_list	api/postlist.cc	/^PostList::read_position_list()$/;"	f	class:Xapian::PostList
read_position_list	backends/brass/brass_alldocspostlist.cc	/^BrassAllDocsPostList::read_position_list()$/;"	f	class:BrassAllDocsPostList
read_position_list	backends/brass/brass_postlist.cc	/^BrassPostList::read_position_list()$/;"	f	class:BrassPostList
read_position_list	backends/chert/chert_alldocspostlist.cc	/^ChertAllDocsPostList::read_position_list()$/;"	f	class:ChertAllDocsPostList
read_position_list	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::read_position_list()$/;"	f	class:ChertModifiedPostList
read_position_list	backends/chert/chert_postlist.cc	/^ChertPostList::read_position_list()$/;"	f	class:ChertPostList
read_position_list	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::read_position_list()$/;"	f	class:ContiguousAllDocsPostList
read_position_list	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::read_position_list()$/;"	f	class:FlintModifiedPostList
read_position_list	backends/flint/flint_postlist.cc	/^FlintPostList::read_position_list()$/;"	f	class:FlintPostList
read_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::read_position_list()$/;"	f	class:InMemoryAllDocsPostList
read_position_list	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::read_position_list()$/;"	f	class:InMemoryPostList
read_position_list	backends/remote/net_postlist.cc	/^NetworkPostList::read_position_list()$/;"	f	class:NetworkPostList
read_position_list	matcher/externalpostlist.cc	/^ExternalPostList::read_position_list()$/;"	f	class:ExternalPostList
read_position_list	matcher/selectpostlist.h	/^	PositionList * read_position_list() { return source->read_position_list(); }$/;"	f	class:SelectPostList
read_position_list	matcher/valuerangepostlist.cc	/^ValueRangePostList::read_position_list()$/;"	f	class:ValueRangePostList
read_post_list	backends/remote/remote-database.cc	/^RemoteDatabase::read_post_list(const string &term, NetworkPostList & pl) const$/;"	f	class:RemoteDatabase
read_program	languages/compiler/analyser.c	/^extern void read_program(struct analyser * a) {$/;"	f
read_program_	languages/compiler/analyser.c	/^static void read_program_(struct analyser * a, int terminator) {$/;"	f	file:
read_root	backends/brass/brass_table.cc	/^BrassTable::read_root()$/;"	f	class:BrassTable
read_root	backends/chert/chert_table.cc	/^ChertTable::read_root()$/;"	f	class:ChertTable
read_root	backends/flint/flint_table.cc	/^FlintTable::read_root()$/;"	f	class:FlintTable
read_start_of_chunk	backends/brass/brass_postlist.cc	/^read_start_of_chunk(const char ** posptr,$/;"	f	file:
read_start_of_chunk	backends/chert/chert_postlist.cc	/^read_start_of_chunk(const char ** posptr,$/;"	f	file:
read_start_of_chunk	backends/flint/flint_postlist.cc	/^read_start_of_chunk(const char ** posptr,$/;"	f	file:
read_start_of_first_chunk	backends/brass/brass_postlist.cc	/^read_start_of_first_chunk(const char ** posptr,$/;"	f	file:
read_start_of_first_chunk	backends/chert/chert_postlist.cc	/^read_start_of_first_chunk(const char ** posptr,$/;"	f	file:
read_start_of_first_chunk	backends/flint/flint_postlist.cc	/^read_start_of_first_chunk(const char ** posptr,$/;"	f	file:
read_substring	languages/compiler/analyser.c	/^static struct node * read_substring(struct analyser * a) {$/;"	f	file:
read_tag	backends/brass/brass_cursor.cc	/^BrassCursor::read_tag(bool keep_compressed)$/;"	f	class:BrassCursor
read_tag	backends/brass/brass_table.cc	/^BrassTable::read_tag(Brass::Cursor * C_, string *tag, bool keep_compressed) const$/;"	f	class:BrassTable
read_tag	backends/chert/chert_cursor.cc	/^ChertCursor::read_tag(bool keep_compressed)$/;"	f	class:ChertCursor
read_tag	backends/chert/chert_table.cc	/^ChertTable::read_tag(Cursor * C_, string *tag, bool keep_compressed) const$/;"	f	class:ChertTable
read_tag	backends/flint/flint_cursor.cc	/^FlintCursor::read_tag(bool keep_compressed)$/;"	f	class:FlintCursor
read_tag	backends/flint/flint_table.cc	/^FlintTable::read_tag(Cursor_ * C_, string *tag, bool keep_compressed) const$/;"	f	class:FlintTable
read_termfreq_and_collfreq	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::read_termfreq_and_collfreq() const$/;"	f	class:BrassAllTermsList
read_termfreq_and_collfreq	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::read_termfreq_and_collfreq() const$/;"	f	class:ChertAllTermsList
read_termfreq_and_collfreq	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::read_termfreq_and_collfreq() const$/;"	f	class:FlintAllTermsList
read_token	languages/compiler/tokeniser.c	/^extern int read_token(struct tokeniser * t) {$/;"	f
read_value_stats	backends/remote/remote-database.cc	/^RemoteDatabase::read_value_stats(Xapian::valueno slot) const$/;"	f	class:RemoteDatabase
read_wdf	backends/brass/brass_postlist.cc	/^read_wdf(const char ** posptr, const char * end, Xapian::termcount * wdf_ptr)$/;"	f	file:
read_wdf	backends/chert/chert_postlist.cc	/^read_wdf(const char ** posptr, const char * end, Xapian::termcount * wdf_ptr)$/;"	f	file:
read_wdf_and_length	backends/flint/flint_postlist.cc	/^static inline void read_wdf_and_length(const char ** posptr,$/;"	f	file:
readcompound	api/omqueryinternal.cc	/^QUnserial::readcompound() {$/;"	f	class:QUnserial
readdir	common/msvc_dirent.cc	/^struct dirent *readdir(DIR *dir)$/;"	f
reader	backends/brass/brass_valuelist.h	/^    Brass::ValueChunkReader reader;$/;"	m	class:BrassValueList
reader	backends/brass/brass_values.cc	/^    ValueChunkReader reader;$/;"	m	class:Brass::ValueUpdater	file:
reader	backends/chert/chert_valuelist.h	/^    ValueChunkReader reader;$/;"	m	class:ChertValueList
reader	backends/chert/chert_values.cc	/^    ValueChunkReader reader;$/;"	m	class:ValueUpdater	file:
readexternal	api/omqueryinternal.cc	/^QUnserial::readexternal()$/;"	f	class:QUnserial
readonly	backends/brass/brass_database.h	/^	bool readonly;$/;"	m	class:BrassDatabase
readonly	backends/chert/chert_database.h	/^	bool readonly;$/;"	m	class:ChertDatabase
readonly	backends/flint/flint_database.h	/^	bool readonly;$/;"	m	class:FlintDatabase
readquery	api/omqueryinternal.cc	/^QUnserial::readquery() {$/;"	f	class:QUnserial
ready_to_read	net/remoteconnection.cc	/^RemoteConnection::ready_to_read() const$/;"	f	class:RemoteConnection
real_deflate	tests/zlib-vg.c	/^static int (*real_deflate)(z_streamp, int) = NULL;$/;"	v	file:
realdb	common/const_database_wrapper.h	/^    Xapian::Internal::RefCntPtr<const Xapian::Database::Internal> realdb;$/;"	m	class:ConstDatabaseWrapper
really_empty	backends/chert/chert_table.cc	/^ChertTable::really_empty() const$/;"	f	class:ChertTable
really_empty	backends/flint/flint_table.cc	/^FlintTable::really_empty() const$/;"	f	class:FlintTable
reason	backends/flint_lock.h	/^    } reason;$/;"	t	class:FlintLock	typeref:enum:FlintLock::__anon6
rebuild	backends/brass/brass_cursor.cc	/^BrassCursor::rebuild()$/;"	f	class:BrassCursor
rebuild	backends/chert/chert_cursor.cc	/^ChertCursor::rebuild()$/;"	f	class:ChertCursor
rebuild	backends/flint/flint_cursor.cc	/^FlintCursor::rebuild()$/;"	f	class:FlintCursor
recalc_maxweight	api/emptypostlist.cc	/^EmptyPostList::recalc_maxweight()$/;"	f	class:EmptyPostList
recalc_maxweight	api/leafpostlist.cc	/^LeafPostList::recalc_maxweight()$/;"	f	class:LeafPostList
recalc_maxweight	backends/multi/multi_postlist.cc	/^MultiPostList::recalc_maxweight()$/;"	f	class:MultiPostList
recalc_maxweight	common/multimatch.h	/^        void recalc_maxweight() {$/;"	f	class:MultiMatch
recalc_maxweight	matcher/andmaybepostlist.cc	/^AndMaybePostList::recalc_maxweight()$/;"	f	class:AndMaybePostList
recalc_maxweight	matcher/andnotpostlist.cc	/^AndNotPostList::recalc_maxweight()$/;"	f	class:AndNotPostList
recalc_maxweight	matcher/externalpostlist.cc	/^ExternalPostList::recalc_maxweight()$/;"	f	class:ExternalPostList
recalc_maxweight	matcher/extraweightpostlist.h	/^	Xapian::weight recalc_maxweight() {$/;"	f	class:ExtraWeightPostList
recalc_maxweight	matcher/mergepostlist.cc	/^MergePostList::recalc_maxweight()$/;"	f	class:MergePostList
recalc_maxweight	matcher/msetpostlist.cc	/^MSetPostList::recalc_maxweight()$/;"	f	class:MSetPostList
recalc_maxweight	matcher/multiandpostlist.cc	/^MultiAndPostList::recalc_maxweight()$/;"	f	class:MultiAndPostList
recalc_maxweight	matcher/multixorpostlist.cc	/^MultiXorPostList::recalc_maxweight()$/;"	f	class:MultiXorPostList
recalc_maxweight	matcher/orpostlist.cc	/^OrPostList::recalc_maxweight()$/;"	f	class:OrPostList
recalc_maxweight	matcher/selectpostlist.h	/^	Xapian::weight recalc_maxweight() { return source->recalc_maxweight(); }$/;"	f	class:SelectPostList
recalc_maxweight	matcher/synonympostlist.cc	/^SynonymPostList::recalc_maxweight()$/;"	f	class:SynonymPostList
recalc_maxweight	matcher/valuerangepostlist.cc	/^ValueRangePostList::recalc_maxweight()$/;"	f	class:ValueRangePostList
recalculate_w_max	common/multimatch.h	/^        bool recalculate_w_max;$/;"	m	class:MultiMatch
receive_file	net/remoteconnection.cc	/^RemoteConnection::receive_file(const string &file, double end_time)$/;"	f	class:RemoteConnection
record_table	backends/brass/brass_database.h	/^	BrassRecordTable record_table;$/;"	m	class:BrassDatabase
record_table	backends/brass/brass_document.h	/^    const BrassRecordTable *record_table;$/;"	m	class:BrassDocument
record_table	backends/chert/chert_database.h	/^	ChertRecordTable record_table;$/;"	m	class:ChertDatabase
record_table	backends/chert/chert_document.h	/^    const ChertRecordTable *record_table;$/;"	m	class:ChertDocument
record_table	backends/flint/flint_database.h	/^	FlintRecordTable record_table;$/;"	m	class:FlintDatabase
record_table	backends/flint/flint_document.h	/^	const FlintRecordTable *record_table;$/;"	m	class:FlintDocument
ref_count	include/xapian/base.h	/^	mutable ref_count_t ref_count;$/;"	m	class:Xapian::Internal::RefCntBase
ref_count_t	include/xapian/base.h	/^	typedef unsigned int ref_count_t;$/;"	t	class:Xapian::Internal::RefCntBase
reference	include/xapian/enquire.h	/^	typedef MSetIterator & reference; \/\/ Hmm$/;"	t	class:Xapian::MSet
reference	include/xapian/enquire.h	/^	typedef Xapian::docid & reference;$/;"	t	class:Xapian::MSetIterator
reference	include/xapian/enquire.h	/^	typedef std::string & reference;$/;"	t	class:Xapian::ESetIterator
reference	include/xapian/positioniterator.h	/^	typedef Xapian::termpos & reference;$/;"	t	class:Xapian::PositionIterator
reference	include/xapian/postingiterator.h	/^	typedef Xapian::docid & reference;$/;"	t	class:Xapian::PostingIterator
reference	include/xapian/termiterator.h	/^	typedef std::string & reference;$/;"	t	class:Xapian::TermIterator
reference	include/xapian/unicode.h	/^    typedef const unsigned & reference;$/;"	t	class:Xapian::Utf8Iterator
reference	include/xapian/valueiterator.h	/^    typedef std::string & reference;$/;"	t	class:Xapian::ValueIterator
referenced	languages/compiler/header.h	/^    byte referenced;$/;"	m	struct:name
reg	api/omqueryinternal.cc	/^    const Xapian::Registry & reg;$/;"	m	class:QUnserial	file:
reg	common/remoteserver.h	/^    Xapian::Registry reg;$/;"	m	class:RemoteServer
register_match_spy	api/registry.cc	/^Registry::register_match_spy(const Xapian::MatchSpy &spy)$/;"	f	class:Xapian::Registry
register_matcher_	include/xapian/postingsource.h	/^    void register_matcher_(void * matcher) { matcher_ = matcher; }$/;"	f	class:Xapian::PostingSource
register_object	api/registry.cc	/^register_object(map<string, T*> & registry, const T & obj)$/;"	f	file:
register_posting_source	api/registry.cc	/^Registry::register_posting_source(const Xapian::PostingSource &source)$/;"	f	class:Xapian::Registry
register_user_weighting_schemes	bin/xapian-tcpsrv.cc	/^static void register_user_weighting_schemes(TcpServer &server) {$/;"	f	file:
register_weighting_scheme	api/registry.cc	/^Registry::register_weighting_scheme(const Xapian::Weight &wt)$/;"	f	class:Xapian::Registry
rejects	include/xapian/expanddecider.h	/^    std::set<std::string> rejects;$/;"	m	class:Xapian::ExpandDeciderFilterTerms
release	backends/flint_lock.cc	/^FlintLock::release() {$/;"	f	class:FlintLock
reltermfreq	common/weightinternal.h	/^    Xapian::doccount reltermfreq;$/;"	m	struct:TermFreqs
reltermfreq_	include/xapian/weight.h	/^    Xapian::doccount reltermfreq_;$/;"	m	class:Xapian::Weight
remconn	common/replicatetcpclient.h	/^    RemoteConnection remconn;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
remote	tests/harness/testrunner.h	/^    bool remote;$/;"	m	class:TestRunner
remote_type	tests/harness/backendmanager_remote.h	/^    std::string remote_type;$/;"	m	class:BackendManagerRemote
remove_document	api/omenquire.cc	/^RSet::remove_document(Xapian::docid did)$/;"	f	class:Xapian::RSet
remove_document	include/xapian/enquire.h	/^	void remove_document(const Xapian::MSetIterator & i) { remove_document(*i); }$/;"	f	class:Xapian::RSet
remove_offline_db	api/replication.cc	/^DatabaseReplica::Internal::remove_offline_db()$/;"	f	class:DatabaseReplica::Internal
remove_position	api/omdocument.cc	/^OmDocumentTerm::remove_position(Xapian::termpos tpos)$/;"	f	class:OmDocumentTerm
remove_posting	api/omdocument.cc	/^Document::remove_posting(const string & tname, Xapian::termpos tpos,$/;"	f	class:Xapian::Document
remove_posting	api/omdocument.cc	/^Xapian::Document::Internal::remove_posting(const string & tname,$/;"	f	class:Xapian::Document::Internal
remove_posting	backends/brass/brass_inverter.h	/^	void remove_posting(Xapian::docid did, Xapian::termcount wdf) {$/;"	f	class:Inverter::PostingChanges
remove_posting	backends/brass/brass_inverter.h	/^    void remove_posting(Xapian::docid did, const std::string & term,$/;"	f	class:Inverter
remove_spelling	api/omdatabase.cc	/^WritableDatabase::remove_spelling(const std::string & word,$/;"	f	class:Xapian::WritableDatabase
remove_spelling	backends/brass/brass_database.cc	/^BrassWritableDatabase::remove_spelling(const string & word,$/;"	f	class:BrassWritableDatabase
remove_spelling	backends/chert/chert_database.cc	/^ChertWritableDatabase::remove_spelling(const string & word,$/;"	f	class:ChertWritableDatabase
remove_spelling	backends/database.cc	/^Database::Internal::remove_spelling(const string &, Xapian::termcount) const$/;"	f	class:Xapian::Database::Internal
remove_spelling	backends/flint/flint_database.cc	/^FlintWritableDatabase::remove_spelling(const string & word,$/;"	f	class:FlintWritableDatabase
remove_spelling	backends/remote/remote-database.cc	/^RemoteDatabase::remove_spelling(const string & word,$/;"	f	class:RemoteDatabase
remove_spelling	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::remove_spelling(const string &, Xapian::termcount) const$/;"	f	class:ConstDatabaseWrapper
remove_synonym	api/omdatabase.cc	/^WritableDatabase::remove_synonym(const std::string & term,$/;"	f	class:Xapian::WritableDatabase
remove_synonym	backends/brass/brass_database.cc	/^BrassWritableDatabase::remove_synonym(const string & term,$/;"	f	class:BrassWritableDatabase
remove_synonym	backends/brass/brass_synonym.cc	/^BrassSynonymTable::remove_synonym(const string & term, const string & synonym)$/;"	f	class:BrassSynonymTable
remove_synonym	backends/chert/chert_database.cc	/^ChertWritableDatabase::remove_synonym(const string & term,$/;"	f	class:ChertWritableDatabase
remove_synonym	backends/chert/chert_synonym.cc	/^ChertSynonymTable::remove_synonym(const string & term, const string & synonym)$/;"	f	class:ChertSynonymTable
remove_synonym	backends/database.cc	/^Database::Internal::remove_synonym(const string &, const string &) const$/;"	f	class:Xapian::Database::Internal
remove_synonym	backends/flint/flint_database.cc	/^FlintWritableDatabase::remove_synonym(const string & term,$/;"	f	class:FlintWritableDatabase
remove_synonym	backends/flint/flint_synonym.cc	/^FlintSynonymTable::remove_synonym(const string & term, const string & synonym)$/;"	f	class:FlintSynonymTable
remove_synonym	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::remove_synonym(const string &, const string &) const$/;"	f	class:ConstDatabaseWrapper
remove_term	api/omdocument.cc	/^Document::remove_term(const string & tname)$/;"	f	class:Xapian::Document
remove_term	api/omdocument.cc	/^Xapian::Document::Internal::remove_term(const string & tname)$/;"	f	class:Xapian::Document::Internal
remove_value	api/omdocument.cc	/^Document::remove_value(Xapian::valueno slot)$/;"	f	class:Xapian::Document
remove_value	api/omdocument.cc	/^Xapian::Document::Internal::remove_value(Xapian::valueno slot)$/;"	f	class:Xapian::Document::Internal
remove_value	backends/brass/brass_values.cc	/^BrassValueManager::remove_value(Xapian::docid did, Xapian::valueno slot)$/;"	f	class:BrassValueManager
remove_value	backends/chert/chert_values.cc	/^ChertValueManager::remove_value(Xapian::docid did, Xapian::valueno slot)$/;"	f	class:ChertValueManager
remove_value	include/xapian/valuesetmatchdecider.h	/^    void remove_value(const std::string& value)$/;"	f	class:Xapian::ValueSetMatchDecider
remove_word	backends/brass/brass_spelling.cc	/^BrassSpellingTable::remove_word(const string & word, Xapian::termcount freqdec)$/;"	f	class:BrassSpellingTable
remove_word	backends/chert/chert_spelling.cc	/^ChertSpellingTable::remove_word(const string & word, Xapian::termcount freqdec)$/;"	f	class:ChertSpellingTable
remove_word	backends/flint/flint_spelling.cc	/^FlintSpellingTable::remove_word(const string & word, Xapian::termcount freqdec)$/;"	f	class:FlintSpellingTable
removedir	common/utils.cc	/^removedir(const string &dirname)$/;"	f
renumber	api/compactor.cc	/^    bool renumber;$/;"	m	class:Xapian::Compactor::Internal	file:
reopen	api/omdatabase.cc	/^Database::reopen()$/;"	f	class:Xapian::Database
reopen	backends/brass/brass_database.cc	/^BrassDatabase::reopen()$/;"	f	class:BrassDatabase
reopen	backends/chert/chert_database.cc	/^ChertDatabase::reopen()$/;"	f	class:ChertDatabase
reopen	backends/database.cc	/^Database::Internal::reopen()$/;"	f	class:Xapian::Database::Internal
reopen	backends/flint/flint_database.cc	/^FlintDatabase::reopen()$/;"	f	class:FlintDatabase
reopen	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::reopen()$/;"	f	class:InMemoryDatabase
reopen	backends/remote/remote-database.cc	/^RemoteDatabase::reopen()$/;"	f	class:RemoteDatabase
reopen	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::reopen()$/;"	f	class:ConstDatabaseWrapper
repeat	languages/compiler/header.h	/^#define repeat /;"	d
repeat_restore	languages/compiler/generator.c	/^static int repeat_restore(struct generator * g, struct node * p) {$/;"	f	file:
repeat_score	languages/compiler/generator.c	/^static int repeat_score(struct generator * g, struct node * p) {$/;"	f	file:
repetition_begin	tests/perftest/perftest.cc	/^PerfTestLogger::repetition_begin(int num)$/;"	f	class:PerfTestLogger
repetition_end	tests/perftest/perftest.cc	/^PerfTestLogger::repetition_end()$/;"	f	class:PerfTestLogger
repetition_number	tests/perftest/perftest.h	/^    int repetition_number;$/;"	m	class:PerfTestLogger
repetitions	tests/perftest/perftest.cc	/^    mutable int repetitions;$/;"	m	class:PerfTestRunner	file:
repetitions_parsed	tests/perftest/perftest.cc	/^    mutable bool repetitions_parsed;$/;"	m	class:PerfTestRunner	file:
repetitions_string	tests/perftest/perftest.cc	/^    string repetitions_string;$/;"	m	class:PerfTestRunner	file:
replace_document	api/omdatabase.cc	/^WritableDatabase::replace_document(Xapian::docid did, const Document & document)$/;"	f	class:Xapian::WritableDatabase
replace_document	api/omdatabase.cc	/^WritableDatabase::replace_document(const std::string & unique_term,$/;"	f	class:Xapian::WritableDatabase
replace_document	backends/brass/brass_database.cc	/^BrassWritableDatabase::replace_document(Xapian::docid did,$/;"	f	class:BrassWritableDatabase
replace_document	backends/brass/brass_values.cc	/^BrassValueManager::replace_document(Xapian::docid did,$/;"	f	class:BrassValueManager
replace_document	backends/chert/chert_database.cc	/^ChertWritableDatabase::replace_document(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
replace_document	backends/chert/chert_values.cc	/^ChertValueManager::replace_document(Xapian::docid did,$/;"	f	class:ChertValueManager
replace_document	backends/database.cc	/^Database::Internal::replace_document(Xapian::docid, const Xapian::Document &)$/;"	f	class:Xapian::Database::Internal
replace_document	backends/database.cc	/^Database::Internal::replace_document(const string & unique_term,$/;"	f	class:Xapian::Database::Internal
replace_document	backends/flint/flint_database.cc	/^FlintWritableDatabase::replace_document(Xapian::docid did,$/;"	f	class:FlintWritableDatabase
replace_document	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::replace_document(Xapian::docid did,$/;"	f	class:InMemoryDatabase
replace_document	backends/remote/remote-database.cc	/^RemoteDatabase::replace_document(Xapian::docid did,$/;"	f	class:RemoteDatabase
replace_document	backends/remote/remote-database.cc	/^RemoteDatabase::replace_document(const std::string & unique_term,$/;"	f	class:RemoteDatabase
replace_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::replace_document(Xapian::docid, const Xapian::Document &)$/;"	f	class:ConstDatabaseWrapper
replace_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::replace_document(const string &,$/;"	f	class:ConstDatabaseWrapper
replace_record	backends/brass/brass_record.cc	/^BrassRecordTable::replace_record(const string & data, Xapian::docid did)$/;"	f	class:BrassRecordTable
replace_record	backends/chert/chert_record.cc	/^ChertRecordTable::replace_record(const string & data, Xapian::docid did)$/;"	f	class:ChertRecordTable
replace_record	backends/flint/flint_record.cc	/^FlintRecordTable::replace_record(const string & data, Xapian::docid did)$/;"	f	class:FlintRecordTable
replace_s	languages/steminternal.cc	/^SnowballStemImplementation::replace_s(int c_bra, int c_ket, int s_size,$/;"	f	class:Xapian::SnowballStemImplementation
replicas	tests/harness/testrunner.h	/^    bool replicas;$/;"	m	class:TestRunner
replicate	tests/api_replicate.cc	/^replicate(Xapian::DatabaseMaster & master,$/;"	f	file:
replicate_reply_type	common/replicationprotocol.h	/^enum replicate_reply_type {$/;"	g
replicate_with_brokenness	tests/api_replicate.cc	/^replicate_with_brokenness(Xapian::DatabaseMaster & master,$/;"	f	file:
reply_type	common/remoteprotocol.h	/^enum reply_type {$/;"	g
report	tests/harness/testsuite.cc	/^test_driver::report(const test_driver::result &r, const string &desc)$/;"	f	class:test_driver
report_b	languages/compiler/space.c	/^extern void report_b(FILE * out, symbol * p) {$/;"	f
report_block	backends/brass/brass_check.cc	/^void BrassTableCheck::report_block(int m, int n, const byte * p) const$/;"	f	class:BrassTableCheck
report_block	backends/chert/chert_check.cc	/^void ChertTableCheck::report_block(int m, int n, const byte * p) const$/;"	f	class:ChertTableCheck
report_block	backends/flint/flint_check.cc	/^void BtreeCheck::report_block(int m, int n, const byte * p) const$/;"	f	class:BtreeCheck
report_block_full	backends/brass/brass_check.cc	/^void BrassTableCheck::report_block_full(int m, int n, const byte * p) const$/;"	f	class:BrassTableCheck
report_block_full	backends/chert/chert_check.cc	/^void ChertTableCheck::report_block_full(int m, int n, const byte * p) const$/;"	f	class:ChertTableCheck
report_block_full	backends/flint/flint_check.cc	/^void BtreeCheck::report_block_full(int m, int n, const byte * p) const$/;"	f	class:BtreeCheck
report_cursor	backends/brass/brass_check.cc	/^void BrassTableCheck::report_cursor(int N, const Brass::Cursor * C_) const$/;"	f	class:BrassTableCheck
report_cursor	backends/chert/chert_check.cc	/^void ChertTableCheck::report_cursor(int N, const Cursor * C_) const$/;"	f	class:ChertTableCheck
report_cursor	backends/flint/flint_check.cc	/^void BtreeCheck::report_cursor(int N, const Cursor_ * C_) const$/;"	f	class:BtreeCheck
report_read_error	backends/brass/brass_postlist.cc	/^static void report_read_error(const char * position)$/;"	f	file:
report_read_error	backends/chert/chert_postlist.cc	/^static void report_read_error(const char * position)$/;"	f	file:
report_read_error	backends/flint/flint_postlist.cc	/^static void report_read_error(const char * position)$/;"	f	file:
report_totals	tests/harness/testsuite.cc	/^report_totals(void)$/;"	f	file:
request_doc	api/omenquire.cc	/^Enquire::Internal::request_doc(const Xapian::Internal::MSetItem &item) const$/;"	f	class:Xapian::Enquire::Internal
request_document	backends/database.cc	/^Database::Internal::request_document(Xapian::docid \/*did*\/) const$/;"	f	class:Xapian::Database::Internal
request_document	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::request_document(Xapian::docid did) const$/;"	f	class:ConstDatabaseWrapper
requested_docs	common/omenquireinternal.h	/^	mutable set<Xapian::doccount> requested_docs;$/;"	m	class:Xapian::MSet::Internal
required_argument	common/gnu_getopt.h	/^# define required_argument	/;"	d
res	include/xapian/derefwrapper.h	/^    T res;$/;"	m	class:Xapian::DerefWrapper_
reserve_doclens	bin/xapian-check.cc	/^reserve_doclens(vector<Xapian::termcount>& doclens, Xapian::docid last_docid)$/;"	f	file:
reset	backends/brass/brass_values.h	/^    void reset() {$/;"	f	class:BrassValueManager
reset	backends/chert/chert_values.h	/^    void reset() {$/;"	f	class:ChertValueManager
reset	tests/harness/testsuite.h	/^	    void reset() {$/;"	f	struct:test_driver::result
resolve_conflict	queryparser/lemon.c	/^static int resolve_conflict(apx,apy)$/;"	f	file:
resolve_duplicate_metadata	api/compactor.cc	/^Compactor::resolve_duplicate_metadata(const string & key,$/;"	f	class:Xapian::Compactor
resolve_duplicate_metadata	bin/xapian-compact.cc	/^MyCompactor::resolve_duplicate_metadata(const string & key,$/;"	f	class:MyCompactor
resolve_relative_path	common/fileutils.cc	/^resolve_relative_path(string & path, const string & base)$/;"	f
result	common/msvc_dirent.cc	/^    struct dirent       result; \/* d_name null iff first time *\/$/;"	m	struct:DIR	typeref:struct:DIR::dirent	file:
result	languages/compiler/header.h	/^    int result;      \/* the numeric result for the case *\/$/;"	m	struct:amongvec
result	languages/steminternal.h	/^    int result;		\/* result of the lookup *\/$/;"	m	struct:among
result	tests/harness/testsuite.h	/^	    result() : succeeded(0), failed(0), skipped(0) { }$/;"	f	struct:test_driver::result
result	tests/harness/testsuite.h	/^	struct result {$/;"	s	class:test_driver
result_so_far	tests/harness/testrunner.h	/^    int result_so_far;$/;"	m	class:TestRunner
reverse_b	languages/compiler/analyser.c	/^static void reverse_b(symbol * b) {$/;"	f	file:
revision	api/version.cc	/^int revision() { return XAPIAN_REVISION; }$/;"	f	namespace:Xapian
revision	backends/brass/brass_btreebase.h	/^	uint4 revision;$/;"	m	class:BrassTable_base
revision	backends/chert/chert_btreebase.h	/^	uint4 revision;$/;"	m	class:ChertTable_base
revision	backends/flint/flint_btreebase.h	/^	uint4 revision;$/;"	m	class:FlintTable_base
revision_number	backends/brass/brass_table.h	/^	brass_revision_number_t revision_number;$/;"	m	class:BrassTable
revision_number	backends/chert/chert_table.h	/^	chert_revision_number_t revision_number;$/;"	m	class:ChertTable
revision_number	backends/flint/flint_table.h	/^	flint_revision_number_t revision_number;$/;"	m	class:FlintTable
rewinddir	common/msvc_dirent.cc	/^void rewinddir(DIR *dir)$/;"	f
rewrite	backends/brass/brass_cursor.h	/^	bool rewrite;$/;"	m	class:Brass::Cursor
rewrite	backends/chert/chert_cursor.h	/^	bool rewrite;$/;"	m	class:Cursor
rewrite	backends/flint/flint_cursor.h	/^	bool rewrite;$/;"	m	class:Cursor_
rhead	matcher/andmaybepostlist.h	/^	Xapian::docid lhead, rhead;$/;"	m	class:AndMaybePostList
rhead	matcher/andnotpostlist.h	/^        Xapian::docid lhead, rhead;$/;"	m	class:AndNotPostList
rhead	matcher/orpostlist.h	/^        Xapian::docid lhead, rhead;$/;"	m	class:OrPostList
rhs	queryparser/lemon.c	/^  struct symbol **rhs;     \/* The RHS symbols *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
rhs	queryparser/lemon.c	/^  struct symbol *rhs[MAXRHS];  \/* RHS symbols *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
rhsalias	queryparser/lemon.c	/^  char **rhsalias;         \/* An alias for each RHS symbol (NULL if none) *\/$/;"	m	struct:rule	file:
right	common/ortermlist.h	/^    TermList *left, *right;$/;"	m	class:OrTermList
right	languages/compiler/header.h	/^    struct node * right;$/;"	m	struct:node	typeref:struct:node::node
right_current	common/ortermlist.h	/^    std::string left_current, right_current;$/;"	m	class:OrTermList
rm_rf	bin/xapian-chert-update.cc	/^static void rm_rf(const string &filename) {$/;"	f	file:
rm_rf	tests/harness/unixcmds.cc	/^void rm_rf(const string &filename) {$/;"	f
rmax	matcher/andmaybepostlist.h	/^	Xapian::weight lmax, rmax;$/;"	m	class:AndMaybePostList
rmax	matcher/orpostlist.h	/^        Xapian::weight lmax, rmax, minmax;$/;"	m	class:OrPostList
rmtmpdir	tests/api_replicate.cc	/^static void rmtmpdir(const string & path) {$/;"	f	file:
root	backends/brass/brass_btreebase.h	/^	uint4 root;$/;"	m	class:BrassTable_base
root	backends/brass/brass_table.h	/^	uint4 root;$/;"	m	class:BrassTable
root	backends/chert/chert_btreebase.h	/^	uint4 root;$/;"	m	class:ChertTable_base
root	backends/chert/chert_table.h	/^	uint4 root;$/;"	m	class:ChertTable
root	backends/flint/flint_btreebase.h	/^	uint4 root;$/;"	m	class:FlintTable_base
root	backends/flint/flint_table.h	/^	uint4 root;$/;"	m	class:FlintTable
routine_called_from_among	languages/compiler/header.h	/^    byte routine_called_from_among; \/* used in routine definitions *\/$/;"	m	struct:name
rp	queryparser/lemon.c	/^    struct rule *rp;       \/* The rule, if a reduce *\/$/;"	m	union:action::__anon26	typeref:struct:action::__anon26::rule	file:
rp	queryparser/lemon.c	/^  struct rule *rp;         \/* The rule upon which the configuration is based *\/$/;"	m	struct:config	typeref:struct:config::rule	file:
rset	matcher/localsubmatch.h	/^    Xapian::RSet rset;$/;"	m	class:LocalSubMatch
rset_size	common/weightinternal.h	/^    Xapian::doccount rset_size;$/;"	m	class:Xapian::Weight::Internal
rset_size_	include/xapian/weight.h	/^    Xapian::doccount rset_size_;$/;"	m	class:Xapian::Weight
rsize	common/expandweight.h	/^    Xapian::doccount rsize;$/;"	m	class:Xapian::Internal::ExpandWeight
rtermfreq	common/expandweight.h	/^    Xapian::doccount rtermfreq;$/;"	m	class:Xapian::Internal::ExpandStats
rule	queryparser/lemon.c	/^  struct rule *rule;       \/* Linked list of rules of this (if an NT) *\/$/;"	m	struct:symbol	typeref:struct:symbol::rule	file:
rule	queryparser/lemon.c	/^  struct rule *rule;       \/* List of all rules *\/$/;"	m	struct:lemon	typeref:struct:lemon::rule	file:
rule	queryparser/lemon.c	/^struct rule {$/;"	s	file:
ruleline	queryparser/lemon.c	/^  int ruleline;            \/* Line number for the rule *\/$/;"	m	struct:rule	file:
run	net/remoteserver.cc	/^RemoteServer::run()$/;"	f	class:RemoteServer
run	net/tcpserver.cc	/^TcpServer::run()$/;"	f	class:TcpServer
run	tests/apitest.cc	/^    int run() const {$/;"	f	class:ApiTestRunner
run	tests/harness/testsuite.cc	/^test_driver::run(const test_desc *tests)$/;"	f	class:test_driver
run	tests/harness/testsuite.h	/^    test_func run;$/;"	m	struct:test_desc
run	tests/perftest/perftest.cc	/^    int run() const {$/;"	f	class:PerfTestRunner
run	tests/soaktest/soaktest.cc	/^    int run() const {$/;"	f	class:SoakTestRunner
run_command	tests/perftest/get_machine_info	/^sub run_command {$/;"	s
run_once	net/tcpserver.cc	/^TcpServer::run_once()$/;"	f	class:TcpServer
run_program	net/progclient.cc	/^ProgClient::run_program(const string &progname, const string &args$/;"	f	class:ProgClient
run_tests	tests/harness/testrunner.cc	/^TestRunner::run_tests(int argc, char ** argv)$/;"	f	class:TestRunner
run_tests	tests/harness/testsuite.cc	/^test_driver::run_tests()$/;"	f	class:test_driver
run_tests	tests/harness/testsuite.cc	/^test_driver::run_tests(vector<string>::const_iterator b,$/;"	f	class:test_driver
run_thread	net/tcpserver.cc	/^run_thread(void * param_)$/;"	f	file:
running_on_win9x	bin/xapian-chert-update.cc	/^static bool running_on_win9x() {$/;"	f	file:
running_on_win9x	tests/harness/unixcmds.cc	/^static bool running_on_win9x() {$/;"	f	file:
runs	tests/harness/testsuite.cc	/^int test_driver::runs = 0;$/;"	m	class:test_driver	file:
runs	tests/harness/testsuite.h	/^	static int runs;$/;"	m	class:test_driver
runtest	tests/harness/testsuite.cc	/^test_driver::runtest(const test_desc *test)$/;"	f	class:test_driver
runtime_path	languages/compiler/header.h	/^    char * runtime_path;$/;"	m	struct:options
rvalid	matcher/orpostlist.h	/^	bool lvalid, rvalid;$/;"	m	class:OrPostList
s	examples/quest.cc	/^struct qp_flag { const char * s; unsigned f; };$/;"	m	struct:qp_flag	file:
s	examples/quest.cc	/^struct qp_op { const char * s; unsigned f; };$/;"	m	struct:qp_op	file:
s	examples/quest.cc	/^struct wt { const char * s; int f; };$/;"	m	struct:wt	file:
s	languages/compiler/tokeniser.c	/^    byte * s;     \/* pointer to the system word *\/$/;"	m	struct:system_word	file:
s	languages/steminternal.h	/^    unsigned s;		\/* offset in pool to search string *\/$/;"	m	struct:among
s_0	languages/danish.cc	/^static const symbol s_0[] = { 's', 't' };$/;"	v	file:
s_0	languages/dutch.cc	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	languages/english.cc	/^static const symbol s_0[] = { 'Y' };$/;"	v	file:
s_0	languages/finnish.cc	/^static const symbol s_0[] = { 'k', 's', 'e' };$/;"	v	file:
s_0	languages/french.cc	/^static const symbol s_0[] = { 'U' };$/;"	v	file:
s_0	languages/german.cc	/^static const symbol s_0[] = { 0xC3, 0x9F };$/;"	v	file:
s_0	languages/german2.cc	/^static const symbol s_0[] = { 'U' };$/;"	v	file:
s_0	languages/hungarian.cc	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	languages/italian.cc	/^static const symbol s_0[] = { 0xC3, 0xA0 };$/;"	v	file:
s_0	languages/kraaij_pohlmann.cc	/^static const symbol s_0[] = { 'i', 'j' };$/;"	v	file:
s_0	languages/lovins.cc	/^static const symbol s_0[] = { 'l', 'l' };$/;"	v	file:
s_0	languages/norwegian.cc	/^static const symbol s_0[] = { 'e', 'r' };$/;"	v	file:
s_0	languages/porter.cc	/^static const symbol s_0[] = { 's', 's' };$/;"	v	file:
s_0	languages/portuguese.cc	/^static const symbol s_0[] = { 'a', '~' };$/;"	v	file:
s_0	languages/romanian.cc	/^static const symbol s_0[] = { 'U' };$/;"	v	file:
s_0	languages/russian.cc	/^static const symbol s_0[] = { 0xD0, 0xB0 };$/;"	v	file:
s_0	languages/spanish.cc	/^static const symbol s_0[] = { 'a' };$/;"	v	file:
s_0	languages/swedish.cc	/^static const symbol s_0[] = { 'l', 0xC3, 0xB6, 's' };$/;"	v	file:
s_0	languages/turkish.cc	/^static const symbol s_0[] = { 0xC4, 0xB1 };$/;"	v	file:
s_0_0	languages/danish.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/english.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/finnish.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/french.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/hungarian.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/kraaij_pohlmann.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/lovins.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/norwegian.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/porter.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/russian.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/swedish.cc	/^#define s_0_0 /;"	d	file:
s_0_0	languages/turkish.cc	/^#define s_0_0 /;"	d	file:
s_0_1	languages/danish.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/dutch.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/english.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/finnish.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/french.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/german.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/german2.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/hungarian.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/italian.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/kraaij_pohlmann.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/lovins.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/norwegian.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/porter.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/portuguese.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/romanian.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/russian.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/spanish.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/swedish.cc	/^#define s_0_1 /;"	d	file:
s_0_1	languages/turkish.cc	/^#define s_0_1 /;"	d	file:
s_0_10	languages/danish.cc	/^#define s_0_10 /;"	d	file:
s_0_10	languages/dutch.cc	/^#define s_0_10 /;"	d	file:
s_0_10	languages/norwegian.cc	/^#define s_0_10 /;"	d	file:
s_0_10	languages/swedish.cc	/^#define s_0_10 /;"	d	file:
s_0_11	languages/danish.cc	/^#define s_0_11 /;"	d	file:
s_0_11	languages/norwegian.cc	/^#define s_0_11 /;"	d	file:
s_0_11	languages/swedish.cc	/^#define s_0_11 /;"	d	file:
s_0_12	languages/danish.cc	/^#define s_0_12 /;"	d	file:
s_0_12	languages/norwegian.cc	/^#define s_0_12 /;"	d	file:
s_0_12	languages/swedish.cc	/^#define s_0_12 /;"	d	file:
s_0_13	languages/danish.cc	/^#define s_0_13 /;"	d	file:
s_0_13	languages/norwegian.cc	/^#define s_0_13 /;"	d	file:
s_0_13	languages/swedish.cc	/^#define s_0_13 /;"	d	file:
s_0_14	languages/danish.cc	/^#define s_0_14 /;"	d	file:
s_0_14	languages/norwegian.cc	/^#define s_0_14 /;"	d	file:
s_0_14	languages/swedish.cc	/^#define s_0_14 /;"	d	file:
s_0_15	languages/danish.cc	/^#define s_0_15 /;"	d	file:
s_0_15	languages/norwegian.cc	/^#define s_0_15 /;"	d	file:
s_0_15	languages/swedish.cc	/^#define s_0_15 /;"	d	file:
s_0_16	languages/danish.cc	/^#define s_0_16 /;"	d	file:
s_0_16	languages/norwegian.cc	/^#define s_0_16 /;"	d	file:
s_0_16	languages/swedish.cc	/^#define s_0_16 /;"	d	file:
s_0_17	languages/danish.cc	/^#define s_0_17 /;"	d	file:
s_0_17	languages/norwegian.cc	/^#define s_0_17 /;"	d	file:
s_0_17	languages/swedish.cc	/^#define s_0_17 /;"	d	file:
s_0_18	languages/danish.cc	/^#define s_0_18 /;"	d	file:
s_0_18	languages/norwegian.cc	/^#define s_0_18 /;"	d	file:
s_0_18	languages/swedish.cc	/^#define s_0_18 /;"	d	file:
s_0_19	languages/danish.cc	/^#define s_0_19 /;"	d	file:
s_0_19	languages/norwegian.cc	/^#define s_0_19 /;"	d	file:
s_0_19	languages/swedish.cc	/^#define s_0_19 /;"	d	file:
s_0_2	languages/danish.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/dutch.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/english.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/finnish.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/french.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/german.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/german2.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/hungarian.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/italian.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/kraaij_pohlmann.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/lovins.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/norwegian.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/porter.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/portuguese.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/romanian.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/russian.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/spanish.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/swedish.cc	/^#define s_0_2 /;"	d	file:
s_0_2	languages/turkish.cc	/^#define s_0_2 /;"	d	file:
s_0_20	languages/danish.cc	/^#define s_0_20 /;"	d	file:
s_0_20	languages/norwegian.cc	/^#define s_0_20 /;"	d	file:
s_0_20	languages/swedish.cc	/^#define s_0_20 /;"	d	file:
s_0_21	languages/danish.cc	/^#define s_0_21 /;"	d	file:
s_0_21	languages/norwegian.cc	/^#define s_0_21 /;"	d	file:
s_0_21	languages/swedish.cc	/^#define s_0_21 /;"	d	file:
s_0_22	languages/danish.cc	/^#define s_0_22 /;"	d	file:
s_0_22	languages/norwegian.cc	/^#define s_0_22 /;"	d	file:
s_0_22	languages/swedish.cc	/^#define s_0_22 /;"	d	file:
s_0_23	languages/danish.cc	/^#define s_0_23 /;"	d	file:
s_0_23	languages/norwegian.cc	/^#define s_0_23 /;"	d	file:
s_0_23	languages/swedish.cc	/^#define s_0_23 /;"	d	file:
s_0_24	languages/danish.cc	/^#define s_0_24 /;"	d	file:
s_0_24	languages/norwegian.cc	/^#define s_0_24 /;"	d	file:
s_0_24	languages/swedish.cc	/^#define s_0_24 /;"	d	file:
s_0_25	languages/danish.cc	/^#define s_0_25 /;"	d	file:
s_0_25	languages/norwegian.cc	/^#define s_0_25 /;"	d	file:
s_0_25	languages/swedish.cc	/^#define s_0_25 /;"	d	file:
s_0_26	languages/danish.cc	/^#define s_0_26 /;"	d	file:
s_0_26	languages/norwegian.cc	/^#define s_0_26 /;"	d	file:
s_0_26	languages/swedish.cc	/^#define s_0_26 /;"	d	file:
s_0_27	languages/danish.cc	/^#define s_0_27 /;"	d	file:
s_0_27	languages/norwegian.cc	/^#define s_0_27 /;"	d	file:
s_0_27	languages/swedish.cc	/^#define s_0_27 /;"	d	file:
s_0_28	languages/danish.cc	/^#define s_0_28 /;"	d	file:
s_0_28	languages/norwegian.cc	/^#define s_0_28 /;"	d	file:
s_0_28	languages/swedish.cc	/^#define s_0_28 /;"	d	file:
s_0_29	languages/danish.cc	/^#define s_0_29 /;"	d	file:
s_0_29	languages/swedish.cc	/^#define s_0_29 /;"	d	file:
s_0_3	languages/danish.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/dutch.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/finnish.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/german.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/german2.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/hungarian.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/italian.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/kraaij_pohlmann.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/lovins.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/norwegian.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/porter.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/russian.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/spanish.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/swedish.cc	/^#define s_0_3 /;"	d	file:
s_0_3	languages/turkish.cc	/^#define s_0_3 /;"	d	file:
s_0_30	languages/danish.cc	/^#define s_0_30 /;"	d	file:
s_0_30	languages/swedish.cc	/^#define s_0_30 /;"	d	file:
s_0_31	languages/danish.cc	/^#define s_0_31 /;"	d	file:
s_0_31	languages/swedish.cc	/^#define s_0_31 /;"	d	file:
s_0_32	languages/swedish.cc	/^#define s_0_32 /;"	d	file:
s_0_33	languages/swedish.cc	/^#define s_0_33 /;"	d	file:
s_0_34	languages/swedish.cc	/^#define s_0_34 /;"	d	file:
s_0_35	languages/swedish.cc	/^#define s_0_35 /;"	d	file:
s_0_36	languages/swedish.cc	/^#define s_0_36 /;"	d	file:
s_0_4	languages/danish.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/dutch.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/finnish.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/german.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/german2.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/hungarian.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/italian.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/kraaij_pohlmann.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/lovins.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/norwegian.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/russian.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/spanish.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/swedish.cc	/^#define s_0_4 /;"	d	file:
s_0_4	languages/turkish.cc	/^#define s_0_4 /;"	d	file:
s_0_5	languages/danish.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/dutch.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/finnish.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/german.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/german2.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/hungarian.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/italian.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/kraaij_pohlmann.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/lovins.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/norwegian.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/russian.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/spanish.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/swedish.cc	/^#define s_0_5 /;"	d	file:
s_0_5	languages/turkish.cc	/^#define s_0_5 /;"	d	file:
s_0_6	languages/danish.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/dutch.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/finnish.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/hungarian.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/italian.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/kraaij_pohlmann.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/lovins.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/norwegian.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/russian.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/swedish.cc	/^#define s_0_6 /;"	d	file:
s_0_6	languages/turkish.cc	/^#define s_0_6 /;"	d	file:
s_0_7	languages/danish.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/dutch.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/finnish.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/hungarian.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/lovins.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/norwegian.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/russian.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/swedish.cc	/^#define s_0_7 /;"	d	file:
s_0_7	languages/turkish.cc	/^#define s_0_7 /;"	d	file:
s_0_8	languages/danish.cc	/^#define s_0_8 /;"	d	file:
s_0_8	languages/dutch.cc	/^#define s_0_8 /;"	d	file:
s_0_8	languages/finnish.cc	/^#define s_0_8 /;"	d	file:
s_0_8	languages/lovins.cc	/^#define s_0_8 /;"	d	file:
s_0_8	languages/norwegian.cc	/^#define s_0_8 /;"	d	file:
s_0_8	languages/russian.cc	/^#define s_0_8 /;"	d	file:
s_0_8	languages/swedish.cc	/^#define s_0_8 /;"	d	file:
s_0_8	languages/turkish.cc	/^#define s_0_8 /;"	d	file:
s_0_9	languages/danish.cc	/^#define s_0_9 /;"	d	file:
s_0_9	languages/dutch.cc	/^#define s_0_9 /;"	d	file:
s_0_9	languages/finnish.cc	/^#define s_0_9 /;"	d	file:
s_0_9	languages/norwegian.cc	/^#define s_0_9 /;"	d	file:
s_0_9	languages/swedish.cc	/^#define s_0_9 /;"	d	file:
s_0_9	languages/turkish.cc	/^#define s_0_9 /;"	d	file:
s_1	languages/danish.cc	/^static const symbol s_1[] = { 'i', 'g' };$/;"	v	file:
s_1	languages/dutch.cc	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	languages/english.cc	/^static const symbol s_1[] = { 'Y' };$/;"	v	file:
s_1	languages/finnish.cc	/^static const symbol s_1[] = { 'k', 's', 'i' };$/;"	v	file:
s_1	languages/french.cc	/^static const symbol s_1[] = { 'I' };$/;"	v	file:
s_1	languages/german.cc	/^static const symbol s_1[] = { 's', 's' };$/;"	v	file:
s_1	languages/german2.cc	/^static const symbol s_1[] = { 'Y' };$/;"	v	file:
s_1	languages/hungarian.cc	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	languages/italian.cc	/^static const symbol s_1[] = { 0xC3, 0xA8 };$/;"	v	file:
s_1	languages/kraaij_pohlmann.cc	/^static const symbol s_1[] = { 'i', 'j' };$/;"	v	file:
s_1	languages/lovins.cc	/^static const symbol s_1[] = { 'd', 'r' };$/;"	v	file:
s_1	languages/porter.cc	/^static const symbol s_1[] = { 'i' };$/;"	v	file:
s_1	languages/portuguese.cc	/^static const symbol s_1[] = { 'o', '~' };$/;"	v	file:
s_1	languages/romanian.cc	/^static const symbol s_1[] = { 'I' };$/;"	v	file:
s_1	languages/russian.cc	/^static const symbol s_1[] = { 0xD1, 0x8F };$/;"	v	file:
s_1	languages/spanish.cc	/^static const symbol s_1[] = { 'e' };$/;"	v	file:
s_1	languages/swedish.cc	/^static const symbol s_1[] = { 'f', 'u', 'l', 'l' };$/;"	v	file:
s_1	languages/turkish.cc	/^static const symbol s_1[] = { 0xC3, 0xB6 };$/;"	v	file:
s_10	languages/dutch.cc	/^static const symbol s_10[] = { 'g', 'e', 'm' };$/;"	v	file:
s_10	languages/english.cc	/^static const symbol s_10[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_10	languages/french.cc	/^static const symbol s_10[] = { 'l', 'o', 'g' };$/;"	v	file:
s_10	languages/german.cc	/^static const symbol s_10[] = { 'i', 'g' };$/;"	v	file:
s_10	languages/german2.cc	/^static const symbol s_10[] = { 'u' };$/;"	v	file:
s_10	languages/hungarian.cc	/^static const symbol s_10[] = { 'a' };$/;"	v	file:
s_10	languages/italian.cc	/^static const symbol s_10[] = { 'e' };$/;"	v	file:
s_10	languages/kraaij_pohlmann.cc	/^static const symbol s_10[] = { 'n', 'd' };$/;"	v	file:
s_10	languages/lovins.cc	/^static const symbol s_10[] = { 'i', 's', 't', 'e', 'r' };$/;"	v	file:
s_10	languages/porter.cc	/^static const symbol s_10[] = { 'e', 'n', 't' };$/;"	v	file:
s_10	languages/portuguese.cc	/^static const symbol s_10[] = { 'c' };$/;"	v	file:
s_10	languages/romanian.cc	/^static const symbol s_10[] = { 'a', 0xC5, 0xA3, 'i' };$/;"	v	file:
s_10	languages/spanish.cc	/^static const symbol s_10[] = { 'i', 'c' };$/;"	v	file:
s_10	languages/turkish.cc	/^static const symbol s_10[] = { 0xC4, 0xB1 };$/;"	v	file:
s_10_0	languages/english.cc	/^#define s_10_0 /;"	d	file:
s_10_0	languages/hungarian.cc	/^#define s_10_0 /;"	d	file:
s_10_0	languages/turkish.cc	/^#define s_10_0 /;"	d	file:
s_10_1	languages/english.cc	/^#define s_10_1 /;"	d	file:
s_10_1	languages/hungarian.cc	/^#define s_10_1 /;"	d	file:
s_10_1	languages/turkish.cc	/^#define s_10_1 /;"	d	file:
s_10_10	languages/english.cc	/^#define s_10_10 /;"	d	file:
s_10_10	languages/hungarian.cc	/^#define s_10_10 /;"	d	file:
s_10_11	languages/english.cc	/^#define s_10_11 /;"	d	file:
s_10_11	languages/hungarian.cc	/^#define s_10_11 /;"	d	file:
s_10_12	languages/english.cc	/^#define s_10_12 /;"	d	file:
s_10_12	languages/hungarian.cc	/^#define s_10_12 /;"	d	file:
s_10_13	languages/english.cc	/^#define s_10_13 /;"	d	file:
s_10_13	languages/hungarian.cc	/^#define s_10_13 /;"	d	file:
s_10_14	languages/english.cc	/^#define s_10_14 /;"	d	file:
s_10_14	languages/hungarian.cc	/^#define s_10_14 /;"	d	file:
s_10_15	languages/english.cc	/^#define s_10_15 /;"	d	file:
s_10_15	languages/hungarian.cc	/^#define s_10_15 /;"	d	file:
s_10_16	languages/english.cc	/^#define s_10_16 /;"	d	file:
s_10_16	languages/hungarian.cc	/^#define s_10_16 /;"	d	file:
s_10_17	languages/english.cc	/^#define s_10_17 /;"	d	file:
s_10_17	languages/hungarian.cc	/^#define s_10_17 /;"	d	file:
s_10_18	languages/hungarian.cc	/^#define s_10_18 /;"	d	file:
s_10_19	languages/hungarian.cc	/^#define s_10_19 /;"	d	file:
s_10_2	languages/english.cc	/^#define s_10_2 /;"	d	file:
s_10_2	languages/hungarian.cc	/^#define s_10_2 /;"	d	file:
s_10_20	languages/hungarian.cc	/^#define s_10_20 /;"	d	file:
s_10_21	languages/hungarian.cc	/^#define s_10_21 /;"	d	file:
s_10_22	languages/hungarian.cc	/^#define s_10_22 /;"	d	file:
s_10_23	languages/hungarian.cc	/^#define s_10_23 /;"	d	file:
s_10_24	languages/hungarian.cc	/^#define s_10_24 /;"	d	file:
s_10_25	languages/hungarian.cc	/^#define s_10_25 /;"	d	file:
s_10_26	languages/hungarian.cc	/^#define s_10_26 /;"	d	file:
s_10_27	languages/hungarian.cc	/^#define s_10_27 /;"	d	file:
s_10_28	languages/hungarian.cc	/^#define s_10_28 /;"	d	file:
s_10_29	languages/hungarian.cc	/^#define s_10_29 /;"	d	file:
s_10_3	languages/english.cc	/^#define s_10_3 /;"	d	file:
s_10_3	languages/hungarian.cc	/^#define s_10_3 /;"	d	file:
s_10_30	languages/hungarian.cc	/^#define s_10_30 /;"	d	file:
s_10_4	languages/english.cc	/^#define s_10_4 /;"	d	file:
s_10_4	languages/hungarian.cc	/^#define s_10_4 /;"	d	file:
s_10_5	languages/english.cc	/^#define s_10_5 /;"	d	file:
s_10_5	languages/hungarian.cc	/^#define s_10_5 /;"	d	file:
s_10_6	languages/english.cc	/^#define s_10_6 /;"	d	file:
s_10_6	languages/hungarian.cc	/^#define s_10_6 /;"	d	file:
s_10_7	languages/english.cc	/^#define s_10_7 /;"	d	file:
s_10_7	languages/hungarian.cc	/^#define s_10_7 /;"	d	file:
s_10_8	languages/english.cc	/^#define s_10_8 /;"	d	file:
s_10_8	languages/hungarian.cc	/^#define s_10_8 /;"	d	file:
s_10_9	languages/english.cc	/^#define s_10_9 /;"	d	file:
s_10_9	languages/hungarian.cc	/^#define s_10_9 /;"	d	file:
s_11	languages/dutch.cc	/^static const symbol s_11[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_11	languages/english.cc	/^static const symbol s_11[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_11	languages/french.cc	/^static const symbol s_11[] = { 'u' };$/;"	v	file:
s_11	languages/german.cc	/^static const symbol s_11[] = { 'e', 'r' };$/;"	v	file:
s_11	languages/german2.cc	/^static const symbol s_11[] = { 'n', 'i', 's' };$/;"	v	file:
s_11	languages/hungarian.cc	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	languages/italian.cc	/^static const symbol s_11[] = { 'i', 'c' };$/;"	v	file:
s_11	languages/kraaij_pohlmann.cc	/^static const symbol s_11[] = { 'n', 'd' };$/;"	v	file:
s_11	languages/lovins.cc	/^static const symbol s_11[] = { 'm', 'e', 't', 'e', 'r' };$/;"	v	file:
s_11	languages/porter.cc	/^static const symbol s_11[] = { 'e' };$/;"	v	file:
s_11	languages/romanian.cc	/^static const symbol s_11[] = { 'a', 'b', 'i', 'l' };$/;"	v	file:
s_11	languages/spanish.cc	/^static const symbol s_11[] = { 'l', 'o', 'g' };$/;"	v	file:
s_11	languages/turkish.cc	/^static const symbol s_11[] = { 'i' };$/;"	v	file:
s_11_0	languages/hungarian.cc	/^#define s_11_0 /;"	d	file:
s_11_0	languages/turkish.cc	/^#define s_11_0 /;"	d	file:
s_11_1	languages/hungarian.cc	/^#define s_11_1 /;"	d	file:
s_11_1	languages/turkish.cc	/^#define s_11_1 /;"	d	file:
s_11_10	languages/hungarian.cc	/^#define s_11_10 /;"	d	file:
s_11_11	languages/hungarian.cc	/^#define s_11_11 /;"	d	file:
s_11_12	languages/hungarian.cc	/^#define s_11_12 /;"	d	file:
s_11_13	languages/hungarian.cc	/^#define s_11_13 /;"	d	file:
s_11_14	languages/hungarian.cc	/^#define s_11_14 /;"	d	file:
s_11_15	languages/hungarian.cc	/^#define s_11_15 /;"	d	file:
s_11_16	languages/hungarian.cc	/^#define s_11_16 /;"	d	file:
s_11_17	languages/hungarian.cc	/^#define s_11_17 /;"	d	file:
s_11_18	languages/hungarian.cc	/^#define s_11_18 /;"	d	file:
s_11_19	languages/hungarian.cc	/^#define s_11_19 /;"	d	file:
s_11_2	languages/hungarian.cc	/^#define s_11_2 /;"	d	file:
s_11_20	languages/hungarian.cc	/^#define s_11_20 /;"	d	file:
s_11_21	languages/hungarian.cc	/^#define s_11_21 /;"	d	file:
s_11_22	languages/hungarian.cc	/^#define s_11_22 /;"	d	file:
s_11_23	languages/hungarian.cc	/^#define s_11_23 /;"	d	file:
s_11_24	languages/hungarian.cc	/^#define s_11_24 /;"	d	file:
s_11_25	languages/hungarian.cc	/^#define s_11_25 /;"	d	file:
s_11_26	languages/hungarian.cc	/^#define s_11_26 /;"	d	file:
s_11_27	languages/hungarian.cc	/^#define s_11_27 /;"	d	file:
s_11_28	languages/hungarian.cc	/^#define s_11_28 /;"	d	file:
s_11_29	languages/hungarian.cc	/^#define s_11_29 /;"	d	file:
s_11_3	languages/hungarian.cc	/^#define s_11_3 /;"	d	file:
s_11_30	languages/hungarian.cc	/^#define s_11_30 /;"	d	file:
s_11_31	languages/hungarian.cc	/^#define s_11_31 /;"	d	file:
s_11_32	languages/hungarian.cc	/^#define s_11_32 /;"	d	file:
s_11_33	languages/hungarian.cc	/^#define s_11_33 /;"	d	file:
s_11_34	languages/hungarian.cc	/^#define s_11_34 /;"	d	file:
s_11_35	languages/hungarian.cc	/^#define s_11_35 /;"	d	file:
s_11_36	languages/hungarian.cc	/^#define s_11_36 /;"	d	file:
s_11_37	languages/hungarian.cc	/^#define s_11_37 /;"	d	file:
s_11_38	languages/hungarian.cc	/^#define s_11_38 /;"	d	file:
s_11_39	languages/hungarian.cc	/^#define s_11_39 /;"	d	file:
s_11_4	languages/hungarian.cc	/^#define s_11_4 /;"	d	file:
s_11_40	languages/hungarian.cc	/^#define s_11_40 /;"	d	file:
s_11_41	languages/hungarian.cc	/^#define s_11_41 /;"	d	file:
s_11_5	languages/hungarian.cc	/^#define s_11_5 /;"	d	file:
s_11_6	languages/hungarian.cc	/^#define s_11_6 /;"	d	file:
s_11_7	languages/hungarian.cc	/^#define s_11_7 /;"	d	file:
s_11_8	languages/hungarian.cc	/^#define s_11_8 /;"	d	file:
s_11_9	languages/hungarian.cc	/^#define s_11_9 /;"	d	file:
s_12	languages/dutch.cc	/^static const symbol s_12[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_12	languages/english.cc	/^static const symbol s_12[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_12	languages/french.cc	/^static const symbol s_12[] = { 'e', 'n', 't' };$/;"	v	file:
s_12	languages/german.cc	/^static const symbol s_12[] = { 'e', 'n' };$/;"	v	file:
s_12	languages/german2.cc	/^static const symbol s_12[] = { 'i', 'g' };$/;"	v	file:
s_12	languages/hungarian.cc	/^static const symbol s_12[] = { 'a' };$/;"	v	file:
s_12	languages/italian.cc	/^static const symbol s_12[] = { 'l', 'o', 'g' };$/;"	v	file:
s_12	languages/kraaij_pohlmann.cc	/^static const symbol s_12[] = { '\\'', 't' };$/;"	v	file:
s_12	languages/lovins.cc	/^static const symbol s_12[] = { 'o', 'l', 'u', 't' };$/;"	v	file:
s_12	languages/porter.cc	/^static const symbol s_12[] = { 'i', 'z', 'e' };$/;"	v	file:
s_12	languages/romanian.cc	/^static const symbol s_12[] = { 'i', 'b', 'i', 'l' };$/;"	v	file:
s_12	languages/spanish.cc	/^static const symbol s_12[] = { 'u' };$/;"	v	file:
s_12	languages/turkish.cc	/^static const symbol s_12[] = { 'u' };$/;"	v	file:
s_12_0	languages/turkish.cc	/^#define s_12_0 /;"	d	file:
s_12_1	languages/turkish.cc	/^#define s_12_1 /;"	d	file:
s_12_2	languages/turkish.cc	/^#define s_12_2 /;"	d	file:
s_12_3	languages/turkish.cc	/^#define s_12_3 /;"	d	file:
s_13	languages/dutch.cc	/^static const symbol s_13[] = { 'e', 'n' };$/;"	v	file:
s_13	languages/english.cc	/^static const symbol s_13[] = { 'e', 'n', 't' };$/;"	v	file:
s_13	languages/french.cc	/^static const symbol s_13[] = { 'a', 't' };$/;"	v	file:
s_13	languages/german2.cc	/^static const symbol s_13[] = { 'e', 'r' };$/;"	v	file:
s_13	languages/hungarian.cc	/^static const symbol s_13[] = { 'e' };$/;"	v	file:
s_13	languages/italian.cc	/^static const symbol s_13[] = { 'u' };$/;"	v	file:
s_13	languages/kraaij_pohlmann.cc	/^static const symbol s_13[] = { 'e', 't' };$/;"	v	file:
s_13	languages/lovins.cc	/^static const symbol s_13[] = { 'l' };$/;"	v	file:
s_13	languages/porter.cc	/^static const symbol s_13[] = { 'a', 't', 'e' };$/;"	v	file:
s_13	languages/romanian.cc	/^static const symbol s_13[] = { 'i', 'v' };$/;"	v	file:
s_13	languages/spanish.cc	/^static const symbol s_13[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_13	languages/turkish.cc	/^static const symbol s_13[] = { 0xC3, 0xB6 };$/;"	v	file:
s_13_0	languages/turkish.cc	/^#define s_13_0 /;"	d	file:
s_13_1	languages/turkish.cc	/^#define s_13_1 /;"	d	file:
s_13_2	languages/turkish.cc	/^#define s_13_2 /;"	d	file:
s_13_3	languages/turkish.cc	/^#define s_13_3 /;"	d	file:
s_14	languages/dutch.cc	/^static const symbol s_14[] = { 'i', 'g' };$/;"	v	file:
s_14	languages/english.cc	/^static const symbol s_14[] = { 'i', 'z', 'e' };$/;"	v	file:
s_14	languages/french.cc	/^static const symbol s_14[] = { 'e', 'u', 'x' };$/;"	v	file:
s_14	languages/german2.cc	/^static const symbol s_14[] = { 'e', 'n' };$/;"	v	file:
s_14	languages/hungarian.cc	/^static const symbol s_14[] = { 'a' };$/;"	v	file:
s_14	languages/italian.cc	/^static const symbol s_14[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_14	languages/kraaij_pohlmann.cc	/^static const symbol s_14[] = { 'r', 'n', 't' };$/;"	v	file:
s_14	languages/lovins.cc	/^static const symbol s_14[] = { 'b', 'i', 'c' };$/;"	v	file:
s_14	languages/porter.cc	/^static const symbol s_14[] = { 'a', 'l' };$/;"	v	file:
s_14	languages/romanian.cc	/^static const symbol s_14[] = { 'i', 'c' };$/;"	v	file:
s_14	languages/spanish.cc	/^static const symbol s_14[] = { 'a', 't' };$/;"	v	file:
s_14	languages/turkish.cc	/^static const symbol s_14[] = { 0xC3, 0xBC };$/;"	v	file:
s_14_0	languages/turkish.cc	/^#define s_14_0 /;"	d	file:
s_14_1	languages/turkish.cc	/^#define s_14_1 /;"	d	file:
s_14_2	languages/turkish.cc	/^#define s_14_2 /;"	d	file:
s_14_3	languages/turkish.cc	/^#define s_14_3 /;"	d	file:
s_15	languages/english.cc	/^static const symbol s_15[] = { 'a', 't', 'e' };$/;"	v	file:
s_15	languages/french.cc	/^static const symbol s_15[] = { 'i' };$/;"	v	file:
s_15	languages/hungarian.cc	/^static const symbol s_15[] = { 'e' };$/;"	v	file:
s_15	languages/italian.cc	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	languages/kraaij_pohlmann.cc	/^static const symbol s_15[] = { 'r', 'n' };$/;"	v	file:
s_15	languages/lovins.cc	/^static const symbol s_15[] = { 'd', 'i', 'c' };$/;"	v	file:
s_15	languages/porter.cc	/^static const symbol s_15[] = { 'a', 'l' };$/;"	v	file:
s_15	languages/romanian.cc	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	languages/spanish.cc	/^static const symbol s_15[] = { 'a', 't' };$/;"	v	file:
s_15	languages/turkish.cc	/^static const symbol s_15[] = { 0xC3, 0xBC };$/;"	v	file:
s_15_0	languages/turkish.cc	/^#define s_15_0 /;"	d	file:
s_15_1	languages/turkish.cc	/^#define s_15_1 /;"	d	file:
s_15_2	languages/turkish.cc	/^#define s_15_2 /;"	d	file:
s_15_3	languages/turkish.cc	/^#define s_15_3 /;"	d	file:
s_16	languages/english.cc	/^static const symbol s_16[] = { 'a', 'l' };$/;"	v	file:
s_16	languages/french.cc	/^static const symbol s_16[] = { 'a', 'b', 'l' };$/;"	v	file:
s_16	languages/hungarian.cc	/^static const symbol s_16[] = { 'a' };$/;"	v	file:
s_16	languages/italian.cc	/^static const symbol s_16[] = { 'a', 't' };$/;"	v	file:
s_16	languages/kraaij_pohlmann.cc	/^static const symbol s_16[] = { 'i', 'n', 'k' };$/;"	v	file:
s_16	languages/lovins.cc	/^static const symbol s_16[] = { 'p', 'i', 'c' };$/;"	v	file:
s_16	languages/porter.cc	/^static const symbol s_16[] = { 'f', 'u', 'l' };$/;"	v	file:
s_16	languages/romanian.cc	/^static const symbol s_16[] = { 'i', 't' };$/;"	v	file:
s_16	languages/turkish.cc	/^static const symbol s_16[] = { 'a', 'd' };$/;"	v	file:
s_16_0	languages/turkish.cc	/^#define s_16_0 /;"	d	file:
s_16_1	languages/turkish.cc	/^#define s_16_1 /;"	d	file:
s_17	languages/english.cc	/^static const symbol s_17[] = { 'f', 'u', 'l' };$/;"	v	file:
s_17	languages/french.cc	/^static const symbol s_17[] = { 'i', 'q', 'U' };$/;"	v	file:
s_17	languages/hungarian.cc	/^static const symbol s_17[] = { 'e' };$/;"	v	file:
s_17	languages/italian.cc	/^static const symbol s_17[] = { 'i', 'c' };$/;"	v	file:
s_17	languages/kraaij_pohlmann.cc	/^static const symbol s_17[] = { 'i', 'n', 'g' };$/;"	v	file:
s_17	languages/lovins.cc	/^static const symbol s_17[] = { 't', 'i', 'c' };$/;"	v	file:
s_17	languages/porter.cc	/^static const symbol s_17[] = { 'o', 'u', 's' };$/;"	v	file:
s_17	languages/romanian.cc	/^static const symbol s_17[] = { 0xC5, 0xA3 };$/;"	v	file:
s_17	languages/turkish.cc	/^static const symbol s_17[] = { 's', 'o', 'y', 'a', 'd' };$/;"	v	file:
s_17_0	languages/turkish.cc	/^#define s_17_0 /;"	d	file:
s_17_1	languages/turkish.cc	/^#define s_17_1 /;"	d	file:
s_17_2	languages/turkish.cc	/^#define s_17_2 /;"	d	file:
s_17_3	languages/turkish.cc	/^#define s_17_3 /;"	d	file:
s_18	languages/english.cc	/^static const symbol s_18[] = { 'o', 'u', 's' };$/;"	v	file:
s_18	languages/french.cc	/^static const symbol s_18[] = { 'a', 't' };$/;"	v	file:
s_18	languages/hungarian.cc	/^static const symbol s_18[] = { 'a' };$/;"	v	file:
s_18	languages/kraaij_pohlmann.cc	/^static const symbol s_18[] = { 'm', 'p' };$/;"	v	file:
s_18	languages/lovins.cc	/^static const symbol s_18[] = { 'a', 'c' };$/;"	v	file:
s_18	languages/porter.cc	/^static const symbol s_18[] = { 'i', 'v', 'e' };$/;"	v	file:
s_18	languages/romanian.cc	/^static const symbol s_18[] = { 't' };$/;"	v	file:
s_18_0	languages/turkish.cc	/^#define s_18_0 /;"	d	file:
s_18_1	languages/turkish.cc	/^#define s_18_1 /;"	d	file:
s_18_2	languages/turkish.cc	/^#define s_18_2 /;"	d	file:
s_18_3	languages/turkish.cc	/^#define s_18_3 /;"	d	file:
s_18_4	languages/turkish.cc	/^#define s_18_4 /;"	d	file:
s_18_5	languages/turkish.cc	/^#define s_18_5 /;"	d	file:
s_18_6	languages/turkish.cc	/^#define s_18_6 /;"	d	file:
s_18_7	languages/turkish.cc	/^#define s_18_7 /;"	d	file:
s_19	languages/english.cc	/^static const symbol s_19[] = { 'i', 'v', 'e' };$/;"	v	file:
s_19	languages/french.cc	/^static const symbol s_19[] = { 'i', 'c' };$/;"	v	file:
s_19	languages/hungarian.cc	/^static const symbol s_19[] = { 'e' };$/;"	v	file:
s_19	languages/kraaij_pohlmann.cc	/^static const symbol s_19[] = { 'm' };$/;"	v	file:
s_19	languages/lovins.cc	/^static const symbol s_19[] = { 'e', 'c' };$/;"	v	file:
s_19	languages/porter.cc	/^static const symbol s_19[] = { 'b', 'l', 'e' };$/;"	v	file:
s_19	languages/romanian.cc	/^static const symbol s_19[] = { 'i', 's', 't' };$/;"	v	file:
s_19_0	languages/turkish.cc	/^#define s_19_0 /;"	d	file:
s_19_1	languages/turkish.cc	/^#define s_19_1 /;"	d	file:
s_1_0	languages/danish.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/english.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/finnish.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/german.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/hungarian.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/kraaij_pohlmann.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/lovins.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/norwegian.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/romanian.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/russian.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/spanish.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/swedish.cc	/^#define s_1_0 /;"	d	file:
s_1_0	languages/turkish.cc	/^#define s_1_0 /;"	d	file:
s_1_1	languages/danish.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/dutch.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/english.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/finnish.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/french.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/german.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/german2.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/hungarian.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/italian.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/kraaij_pohlmann.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/lovins.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/norwegian.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/porter.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/portuguese.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/romanian.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/russian.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/spanish.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/swedish.cc	/^#define s_1_1 /;"	d	file:
s_1_1	languages/turkish.cc	/^#define s_1_1 /;"	d	file:
s_1_10	languages/kraaij_pohlmann.cc	/^#define s_1_10 /;"	d	file:
s_1_10	languages/lovins.cc	/^#define s_1_10 /;"	d	file:
s_1_10	languages/porter.cc	/^#define s_1_10 /;"	d	file:
s_1_10	languages/romanian.cc	/^#define s_1_10 /;"	d	file:
s_1_10	languages/russian.cc	/^#define s_1_10 /;"	d	file:
s_1_10	languages/spanish.cc	/^#define s_1_10 /;"	d	file:
s_1_100	languages/lovins.cc	/^#define s_1_100 /;"	d	file:
s_1_101	languages/lovins.cc	/^#define s_1_101 /;"	d	file:
s_1_102	languages/lovins.cc	/^#define s_1_102 /;"	d	file:
s_1_103	languages/lovins.cc	/^#define s_1_103 /;"	d	file:
s_1_104	languages/lovins.cc	/^#define s_1_104 /;"	d	file:
s_1_105	languages/lovins.cc	/^#define s_1_105 /;"	d	file:
s_1_106	languages/lovins.cc	/^#define s_1_106 /;"	d	file:
s_1_107	languages/lovins.cc	/^#define s_1_107 /;"	d	file:
s_1_108	languages/lovins.cc	/^#define s_1_108 /;"	d	file:
s_1_109	languages/lovins.cc	/^#define s_1_109 /;"	d	file:
s_1_11	languages/lovins.cc	/^#define s_1_11 /;"	d	file:
s_1_11	languages/porter.cc	/^#define s_1_11 /;"	d	file:
s_1_11	languages/romanian.cc	/^#define s_1_11 /;"	d	file:
s_1_11	languages/russian.cc	/^#define s_1_11 /;"	d	file:
s_1_11	languages/spanish.cc	/^#define s_1_11 /;"	d	file:
s_1_110	languages/lovins.cc	/^#define s_1_110 /;"	d	file:
s_1_111	languages/lovins.cc	/^#define s_1_111 /;"	d	file:
s_1_112	languages/lovins.cc	/^#define s_1_112 /;"	d	file:
s_1_113	languages/lovins.cc	/^#define s_1_113 /;"	d	file:
s_1_114	languages/lovins.cc	/^#define s_1_114 /;"	d	file:
s_1_115	languages/lovins.cc	/^#define s_1_115 /;"	d	file:
s_1_116	languages/lovins.cc	/^#define s_1_116 /;"	d	file:
s_1_117	languages/lovins.cc	/^#define s_1_117 /;"	d	file:
s_1_118	languages/lovins.cc	/^#define s_1_118 /;"	d	file:
s_1_119	languages/lovins.cc	/^#define s_1_119 /;"	d	file:
s_1_12	languages/lovins.cc	/^#define s_1_12 /;"	d	file:
s_1_12	languages/porter.cc	/^#define s_1_12 /;"	d	file:
s_1_12	languages/romanian.cc	/^#define s_1_12 /;"	d	file:
s_1_12	languages/russian.cc	/^#define s_1_12 /;"	d	file:
s_1_12	languages/spanish.cc	/^#define s_1_12 /;"	d	file:
s_1_120	languages/lovins.cc	/^#define s_1_120 /;"	d	file:
s_1_121	languages/lovins.cc	/^#define s_1_121 /;"	d	file:
s_1_122	languages/lovins.cc	/^#define s_1_122 /;"	d	file:
s_1_123	languages/lovins.cc	/^#define s_1_123 /;"	d	file:
s_1_124	languages/lovins.cc	/^#define s_1_124 /;"	d	file:
s_1_125	languages/lovins.cc	/^#define s_1_125 /;"	d	file:
s_1_126	languages/lovins.cc	/^#define s_1_126 /;"	d	file:
s_1_127	languages/lovins.cc	/^#define s_1_127 /;"	d	file:
s_1_128	languages/lovins.cc	/^#define s_1_128 /;"	d	file:
s_1_129	languages/lovins.cc	/^#define s_1_129 /;"	d	file:
s_1_13	languages/lovins.cc	/^#define s_1_13 /;"	d	file:
s_1_13	languages/romanian.cc	/^#define s_1_13 /;"	d	file:
s_1_13	languages/russian.cc	/^#define s_1_13 /;"	d	file:
s_1_130	languages/lovins.cc	/^#define s_1_130 /;"	d	file:
s_1_131	languages/lovins.cc	/^#define s_1_131 /;"	d	file:
s_1_132	languages/lovins.cc	/^#define s_1_132 /;"	d	file:
s_1_133	languages/lovins.cc	/^#define s_1_133 /;"	d	file:
s_1_134	languages/lovins.cc	/^#define s_1_134 /;"	d	file:
s_1_135	languages/lovins.cc	/^#define s_1_135 /;"	d	file:
s_1_136	languages/lovins.cc	/^#define s_1_136 /;"	d	file:
s_1_137	languages/lovins.cc	/^#define s_1_137 /;"	d	file:
s_1_138	languages/lovins.cc	/^#define s_1_138 /;"	d	file:
s_1_139	languages/lovins.cc	/^#define s_1_139 /;"	d	file:
s_1_14	languages/lovins.cc	/^#define s_1_14 /;"	d	file:
s_1_14	languages/romanian.cc	/^#define s_1_14 /;"	d	file:
s_1_14	languages/russian.cc	/^#define s_1_14 /;"	d	file:
s_1_140	languages/lovins.cc	/^#define s_1_140 /;"	d	file:
s_1_141	languages/lovins.cc	/^#define s_1_141 /;"	d	file:
s_1_142	languages/lovins.cc	/^#define s_1_142 /;"	d	file:
s_1_143	languages/lovins.cc	/^#define s_1_143 /;"	d	file:
s_1_144	languages/lovins.cc	/^#define s_1_144 /;"	d	file:
s_1_145	languages/lovins.cc	/^#define s_1_145 /;"	d	file:
s_1_146	languages/lovins.cc	/^#define s_1_146 /;"	d	file:
s_1_147	languages/lovins.cc	/^#define s_1_147 /;"	d	file:
s_1_148	languages/lovins.cc	/^#define s_1_148 /;"	d	file:
s_1_149	languages/lovins.cc	/^#define s_1_149 /;"	d	file:
s_1_15	languages/lovins.cc	/^#define s_1_15 /;"	d	file:
s_1_15	languages/romanian.cc	/^#define s_1_15 /;"	d	file:
s_1_15	languages/russian.cc	/^#define s_1_15 /;"	d	file:
s_1_150	languages/lovins.cc	/^#define s_1_150 /;"	d	file:
s_1_151	languages/lovins.cc	/^#define s_1_151 /;"	d	file:
s_1_152	languages/lovins.cc	/^#define s_1_152 /;"	d	file:
s_1_153	languages/lovins.cc	/^#define s_1_153 /;"	d	file:
s_1_154	languages/lovins.cc	/^#define s_1_154 /;"	d	file:
s_1_155	languages/lovins.cc	/^#define s_1_155 /;"	d	file:
s_1_156	languages/lovins.cc	/^#define s_1_156 /;"	d	file:
s_1_157	languages/lovins.cc	/^#define s_1_157 /;"	d	file:
s_1_158	languages/lovins.cc	/^#define s_1_158 /;"	d	file:
s_1_159	languages/lovins.cc	/^#define s_1_159 /;"	d	file:
s_1_16	languages/lovins.cc	/^#define s_1_16 /;"	d	file:
s_1_16	languages/russian.cc	/^#define s_1_16 /;"	d	file:
s_1_160	languages/lovins.cc	/^#define s_1_160 /;"	d	file:
s_1_161	languages/lovins.cc	/^#define s_1_161 /;"	d	file:
s_1_162	languages/lovins.cc	/^#define s_1_162 /;"	d	file:
s_1_163	languages/lovins.cc	/^#define s_1_163 /;"	d	file:
s_1_164	languages/lovins.cc	/^#define s_1_164 /;"	d	file:
s_1_165	languages/lovins.cc	/^#define s_1_165 /;"	d	file:
s_1_166	languages/lovins.cc	/^#define s_1_166 /;"	d	file:
s_1_167	languages/lovins.cc	/^#define s_1_167 /;"	d	file:
s_1_168	languages/lovins.cc	/^#define s_1_168 /;"	d	file:
s_1_169	languages/lovins.cc	/^#define s_1_169 /;"	d	file:
s_1_17	languages/lovins.cc	/^#define s_1_17 /;"	d	file:
s_1_17	languages/russian.cc	/^#define s_1_17 /;"	d	file:
s_1_170	languages/lovins.cc	/^#define s_1_170 /;"	d	file:
s_1_171	languages/lovins.cc	/^#define s_1_171 /;"	d	file:
s_1_172	languages/lovins.cc	/^#define s_1_172 /;"	d	file:
s_1_173	languages/lovins.cc	/^#define s_1_173 /;"	d	file:
s_1_174	languages/lovins.cc	/^#define s_1_174 /;"	d	file:
s_1_175	languages/lovins.cc	/^#define s_1_175 /;"	d	file:
s_1_176	languages/lovins.cc	/^#define s_1_176 /;"	d	file:
s_1_177	languages/lovins.cc	/^#define s_1_177 /;"	d	file:
s_1_178	languages/lovins.cc	/^#define s_1_178 /;"	d	file:
s_1_179	languages/lovins.cc	/^#define s_1_179 /;"	d	file:
s_1_18	languages/lovins.cc	/^#define s_1_18 /;"	d	file:
s_1_18	languages/russian.cc	/^#define s_1_18 /;"	d	file:
s_1_180	languages/lovins.cc	/^#define s_1_180 /;"	d	file:
s_1_181	languages/lovins.cc	/^#define s_1_181 /;"	d	file:
s_1_182	languages/lovins.cc	/^#define s_1_182 /;"	d	file:
s_1_183	languages/lovins.cc	/^#define s_1_183 /;"	d	file:
s_1_184	languages/lovins.cc	/^#define s_1_184 /;"	d	file:
s_1_185	languages/lovins.cc	/^#define s_1_185 /;"	d	file:
s_1_186	languages/lovins.cc	/^#define s_1_186 /;"	d	file:
s_1_187	languages/lovins.cc	/^#define s_1_187 /;"	d	file:
s_1_188	languages/lovins.cc	/^#define s_1_188 /;"	d	file:
s_1_189	languages/lovins.cc	/^#define s_1_189 /;"	d	file:
s_1_19	languages/lovins.cc	/^#define s_1_19 /;"	d	file:
s_1_19	languages/russian.cc	/^#define s_1_19 /;"	d	file:
s_1_190	languages/lovins.cc	/^#define s_1_190 /;"	d	file:
s_1_191	languages/lovins.cc	/^#define s_1_191 /;"	d	file:
s_1_192	languages/lovins.cc	/^#define s_1_192 /;"	d	file:
s_1_193	languages/lovins.cc	/^#define s_1_193 /;"	d	file:
s_1_194	languages/lovins.cc	/^#define s_1_194 /;"	d	file:
s_1_195	languages/lovins.cc	/^#define s_1_195 /;"	d	file:
s_1_196	languages/lovins.cc	/^#define s_1_196 /;"	d	file:
s_1_197	languages/lovins.cc	/^#define s_1_197 /;"	d	file:
s_1_198	languages/lovins.cc	/^#define s_1_198 /;"	d	file:
s_1_199	languages/lovins.cc	/^#define s_1_199 /;"	d	file:
s_1_2	languages/danish.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/dutch.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/english.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/finnish.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/french.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/german.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/german2.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/italian.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/kraaij_pohlmann.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/lovins.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/porter.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/portuguese.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/romanian.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/russian.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/spanish.cc	/^#define s_1_2 /;"	d	file:
s_1_2	languages/swedish.cc	/^#define s_1_2 /;"	d	file:
s_1_20	languages/lovins.cc	/^#define s_1_20 /;"	d	file:
s_1_20	languages/russian.cc	/^#define s_1_20 /;"	d	file:
s_1_200	languages/lovins.cc	/^#define s_1_200 /;"	d	file:
s_1_201	languages/lovins.cc	/^#define s_1_201 /;"	d	file:
s_1_202	languages/lovins.cc	/^#define s_1_202 /;"	d	file:
s_1_203	languages/lovins.cc	/^#define s_1_203 /;"	d	file:
s_1_204	languages/lovins.cc	/^#define s_1_204 /;"	d	file:
s_1_205	languages/lovins.cc	/^#define s_1_205 /;"	d	file:
s_1_206	languages/lovins.cc	/^#define s_1_206 /;"	d	file:
s_1_207	languages/lovins.cc	/^#define s_1_207 /;"	d	file:
s_1_208	languages/lovins.cc	/^#define s_1_208 /;"	d	file:
s_1_209	languages/lovins.cc	/^#define s_1_209 /;"	d	file:
s_1_21	languages/lovins.cc	/^#define s_1_21 /;"	d	file:
s_1_21	languages/russian.cc	/^#define s_1_21 /;"	d	file:
s_1_210	languages/lovins.cc	/^#define s_1_210 /;"	d	file:
s_1_211	languages/lovins.cc	/^#define s_1_211 /;"	d	file:
s_1_212	languages/lovins.cc	/^#define s_1_212 /;"	d	file:
s_1_213	languages/lovins.cc	/^#define s_1_213 /;"	d	file:
s_1_214	languages/lovins.cc	/^#define s_1_214 /;"	d	file:
s_1_215	languages/lovins.cc	/^#define s_1_215 /;"	d	file:
s_1_216	languages/lovins.cc	/^#define s_1_216 /;"	d	file:
s_1_217	languages/lovins.cc	/^#define s_1_217 /;"	d	file:
s_1_218	languages/lovins.cc	/^#define s_1_218 /;"	d	file:
s_1_219	languages/lovins.cc	/^#define s_1_219 /;"	d	file:
s_1_22	languages/lovins.cc	/^#define s_1_22 /;"	d	file:
s_1_22	languages/russian.cc	/^#define s_1_22 /;"	d	file:
s_1_220	languages/lovins.cc	/^#define s_1_220 /;"	d	file:
s_1_221	languages/lovins.cc	/^#define s_1_221 /;"	d	file:
s_1_222	languages/lovins.cc	/^#define s_1_222 /;"	d	file:
s_1_223	languages/lovins.cc	/^#define s_1_223 /;"	d	file:
s_1_224	languages/lovins.cc	/^#define s_1_224 /;"	d	file:
s_1_225	languages/lovins.cc	/^#define s_1_225 /;"	d	file:
s_1_226	languages/lovins.cc	/^#define s_1_226 /;"	d	file:
s_1_227	languages/lovins.cc	/^#define s_1_227 /;"	d	file:
s_1_228	languages/lovins.cc	/^#define s_1_228 /;"	d	file:
s_1_229	languages/lovins.cc	/^#define s_1_229 /;"	d	file:
s_1_23	languages/lovins.cc	/^#define s_1_23 /;"	d	file:
s_1_23	languages/russian.cc	/^#define s_1_23 /;"	d	file:
s_1_230	languages/lovins.cc	/^#define s_1_230 /;"	d	file:
s_1_231	languages/lovins.cc	/^#define s_1_231 /;"	d	file:
s_1_232	languages/lovins.cc	/^#define s_1_232 /;"	d	file:
s_1_233	languages/lovins.cc	/^#define s_1_233 /;"	d	file:
s_1_234	languages/lovins.cc	/^#define s_1_234 /;"	d	file:
s_1_235	languages/lovins.cc	/^#define s_1_235 /;"	d	file:
s_1_236	languages/lovins.cc	/^#define s_1_236 /;"	d	file:
s_1_237	languages/lovins.cc	/^#define s_1_237 /;"	d	file:
s_1_238	languages/lovins.cc	/^#define s_1_238 /;"	d	file:
s_1_239	languages/lovins.cc	/^#define s_1_239 /;"	d	file:
s_1_24	languages/lovins.cc	/^#define s_1_24 /;"	d	file:
s_1_24	languages/russian.cc	/^#define s_1_24 /;"	d	file:
s_1_240	languages/lovins.cc	/^#define s_1_240 /;"	d	file:
s_1_241	languages/lovins.cc	/^#define s_1_241 /;"	d	file:
s_1_242	languages/lovins.cc	/^#define s_1_242 /;"	d	file:
s_1_243	languages/lovins.cc	/^#define s_1_243 /;"	d	file:
s_1_244	languages/lovins.cc	/^#define s_1_244 /;"	d	file:
s_1_245	languages/lovins.cc	/^#define s_1_245 /;"	d	file:
s_1_246	languages/lovins.cc	/^#define s_1_246 /;"	d	file:
s_1_247	languages/lovins.cc	/^#define s_1_247 /;"	d	file:
s_1_248	languages/lovins.cc	/^#define s_1_248 /;"	d	file:
s_1_249	languages/lovins.cc	/^#define s_1_249 /;"	d	file:
s_1_25	languages/lovins.cc	/^#define s_1_25 /;"	d	file:
s_1_25	languages/russian.cc	/^#define s_1_25 /;"	d	file:
s_1_250	languages/lovins.cc	/^#define s_1_250 /;"	d	file:
s_1_251	languages/lovins.cc	/^#define s_1_251 /;"	d	file:
s_1_252	languages/lovins.cc	/^#define s_1_252 /;"	d	file:
s_1_253	languages/lovins.cc	/^#define s_1_253 /;"	d	file:
s_1_254	languages/lovins.cc	/^#define s_1_254 /;"	d	file:
s_1_255	languages/lovins.cc	/^#define s_1_255 /;"	d	file:
s_1_256	languages/lovins.cc	/^#define s_1_256 /;"	d	file:
s_1_257	languages/lovins.cc	/^#define s_1_257 /;"	d	file:
s_1_258	languages/lovins.cc	/^#define s_1_258 /;"	d	file:
s_1_259	languages/lovins.cc	/^#define s_1_259 /;"	d	file:
s_1_26	languages/lovins.cc	/^#define s_1_26 /;"	d	file:
s_1_260	languages/lovins.cc	/^#define s_1_260 /;"	d	file:
s_1_261	languages/lovins.cc	/^#define s_1_261 /;"	d	file:
s_1_262	languages/lovins.cc	/^#define s_1_262 /;"	d	file:
s_1_263	languages/lovins.cc	/^#define s_1_263 /;"	d	file:
s_1_264	languages/lovins.cc	/^#define s_1_264 /;"	d	file:
s_1_265	languages/lovins.cc	/^#define s_1_265 /;"	d	file:
s_1_266	languages/lovins.cc	/^#define s_1_266 /;"	d	file:
s_1_267	languages/lovins.cc	/^#define s_1_267 /;"	d	file:
s_1_268	languages/lovins.cc	/^#define s_1_268 /;"	d	file:
s_1_269	languages/lovins.cc	/^#define s_1_269 /;"	d	file:
s_1_27	languages/lovins.cc	/^#define s_1_27 /;"	d	file:
s_1_270	languages/lovins.cc	/^#define s_1_270 /;"	d	file:
s_1_271	languages/lovins.cc	/^#define s_1_271 /;"	d	file:
s_1_272	languages/lovins.cc	/^#define s_1_272 /;"	d	file:
s_1_273	languages/lovins.cc	/^#define s_1_273 /;"	d	file:
s_1_274	languages/lovins.cc	/^#define s_1_274 /;"	d	file:
s_1_275	languages/lovins.cc	/^#define s_1_275 /;"	d	file:
s_1_276	languages/lovins.cc	/^#define s_1_276 /;"	d	file:
s_1_277	languages/lovins.cc	/^#define s_1_277 /;"	d	file:
s_1_278	languages/lovins.cc	/^#define s_1_278 /;"	d	file:
s_1_279	languages/lovins.cc	/^#define s_1_279 /;"	d	file:
s_1_28	languages/lovins.cc	/^#define s_1_28 /;"	d	file:
s_1_280	languages/lovins.cc	/^#define s_1_280 /;"	d	file:
s_1_281	languages/lovins.cc	/^#define s_1_281 /;"	d	file:
s_1_282	languages/lovins.cc	/^#define s_1_282 /;"	d	file:
s_1_283	languages/lovins.cc	/^#define s_1_283 /;"	d	file:
s_1_284	languages/lovins.cc	/^#define s_1_284 /;"	d	file:
s_1_285	languages/lovins.cc	/^#define s_1_285 /;"	d	file:
s_1_286	languages/lovins.cc	/^#define s_1_286 /;"	d	file:
s_1_287	languages/lovins.cc	/^#define s_1_287 /;"	d	file:
s_1_288	languages/lovins.cc	/^#define s_1_288 /;"	d	file:
s_1_289	languages/lovins.cc	/^#define s_1_289 /;"	d	file:
s_1_29	languages/lovins.cc	/^#define s_1_29 /;"	d	file:
s_1_290	languages/lovins.cc	/^#define s_1_290 /;"	d	file:
s_1_291	languages/lovins.cc	/^#define s_1_291 /;"	d	file:
s_1_292	languages/lovins.cc	/^#define s_1_292 /;"	d	file:
s_1_293	languages/lovins.cc	/^#define s_1_293 /;"	d	file:
s_1_3	languages/danish.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/finnish.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/french.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/german.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/german2.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/kraaij_pohlmann.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/lovins.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/porter.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/romanian.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/russian.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/spanish.cc	/^#define s_1_3 /;"	d	file:
s_1_3	languages/swedish.cc	/^#define s_1_3 /;"	d	file:
s_1_30	languages/lovins.cc	/^#define s_1_30 /;"	d	file:
s_1_31	languages/lovins.cc	/^#define s_1_31 /;"	d	file:
s_1_32	languages/lovins.cc	/^#define s_1_32 /;"	d	file:
s_1_33	languages/lovins.cc	/^#define s_1_33 /;"	d	file:
s_1_34	languages/lovins.cc	/^#define s_1_34 /;"	d	file:
s_1_35	languages/lovins.cc	/^#define s_1_35 /;"	d	file:
s_1_36	languages/lovins.cc	/^#define s_1_36 /;"	d	file:
s_1_37	languages/lovins.cc	/^#define s_1_37 /;"	d	file:
s_1_38	languages/lovins.cc	/^#define s_1_38 /;"	d	file:
s_1_39	languages/lovins.cc	/^#define s_1_39 /;"	d	file:
s_1_4	languages/finnish.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/german.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/german2.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/kraaij_pohlmann.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/lovins.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/porter.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/romanian.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/russian.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/spanish.cc	/^#define s_1_4 /;"	d	file:
s_1_4	languages/swedish.cc	/^#define s_1_4 /;"	d	file:
s_1_40	languages/lovins.cc	/^#define s_1_40 /;"	d	file:
s_1_41	languages/lovins.cc	/^#define s_1_41 /;"	d	file:
s_1_42	languages/lovins.cc	/^#define s_1_42 /;"	d	file:
s_1_43	languages/lovins.cc	/^#define s_1_43 /;"	d	file:
s_1_44	languages/lovins.cc	/^#define s_1_44 /;"	d	file:
s_1_45	languages/lovins.cc	/^#define s_1_45 /;"	d	file:
s_1_46	languages/lovins.cc	/^#define s_1_46 /;"	d	file:
s_1_47	languages/lovins.cc	/^#define s_1_47 /;"	d	file:
s_1_48	languages/lovins.cc	/^#define s_1_48 /;"	d	file:
s_1_49	languages/lovins.cc	/^#define s_1_49 /;"	d	file:
s_1_5	languages/finnish.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/german.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/german2.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/kraaij_pohlmann.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/lovins.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/porter.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/romanian.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/russian.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/spanish.cc	/^#define s_1_5 /;"	d	file:
s_1_5	languages/swedish.cc	/^#define s_1_5 /;"	d	file:
s_1_50	languages/lovins.cc	/^#define s_1_50 /;"	d	file:
s_1_51	languages/lovins.cc	/^#define s_1_51 /;"	d	file:
s_1_52	languages/lovins.cc	/^#define s_1_52 /;"	d	file:
s_1_53	languages/lovins.cc	/^#define s_1_53 /;"	d	file:
s_1_54	languages/lovins.cc	/^#define s_1_54 /;"	d	file:
s_1_55	languages/lovins.cc	/^#define s_1_55 /;"	d	file:
s_1_56	languages/lovins.cc	/^#define s_1_56 /;"	d	file:
s_1_57	languages/lovins.cc	/^#define s_1_57 /;"	d	file:
s_1_58	languages/lovins.cc	/^#define s_1_58 /;"	d	file:
s_1_59	languages/lovins.cc	/^#define s_1_59 /;"	d	file:
s_1_6	languages/german.cc	/^#define s_1_6 /;"	d	file:
s_1_6	languages/kraaij_pohlmann.cc	/^#define s_1_6 /;"	d	file:
s_1_6	languages/lovins.cc	/^#define s_1_6 /;"	d	file:
s_1_6	languages/porter.cc	/^#define s_1_6 /;"	d	file:
s_1_6	languages/romanian.cc	/^#define s_1_6 /;"	d	file:
s_1_6	languages/russian.cc	/^#define s_1_6 /;"	d	file:
s_1_6	languages/spanish.cc	/^#define s_1_6 /;"	d	file:
s_1_6	languages/swedish.cc	/^#define s_1_6 /;"	d	file:
s_1_60	languages/lovins.cc	/^#define s_1_60 /;"	d	file:
s_1_61	languages/lovins.cc	/^#define s_1_61 /;"	d	file:
s_1_62	languages/lovins.cc	/^#define s_1_62 /;"	d	file:
s_1_63	languages/lovins.cc	/^#define s_1_63 /;"	d	file:
s_1_64	languages/lovins.cc	/^#define s_1_64 /;"	d	file:
s_1_65	languages/lovins.cc	/^#define s_1_65 /;"	d	file:
s_1_66	languages/lovins.cc	/^#define s_1_66 /;"	d	file:
s_1_67	languages/lovins.cc	/^#define s_1_67 /;"	d	file:
s_1_68	languages/lovins.cc	/^#define s_1_68 /;"	d	file:
s_1_69	languages/lovins.cc	/^#define s_1_69 /;"	d	file:
s_1_7	languages/kraaij_pohlmann.cc	/^#define s_1_7 /;"	d	file:
s_1_7	languages/lovins.cc	/^#define s_1_7 /;"	d	file:
s_1_7	languages/porter.cc	/^#define s_1_7 /;"	d	file:
s_1_7	languages/romanian.cc	/^#define s_1_7 /;"	d	file:
s_1_7	languages/russian.cc	/^#define s_1_7 /;"	d	file:
s_1_7	languages/spanish.cc	/^#define s_1_7 /;"	d	file:
s_1_70	languages/lovins.cc	/^#define s_1_70 /;"	d	file:
s_1_71	languages/lovins.cc	/^#define s_1_71 /;"	d	file:
s_1_72	languages/lovins.cc	/^#define s_1_72 /;"	d	file:
s_1_73	languages/lovins.cc	/^#define s_1_73 /;"	d	file:
s_1_74	languages/lovins.cc	/^#define s_1_74 /;"	d	file:
s_1_75	languages/lovins.cc	/^#define s_1_75 /;"	d	file:
s_1_76	languages/lovins.cc	/^#define s_1_76 /;"	d	file:
s_1_77	languages/lovins.cc	/^#define s_1_77 /;"	d	file:
s_1_78	languages/lovins.cc	/^#define s_1_78 /;"	d	file:
s_1_79	languages/lovins.cc	/^#define s_1_79 /;"	d	file:
s_1_8	languages/kraaij_pohlmann.cc	/^#define s_1_8 /;"	d	file:
s_1_8	languages/lovins.cc	/^#define s_1_8 /;"	d	file:
s_1_8	languages/porter.cc	/^#define s_1_8 /;"	d	file:
s_1_8	languages/romanian.cc	/^#define s_1_8 /;"	d	file:
s_1_8	languages/russian.cc	/^#define s_1_8 /;"	d	file:
s_1_8	languages/spanish.cc	/^#define s_1_8 /;"	d	file:
s_1_80	languages/lovins.cc	/^#define s_1_80 /;"	d	file:
s_1_81	languages/lovins.cc	/^#define s_1_81 /;"	d	file:
s_1_82	languages/lovins.cc	/^#define s_1_82 /;"	d	file:
s_1_83	languages/lovins.cc	/^#define s_1_83 /;"	d	file:
s_1_84	languages/lovins.cc	/^#define s_1_84 /;"	d	file:
s_1_85	languages/lovins.cc	/^#define s_1_85 /;"	d	file:
s_1_86	languages/lovins.cc	/^#define s_1_86 /;"	d	file:
s_1_87	languages/lovins.cc	/^#define s_1_87 /;"	d	file:
s_1_88	languages/lovins.cc	/^#define s_1_88 /;"	d	file:
s_1_89	languages/lovins.cc	/^#define s_1_89 /;"	d	file:
s_1_9	languages/kraaij_pohlmann.cc	/^#define s_1_9 /;"	d	file:
s_1_9	languages/lovins.cc	/^#define s_1_9 /;"	d	file:
s_1_9	languages/porter.cc	/^#define s_1_9 /;"	d	file:
s_1_9	languages/romanian.cc	/^#define s_1_9 /;"	d	file:
s_1_9	languages/russian.cc	/^#define s_1_9 /;"	d	file:
s_1_9	languages/spanish.cc	/^#define s_1_9 /;"	d	file:
s_1_90	languages/lovins.cc	/^#define s_1_90 /;"	d	file:
s_1_91	languages/lovins.cc	/^#define s_1_91 /;"	d	file:
s_1_92	languages/lovins.cc	/^#define s_1_92 /;"	d	file:
s_1_93	languages/lovins.cc	/^#define s_1_93 /;"	d	file:
s_1_94	languages/lovins.cc	/^#define s_1_94 /;"	d	file:
s_1_95	languages/lovins.cc	/^#define s_1_95 /;"	d	file:
s_1_96	languages/lovins.cc	/^#define s_1_96 /;"	d	file:
s_1_97	languages/lovins.cc	/^#define s_1_97 /;"	d	file:
s_1_98	languages/lovins.cc	/^#define s_1_98 /;"	d	file:
s_1_99	languages/lovins.cc	/^#define s_1_99 /;"	d	file:
s_2	languages/danish.cc	/^static const symbol s_2[] = { 'l', 0xC3, 0xB8, 's' };$/;"	v	file:
s_2	languages/dutch.cc	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	languages/english.cc	/^static const symbol s_2[] = { 's', 's' };$/;"	v	file:
s_2	languages/finnish.cc	/^static const symbol s_2[] = { 0xC3, 0xA4 };$/;"	v	file:
s_2	languages/french.cc	/^static const symbol s_2[] = { 'Y' };$/;"	v	file:
s_2	languages/german.cc	/^static const symbol s_2[] = { 'U' };$/;"	v	file:
s_2	languages/german2.cc	/^static const symbol s_2[] = { 's', 's' };$/;"	v	file:
s_2	languages/hungarian.cc	/^static const symbol s_2[] = { 'e' };$/;"	v	file:
s_2	languages/italian.cc	/^static const symbol s_2[] = { 0xC3, 0xAC };$/;"	v	file:
s_2	languages/kraaij_pohlmann.cc	/^static const symbol s_2[] = { 'i', 'j' };$/;"	v	file:
s_2	languages/lovins.cc	/^static const symbol s_2[] = { 'i', 'n' };$/;"	v	file:
s_2	languages/porter.cc	/^static const symbol s_2[] = { 'e', 'e' };$/;"	v	file:
s_2	languages/portuguese.cc	/^static const symbol s_2[] = { 0xC3, 0xA3 };$/;"	v	file:
s_2	languages/romanian.cc	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	languages/russian.cc	/^static const symbol s_2[] = { 0xD0, 0xB0 };$/;"	v	file:
s_2	languages/spanish.cc	/^static const symbol s_2[] = { 'i' };$/;"	v	file:
s_2	languages/turkish.cc	/^static const symbol s_2[] = { 0xC3, 0xBC };$/;"	v	file:
s_20	languages/english.cc	/^static const symbol s_20[] = { 'b', 'l', 'e' };$/;"	v	file:
s_20	languages/french.cc	/^static const symbol s_20[] = { 'i', 'q', 'U' };$/;"	v	file:
s_20	languages/hungarian.cc	/^static const symbol s_20[] = { 'a' };$/;"	v	file:
s_20	languages/kraaij_pohlmann.cc	/^static const symbol s_20[] = { 'g' };$/;"	v	file:
s_20	languages/lovins.cc	/^static const symbol s_20[] = { 'i', 'c' };$/;"	v	file:
s_20	languages/porter.cc	/^static const symbol s_20[] = { 'a', 'l' };$/;"	v	file:
s_20_0	languages/turkish.cc	/^#define s_20_0 /;"	d	file:
s_20_1	languages/turkish.cc	/^#define s_20_1 /;"	d	file:
s_20_10	languages/turkish.cc	/^#define s_20_10 /;"	d	file:
s_20_11	languages/turkish.cc	/^#define s_20_11 /;"	d	file:
s_20_12	languages/turkish.cc	/^#define s_20_12 /;"	d	file:
s_20_13	languages/turkish.cc	/^#define s_20_13 /;"	d	file:
s_20_14	languages/turkish.cc	/^#define s_20_14 /;"	d	file:
s_20_15	languages/turkish.cc	/^#define s_20_15 /;"	d	file:
s_20_16	languages/turkish.cc	/^#define s_20_16 /;"	d	file:
s_20_17	languages/turkish.cc	/^#define s_20_17 /;"	d	file:
s_20_18	languages/turkish.cc	/^#define s_20_18 /;"	d	file:
s_20_19	languages/turkish.cc	/^#define s_20_19 /;"	d	file:
s_20_2	languages/turkish.cc	/^#define s_20_2 /;"	d	file:
s_20_20	languages/turkish.cc	/^#define s_20_20 /;"	d	file:
s_20_21	languages/turkish.cc	/^#define s_20_21 /;"	d	file:
s_20_22	languages/turkish.cc	/^#define s_20_22 /;"	d	file:
s_20_23	languages/turkish.cc	/^#define s_20_23 /;"	d	file:
s_20_24	languages/turkish.cc	/^#define s_20_24 /;"	d	file:
s_20_25	languages/turkish.cc	/^#define s_20_25 /;"	d	file:
s_20_26	languages/turkish.cc	/^#define s_20_26 /;"	d	file:
s_20_27	languages/turkish.cc	/^#define s_20_27 /;"	d	file:
s_20_28	languages/turkish.cc	/^#define s_20_28 /;"	d	file:
s_20_29	languages/turkish.cc	/^#define s_20_29 /;"	d	file:
s_20_3	languages/turkish.cc	/^#define s_20_3 /;"	d	file:
s_20_30	languages/turkish.cc	/^#define s_20_30 /;"	d	file:
s_20_31	languages/turkish.cc	/^#define s_20_31 /;"	d	file:
s_20_4	languages/turkish.cc	/^#define s_20_4 /;"	d	file:
s_20_5	languages/turkish.cc	/^#define s_20_5 /;"	d	file:
s_20_6	languages/turkish.cc	/^#define s_20_6 /;"	d	file:
s_20_7	languages/turkish.cc	/^#define s_20_7 /;"	d	file:
s_20_8	languages/turkish.cc	/^#define s_20_8 /;"	d	file:
s_20_9	languages/turkish.cc	/^#define s_20_9 /;"	d	file:
s_21	languages/english.cc	/^static const symbol s_21[] = { 'o', 'g' };$/;"	v	file:
s_21	languages/french.cc	/^static const symbol s_21[] = { 'e', 'a', 'u' };$/;"	v	file:
s_21	languages/hungarian.cc	/^static const symbol s_21[] = { 'e' };$/;"	v	file:
s_21	languages/kraaij_pohlmann.cc	/^static const symbol s_21[] = { 'l', 'i', 'j', 'k' };$/;"	v	file:
s_21	languages/lovins.cc	/^static const symbol s_21[] = { 'l', 'u', 'c' };$/;"	v	file:
s_21	languages/porter.cc	/^static const symbol s_21[] = { 'i', 'c' };$/;"	v	file:
s_21_0	languages/turkish.cc	/^#define s_21_0 /;"	d	file:
s_21_1	languages/turkish.cc	/^#define s_21_1 /;"	d	file:
s_21_2	languages/turkish.cc	/^#define s_21_2 /;"	d	file:
s_21_3	languages/turkish.cc	/^#define s_21_3 /;"	d	file:
s_21_4	languages/turkish.cc	/^#define s_21_4 /;"	d	file:
s_21_5	languages/turkish.cc	/^#define s_21_5 /;"	d	file:
s_21_6	languages/turkish.cc	/^#define s_21_6 /;"	d	file:
s_21_7	languages/turkish.cc	/^#define s_21_7 /;"	d	file:
s_22	languages/english.cc	/^static const symbol s_22[] = { 'f', 'u', 'l' };$/;"	v	file:
s_22	languages/french.cc	/^static const symbol s_22[] = { 'a', 'l' };$/;"	v	file:
s_22	languages/hungarian.cc	/^static const symbol s_22[] = { 'a' };$/;"	v	file:
s_22	languages/kraaij_pohlmann.cc	/^static const symbol s_22[] = { 'i', 's', 'c', 'h' };$/;"	v	file:
s_22	languages/lovins.cc	/^static const symbol s_22[] = { 'u', 'a', 's' };$/;"	v	file:
s_22	languages/porter.cc	/^static const symbol s_22[] = { 'Y' };$/;"	v	file:
s_22_0	languages/turkish.cc	/^#define s_22_0 /;"	d	file:
s_22_1	languages/turkish.cc	/^#define s_22_1 /;"	d	file:
s_22_2	languages/turkish.cc	/^#define s_22_2 /;"	d	file:
s_22_3	languages/turkish.cc	/^#define s_22_3 /;"	d	file:
s_23	languages/english.cc	/^static const symbol s_23[] = { 'l', 'e', 's', 's' };$/;"	v	file:
s_23	languages/french.cc	/^static const symbol s_23[] = { 'e', 'u', 'x' };$/;"	v	file:
s_23	languages/hungarian.cc	/^static const symbol s_23[] = { 'e' };$/;"	v	file:
s_23	languages/kraaij_pohlmann.cc	/^static const symbol s_23[] = { 't' };$/;"	v	file:
s_23	languages/lovins.cc	/^static const symbol s_23[] = { 'v', 'a', 's' };$/;"	v	file:
s_23	languages/porter.cc	/^static const symbol s_23[] = { 'Y' };$/;"	v	file:
s_23_0	languages/turkish.cc	/^#define s_23_0 /;"	d	file:
s_23_1	languages/turkish.cc	/^#define s_23_1 /;"	d	file:
s_23_2	languages/turkish.cc	/^#define s_23_2 /;"	d	file:
s_23_3	languages/turkish.cc	/^#define s_23_3 /;"	d	file:
s_24	languages/english.cc	/^static const symbol s_24[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_24	languages/french.cc	/^static const symbol s_24[] = { 'a', 'n', 't' };$/;"	v	file:
s_24	languages/hungarian.cc	/^static const symbol s_24[] = { 'a' };$/;"	v	file:
s_24	languages/kraaij_pohlmann.cc	/^static const symbol s_24[] = { 's' };$/;"	v	file:
s_24	languages/lovins.cc	/^static const symbol s_24[] = { 'c', 'i', 's' };$/;"	v	file:
s_24	languages/porter.cc	/^static const symbol s_24[] = { 'y' };$/;"	v	file:
s_25	languages/english.cc	/^static const symbol s_25[] = { 'a', 't', 'e' };$/;"	v	file:
s_25	languages/french.cc	/^static const symbol s_25[] = { 'e', 'n', 't' };$/;"	v	file:
s_25	languages/hungarian.cc	/^static const symbol s_25[] = { 'e' };$/;"	v	file:
s_25	languages/kraaij_pohlmann.cc	/^static const symbol s_25[] = { 'r' };$/;"	v	file:
s_25	languages/lovins.cc	/^static const symbol s_25[] = { 'l', 'i', 's' };$/;"	v	file:
s_26	languages/english.cc	/^static const symbol s_26[] = { 'a', 'l' };$/;"	v	file:
s_26	languages/french.cc	/^static const symbol s_26[] = { 'i' };$/;"	v	file:
s_26	languages/hungarian.cc	/^static const symbol s_26[] = { 'a' };$/;"	v	file:
s_26	languages/kraaij_pohlmann.cc	/^static const symbol s_26[] = { 'l' };$/;"	v	file:
s_26	languages/lovins.cc	/^static const symbol s_26[] = { 'e', 'r', 'i', 's' };$/;"	v	file:
s_27	languages/english.cc	/^static const symbol s_27[] = { 'i', 'c' };$/;"	v	file:
s_27	languages/french.cc	/^static const symbol s_27[] = { 'g', 'u' };$/;"	v	file:
s_27	languages/hungarian.cc	/^static const symbol s_27[] = { 'e' };$/;"	v	file:
s_27	languages/kraaij_pohlmann.cc	/^static const symbol s_27[] = { 'e', 'n' };$/;"	v	file:
s_27	languages/lovins.cc	/^static const symbol s_27[] = { 'p', 'a', 'n', 's' };$/;"	v	file:
s_28	languages/english.cc	/^static const symbol s_28[] = { 's', 'k', 'i' };$/;"	v	file:
s_28	languages/french.cc	/^static const symbol s_28[] = { 0xC3, 0xA9 };$/;"	v	file:
s_28	languages/hungarian.cc	/^static const symbol s_28[] = { 'a' };$/;"	v	file:
s_28	languages/kraaij_pohlmann.cc	/^static const symbol s_28[] = { 'i', 'e', 'f' };$/;"	v	file:
s_28	languages/lovins.cc	/^static const symbol s_28[] = { 'e', 'n', 's' };$/;"	v	file:
s_29	languages/english.cc	/^static const symbol s_29[] = { 's', 'k', 'y' };$/;"	v	file:
s_29	languages/french.cc	/^static const symbol s_29[] = { 0xC3, 0xA8 };$/;"	v	file:
s_29	languages/hungarian.cc	/^static const symbol s_29[] = { 'e' };$/;"	v	file:
s_29	languages/kraaij_pohlmann.cc	/^static const symbol s_29[] = { 'e', 'e', 'r' };$/;"	v	file:
s_29	languages/lovins.cc	/^static const symbol s_29[] = { 'o', 'n', 's' };$/;"	v	file:
s_2_0	languages/danish.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/dutch.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/english.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/finnish.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/french.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/german.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/german2.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/hungarian.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/italian.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/kraaij_pohlmann.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/lovins.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/norwegian.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/porter.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/portuguese.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/romanian.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/russian.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/spanish.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/swedish.cc	/^#define s_2_0 /;"	d	file:
s_2_0	languages/turkish.cc	/^#define s_2_0 /;"	d	file:
s_2_1	languages/danish.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/dutch.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/english.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/finnish.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/french.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/german.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/german2.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/hungarian.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/italian.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/kraaij_pohlmann.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/lovins.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/norwegian.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/porter.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/portuguese.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/romanian.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/russian.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/spanish.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/swedish.cc	/^#define s_2_1 /;"	d	file:
s_2_1	languages/turkish.cc	/^#define s_2_1 /;"	d	file:
s_2_10	languages/hungarian.cc	/^#define s_2_10 /;"	d	file:
s_2_10	languages/italian.cc	/^#define s_2_10 /;"	d	file:
s_2_10	languages/kraaij_pohlmann.cc	/^#define s_2_10 /;"	d	file:
s_2_10	languages/norwegian.cc	/^#define s_2_10 /;"	d	file:
s_2_10	languages/romanian.cc	/^#define s_2_10 /;"	d	file:
s_2_10	languages/spanish.cc	/^#define s_2_10 /;"	d	file:
s_2_11	languages/hungarian.cc	/^#define s_2_11 /;"	d	file:
s_2_11	languages/italian.cc	/^#define s_2_11 /;"	d	file:
s_2_11	languages/kraaij_pohlmann.cc	/^#define s_2_11 /;"	d	file:
s_2_11	languages/romanian.cc	/^#define s_2_11 /;"	d	file:
s_2_12	languages/hungarian.cc	/^#define s_2_12 /;"	d	file:
s_2_12	languages/italian.cc	/^#define s_2_12 /;"	d	file:
s_2_12	languages/kraaij_pohlmann.cc	/^#define s_2_12 /;"	d	file:
s_2_12	languages/romanian.cc	/^#define s_2_12 /;"	d	file:
s_2_13	languages/hungarian.cc	/^#define s_2_13 /;"	d	file:
s_2_13	languages/italian.cc	/^#define s_2_13 /;"	d	file:
s_2_13	languages/kraaij_pohlmann.cc	/^#define s_2_13 /;"	d	file:
s_2_13	languages/romanian.cc	/^#define s_2_13 /;"	d	file:
s_2_14	languages/hungarian.cc	/^#define s_2_14 /;"	d	file:
s_2_14	languages/italian.cc	/^#define s_2_14 /;"	d	file:
s_2_14	languages/romanian.cc	/^#define s_2_14 /;"	d	file:
s_2_15	languages/hungarian.cc	/^#define s_2_15 /;"	d	file:
s_2_15	languages/italian.cc	/^#define s_2_15 /;"	d	file:
s_2_15	languages/romanian.cc	/^#define s_2_15 /;"	d	file:
s_2_16	languages/hungarian.cc	/^#define s_2_16 /;"	d	file:
s_2_16	languages/italian.cc	/^#define s_2_16 /;"	d	file:
s_2_16	languages/romanian.cc	/^#define s_2_16 /;"	d	file:
s_2_17	languages/hungarian.cc	/^#define s_2_17 /;"	d	file:
s_2_17	languages/italian.cc	/^#define s_2_17 /;"	d	file:
s_2_17	languages/romanian.cc	/^#define s_2_17 /;"	d	file:
s_2_18	languages/hungarian.cc	/^#define s_2_18 /;"	d	file:
s_2_18	languages/italian.cc	/^#define s_2_18 /;"	d	file:
s_2_18	languages/romanian.cc	/^#define s_2_18 /;"	d	file:
s_2_19	languages/hungarian.cc	/^#define s_2_19 /;"	d	file:
s_2_19	languages/italian.cc	/^#define s_2_19 /;"	d	file:
s_2_19	languages/romanian.cc	/^#define s_2_19 /;"	d	file:
s_2_2	languages/danish.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/dutch.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/english.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/finnish.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/french.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/german.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/german2.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/hungarian.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/italian.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/kraaij_pohlmann.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/lovins.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/norwegian.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/porter.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/portuguese.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/romanian.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/russian.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/spanish.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/swedish.cc	/^#define s_2_2 /;"	d	file:
s_2_2	languages/turkish.cc	/^#define s_2_2 /;"	d	file:
s_2_20	languages/hungarian.cc	/^#define s_2_20 /;"	d	file:
s_2_20	languages/italian.cc	/^#define s_2_20 /;"	d	file:
s_2_20	languages/romanian.cc	/^#define s_2_20 /;"	d	file:
s_2_21	languages/hungarian.cc	/^#define s_2_21 /;"	d	file:
s_2_21	languages/italian.cc	/^#define s_2_21 /;"	d	file:
s_2_21	languages/romanian.cc	/^#define s_2_21 /;"	d	file:
s_2_22	languages/hungarian.cc	/^#define s_2_22 /;"	d	file:
s_2_22	languages/italian.cc	/^#define s_2_22 /;"	d	file:
s_2_22	languages/romanian.cc	/^#define s_2_22 /;"	d	file:
s_2_23	languages/italian.cc	/^#define s_2_23 /;"	d	file:
s_2_23	languages/romanian.cc	/^#define s_2_23 /;"	d	file:
s_2_24	languages/italian.cc	/^#define s_2_24 /;"	d	file:
s_2_24	languages/romanian.cc	/^#define s_2_24 /;"	d	file:
s_2_25	languages/italian.cc	/^#define s_2_25 /;"	d	file:
s_2_25	languages/romanian.cc	/^#define s_2_25 /;"	d	file:
s_2_26	languages/italian.cc	/^#define s_2_26 /;"	d	file:
s_2_26	languages/romanian.cc	/^#define s_2_26 /;"	d	file:
s_2_27	languages/italian.cc	/^#define s_2_27 /;"	d	file:
s_2_27	languages/romanian.cc	/^#define s_2_27 /;"	d	file:
s_2_28	languages/italian.cc	/^#define s_2_28 /;"	d	file:
s_2_28	languages/romanian.cc	/^#define s_2_28 /;"	d	file:
s_2_29	languages/italian.cc	/^#define s_2_29 /;"	d	file:
s_2_29	languages/romanian.cc	/^#define s_2_29 /;"	d	file:
s_2_3	languages/danish.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/english.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/finnish.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/french.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/german.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/german2.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/hungarian.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/italian.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/kraaij_pohlmann.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/lovins.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/norwegian.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/portuguese.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/romanian.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/russian.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/spanish.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/swedish.cc	/^#define s_2_3 /;"	d	file:
s_2_3	languages/turkish.cc	/^#define s_2_3 /;"	d	file:
s_2_30	languages/italian.cc	/^#define s_2_30 /;"	d	file:
s_2_30	languages/romanian.cc	/^#define s_2_30 /;"	d	file:
s_2_31	languages/italian.cc	/^#define s_2_31 /;"	d	file:
s_2_31	languages/romanian.cc	/^#define s_2_31 /;"	d	file:
s_2_32	languages/italian.cc	/^#define s_2_32 /;"	d	file:
s_2_32	languages/romanian.cc	/^#define s_2_32 /;"	d	file:
s_2_33	languages/italian.cc	/^#define s_2_33 /;"	d	file:
s_2_33	languages/romanian.cc	/^#define s_2_33 /;"	d	file:
s_2_34	languages/italian.cc	/^#define s_2_34 /;"	d	file:
s_2_34	languages/romanian.cc	/^#define s_2_34 /;"	d	file:
s_2_35	languages/italian.cc	/^#define s_2_35 /;"	d	file:
s_2_35	languages/romanian.cc	/^#define s_2_35 /;"	d	file:
s_2_36	languages/italian.cc	/^#define s_2_36 /;"	d	file:
s_2_36	languages/romanian.cc	/^#define s_2_36 /;"	d	file:
s_2_37	languages/romanian.cc	/^#define s_2_37 /;"	d	file:
s_2_38	languages/romanian.cc	/^#define s_2_38 /;"	d	file:
s_2_39	languages/romanian.cc	/^#define s_2_39 /;"	d	file:
s_2_4	languages/danish.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/english.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/finnish.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/french.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/german2.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/hungarian.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/italian.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/kraaij_pohlmann.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/lovins.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/norwegian.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/romanian.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/russian.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/spanish.cc	/^#define s_2_4 /;"	d	file:
s_2_4	languages/swedish.cc	/^#define s_2_4 /;"	d	file:
s_2_40	languages/romanian.cc	/^#define s_2_40 /;"	d	file:
s_2_41	languages/romanian.cc	/^#define s_2_41 /;"	d	file:
s_2_42	languages/romanian.cc	/^#define s_2_42 /;"	d	file:
s_2_43	languages/romanian.cc	/^#define s_2_43 /;"	d	file:
s_2_44	languages/romanian.cc	/^#define s_2_44 /;"	d	file:
s_2_45	languages/romanian.cc	/^#define s_2_45 /;"	d	file:
s_2_5	languages/english.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/finnish.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/french.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/german2.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/hungarian.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/italian.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/kraaij_pohlmann.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/lovins.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/norwegian.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/romanian.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/russian.cc	/^#define s_2_5 /;"	d	file:
s_2_5	languages/spanish.cc	/^#define s_2_5 /;"	d	file:
s_2_6	languages/german2.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/hungarian.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/italian.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/kraaij_pohlmann.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/lovins.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/norwegian.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/romanian.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/russian.cc	/^#define s_2_6 /;"	d	file:
s_2_6	languages/spanish.cc	/^#define s_2_6 /;"	d	file:
s_2_7	languages/hungarian.cc	/^#define s_2_7 /;"	d	file:
s_2_7	languages/italian.cc	/^#define s_2_7 /;"	d	file:
s_2_7	languages/kraaij_pohlmann.cc	/^#define s_2_7 /;"	d	file:
s_2_7	languages/lovins.cc	/^#define s_2_7 /;"	d	file:
s_2_7	languages/norwegian.cc	/^#define s_2_7 /;"	d	file:
s_2_7	languages/romanian.cc	/^#define s_2_7 /;"	d	file:
s_2_7	languages/russian.cc	/^#define s_2_7 /;"	d	file:
s_2_7	languages/spanish.cc	/^#define s_2_7 /;"	d	file:
s_2_8	languages/hungarian.cc	/^#define s_2_8 /;"	d	file:
s_2_8	languages/italian.cc	/^#define s_2_8 /;"	d	file:
s_2_8	languages/kraaij_pohlmann.cc	/^#define s_2_8 /;"	d	file:
s_2_8	languages/lovins.cc	/^#define s_2_8 /;"	d	file:
s_2_8	languages/norwegian.cc	/^#define s_2_8 /;"	d	file:
s_2_8	languages/romanian.cc	/^#define s_2_8 /;"	d	file:
s_2_8	languages/spanish.cc	/^#define s_2_8 /;"	d	file:
s_2_9	languages/hungarian.cc	/^#define s_2_9 /;"	d	file:
s_2_9	languages/italian.cc	/^#define s_2_9 /;"	d	file:
s_2_9	languages/kraaij_pohlmann.cc	/^#define s_2_9 /;"	d	file:
s_2_9	languages/lovins.cc	/^#define s_2_9 /;"	d	file:
s_2_9	languages/norwegian.cc	/^#define s_2_9 /;"	d	file:
s_2_9	languages/romanian.cc	/^#define s_2_9 /;"	d	file:
s_2_9	languages/spanish.cc	/^#define s_2_9 /;"	d	file:
s_3	languages/dutch.cc	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	languages/english.cc	/^static const symbol s_3[] = { 'i' };$/;"	v	file:
s_3	languages/finnish.cc	/^static const symbol s_3[] = { 0xC3, 0xB6 };$/;"	v	file:
s_3	languages/french.cc	/^static const symbol s_3[] = { 'Y' };$/;"	v	file:
s_3	languages/german.cc	/^static const symbol s_3[] = { 'Y' };$/;"	v	file:
s_3	languages/german2.cc	/^static const symbol s_3[] = { 0xC3, 0xA4 };$/;"	v	file:
s_3	languages/hungarian.cc	/^static const symbol s_3[] = { 'a' };$/;"	v	file:
s_3	languages/italian.cc	/^static const symbol s_3[] = { 0xC3, 0xB2 };$/;"	v	file:
s_3	languages/kraaij_pohlmann.cc	/^static const symbol s_3[] = { 'i', 'e' };$/;"	v	file:
s_3	languages/lovins.cc	/^static const symbol s_3[] = { 'm', 'e', 't' };$/;"	v	file:
s_3	languages/porter.cc	/^static const symbol s_3[] = { 'e' };$/;"	v	file:
s_3	languages/portuguese.cc	/^static const symbol s_3[] = { 0xC3, 0xB5 };$/;"	v	file:
s_3	languages/romanian.cc	/^static const symbol s_3[] = { 'u' };$/;"	v	file:
s_3	languages/russian.cc	/^static const symbol s_3[] = { 0xD1, 0x8F };$/;"	v	file:
s_3	languages/spanish.cc	/^static const symbol s_3[] = { 'o' };$/;"	v	file:
s_3	languages/turkish.cc	/^static const symbol s_3[] = { 'k', 'i' };$/;"	v	file:
s_30	languages/english.cc	/^static const symbol s_30[] = { 'd', 'i', 'e' };$/;"	v	file:
s_30	languages/french.cc	/^static const symbol s_30[] = { 'e' };$/;"	v	file:
s_30	languages/hungarian.cc	/^static const symbol s_30[] = { 'a' };$/;"	v	file:
s_30	languages/kraaij_pohlmann.cc	/^static const symbol s_30[] = { 'r' };$/;"	v	file:
s_30	languages/lovins.cc	/^static const symbol s_30[] = { 'l', 'u', 's' };$/;"	v	file:
s_31	languages/english.cc	/^static const symbol s_31[] = { 'l', 'i', 'e' };$/;"	v	file:
s_31	languages/french.cc	/^static const symbol s_31[] = { 'i' };$/;"	v	file:
s_31	languages/hungarian.cc	/^static const symbol s_31[] = { 'e' };$/;"	v	file:
s_31	languages/kraaij_pohlmann.cc	/^static const symbol s_31[] = { 'a', 'a', 'r' };$/;"	v	file:
s_31	languages/lovins.cc	/^static const symbol s_31[] = { 'r', 'u', 's' };$/;"	v	file:
s_32	languages/english.cc	/^static const symbol s_32[] = { 't', 'i', 'e' };$/;"	v	file:
s_32	languages/french.cc	/^static const symbol s_32[] = { 0xC3, 0xA7 };$/;"	v	file:
s_32	languages/hungarian.cc	/^static const symbol s_32[] = { 'a' };$/;"	v	file:
s_32	languages/kraaij_pohlmann.cc	/^static const symbol s_32[] = { 'f' };$/;"	v	file:
s_32	languages/lovins.cc	/^static const symbol s_32[] = { 'h', 'e', 's' };$/;"	v	file:
s_33	languages/english.cc	/^static const symbol s_33[] = { 'i', 'd', 'l' };$/;"	v	file:
s_33	languages/french.cc	/^static const symbol s_33[] = { 'c' };$/;"	v	file:
s_33	languages/hungarian.cc	/^static const symbol s_33[] = { 'e' };$/;"	v	file:
s_33	languages/kraaij_pohlmann.cc	/^static const symbol s_33[] = { 'g' };$/;"	v	file:
s_33	languages/lovins.cc	/^static const symbol s_33[] = { 'm', 'i', 's' };$/;"	v	file:
s_34	languages/english.cc	/^static const symbol s_34[] = { 'g', 'e', 'n', 't', 'l' };$/;"	v	file:
s_34	languages/hungarian.cc	/^static const symbol s_34[] = { 'a' };$/;"	v	file:
s_34	languages/kraaij_pohlmann.cc	/^static const symbol s_34[] = { 't' };$/;"	v	file:
s_34	languages/lovins.cc	/^static const symbol s_34[] = { 'e', 'n', 's' };$/;"	v	file:
s_35	languages/english.cc	/^static const symbol s_35[] = { 'u', 'g', 'l', 'i' };$/;"	v	file:
s_35	languages/hungarian.cc	/^static const symbol s_35[] = { 'e' };$/;"	v	file:
s_35	languages/kraaij_pohlmann.cc	/^static const symbol s_35[] = { 'd' };$/;"	v	file:
s_35	languages/lovins.cc	/^static const symbol s_35[] = { 'e', 'r', 's' };$/;"	v	file:
s_36	languages/english.cc	/^static const symbol s_36[] = { 'e', 'a', 'r', 'l', 'i' };$/;"	v	file:
s_36	languages/kraaij_pohlmann.cc	/^static const symbol s_36[] = { 'i', 'e' };$/;"	v	file:
s_36	languages/lovins.cc	/^static const symbol s_36[] = { 'e', 's' };$/;"	v	file:
s_37	languages/english.cc	/^static const symbol s_37[] = { 'o', 'n', 'l', 'i' };$/;"	v	file:
s_37	languages/kraaij_pohlmann.cc	/^static const symbol s_37[] = { 'e', 'e', 'r' };$/;"	v	file:
s_37	languages/lovins.cc	/^static const symbol s_37[] = { 'y', 's' };$/;"	v	file:
s_38	languages/english.cc	/^static const symbol s_38[] = { 's', 'i', 'n', 'g', 'l' };$/;"	v	file:
s_38	languages/kraaij_pohlmann.cc	/^static const symbol s_38[] = { 'n' };$/;"	v	file:
s_38	languages/lovins.cc	/^static const symbol s_38[] = { 'y', 's' };$/;"	v	file:
s_39	languages/english.cc	/^static const symbol s_39[] = { 'y' };$/;"	v	file:
s_39	languages/kraaij_pohlmann.cc	/^static const symbol s_39[] = { 'l' };$/;"	v	file:
s_3_0	languages/dutch.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/finnish.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/french.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/german.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/german2.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/hungarian.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/italian.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/kraaij_pohlmann.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/lovins.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/porter.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/portuguese.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/romanian.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/russian.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/spanish.cc	/^#define s_3_0 /;"	d	file:
s_3_0	languages/turkish.cc	/^#define s_3_0 /;"	d	file:
s_3_1	languages/dutch.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/english.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/finnish.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/french.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/german.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/german2.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/hungarian.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/italian.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/kraaij_pohlmann.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/lovins.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/porter.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/portuguese.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/romanian.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/russian.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/spanish.cc	/^#define s_3_1 /;"	d	file:
s_3_1	languages/turkish.cc	/^#define s_3_1 /;"	d	file:
s_3_10	languages/english.cc	/^#define s_3_10 /;"	d	file:
s_3_10	languages/kraaij_pohlmann.cc	/^#define s_3_10 /;"	d	file:
s_3_10	languages/lovins.cc	/^#define s_3_10 /;"	d	file:
s_3_10	languages/porter.cc	/^#define s_3_10 /;"	d	file:
s_3_10	languages/romanian.cc	/^#define s_3_10 /;"	d	file:
s_3_11	languages/english.cc	/^#define s_3_11 /;"	d	file:
s_3_11	languages/kraaij_pohlmann.cc	/^#define s_3_11 /;"	d	file:
s_3_11	languages/lovins.cc	/^#define s_3_11 /;"	d	file:
s_3_11	languages/porter.cc	/^#define s_3_11 /;"	d	file:
s_3_11	languages/romanian.cc	/^#define s_3_11 /;"	d	file:
s_3_12	languages/english.cc	/^#define s_3_12 /;"	d	file:
s_3_12	languages/kraaij_pohlmann.cc	/^#define s_3_12 /;"	d	file:
s_3_12	languages/lovins.cc	/^#define s_3_12 /;"	d	file:
s_3_12	languages/porter.cc	/^#define s_3_12 /;"	d	file:
s_3_12	languages/romanian.cc	/^#define s_3_12 /;"	d	file:
s_3_13	languages/kraaij_pohlmann.cc	/^#define s_3_13 /;"	d	file:
s_3_13	languages/lovins.cc	/^#define s_3_13 /;"	d	file:
s_3_13	languages/porter.cc	/^#define s_3_13 /;"	d	file:
s_3_13	languages/romanian.cc	/^#define s_3_13 /;"	d	file:
s_3_14	languages/kraaij_pohlmann.cc	/^#define s_3_14 /;"	d	file:
s_3_14	languages/lovins.cc	/^#define s_3_14 /;"	d	file:
s_3_14	languages/porter.cc	/^#define s_3_14 /;"	d	file:
s_3_14	languages/romanian.cc	/^#define s_3_14 /;"	d	file:
s_3_15	languages/kraaij_pohlmann.cc	/^#define s_3_15 /;"	d	file:
s_3_15	languages/lovins.cc	/^#define s_3_15 /;"	d	file:
s_3_15	languages/porter.cc	/^#define s_3_15 /;"	d	file:
s_3_15	languages/romanian.cc	/^#define s_3_15 /;"	d	file:
s_3_16	languages/lovins.cc	/^#define s_3_16 /;"	d	file:
s_3_16	languages/porter.cc	/^#define s_3_16 /;"	d	file:
s_3_16	languages/romanian.cc	/^#define s_3_16 /;"	d	file:
s_3_17	languages/lovins.cc	/^#define s_3_17 /;"	d	file:
s_3_17	languages/porter.cc	/^#define s_3_17 /;"	d	file:
s_3_17	languages/romanian.cc	/^#define s_3_17 /;"	d	file:
s_3_18	languages/lovins.cc	/^#define s_3_18 /;"	d	file:
s_3_18	languages/porter.cc	/^#define s_3_18 /;"	d	file:
s_3_18	languages/romanian.cc	/^#define s_3_18 /;"	d	file:
s_3_19	languages/lovins.cc	/^#define s_3_19 /;"	d	file:
s_3_19	languages/porter.cc	/^#define s_3_19 /;"	d	file:
s_3_19	languages/romanian.cc	/^#define s_3_19 /;"	d	file:
s_3_2	languages/dutch.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/english.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/french.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/german2.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/italian.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/kraaij_pohlmann.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/lovins.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/porter.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/portuguese.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/romanian.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/spanish.cc	/^#define s_3_2 /;"	d	file:
s_3_2	languages/turkish.cc	/^#define s_3_2 /;"	d	file:
s_3_20	languages/lovins.cc	/^#define s_3_20 /;"	d	file:
s_3_20	languages/romanian.cc	/^#define s_3_20 /;"	d	file:
s_3_21	languages/lovins.cc	/^#define s_3_21 /;"	d	file:
s_3_21	languages/romanian.cc	/^#define s_3_21 /;"	d	file:
s_3_22	languages/lovins.cc	/^#define s_3_22 /;"	d	file:
s_3_22	languages/romanian.cc	/^#define s_3_22 /;"	d	file:
s_3_23	languages/lovins.cc	/^#define s_3_23 /;"	d	file:
s_3_23	languages/romanian.cc	/^#define s_3_23 /;"	d	file:
s_3_24	languages/lovins.cc	/^#define s_3_24 /;"	d	file:
s_3_24	languages/romanian.cc	/^#define s_3_24 /;"	d	file:
s_3_25	languages/lovins.cc	/^#define s_3_25 /;"	d	file:
s_3_25	languages/romanian.cc	/^#define s_3_25 /;"	d	file:
s_3_26	languages/lovins.cc	/^#define s_3_26 /;"	d	file:
s_3_26	languages/romanian.cc	/^#define s_3_26 /;"	d	file:
s_3_27	languages/lovins.cc	/^#define s_3_27 /;"	d	file:
s_3_27	languages/romanian.cc	/^#define s_3_27 /;"	d	file:
s_3_28	languages/lovins.cc	/^#define s_3_28 /;"	d	file:
s_3_28	languages/romanian.cc	/^#define s_3_28 /;"	d	file:
s_3_29	languages/lovins.cc	/^#define s_3_29 /;"	d	file:
s_3_29	languages/romanian.cc	/^#define s_3_29 /;"	d	file:
s_3_3	languages/dutch.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/english.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/german2.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/italian.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/kraaij_pohlmann.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/lovins.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/porter.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/romanian.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/spanish.cc	/^#define s_3_3 /;"	d	file:
s_3_3	languages/turkish.cc	/^#define s_3_3 /;"	d	file:
s_3_30	languages/lovins.cc	/^#define s_3_30 /;"	d	file:
s_3_30	languages/romanian.cc	/^#define s_3_30 /;"	d	file:
s_3_31	languages/lovins.cc	/^#define s_3_31 /;"	d	file:
s_3_31	languages/romanian.cc	/^#define s_3_31 /;"	d	file:
s_3_32	languages/lovins.cc	/^#define s_3_32 /;"	d	file:
s_3_32	languages/romanian.cc	/^#define s_3_32 /;"	d	file:
s_3_33	languages/lovins.cc	/^#define s_3_33 /;"	d	file:
s_3_33	languages/romanian.cc	/^#define s_3_33 /;"	d	file:
s_3_34	languages/romanian.cc	/^#define s_3_34 /;"	d	file:
s_3_35	languages/romanian.cc	/^#define s_3_35 /;"	d	file:
s_3_36	languages/romanian.cc	/^#define s_3_36 /;"	d	file:
s_3_37	languages/romanian.cc	/^#define s_3_37 /;"	d	file:
s_3_38	languages/romanian.cc	/^#define s_3_38 /;"	d	file:
s_3_39	languages/romanian.cc	/^#define s_3_39 /;"	d	file:
s_3_4	languages/dutch.cc	/^#define s_3_4 /;"	d	file:
s_3_4	languages/english.cc	/^#define s_3_4 /;"	d	file:
s_3_4	languages/italian.cc	/^#define s_3_4 /;"	d	file:
s_3_4	languages/kraaij_pohlmann.cc	/^#define s_3_4 /;"	d	file:
s_3_4	languages/lovins.cc	/^#define s_3_4 /;"	d	file:
s_3_4	languages/porter.cc	/^#define s_3_4 /;"	d	file:
s_3_4	languages/romanian.cc	/^#define s_3_4 /;"	d	file:
s_3_40	languages/romanian.cc	/^#define s_3_40 /;"	d	file:
s_3_41	languages/romanian.cc	/^#define s_3_41 /;"	d	file:
s_3_42	languages/romanian.cc	/^#define s_3_42 /;"	d	file:
s_3_43	languages/romanian.cc	/^#define s_3_43 /;"	d	file:
s_3_44	languages/romanian.cc	/^#define s_3_44 /;"	d	file:
s_3_45	languages/romanian.cc	/^#define s_3_45 /;"	d	file:
s_3_46	languages/romanian.cc	/^#define s_3_46 /;"	d	file:
s_3_47	languages/romanian.cc	/^#define s_3_47 /;"	d	file:
s_3_48	languages/romanian.cc	/^#define s_3_48 /;"	d	file:
s_3_49	languages/romanian.cc	/^#define s_3_49 /;"	d	file:
s_3_5	languages/english.cc	/^#define s_3_5 /;"	d	file:
s_3_5	languages/kraaij_pohlmann.cc	/^#define s_3_5 /;"	d	file:
s_3_5	languages/lovins.cc	/^#define s_3_5 /;"	d	file:
s_3_5	languages/porter.cc	/^#define s_3_5 /;"	d	file:
s_3_5	languages/romanian.cc	/^#define s_3_5 /;"	d	file:
s_3_50	languages/romanian.cc	/^#define s_3_50 /;"	d	file:
s_3_51	languages/romanian.cc	/^#define s_3_51 /;"	d	file:
s_3_52	languages/romanian.cc	/^#define s_3_52 /;"	d	file:
s_3_53	languages/romanian.cc	/^#define s_3_53 /;"	d	file:
s_3_54	languages/romanian.cc	/^#define s_3_54 /;"	d	file:
s_3_55	languages/romanian.cc	/^#define s_3_55 /;"	d	file:
s_3_56	languages/romanian.cc	/^#define s_3_56 /;"	d	file:
s_3_57	languages/romanian.cc	/^#define s_3_57 /;"	d	file:
s_3_58	languages/romanian.cc	/^#define s_3_58 /;"	d	file:
s_3_59	languages/romanian.cc	/^#define s_3_59 /;"	d	file:
s_3_6	languages/english.cc	/^#define s_3_6 /;"	d	file:
s_3_6	languages/kraaij_pohlmann.cc	/^#define s_3_6 /;"	d	file:
s_3_6	languages/lovins.cc	/^#define s_3_6 /;"	d	file:
s_3_6	languages/porter.cc	/^#define s_3_6 /;"	d	file:
s_3_6	languages/romanian.cc	/^#define s_3_6 /;"	d	file:
s_3_60	languages/romanian.cc	/^#define s_3_60 /;"	d	file:
s_3_61	languages/romanian.cc	/^#define s_3_61 /;"	d	file:
s_3_7	languages/english.cc	/^#define s_3_7 /;"	d	file:
s_3_7	languages/kraaij_pohlmann.cc	/^#define s_3_7 /;"	d	file:
s_3_7	languages/lovins.cc	/^#define s_3_7 /;"	d	file:
s_3_7	languages/porter.cc	/^#define s_3_7 /;"	d	file:
s_3_7	languages/romanian.cc	/^#define s_3_7 /;"	d	file:
s_3_8	languages/english.cc	/^#define s_3_8 /;"	d	file:
s_3_8	languages/kraaij_pohlmann.cc	/^#define s_3_8 /;"	d	file:
s_3_8	languages/lovins.cc	/^#define s_3_8 /;"	d	file:
s_3_8	languages/porter.cc	/^#define s_3_8 /;"	d	file:
s_3_8	languages/romanian.cc	/^#define s_3_8 /;"	d	file:
s_3_9	languages/english.cc	/^#define s_3_9 /;"	d	file:
s_3_9	languages/kraaij_pohlmann.cc	/^#define s_3_9 /;"	d	file:
s_3_9	languages/lovins.cc	/^#define s_3_9 /;"	d	file:
s_3_9	languages/porter.cc	/^#define s_3_9 /;"	d	file:
s_3_9	languages/romanian.cc	/^#define s_3_9 /;"	d	file:
s_4	languages/dutch.cc	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	languages/english.cc	/^static const symbol s_4[] = { 'i', 'e' };$/;"	v	file:
s_4	languages/finnish.cc	/^static const symbol s_4[] = { 'i', 'e' };$/;"	v	file:
s_4	languages/french.cc	/^static const symbol s_4[] = { 'U' };$/;"	v	file:
s_4	languages/german.cc	/^static const symbol s_4[] = { 'y' };$/;"	v	file:
s_4	languages/german2.cc	/^static const symbol s_4[] = { 0xC3, 0xB6 };$/;"	v	file:
s_4	languages/hungarian.cc	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	languages/italian.cc	/^static const symbol s_4[] = { 0xC3, 0xB9 };$/;"	v	file:
s_4	languages/kraaij_pohlmann.cc	/^static const symbol s_4[] = { 'a', 'r' };$/;"	v	file:
s_4	languages/lovins.cc	/^static const symbol s_4[] = { 'r', 'y', 's', 't' };$/;"	v	file:
s_4	languages/porter.cc	/^static const symbol s_4[] = { 'e' };$/;"	v	file:
s_4	languages/portuguese.cc	/^static const symbol s_4[] = { 'l', 'o', 'g' };$/;"	v	file:
s_4	languages/romanian.cc	/^static const symbol s_4[] = { 'a' };$/;"	v	file:
s_4	languages/russian.cc	/^static const symbol s_4[] = { 0xD0, 0xB0 };$/;"	v	file:
s_4	languages/spanish.cc	/^static const symbol s_4[] = { 'u' };$/;"	v	file:
s_4	languages/turkish.cc	/^static const symbol s_4[] = { 'k', 'e', 'n' };$/;"	v	file:
s_40	languages/kraaij_pohlmann.cc	/^static const symbol s_40[] = { 'r' };$/;"	v	file:
s_41	languages/kraaij_pohlmann.cc	/^static const symbol s_41[] = { 't', 'e', 'e', 'r' };$/;"	v	file:
s_42	languages/kraaij_pohlmann.cc	/^static const symbol s_42[] = { 'l', 'i', 'j', 'k' };$/;"	v	file:
s_43	languages/kraaij_pohlmann.cc	/^static const symbol s_43[] = { 'k' };$/;"	v	file:
s_44	languages/kraaij_pohlmann.cc	/^static const symbol s_44[] = { 'f' };$/;"	v	file:
s_45	languages/kraaij_pohlmann.cc	/^static const symbol s_45[] = { 'p' };$/;"	v	file:
s_46	languages/kraaij_pohlmann.cc	/^static const symbol s_46[] = { 'b' };$/;"	v	file:
s_47	languages/kraaij_pohlmann.cc	/^static const symbol s_47[] = { 'c' };$/;"	v	file:
s_48	languages/kraaij_pohlmann.cc	/^static const symbol s_48[] = { 'd' };$/;"	v	file:
s_49	languages/kraaij_pohlmann.cc	/^static const symbol s_49[] = { 'f' };$/;"	v	file:
s_4_0	languages/dutch.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/english.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/finnish.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/french.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/german.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/german2.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/hungarian.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/italian.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/kraaij_pohlmann.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/porter.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/portuguese.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/romanian.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/russian.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/spanish.cc	/^#define s_4_0 /;"	d	file:
s_4_0	languages/turkish.cc	/^#define s_4_0 /;"	d	file:
s_4_1	languages/dutch.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/english.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/finnish.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/french.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/german.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/german2.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/hungarian.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/italian.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/kraaij_pohlmann.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/porter.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/portuguese.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/romanian.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/russian.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/spanish.cc	/^#define s_4_1 /;"	d	file:
s_4_1	languages/turkish.cc	/^#define s_4_1 /;"	d	file:
s_4_10	languages/french.cc	/^#define s_4_10 /;"	d	file:
s_4_10	languages/hungarian.cc	/^#define s_4_10 /;"	d	file:
s_4_10	languages/romanian.cc	/^#define s_4_10 /;"	d	file:
s_4_10	languages/russian.cc	/^#define s_4_10 /;"	d	file:
s_4_11	languages/french.cc	/^#define s_4_11 /;"	d	file:
s_4_11	languages/hungarian.cc	/^#define s_4_11 /;"	d	file:
s_4_11	languages/romanian.cc	/^#define s_4_11 /;"	d	file:
s_4_11	languages/russian.cc	/^#define s_4_11 /;"	d	file:
s_4_12	languages/french.cc	/^#define s_4_12 /;"	d	file:
s_4_12	languages/hungarian.cc	/^#define s_4_12 /;"	d	file:
s_4_12	languages/romanian.cc	/^#define s_4_12 /;"	d	file:
s_4_12	languages/russian.cc	/^#define s_4_12 /;"	d	file:
s_4_13	languages/french.cc	/^#define s_4_13 /;"	d	file:
s_4_13	languages/hungarian.cc	/^#define s_4_13 /;"	d	file:
s_4_13	languages/romanian.cc	/^#define s_4_13 /;"	d	file:
s_4_13	languages/russian.cc	/^#define s_4_13 /;"	d	file:
s_4_14	languages/french.cc	/^#define s_4_14 /;"	d	file:
s_4_14	languages/hungarian.cc	/^#define s_4_14 /;"	d	file:
s_4_14	languages/romanian.cc	/^#define s_4_14 /;"	d	file:
s_4_14	languages/russian.cc	/^#define s_4_14 /;"	d	file:
s_4_15	languages/french.cc	/^#define s_4_15 /;"	d	file:
s_4_15	languages/hungarian.cc	/^#define s_4_15 /;"	d	file:
s_4_15	languages/romanian.cc	/^#define s_4_15 /;"	d	file:
s_4_15	languages/russian.cc	/^#define s_4_15 /;"	d	file:
s_4_16	languages/french.cc	/^#define s_4_16 /;"	d	file:
s_4_16	languages/hungarian.cc	/^#define s_4_16 /;"	d	file:
s_4_16	languages/romanian.cc	/^#define s_4_16 /;"	d	file:
s_4_16	languages/russian.cc	/^#define s_4_16 /;"	d	file:
s_4_17	languages/french.cc	/^#define s_4_17 /;"	d	file:
s_4_17	languages/hungarian.cc	/^#define s_4_17 /;"	d	file:
s_4_17	languages/romanian.cc	/^#define s_4_17 /;"	d	file:
s_4_17	languages/russian.cc	/^#define s_4_17 /;"	d	file:
s_4_18	languages/french.cc	/^#define s_4_18 /;"	d	file:
s_4_18	languages/hungarian.cc	/^#define s_4_18 /;"	d	file:
s_4_18	languages/romanian.cc	/^#define s_4_18 /;"	d	file:
s_4_18	languages/russian.cc	/^#define s_4_18 /;"	d	file:
s_4_19	languages/french.cc	/^#define s_4_19 /;"	d	file:
s_4_19	languages/hungarian.cc	/^#define s_4_19 /;"	d	file:
s_4_19	languages/romanian.cc	/^#define s_4_19 /;"	d	file:
s_4_19	languages/russian.cc	/^#define s_4_19 /;"	d	file:
s_4_2	languages/dutch.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/english.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/finnish.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/french.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/german.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/hungarian.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/italian.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/kraaij_pohlmann.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/porter.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/portuguese.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/romanian.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/russian.cc	/^#define s_4_2 /;"	d	file:
s_4_2	languages/spanish.cc	/^#define s_4_2 /;"	d	file:
s_4_20	languages/french.cc	/^#define s_4_20 /;"	d	file:
s_4_20	languages/hungarian.cc	/^#define s_4_20 /;"	d	file:
s_4_20	languages/romanian.cc	/^#define s_4_20 /;"	d	file:
s_4_20	languages/russian.cc	/^#define s_4_20 /;"	d	file:
s_4_21	languages/french.cc	/^#define s_4_21 /;"	d	file:
s_4_21	languages/hungarian.cc	/^#define s_4_21 /;"	d	file:
s_4_21	languages/romanian.cc	/^#define s_4_21 /;"	d	file:
s_4_21	languages/russian.cc	/^#define s_4_21 /;"	d	file:
s_4_22	languages/french.cc	/^#define s_4_22 /;"	d	file:
s_4_22	languages/hungarian.cc	/^#define s_4_22 /;"	d	file:
s_4_22	languages/romanian.cc	/^#define s_4_22 /;"	d	file:
s_4_22	languages/russian.cc	/^#define s_4_22 /;"	d	file:
s_4_23	languages/french.cc	/^#define s_4_23 /;"	d	file:
s_4_23	languages/hungarian.cc	/^#define s_4_23 /;"	d	file:
s_4_23	languages/romanian.cc	/^#define s_4_23 /;"	d	file:
s_4_23	languages/russian.cc	/^#define s_4_23 /;"	d	file:
s_4_24	languages/french.cc	/^#define s_4_24 /;"	d	file:
s_4_24	languages/hungarian.cc	/^#define s_4_24 /;"	d	file:
s_4_24	languages/romanian.cc	/^#define s_4_24 /;"	d	file:
s_4_24	languages/russian.cc	/^#define s_4_24 /;"	d	file:
s_4_25	languages/french.cc	/^#define s_4_25 /;"	d	file:
s_4_25	languages/hungarian.cc	/^#define s_4_25 /;"	d	file:
s_4_25	languages/romanian.cc	/^#define s_4_25 /;"	d	file:
s_4_25	languages/russian.cc	/^#define s_4_25 /;"	d	file:
s_4_26	languages/french.cc	/^#define s_4_26 /;"	d	file:
s_4_26	languages/hungarian.cc	/^#define s_4_26 /;"	d	file:
s_4_26	languages/romanian.cc	/^#define s_4_26 /;"	d	file:
s_4_26	languages/russian.cc	/^#define s_4_26 /;"	d	file:
s_4_27	languages/french.cc	/^#define s_4_27 /;"	d	file:
s_4_27	languages/hungarian.cc	/^#define s_4_27 /;"	d	file:
s_4_27	languages/romanian.cc	/^#define s_4_27 /;"	d	file:
s_4_27	languages/russian.cc	/^#define s_4_27 /;"	d	file:
s_4_28	languages/french.cc	/^#define s_4_28 /;"	d	file:
s_4_28	languages/hungarian.cc	/^#define s_4_28 /;"	d	file:
s_4_28	languages/romanian.cc	/^#define s_4_28 /;"	d	file:
s_4_28	languages/russian.cc	/^#define s_4_28 /;"	d	file:
s_4_29	languages/french.cc	/^#define s_4_29 /;"	d	file:
s_4_29	languages/hungarian.cc	/^#define s_4_29 /;"	d	file:
s_4_29	languages/romanian.cc	/^#define s_4_29 /;"	d	file:
s_4_29	languages/russian.cc	/^#define s_4_29 /;"	d	file:
s_4_3	languages/dutch.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/english.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/finnish.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/french.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/german.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/hungarian.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/italian.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/porter.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/romanian.cc	/^#define s_4_3 /;"	d	file:
s_4_3	languages/russian.cc	/^#define s_4_3 /;"	d	file:
s_4_30	languages/french.cc	/^#define s_4_30 /;"	d	file:
s_4_30	languages/hungarian.cc	/^#define s_4_30 /;"	d	file:
s_4_30	languages/romanian.cc	/^#define s_4_30 /;"	d	file:
s_4_30	languages/russian.cc	/^#define s_4_30 /;"	d	file:
s_4_31	languages/french.cc	/^#define s_4_31 /;"	d	file:
s_4_31	languages/hungarian.cc	/^#define s_4_31 /;"	d	file:
s_4_31	languages/romanian.cc	/^#define s_4_31 /;"	d	file:
s_4_31	languages/russian.cc	/^#define s_4_31 /;"	d	file:
s_4_32	languages/french.cc	/^#define s_4_32 /;"	d	file:
s_4_32	languages/hungarian.cc	/^#define s_4_32 /;"	d	file:
s_4_32	languages/romanian.cc	/^#define s_4_32 /;"	d	file:
s_4_32	languages/russian.cc	/^#define s_4_32 /;"	d	file:
s_4_33	languages/french.cc	/^#define s_4_33 /;"	d	file:
s_4_33	languages/hungarian.cc	/^#define s_4_33 /;"	d	file:
s_4_33	languages/romanian.cc	/^#define s_4_33 /;"	d	file:
s_4_33	languages/russian.cc	/^#define s_4_33 /;"	d	file:
s_4_34	languages/french.cc	/^#define s_4_34 /;"	d	file:
s_4_34	languages/hungarian.cc	/^#define s_4_34 /;"	d	file:
s_4_34	languages/romanian.cc	/^#define s_4_34 /;"	d	file:
s_4_34	languages/russian.cc	/^#define s_4_34 /;"	d	file:
s_4_35	languages/french.cc	/^#define s_4_35 /;"	d	file:
s_4_35	languages/hungarian.cc	/^#define s_4_35 /;"	d	file:
s_4_35	languages/romanian.cc	/^#define s_4_35 /;"	d	file:
s_4_35	languages/russian.cc	/^#define s_4_35 /;"	d	file:
s_4_36	languages/french.cc	/^#define s_4_36 /;"	d	file:
s_4_36	languages/hungarian.cc	/^#define s_4_36 /;"	d	file:
s_4_36	languages/romanian.cc	/^#define s_4_36 /;"	d	file:
s_4_36	languages/russian.cc	/^#define s_4_36 /;"	d	file:
s_4_37	languages/french.cc	/^#define s_4_37 /;"	d	file:
s_4_37	languages/hungarian.cc	/^#define s_4_37 /;"	d	file:
s_4_37	languages/romanian.cc	/^#define s_4_37 /;"	d	file:
s_4_37	languages/russian.cc	/^#define s_4_37 /;"	d	file:
s_4_38	languages/french.cc	/^#define s_4_38 /;"	d	file:
s_4_38	languages/hungarian.cc	/^#define s_4_38 /;"	d	file:
s_4_38	languages/romanian.cc	/^#define s_4_38 /;"	d	file:
s_4_38	languages/russian.cc	/^#define s_4_38 /;"	d	file:
s_4_39	languages/french.cc	/^#define s_4_39 /;"	d	file:
s_4_39	languages/hungarian.cc	/^#define s_4_39 /;"	d	file:
s_4_39	languages/romanian.cc	/^#define s_4_39 /;"	d	file:
s_4_39	languages/russian.cc	/^#define s_4_39 /;"	d	file:
s_4_4	languages/dutch.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/english.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/finnish.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/french.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/german.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/hungarian.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/porter.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/romanian.cc	/^#define s_4_4 /;"	d	file:
s_4_4	languages/russian.cc	/^#define s_4_4 /;"	d	file:
s_4_40	languages/french.cc	/^#define s_4_40 /;"	d	file:
s_4_40	languages/hungarian.cc	/^#define s_4_40 /;"	d	file:
s_4_40	languages/romanian.cc	/^#define s_4_40 /;"	d	file:
s_4_40	languages/russian.cc	/^#define s_4_40 /;"	d	file:
s_4_41	languages/french.cc	/^#define s_4_41 /;"	d	file:
s_4_41	languages/hungarian.cc	/^#define s_4_41 /;"	d	file:
s_4_41	languages/romanian.cc	/^#define s_4_41 /;"	d	file:
s_4_41	languages/russian.cc	/^#define s_4_41 /;"	d	file:
s_4_42	languages/french.cc	/^#define s_4_42 /;"	d	file:
s_4_42	languages/hungarian.cc	/^#define s_4_42 /;"	d	file:
s_4_42	languages/romanian.cc	/^#define s_4_42 /;"	d	file:
s_4_42	languages/russian.cc	/^#define s_4_42 /;"	d	file:
s_4_43	languages/hungarian.cc	/^#define s_4_43 /;"	d	file:
s_4_43	languages/romanian.cc	/^#define s_4_43 /;"	d	file:
s_4_43	languages/russian.cc	/^#define s_4_43 /;"	d	file:
s_4_44	languages/romanian.cc	/^#define s_4_44 /;"	d	file:
s_4_44	languages/russian.cc	/^#define s_4_44 /;"	d	file:
s_4_45	languages/romanian.cc	/^#define s_4_45 /;"	d	file:
s_4_45	languages/russian.cc	/^#define s_4_45 /;"	d	file:
s_4_46	languages/romanian.cc	/^#define s_4_46 /;"	d	file:
s_4_47	languages/romanian.cc	/^#define s_4_47 /;"	d	file:
s_4_48	languages/romanian.cc	/^#define s_4_48 /;"	d	file:
s_4_49	languages/romanian.cc	/^#define s_4_49 /;"	d	file:
s_4_5	languages/dutch.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/english.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/finnish.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/french.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/german.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/hungarian.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/porter.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/romanian.cc	/^#define s_4_5 /;"	d	file:
s_4_5	languages/russian.cc	/^#define s_4_5 /;"	d	file:
s_4_50	languages/romanian.cc	/^#define s_4_50 /;"	d	file:
s_4_51	languages/romanian.cc	/^#define s_4_51 /;"	d	file:
s_4_52	languages/romanian.cc	/^#define s_4_52 /;"	d	file:
s_4_53	languages/romanian.cc	/^#define s_4_53 /;"	d	file:
s_4_54	languages/romanian.cc	/^#define s_4_54 /;"	d	file:
s_4_55	languages/romanian.cc	/^#define s_4_55 /;"	d	file:
s_4_56	languages/romanian.cc	/^#define s_4_56 /;"	d	file:
s_4_57	languages/romanian.cc	/^#define s_4_57 /;"	d	file:
s_4_58	languages/romanian.cc	/^#define s_4_58 /;"	d	file:
s_4_59	languages/romanian.cc	/^#define s_4_59 /;"	d	file:
s_4_6	languages/finnish.cc	/^#define s_4_6 /;"	d	file:
s_4_6	languages/french.cc	/^#define s_4_6 /;"	d	file:
s_4_6	languages/german.cc	/^#define s_4_6 /;"	d	file:
s_4_6	languages/hungarian.cc	/^#define s_4_6 /;"	d	file:
s_4_6	languages/porter.cc	/^#define s_4_6 /;"	d	file:
s_4_6	languages/romanian.cc	/^#define s_4_6 /;"	d	file:
s_4_6	languages/russian.cc	/^#define s_4_6 /;"	d	file:
s_4_60	languages/romanian.cc	/^#define s_4_60 /;"	d	file:
s_4_61	languages/romanian.cc	/^#define s_4_61 /;"	d	file:
s_4_62	languages/romanian.cc	/^#define s_4_62 /;"	d	file:
s_4_63	languages/romanian.cc	/^#define s_4_63 /;"	d	file:
s_4_64	languages/romanian.cc	/^#define s_4_64 /;"	d	file:
s_4_65	languages/romanian.cc	/^#define s_4_65 /;"	d	file:
s_4_66	languages/romanian.cc	/^#define s_4_66 /;"	d	file:
s_4_67	languages/romanian.cc	/^#define s_4_67 /;"	d	file:
s_4_68	languages/romanian.cc	/^#define s_4_68 /;"	d	file:
s_4_69	languages/romanian.cc	/^#define s_4_69 /;"	d	file:
s_4_7	languages/finnish.cc	/^#define s_4_7 /;"	d	file:
s_4_7	languages/french.cc	/^#define s_4_7 /;"	d	file:
s_4_7	languages/german.cc	/^#define s_4_7 /;"	d	file:
s_4_7	languages/hungarian.cc	/^#define s_4_7 /;"	d	file:
s_4_7	languages/romanian.cc	/^#define s_4_7 /;"	d	file:
s_4_7	languages/russian.cc	/^#define s_4_7 /;"	d	file:
s_4_70	languages/romanian.cc	/^#define s_4_70 /;"	d	file:
s_4_71	languages/romanian.cc	/^#define s_4_71 /;"	d	file:
s_4_72	languages/romanian.cc	/^#define s_4_72 /;"	d	file:
s_4_73	languages/romanian.cc	/^#define s_4_73 /;"	d	file:
s_4_74	languages/romanian.cc	/^#define s_4_74 /;"	d	file:
s_4_75	languages/romanian.cc	/^#define s_4_75 /;"	d	file:
s_4_76	languages/romanian.cc	/^#define s_4_76 /;"	d	file:
s_4_77	languages/romanian.cc	/^#define s_4_77 /;"	d	file:
s_4_78	languages/romanian.cc	/^#define s_4_78 /;"	d	file:
s_4_79	languages/romanian.cc	/^#define s_4_79 /;"	d	file:
s_4_8	languages/finnish.cc	/^#define s_4_8 /;"	d	file:
s_4_8	languages/french.cc	/^#define s_4_8 /;"	d	file:
s_4_8	languages/hungarian.cc	/^#define s_4_8 /;"	d	file:
s_4_8	languages/romanian.cc	/^#define s_4_8 /;"	d	file:
s_4_8	languages/russian.cc	/^#define s_4_8 /;"	d	file:
s_4_80	languages/romanian.cc	/^#define s_4_80 /;"	d	file:
s_4_81	languages/romanian.cc	/^#define s_4_81 /;"	d	file:
s_4_82	languages/romanian.cc	/^#define s_4_82 /;"	d	file:
s_4_83	languages/romanian.cc	/^#define s_4_83 /;"	d	file:
s_4_84	languages/romanian.cc	/^#define s_4_84 /;"	d	file:
s_4_85	languages/romanian.cc	/^#define s_4_85 /;"	d	file:
s_4_86	languages/romanian.cc	/^#define s_4_86 /;"	d	file:
s_4_87	languages/romanian.cc	/^#define s_4_87 /;"	d	file:
s_4_88	languages/romanian.cc	/^#define s_4_88 /;"	d	file:
s_4_89	languages/romanian.cc	/^#define s_4_89 /;"	d	file:
s_4_9	languages/french.cc	/^#define s_4_9 /;"	d	file:
s_4_9	languages/hungarian.cc	/^#define s_4_9 /;"	d	file:
s_4_9	languages/romanian.cc	/^#define s_4_9 /;"	d	file:
s_4_9	languages/russian.cc	/^#define s_4_9 /;"	d	file:
s_4_90	languages/romanian.cc	/^#define s_4_90 /;"	d	file:
s_4_91	languages/romanian.cc	/^#define s_4_91 /;"	d	file:
s_4_92	languages/romanian.cc	/^#define s_4_92 /;"	d	file:
s_4_93	languages/romanian.cc	/^#define s_4_93 /;"	d	file:
s_5	languages/dutch.cc	/^static const symbol s_5[] = { 'Y' };$/;"	v	file:
s_5	languages/english.cc	/^static const symbol s_5[] = { 'e', 'e' };$/;"	v	file:
s_5	languages/finnish.cc	/^static const symbol s_5[] = { 'p', 'o' };$/;"	v	file:
s_5	languages/french.cc	/^static const symbol s_5[] = { 'i' };$/;"	v	file:
s_5	languages/german.cc	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	languages/german2.cc	/^static const symbol s_5[] = { 0xC3, 0xBC };$/;"	v	file:
s_5	languages/hungarian.cc	/^static const symbol s_5[] = { 'a' };$/;"	v	file:
s_5	languages/italian.cc	/^static const symbol s_5[] = { 'q', 'U' };$/;"	v	file:
s_5	languages/kraaij_pohlmann.cc	/^static const symbol s_5[] = { 'e', 'r' };$/;"	v	file:
s_5	languages/lovins.cc	/^static const symbol s_5[] = { 'i', 'e', 'f' };$/;"	v	file:
s_5	languages/porter.cc	/^static const symbol s_5[] = { 'i' };$/;"	v	file:
s_5	languages/portuguese.cc	/^static const symbol s_5[] = { 'u' };$/;"	v	file:
s_5	languages/romanian.cc	/^static const symbol s_5[] = { 'e' };$/;"	v	file:
s_5	languages/russian.cc	/^static const symbol s_5[] = { 0xD1, 0x8F };$/;"	v	file:
s_5	languages/spanish.cc	/^static const symbol s_5[] = { 'i', 'e', 'n', 'd', 'o' };$/;"	v	file:
s_5	languages/turkish.cc	/^static const symbol s_5[] = { 'p' };$/;"	v	file:
s_50	languages/kraaij_pohlmann.cc	/^static const symbol s_50[] = { 'g' };$/;"	v	file:
s_51	languages/kraaij_pohlmann.cc	/^static const symbol s_51[] = { 'h' };$/;"	v	file:
s_52	languages/kraaij_pohlmann.cc	/^static const symbol s_52[] = { 'j' };$/;"	v	file:
s_53	languages/kraaij_pohlmann.cc	/^static const symbol s_53[] = { 'k' };$/;"	v	file:
s_54	languages/kraaij_pohlmann.cc	/^static const symbol s_54[] = { 'l' };$/;"	v	file:
s_55	languages/kraaij_pohlmann.cc	/^static const symbol s_55[] = { 'm' };$/;"	v	file:
s_56	languages/kraaij_pohlmann.cc	/^static const symbol s_56[] = { 'n' };$/;"	v	file:
s_57	languages/kraaij_pohlmann.cc	/^static const symbol s_57[] = { 'p' };$/;"	v	file:
s_58	languages/kraaij_pohlmann.cc	/^static const symbol s_58[] = { 'q' };$/;"	v	file:
s_59	languages/kraaij_pohlmann.cc	/^static const symbol s_59[] = { 'r' };$/;"	v	file:
s_5_0	languages/dutch.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/english.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/finnish.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/french.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/german2.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/hungarian.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/italian.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/kraaij_pohlmann.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/porter.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/portuguese.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/romanian.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/russian.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/spanish.cc	/^#define s_5_0 /;"	d	file:
s_5_0	languages/turkish.cc	/^#define s_5_0 /;"	d	file:
s_5_1	languages/dutch.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/english.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/finnish.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/french.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/german2.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/hungarian.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/italian.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/kraaij_pohlmann.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/porter.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/portuguese.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/romanian.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/russian.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/spanish.cc	/^#define s_5_1 /;"	d	file:
s_5_1	languages/turkish.cc	/^#define s_5_1 /;"	d	file:
s_5_10	languages/english.cc	/^#define s_5_10 /;"	d	file:
s_5_10	languages/french.cc	/^#define s_5_10 /;"	d	file:
s_5_10	languages/porter.cc	/^#define s_5_10 /;"	d	file:
s_5_10	languages/portuguese.cc	/^#define s_5_10 /;"	d	file:
s_5_10	languages/russian.cc	/^#define s_5_10 /;"	d	file:
s_5_11	languages/english.cc	/^#define s_5_11 /;"	d	file:
s_5_11	languages/french.cc	/^#define s_5_11 /;"	d	file:
s_5_11	languages/porter.cc	/^#define s_5_11 /;"	d	file:
s_5_11	languages/portuguese.cc	/^#define s_5_11 /;"	d	file:
s_5_11	languages/russian.cc	/^#define s_5_11 /;"	d	file:
s_5_12	languages/english.cc	/^#define s_5_12 /;"	d	file:
s_5_12	languages/french.cc	/^#define s_5_12 /;"	d	file:
s_5_12	languages/porter.cc	/^#define s_5_12 /;"	d	file:
s_5_12	languages/portuguese.cc	/^#define s_5_12 /;"	d	file:
s_5_12	languages/russian.cc	/^#define s_5_12 /;"	d	file:
s_5_13	languages/english.cc	/^#define s_5_13 /;"	d	file:
s_5_13	languages/french.cc	/^#define s_5_13 /;"	d	file:
s_5_13	languages/porter.cc	/^#define s_5_13 /;"	d	file:
s_5_13	languages/portuguese.cc	/^#define s_5_13 /;"	d	file:
s_5_13	languages/russian.cc	/^#define s_5_13 /;"	d	file:
s_5_14	languages/english.cc	/^#define s_5_14 /;"	d	file:
s_5_14	languages/french.cc	/^#define s_5_14 /;"	d	file:
s_5_14	languages/porter.cc	/^#define s_5_14 /;"	d	file:
s_5_14	languages/portuguese.cc	/^#define s_5_14 /;"	d	file:
s_5_14	languages/russian.cc	/^#define s_5_14 /;"	d	file:
s_5_15	languages/english.cc	/^#define s_5_15 /;"	d	file:
s_5_15	languages/french.cc	/^#define s_5_15 /;"	d	file:
s_5_15	languages/porter.cc	/^#define s_5_15 /;"	d	file:
s_5_15	languages/portuguese.cc	/^#define s_5_15 /;"	d	file:
s_5_15	languages/russian.cc	/^#define s_5_15 /;"	d	file:
s_5_16	languages/english.cc	/^#define s_5_16 /;"	d	file:
s_5_16	languages/french.cc	/^#define s_5_16 /;"	d	file:
s_5_16	languages/porter.cc	/^#define s_5_16 /;"	d	file:
s_5_16	languages/portuguese.cc	/^#define s_5_16 /;"	d	file:
s_5_16	languages/russian.cc	/^#define s_5_16 /;"	d	file:
s_5_17	languages/english.cc	/^#define s_5_17 /;"	d	file:
s_5_17	languages/french.cc	/^#define s_5_17 /;"	d	file:
s_5_17	languages/porter.cc	/^#define s_5_17 /;"	d	file:
s_5_17	languages/portuguese.cc	/^#define s_5_17 /;"	d	file:
s_5_17	languages/russian.cc	/^#define s_5_17 /;"	d	file:
s_5_18	languages/english.cc	/^#define s_5_18 /;"	d	file:
s_5_18	languages/french.cc	/^#define s_5_18 /;"	d	file:
s_5_18	languages/porter.cc	/^#define s_5_18 /;"	d	file:
s_5_18	languages/portuguese.cc	/^#define s_5_18 /;"	d	file:
s_5_18	languages/russian.cc	/^#define s_5_18 /;"	d	file:
s_5_19	languages/english.cc	/^#define s_5_19 /;"	d	file:
s_5_19	languages/french.cc	/^#define s_5_19 /;"	d	file:
s_5_19	languages/portuguese.cc	/^#define s_5_19 /;"	d	file:
s_5_19	languages/russian.cc	/^#define s_5_19 /;"	d	file:
s_5_2	languages/dutch.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/english.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/finnish.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/french.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/german2.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/hungarian.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/italian.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/kraaij_pohlmann.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/porter.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/portuguese.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/romanian.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/russian.cc	/^#define s_5_2 /;"	d	file:
s_5_2	languages/spanish.cc	/^#define s_5_2 /;"	d	file:
s_5_20	languages/english.cc	/^#define s_5_20 /;"	d	file:
s_5_20	languages/french.cc	/^#define s_5_20 /;"	d	file:
s_5_20	languages/portuguese.cc	/^#define s_5_20 /;"	d	file:
s_5_20	languages/russian.cc	/^#define s_5_20 /;"	d	file:
s_5_21	languages/english.cc	/^#define s_5_21 /;"	d	file:
s_5_21	languages/french.cc	/^#define s_5_21 /;"	d	file:
s_5_21	languages/portuguese.cc	/^#define s_5_21 /;"	d	file:
s_5_21	languages/russian.cc	/^#define s_5_21 /;"	d	file:
s_5_22	languages/english.cc	/^#define s_5_22 /;"	d	file:
s_5_22	languages/french.cc	/^#define s_5_22 /;"	d	file:
s_5_22	languages/portuguese.cc	/^#define s_5_22 /;"	d	file:
s_5_22	languages/russian.cc	/^#define s_5_22 /;"	d	file:
s_5_23	languages/english.cc	/^#define s_5_23 /;"	d	file:
s_5_23	languages/french.cc	/^#define s_5_23 /;"	d	file:
s_5_23	languages/portuguese.cc	/^#define s_5_23 /;"	d	file:
s_5_23	languages/russian.cc	/^#define s_5_23 /;"	d	file:
s_5_24	languages/french.cc	/^#define s_5_24 /;"	d	file:
s_5_24	languages/portuguese.cc	/^#define s_5_24 /;"	d	file:
s_5_24	languages/russian.cc	/^#define s_5_24 /;"	d	file:
s_5_25	languages/french.cc	/^#define s_5_25 /;"	d	file:
s_5_25	languages/portuguese.cc	/^#define s_5_25 /;"	d	file:
s_5_25	languages/russian.cc	/^#define s_5_25 /;"	d	file:
s_5_26	languages/french.cc	/^#define s_5_26 /;"	d	file:
s_5_26	languages/portuguese.cc	/^#define s_5_26 /;"	d	file:
s_5_26	languages/russian.cc	/^#define s_5_26 /;"	d	file:
s_5_27	languages/french.cc	/^#define s_5_27 /;"	d	file:
s_5_27	languages/portuguese.cc	/^#define s_5_27 /;"	d	file:
s_5_27	languages/russian.cc	/^#define s_5_27 /;"	d	file:
s_5_28	languages/french.cc	/^#define s_5_28 /;"	d	file:
s_5_28	languages/portuguese.cc	/^#define s_5_28 /;"	d	file:
s_5_28	languages/russian.cc	/^#define s_5_28 /;"	d	file:
s_5_29	languages/french.cc	/^#define s_5_29 /;"	d	file:
s_5_29	languages/portuguese.cc	/^#define s_5_29 /;"	d	file:
s_5_29	languages/russian.cc	/^#define s_5_29 /;"	d	file:
s_5_3	languages/dutch.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/english.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/finnish.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/french.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/german2.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/porter.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/portuguese.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/romanian.cc	/^#define s_5_3 /;"	d	file:
s_5_3	languages/russian.cc	/^#define s_5_3 /;"	d	file:
s_5_30	languages/french.cc	/^#define s_5_30 /;"	d	file:
s_5_30	languages/portuguese.cc	/^#define s_5_30 /;"	d	file:
s_5_30	languages/russian.cc	/^#define s_5_30 /;"	d	file:
s_5_31	languages/french.cc	/^#define s_5_31 /;"	d	file:
s_5_31	languages/portuguese.cc	/^#define s_5_31 /;"	d	file:
s_5_31	languages/russian.cc	/^#define s_5_31 /;"	d	file:
s_5_32	languages/french.cc	/^#define s_5_32 /;"	d	file:
s_5_32	languages/portuguese.cc	/^#define s_5_32 /;"	d	file:
s_5_32	languages/russian.cc	/^#define s_5_32 /;"	d	file:
s_5_33	languages/french.cc	/^#define s_5_33 /;"	d	file:
s_5_33	languages/portuguese.cc	/^#define s_5_33 /;"	d	file:
s_5_33	languages/russian.cc	/^#define s_5_33 /;"	d	file:
s_5_34	languages/french.cc	/^#define s_5_34 /;"	d	file:
s_5_34	languages/portuguese.cc	/^#define s_5_34 /;"	d	file:
s_5_34	languages/russian.cc	/^#define s_5_34 /;"	d	file:
s_5_35	languages/portuguese.cc	/^#define s_5_35 /;"	d	file:
s_5_35	languages/russian.cc	/^#define s_5_35 /;"	d	file:
s_5_36	languages/portuguese.cc	/^#define s_5_36 /;"	d	file:
s_5_37	languages/portuguese.cc	/^#define s_5_37 /;"	d	file:
s_5_38	languages/portuguese.cc	/^#define s_5_38 /;"	d	file:
s_5_39	languages/portuguese.cc	/^#define s_5_39 /;"	d	file:
s_5_4	languages/english.cc	/^#define s_5_4 /;"	d	file:
s_5_4	languages/finnish.cc	/^#define s_5_4 /;"	d	file:
s_5_4	languages/french.cc	/^#define s_5_4 /;"	d	file:
s_5_4	languages/german2.cc	/^#define s_5_4 /;"	d	file:
s_5_4	languages/porter.cc	/^#define s_5_4 /;"	d	file:
s_5_4	languages/portuguese.cc	/^#define s_5_4 /;"	d	file:
s_5_4	languages/romanian.cc	/^#define s_5_4 /;"	d	file:
s_5_4	languages/russian.cc	/^#define s_5_4 /;"	d	file:
s_5_40	languages/portuguese.cc	/^#define s_5_40 /;"	d	file:
s_5_41	languages/portuguese.cc	/^#define s_5_41 /;"	d	file:
s_5_42	languages/portuguese.cc	/^#define s_5_42 /;"	d	file:
s_5_43	languages/portuguese.cc	/^#define s_5_43 /;"	d	file:
s_5_44	languages/portuguese.cc	/^#define s_5_44 /;"	d	file:
s_5_5	languages/english.cc	/^#define s_5_5 /;"	d	file:
s_5_5	languages/finnish.cc	/^#define s_5_5 /;"	d	file:
s_5_5	languages/french.cc	/^#define s_5_5 /;"	d	file:
s_5_5	languages/german2.cc	/^#define s_5_5 /;"	d	file:
s_5_5	languages/porter.cc	/^#define s_5_5 /;"	d	file:
s_5_5	languages/portuguese.cc	/^#define s_5_5 /;"	d	file:
s_5_5	languages/russian.cc	/^#define s_5_5 /;"	d	file:
s_5_6	languages/english.cc	/^#define s_5_6 /;"	d	file:
s_5_6	languages/finnish.cc	/^#define s_5_6 /;"	d	file:
s_5_6	languages/french.cc	/^#define s_5_6 /;"	d	file:
s_5_6	languages/german2.cc	/^#define s_5_6 /;"	d	file:
s_5_6	languages/porter.cc	/^#define s_5_6 /;"	d	file:
s_5_6	languages/portuguese.cc	/^#define s_5_6 /;"	d	file:
s_5_6	languages/russian.cc	/^#define s_5_6 /;"	d	file:
s_5_7	languages/english.cc	/^#define s_5_7 /;"	d	file:
s_5_7	languages/french.cc	/^#define s_5_7 /;"	d	file:
s_5_7	languages/german2.cc	/^#define s_5_7 /;"	d	file:
s_5_7	languages/porter.cc	/^#define s_5_7 /;"	d	file:
s_5_7	languages/portuguese.cc	/^#define s_5_7 /;"	d	file:
s_5_7	languages/russian.cc	/^#define s_5_7 /;"	d	file:
s_5_8	languages/english.cc	/^#define s_5_8 /;"	d	file:
s_5_8	languages/french.cc	/^#define s_5_8 /;"	d	file:
s_5_8	languages/porter.cc	/^#define s_5_8 /;"	d	file:
s_5_8	languages/portuguese.cc	/^#define s_5_8 /;"	d	file:
s_5_8	languages/russian.cc	/^#define s_5_8 /;"	d	file:
s_5_9	languages/english.cc	/^#define s_5_9 /;"	d	file:
s_5_9	languages/french.cc	/^#define s_5_9 /;"	d	file:
s_5_9	languages/porter.cc	/^#define s_5_9 /;"	d	file:
s_5_9	languages/portuguese.cc	/^#define s_5_9 /;"	d	file:
s_5_9	languages/russian.cc	/^#define s_5_9 /;"	d	file:
s_6	languages/dutch.cc	/^static const symbol s_6[] = { 'I' };$/;"	v	file:
s_6	languages/english.cc	/^static const symbol s_6[] = { 'e' };$/;"	v	file:
s_6	languages/finnish.cc	/^static const symbol s_6[] = { 'p', 'o' };$/;"	v	file:
s_6	languages/french.cc	/^static const symbol s_6[] = { 'u' };$/;"	v	file:
s_6	languages/german.cc	/^static const symbol s_6[] = { 'a' };$/;"	v	file:
s_6	languages/german2.cc	/^static const symbol s_6[] = { 'y' };$/;"	v	file:
s_6	languages/hungarian.cc	/^static const symbol s_6[] = { 'e' };$/;"	v	file:
s_6	languages/italian.cc	/^static const symbol s_6[] = { 'U' };$/;"	v	file:
s_6	languages/kraaij_pohlmann.cc	/^static const symbol s_6[] = { 'e' };$/;"	v	file:
s_6	languages/lovins.cc	/^static const symbol s_6[] = { 'u', 'c' };$/;"	v	file:
s_6	languages/porter.cc	/^static const symbol s_6[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_6	languages/portuguese.cc	/^static const symbol s_6[] = { 'e', 'n', 't', 'e' };$/;"	v	file:
s_6	languages/romanian.cc	/^static const symbol s_6[] = { 'i' };$/;"	v	file:
s_6	languages/russian.cc	/^static const symbol s_6[] = { 0xD0, 0xBD };$/;"	v	file:
s_6	languages/spanish.cc	/^static const symbol s_6[] = { 'a', 'n', 'd', 'o' };$/;"	v	file:
s_6	languages/turkish.cc	/^static const symbol s_6[] = { 0xC3, 0xA7 };$/;"	v	file:
s_60	languages/kraaij_pohlmann.cc	/^static const symbol s_60[] = { 's' };$/;"	v	file:
s_61	languages/kraaij_pohlmann.cc	/^static const symbol s_61[] = { 't' };$/;"	v	file:
s_62	languages/kraaij_pohlmann.cc	/^static const symbol s_62[] = { 'v' };$/;"	v	file:
s_63	languages/kraaij_pohlmann.cc	/^static const symbol s_63[] = { 'w' };$/;"	v	file:
s_64	languages/kraaij_pohlmann.cc	/^static const symbol s_64[] = { 'x' };$/;"	v	file:
s_65	languages/kraaij_pohlmann.cc	/^static const symbol s_65[] = { 'z' };$/;"	v	file:
s_66	languages/kraaij_pohlmann.cc	/^static const symbol s_66[] = { 'f' };$/;"	v	file:
s_67	languages/kraaij_pohlmann.cc	/^static const symbol s_67[] = { 's' };$/;"	v	file:
s_68	languages/kraaij_pohlmann.cc	/^static const symbol s_68[] = { 'g', 'e' };$/;"	v	file:
s_69	languages/kraaij_pohlmann.cc	/^static const symbol s_69[] = { 'g', 'e' };$/;"	v	file:
s_6_0	languages/english.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/finnish.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/french.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/hungarian.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/italian.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/kraaij_pohlmann.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/portuguese.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/russian.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/spanish.cc	/^#define s_6_0 /;"	d	file:
s_6_0	languages/turkish.cc	/^#define s_6_0 /;"	d	file:
s_6_1	languages/english.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/finnish.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/french.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/hungarian.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/italian.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/kraaij_pohlmann.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/portuguese.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/russian.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/spanish.cc	/^#define s_6_1 /;"	d	file:
s_6_1	languages/turkish.cc	/^#define s_6_1 /;"	d	file:
s_6_10	languages/finnish.cc	/^#define s_6_10 /;"	d	file:
s_6_10	languages/french.cc	/^#define s_6_10 /;"	d	file:
s_6_10	languages/italian.cc	/^#define s_6_10 /;"	d	file:
s_6_10	languages/kraaij_pohlmann.cc	/^#define s_6_10 /;"	d	file:
s_6_10	languages/portuguese.cc	/^#define s_6_10 /;"	d	file:
s_6_10	languages/spanish.cc	/^#define s_6_10 /;"	d	file:
s_6_100	languages/portuguese.cc	/^#define s_6_100 /;"	d	file:
s_6_101	languages/portuguese.cc	/^#define s_6_101 /;"	d	file:
s_6_102	languages/portuguese.cc	/^#define s_6_102 /;"	d	file:
s_6_103	languages/portuguese.cc	/^#define s_6_103 /;"	d	file:
s_6_104	languages/portuguese.cc	/^#define s_6_104 /;"	d	file:
s_6_105	languages/portuguese.cc	/^#define s_6_105 /;"	d	file:
s_6_106	languages/portuguese.cc	/^#define s_6_106 /;"	d	file:
s_6_107	languages/portuguese.cc	/^#define s_6_107 /;"	d	file:
s_6_108	languages/portuguese.cc	/^#define s_6_108 /;"	d	file:
s_6_109	languages/portuguese.cc	/^#define s_6_109 /;"	d	file:
s_6_11	languages/finnish.cc	/^#define s_6_11 /;"	d	file:
s_6_11	languages/french.cc	/^#define s_6_11 /;"	d	file:
s_6_11	languages/italian.cc	/^#define s_6_11 /;"	d	file:
s_6_11	languages/kraaij_pohlmann.cc	/^#define s_6_11 /;"	d	file:
s_6_11	languages/portuguese.cc	/^#define s_6_11 /;"	d	file:
s_6_11	languages/spanish.cc	/^#define s_6_11 /;"	d	file:
s_6_110	languages/portuguese.cc	/^#define s_6_110 /;"	d	file:
s_6_111	languages/portuguese.cc	/^#define s_6_111 /;"	d	file:
s_6_112	languages/portuguese.cc	/^#define s_6_112 /;"	d	file:
s_6_113	languages/portuguese.cc	/^#define s_6_113 /;"	d	file:
s_6_114	languages/portuguese.cc	/^#define s_6_114 /;"	d	file:
s_6_115	languages/portuguese.cc	/^#define s_6_115 /;"	d	file:
s_6_116	languages/portuguese.cc	/^#define s_6_116 /;"	d	file:
s_6_117	languages/portuguese.cc	/^#define s_6_117 /;"	d	file:
s_6_118	languages/portuguese.cc	/^#define s_6_118 /;"	d	file:
s_6_119	languages/portuguese.cc	/^#define s_6_119 /;"	d	file:
s_6_12	languages/finnish.cc	/^#define s_6_12 /;"	d	file:
s_6_12	languages/french.cc	/^#define s_6_12 /;"	d	file:
s_6_12	languages/italian.cc	/^#define s_6_12 /;"	d	file:
s_6_12	languages/kraaij_pohlmann.cc	/^#define s_6_12 /;"	d	file:
s_6_12	languages/portuguese.cc	/^#define s_6_12 /;"	d	file:
s_6_12	languages/spanish.cc	/^#define s_6_12 /;"	d	file:
s_6_13	languages/finnish.cc	/^#define s_6_13 /;"	d	file:
s_6_13	languages/french.cc	/^#define s_6_13 /;"	d	file:
s_6_13	languages/italian.cc	/^#define s_6_13 /;"	d	file:
s_6_13	languages/kraaij_pohlmann.cc	/^#define s_6_13 /;"	d	file:
s_6_13	languages/portuguese.cc	/^#define s_6_13 /;"	d	file:
s_6_13	languages/spanish.cc	/^#define s_6_13 /;"	d	file:
s_6_14	languages/finnish.cc	/^#define s_6_14 /;"	d	file:
s_6_14	languages/french.cc	/^#define s_6_14 /;"	d	file:
s_6_14	languages/italian.cc	/^#define s_6_14 /;"	d	file:
s_6_14	languages/kraaij_pohlmann.cc	/^#define s_6_14 /;"	d	file:
s_6_14	languages/portuguese.cc	/^#define s_6_14 /;"	d	file:
s_6_14	languages/spanish.cc	/^#define s_6_14 /;"	d	file:
s_6_15	languages/finnish.cc	/^#define s_6_15 /;"	d	file:
s_6_15	languages/french.cc	/^#define s_6_15 /;"	d	file:
s_6_15	languages/italian.cc	/^#define s_6_15 /;"	d	file:
s_6_15	languages/kraaij_pohlmann.cc	/^#define s_6_15 /;"	d	file:
s_6_15	languages/portuguese.cc	/^#define s_6_15 /;"	d	file:
s_6_15	languages/spanish.cc	/^#define s_6_15 /;"	d	file:
s_6_16	languages/finnish.cc	/^#define s_6_16 /;"	d	file:
s_6_16	languages/french.cc	/^#define s_6_16 /;"	d	file:
s_6_16	languages/italian.cc	/^#define s_6_16 /;"	d	file:
s_6_16	languages/kraaij_pohlmann.cc	/^#define s_6_16 /;"	d	file:
s_6_16	languages/portuguese.cc	/^#define s_6_16 /;"	d	file:
s_6_16	languages/spanish.cc	/^#define s_6_16 /;"	d	file:
s_6_17	languages/finnish.cc	/^#define s_6_17 /;"	d	file:
s_6_17	languages/french.cc	/^#define s_6_17 /;"	d	file:
s_6_17	languages/italian.cc	/^#define s_6_17 /;"	d	file:
s_6_17	languages/kraaij_pohlmann.cc	/^#define s_6_17 /;"	d	file:
s_6_17	languages/portuguese.cc	/^#define s_6_17 /;"	d	file:
s_6_17	languages/spanish.cc	/^#define s_6_17 /;"	d	file:
s_6_18	languages/finnish.cc	/^#define s_6_18 /;"	d	file:
s_6_18	languages/french.cc	/^#define s_6_18 /;"	d	file:
s_6_18	languages/italian.cc	/^#define s_6_18 /;"	d	file:
s_6_18	languages/kraaij_pohlmann.cc	/^#define s_6_18 /;"	d	file:
s_6_18	languages/portuguese.cc	/^#define s_6_18 /;"	d	file:
s_6_18	languages/spanish.cc	/^#define s_6_18 /;"	d	file:
s_6_19	languages/finnish.cc	/^#define s_6_19 /;"	d	file:
s_6_19	languages/french.cc	/^#define s_6_19 /;"	d	file:
s_6_19	languages/italian.cc	/^#define s_6_19 /;"	d	file:
s_6_19	languages/kraaij_pohlmann.cc	/^#define s_6_19 /;"	d	file:
s_6_19	languages/portuguese.cc	/^#define s_6_19 /;"	d	file:
s_6_19	languages/spanish.cc	/^#define s_6_19 /;"	d	file:
s_6_2	languages/english.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/finnish.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/french.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/hungarian.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/italian.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/kraaij_pohlmann.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/portuguese.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/spanish.cc	/^#define s_6_2 /;"	d	file:
s_6_2	languages/turkish.cc	/^#define s_6_2 /;"	d	file:
s_6_20	languages/finnish.cc	/^#define s_6_20 /;"	d	file:
s_6_20	languages/french.cc	/^#define s_6_20 /;"	d	file:
s_6_20	languages/italian.cc	/^#define s_6_20 /;"	d	file:
s_6_20	languages/kraaij_pohlmann.cc	/^#define s_6_20 /;"	d	file:
s_6_20	languages/portuguese.cc	/^#define s_6_20 /;"	d	file:
s_6_20	languages/spanish.cc	/^#define s_6_20 /;"	d	file:
s_6_21	languages/finnish.cc	/^#define s_6_21 /;"	d	file:
s_6_21	languages/french.cc	/^#define s_6_21 /;"	d	file:
s_6_21	languages/italian.cc	/^#define s_6_21 /;"	d	file:
s_6_21	languages/kraaij_pohlmann.cc	/^#define s_6_21 /;"	d	file:
s_6_21	languages/portuguese.cc	/^#define s_6_21 /;"	d	file:
s_6_21	languages/spanish.cc	/^#define s_6_21 /;"	d	file:
s_6_22	languages/finnish.cc	/^#define s_6_22 /;"	d	file:
s_6_22	languages/french.cc	/^#define s_6_22 /;"	d	file:
s_6_22	languages/italian.cc	/^#define s_6_22 /;"	d	file:
s_6_22	languages/portuguese.cc	/^#define s_6_22 /;"	d	file:
s_6_22	languages/spanish.cc	/^#define s_6_22 /;"	d	file:
s_6_23	languages/finnish.cc	/^#define s_6_23 /;"	d	file:
s_6_23	languages/french.cc	/^#define s_6_23 /;"	d	file:
s_6_23	languages/italian.cc	/^#define s_6_23 /;"	d	file:
s_6_23	languages/portuguese.cc	/^#define s_6_23 /;"	d	file:
s_6_23	languages/spanish.cc	/^#define s_6_23 /;"	d	file:
s_6_24	languages/finnish.cc	/^#define s_6_24 /;"	d	file:
s_6_24	languages/french.cc	/^#define s_6_24 /;"	d	file:
s_6_24	languages/italian.cc	/^#define s_6_24 /;"	d	file:
s_6_24	languages/portuguese.cc	/^#define s_6_24 /;"	d	file:
s_6_24	languages/spanish.cc	/^#define s_6_24 /;"	d	file:
s_6_25	languages/finnish.cc	/^#define s_6_25 /;"	d	file:
s_6_25	languages/french.cc	/^#define s_6_25 /;"	d	file:
s_6_25	languages/italian.cc	/^#define s_6_25 /;"	d	file:
s_6_25	languages/portuguese.cc	/^#define s_6_25 /;"	d	file:
s_6_25	languages/spanish.cc	/^#define s_6_25 /;"	d	file:
s_6_26	languages/finnish.cc	/^#define s_6_26 /;"	d	file:
s_6_26	languages/french.cc	/^#define s_6_26 /;"	d	file:
s_6_26	languages/italian.cc	/^#define s_6_26 /;"	d	file:
s_6_26	languages/portuguese.cc	/^#define s_6_26 /;"	d	file:
s_6_26	languages/spanish.cc	/^#define s_6_26 /;"	d	file:
s_6_27	languages/finnish.cc	/^#define s_6_27 /;"	d	file:
s_6_27	languages/french.cc	/^#define s_6_27 /;"	d	file:
s_6_27	languages/italian.cc	/^#define s_6_27 /;"	d	file:
s_6_27	languages/portuguese.cc	/^#define s_6_27 /;"	d	file:
s_6_27	languages/spanish.cc	/^#define s_6_27 /;"	d	file:
s_6_28	languages/finnish.cc	/^#define s_6_28 /;"	d	file:
s_6_28	languages/french.cc	/^#define s_6_28 /;"	d	file:
s_6_28	languages/italian.cc	/^#define s_6_28 /;"	d	file:
s_6_28	languages/portuguese.cc	/^#define s_6_28 /;"	d	file:
s_6_28	languages/spanish.cc	/^#define s_6_28 /;"	d	file:
s_6_29	languages/finnish.cc	/^#define s_6_29 /;"	d	file:
s_6_29	languages/french.cc	/^#define s_6_29 /;"	d	file:
s_6_29	languages/italian.cc	/^#define s_6_29 /;"	d	file:
s_6_29	languages/portuguese.cc	/^#define s_6_29 /;"	d	file:
s_6_29	languages/spanish.cc	/^#define s_6_29 /;"	d	file:
s_6_3	languages/english.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/finnish.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/french.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/hungarian.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/italian.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/kraaij_pohlmann.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/portuguese.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/spanish.cc	/^#define s_6_3 /;"	d	file:
s_6_3	languages/turkish.cc	/^#define s_6_3 /;"	d	file:
s_6_30	languages/french.cc	/^#define s_6_30 /;"	d	file:
s_6_30	languages/italian.cc	/^#define s_6_30 /;"	d	file:
s_6_30	languages/portuguese.cc	/^#define s_6_30 /;"	d	file:
s_6_30	languages/spanish.cc	/^#define s_6_30 /;"	d	file:
s_6_31	languages/french.cc	/^#define s_6_31 /;"	d	file:
s_6_31	languages/italian.cc	/^#define s_6_31 /;"	d	file:
s_6_31	languages/portuguese.cc	/^#define s_6_31 /;"	d	file:
s_6_31	languages/spanish.cc	/^#define s_6_31 /;"	d	file:
s_6_32	languages/french.cc	/^#define s_6_32 /;"	d	file:
s_6_32	languages/italian.cc	/^#define s_6_32 /;"	d	file:
s_6_32	languages/portuguese.cc	/^#define s_6_32 /;"	d	file:
s_6_32	languages/spanish.cc	/^#define s_6_32 /;"	d	file:
s_6_33	languages/french.cc	/^#define s_6_33 /;"	d	file:
s_6_33	languages/italian.cc	/^#define s_6_33 /;"	d	file:
s_6_33	languages/portuguese.cc	/^#define s_6_33 /;"	d	file:
s_6_33	languages/spanish.cc	/^#define s_6_33 /;"	d	file:
s_6_34	languages/french.cc	/^#define s_6_34 /;"	d	file:
s_6_34	languages/italian.cc	/^#define s_6_34 /;"	d	file:
s_6_34	languages/portuguese.cc	/^#define s_6_34 /;"	d	file:
s_6_34	languages/spanish.cc	/^#define s_6_34 /;"	d	file:
s_6_35	languages/french.cc	/^#define s_6_35 /;"	d	file:
s_6_35	languages/italian.cc	/^#define s_6_35 /;"	d	file:
s_6_35	languages/portuguese.cc	/^#define s_6_35 /;"	d	file:
s_6_35	languages/spanish.cc	/^#define s_6_35 /;"	d	file:
s_6_36	languages/french.cc	/^#define s_6_36 /;"	d	file:
s_6_36	languages/italian.cc	/^#define s_6_36 /;"	d	file:
s_6_36	languages/portuguese.cc	/^#define s_6_36 /;"	d	file:
s_6_36	languages/spanish.cc	/^#define s_6_36 /;"	d	file:
s_6_37	languages/french.cc	/^#define s_6_37 /;"	d	file:
s_6_37	languages/italian.cc	/^#define s_6_37 /;"	d	file:
s_6_37	languages/portuguese.cc	/^#define s_6_37 /;"	d	file:
s_6_37	languages/spanish.cc	/^#define s_6_37 /;"	d	file:
s_6_38	languages/italian.cc	/^#define s_6_38 /;"	d	file:
s_6_38	languages/portuguese.cc	/^#define s_6_38 /;"	d	file:
s_6_38	languages/spanish.cc	/^#define s_6_38 /;"	d	file:
s_6_39	languages/italian.cc	/^#define s_6_39 /;"	d	file:
s_6_39	languages/portuguese.cc	/^#define s_6_39 /;"	d	file:
s_6_39	languages/spanish.cc	/^#define s_6_39 /;"	d	file:
s_6_4	languages/english.cc	/^#define s_6_4 /;"	d	file:
s_6_4	languages/finnish.cc	/^#define s_6_4 /;"	d	file:
s_6_4	languages/french.cc	/^#define s_6_4 /;"	d	file:
s_6_4	languages/hungarian.cc	/^#define s_6_4 /;"	d	file:
s_6_4	languages/italian.cc	/^#define s_6_4 /;"	d	file:
s_6_4	languages/kraaij_pohlmann.cc	/^#define s_6_4 /;"	d	file:
s_6_4	languages/portuguese.cc	/^#define s_6_4 /;"	d	file:
s_6_4	languages/spanish.cc	/^#define s_6_4 /;"	d	file:
s_6_40	languages/italian.cc	/^#define s_6_40 /;"	d	file:
s_6_40	languages/portuguese.cc	/^#define s_6_40 /;"	d	file:
s_6_40	languages/spanish.cc	/^#define s_6_40 /;"	d	file:
s_6_41	languages/italian.cc	/^#define s_6_41 /;"	d	file:
s_6_41	languages/portuguese.cc	/^#define s_6_41 /;"	d	file:
s_6_41	languages/spanish.cc	/^#define s_6_41 /;"	d	file:
s_6_42	languages/italian.cc	/^#define s_6_42 /;"	d	file:
s_6_42	languages/portuguese.cc	/^#define s_6_42 /;"	d	file:
s_6_42	languages/spanish.cc	/^#define s_6_42 /;"	d	file:
s_6_43	languages/italian.cc	/^#define s_6_43 /;"	d	file:
s_6_43	languages/portuguese.cc	/^#define s_6_43 /;"	d	file:
s_6_43	languages/spanish.cc	/^#define s_6_43 /;"	d	file:
s_6_44	languages/italian.cc	/^#define s_6_44 /;"	d	file:
s_6_44	languages/portuguese.cc	/^#define s_6_44 /;"	d	file:
s_6_44	languages/spanish.cc	/^#define s_6_44 /;"	d	file:
s_6_45	languages/italian.cc	/^#define s_6_45 /;"	d	file:
s_6_45	languages/portuguese.cc	/^#define s_6_45 /;"	d	file:
s_6_45	languages/spanish.cc	/^#define s_6_45 /;"	d	file:
s_6_46	languages/italian.cc	/^#define s_6_46 /;"	d	file:
s_6_46	languages/portuguese.cc	/^#define s_6_46 /;"	d	file:
s_6_47	languages/italian.cc	/^#define s_6_47 /;"	d	file:
s_6_47	languages/portuguese.cc	/^#define s_6_47 /;"	d	file:
s_6_48	languages/italian.cc	/^#define s_6_48 /;"	d	file:
s_6_48	languages/portuguese.cc	/^#define s_6_48 /;"	d	file:
s_6_49	languages/italian.cc	/^#define s_6_49 /;"	d	file:
s_6_49	languages/portuguese.cc	/^#define s_6_49 /;"	d	file:
s_6_5	languages/english.cc	/^#define s_6_5 /;"	d	file:
s_6_5	languages/finnish.cc	/^#define s_6_5 /;"	d	file:
s_6_5	languages/french.cc	/^#define s_6_5 /;"	d	file:
s_6_5	languages/hungarian.cc	/^#define s_6_5 /;"	d	file:
s_6_5	languages/italian.cc	/^#define s_6_5 /;"	d	file:
s_6_5	languages/kraaij_pohlmann.cc	/^#define s_6_5 /;"	d	file:
s_6_5	languages/portuguese.cc	/^#define s_6_5 /;"	d	file:
s_6_5	languages/spanish.cc	/^#define s_6_5 /;"	d	file:
s_6_50	languages/italian.cc	/^#define s_6_50 /;"	d	file:
s_6_50	languages/portuguese.cc	/^#define s_6_50 /;"	d	file:
s_6_51	languages/portuguese.cc	/^#define s_6_51 /;"	d	file:
s_6_52	languages/portuguese.cc	/^#define s_6_52 /;"	d	file:
s_6_53	languages/portuguese.cc	/^#define s_6_53 /;"	d	file:
s_6_54	languages/portuguese.cc	/^#define s_6_54 /;"	d	file:
s_6_55	languages/portuguese.cc	/^#define s_6_55 /;"	d	file:
s_6_56	languages/portuguese.cc	/^#define s_6_56 /;"	d	file:
s_6_57	languages/portuguese.cc	/^#define s_6_57 /;"	d	file:
s_6_58	languages/portuguese.cc	/^#define s_6_58 /;"	d	file:
s_6_59	languages/portuguese.cc	/^#define s_6_59 /;"	d	file:
s_6_6	languages/english.cc	/^#define s_6_6 /;"	d	file:
s_6_6	languages/finnish.cc	/^#define s_6_6 /;"	d	file:
s_6_6	languages/french.cc	/^#define s_6_6 /;"	d	file:
s_6_6	languages/italian.cc	/^#define s_6_6 /;"	d	file:
s_6_6	languages/kraaij_pohlmann.cc	/^#define s_6_6 /;"	d	file:
s_6_6	languages/portuguese.cc	/^#define s_6_6 /;"	d	file:
s_6_6	languages/spanish.cc	/^#define s_6_6 /;"	d	file:
s_6_60	languages/portuguese.cc	/^#define s_6_60 /;"	d	file:
s_6_61	languages/portuguese.cc	/^#define s_6_61 /;"	d	file:
s_6_62	languages/portuguese.cc	/^#define s_6_62 /;"	d	file:
s_6_63	languages/portuguese.cc	/^#define s_6_63 /;"	d	file:
s_6_64	languages/portuguese.cc	/^#define s_6_64 /;"	d	file:
s_6_65	languages/portuguese.cc	/^#define s_6_65 /;"	d	file:
s_6_66	languages/portuguese.cc	/^#define s_6_66 /;"	d	file:
s_6_67	languages/portuguese.cc	/^#define s_6_67 /;"	d	file:
s_6_68	languages/portuguese.cc	/^#define s_6_68 /;"	d	file:
s_6_69	languages/portuguese.cc	/^#define s_6_69 /;"	d	file:
s_6_7	languages/english.cc	/^#define s_6_7 /;"	d	file:
s_6_7	languages/finnish.cc	/^#define s_6_7 /;"	d	file:
s_6_7	languages/french.cc	/^#define s_6_7 /;"	d	file:
s_6_7	languages/italian.cc	/^#define s_6_7 /;"	d	file:
s_6_7	languages/kraaij_pohlmann.cc	/^#define s_6_7 /;"	d	file:
s_6_7	languages/portuguese.cc	/^#define s_6_7 /;"	d	file:
s_6_7	languages/spanish.cc	/^#define s_6_7 /;"	d	file:
s_6_70	languages/portuguese.cc	/^#define s_6_70 /;"	d	file:
s_6_71	languages/portuguese.cc	/^#define s_6_71 /;"	d	file:
s_6_72	languages/portuguese.cc	/^#define s_6_72 /;"	d	file:
s_6_73	languages/portuguese.cc	/^#define s_6_73 /;"	d	file:
s_6_74	languages/portuguese.cc	/^#define s_6_74 /;"	d	file:
s_6_75	languages/portuguese.cc	/^#define s_6_75 /;"	d	file:
s_6_76	languages/portuguese.cc	/^#define s_6_76 /;"	d	file:
s_6_77	languages/portuguese.cc	/^#define s_6_77 /;"	d	file:
s_6_78	languages/portuguese.cc	/^#define s_6_78 /;"	d	file:
s_6_79	languages/portuguese.cc	/^#define s_6_79 /;"	d	file:
s_6_8	languages/english.cc	/^#define s_6_8 /;"	d	file:
s_6_8	languages/finnish.cc	/^#define s_6_8 /;"	d	file:
s_6_8	languages/french.cc	/^#define s_6_8 /;"	d	file:
s_6_8	languages/italian.cc	/^#define s_6_8 /;"	d	file:
s_6_8	languages/kraaij_pohlmann.cc	/^#define s_6_8 /;"	d	file:
s_6_8	languages/portuguese.cc	/^#define s_6_8 /;"	d	file:
s_6_8	languages/spanish.cc	/^#define s_6_8 /;"	d	file:
s_6_80	languages/portuguese.cc	/^#define s_6_80 /;"	d	file:
s_6_81	languages/portuguese.cc	/^#define s_6_81 /;"	d	file:
s_6_82	languages/portuguese.cc	/^#define s_6_82 /;"	d	file:
s_6_83	languages/portuguese.cc	/^#define s_6_83 /;"	d	file:
s_6_84	languages/portuguese.cc	/^#define s_6_84 /;"	d	file:
s_6_85	languages/portuguese.cc	/^#define s_6_85 /;"	d	file:
s_6_86	languages/portuguese.cc	/^#define s_6_86 /;"	d	file:
s_6_87	languages/portuguese.cc	/^#define s_6_87 /;"	d	file:
s_6_88	languages/portuguese.cc	/^#define s_6_88 /;"	d	file:
s_6_89	languages/portuguese.cc	/^#define s_6_89 /;"	d	file:
s_6_9	languages/finnish.cc	/^#define s_6_9 /;"	d	file:
s_6_9	languages/french.cc	/^#define s_6_9 /;"	d	file:
s_6_9	languages/italian.cc	/^#define s_6_9 /;"	d	file:
s_6_9	languages/kraaij_pohlmann.cc	/^#define s_6_9 /;"	d	file:
s_6_9	languages/portuguese.cc	/^#define s_6_9 /;"	d	file:
s_6_9	languages/spanish.cc	/^#define s_6_9 /;"	d	file:
s_6_90	languages/portuguese.cc	/^#define s_6_90 /;"	d	file:
s_6_91	languages/portuguese.cc	/^#define s_6_91 /;"	d	file:
s_6_92	languages/portuguese.cc	/^#define s_6_92 /;"	d	file:
s_6_93	languages/portuguese.cc	/^#define s_6_93 /;"	d	file:
s_6_94	languages/portuguese.cc	/^#define s_6_94 /;"	d	file:
s_6_95	languages/portuguese.cc	/^#define s_6_95 /;"	d	file:
s_6_96	languages/portuguese.cc	/^#define s_6_96 /;"	d	file:
s_6_97	languages/portuguese.cc	/^#define s_6_97 /;"	d	file:
s_6_98	languages/portuguese.cc	/^#define s_6_98 /;"	d	file:
s_6_99	languages/portuguese.cc	/^#define s_6_99 /;"	d	file:
s_7	languages/dutch.cc	/^static const symbol s_7[] = { 'Y' };$/;"	v	file:
s_7	languages/english.cc	/^static const symbol s_7[] = { 'e' };$/;"	v	file:
s_7	languages/french.cc	/^static const symbol s_7[] = { 'y' };$/;"	v	file:
s_7	languages/german.cc	/^static const symbol s_7[] = { 'o' };$/;"	v	file:
s_7	languages/german2.cc	/^static const symbol s_7[] = { 'u' };$/;"	v	file:
s_7	languages/hungarian.cc	/^static const symbol s_7[] = { 'a' };$/;"	v	file:
s_7	languages/italian.cc	/^static const symbol s_7[] = { 'I' };$/;"	v	file:
s_7	languages/kraaij_pohlmann.cc	/^static const symbol s_7[] = { 'a', 'u' };$/;"	v	file:
s_7	languages/lovins.cc	/^static const symbol s_7[] = { 'u', 'm' };$/;"	v	file:
s_7	languages/porter.cc	/^static const symbol s_7[] = { 'e', 'n', 'c', 'e' };$/;"	v	file:
s_7	languages/portuguese.cc	/^static const symbol s_7[] = { 'a', 't' };$/;"	v	file:
s_7	languages/romanian.cc	/^static const symbol s_7[] = { 'a', 'b' };$/;"	v	file:
s_7	languages/russian.cc	/^static const symbol s_7[] = { 0xD0, 0xBD };$/;"	v	file:
s_7	languages/spanish.cc	/^static const symbol s_7[] = { 'a', 'r' };$/;"	v	file:
s_7	languages/turkish.cc	/^static const symbol s_7[] = { 't' };$/;"	v	file:
s_70	languages/kraaij_pohlmann.cc	/^static const symbol s_70[] = { 'i', 'j' };$/;"	v	file:
s_71	languages/kraaij_pohlmann.cc	/^static const symbol s_71[] = { 'i', 'j' };$/;"	v	file:
s_72	languages/kraaij_pohlmann.cc	/^static const symbol s_72[] = { 'Y' };$/;"	v	file:
s_73	languages/kraaij_pohlmann.cc	/^static const symbol s_73[] = { 'Y' };$/;"	v	file:
s_74	languages/kraaij_pohlmann.cc	/^static const symbol s_74[] = { 'y' };$/;"	v	file:
s_7_0	languages/english.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/finnish.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/french.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/hungarian.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/italian.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/kraaij_pohlmann.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/portuguese.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/russian.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/spanish.cc	/^#define s_7_0 /;"	d	file:
s_7_0	languages/turkish.cc	/^#define s_7_0 /;"	d	file:
s_7_1	languages/english.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/finnish.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/french.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/hungarian.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/italian.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/kraaij_pohlmann.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/portuguese.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/russian.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/spanish.cc	/^#define s_7_1 /;"	d	file:
s_7_1	languages/turkish.cc	/^#define s_7_1 /;"	d	file:
s_7_10	languages/english.cc	/^#define s_7_10 /;"	d	file:
s_7_10	languages/finnish.cc	/^#define s_7_10 /;"	d	file:
s_7_10	languages/italian.cc	/^#define s_7_10 /;"	d	file:
s_7_10	languages/spanish.cc	/^#define s_7_10 /;"	d	file:
s_7_11	languages/english.cc	/^#define s_7_11 /;"	d	file:
s_7_11	languages/finnish.cc	/^#define s_7_11 /;"	d	file:
s_7_11	languages/italian.cc	/^#define s_7_11 /;"	d	file:
s_7_11	languages/spanish.cc	/^#define s_7_11 /;"	d	file:
s_7_12	languages/english.cc	/^#define s_7_12 /;"	d	file:
s_7_12	languages/finnish.cc	/^#define s_7_12 /;"	d	file:
s_7_12	languages/italian.cc	/^#define s_7_12 /;"	d	file:
s_7_13	languages/english.cc	/^#define s_7_13 /;"	d	file:
s_7_13	languages/finnish.cc	/^#define s_7_13 /;"	d	file:
s_7_13	languages/italian.cc	/^#define s_7_13 /;"	d	file:
s_7_14	languages/english.cc	/^#define s_7_14 /;"	d	file:
s_7_14	languages/italian.cc	/^#define s_7_14 /;"	d	file:
s_7_15	languages/english.cc	/^#define s_7_15 /;"	d	file:
s_7_15	languages/italian.cc	/^#define s_7_15 /;"	d	file:
s_7_16	languages/english.cc	/^#define s_7_16 /;"	d	file:
s_7_16	languages/italian.cc	/^#define s_7_16 /;"	d	file:
s_7_17	languages/english.cc	/^#define s_7_17 /;"	d	file:
s_7_17	languages/italian.cc	/^#define s_7_17 /;"	d	file:
s_7_18	languages/italian.cc	/^#define s_7_18 /;"	d	file:
s_7_19	languages/italian.cc	/^#define s_7_19 /;"	d	file:
s_7_2	languages/english.cc	/^#define s_7_2 /;"	d	file:
s_7_2	languages/finnish.cc	/^#define s_7_2 /;"	d	file:
s_7_2	languages/french.cc	/^#define s_7_2 /;"	d	file:
s_7_2	languages/italian.cc	/^#define s_7_2 /;"	d	file:
s_7_2	languages/portuguese.cc	/^#define s_7_2 /;"	d	file:
s_7_2	languages/russian.cc	/^#define s_7_2 /;"	d	file:
s_7_2	languages/spanish.cc	/^#define s_7_2 /;"	d	file:
s_7_20	languages/italian.cc	/^#define s_7_20 /;"	d	file:
s_7_21	languages/italian.cc	/^#define s_7_21 /;"	d	file:
s_7_22	languages/italian.cc	/^#define s_7_22 /;"	d	file:
s_7_23	languages/italian.cc	/^#define s_7_23 /;"	d	file:
s_7_24	languages/italian.cc	/^#define s_7_24 /;"	d	file:
s_7_25	languages/italian.cc	/^#define s_7_25 /;"	d	file:
s_7_26	languages/italian.cc	/^#define s_7_26 /;"	d	file:
s_7_27	languages/italian.cc	/^#define s_7_27 /;"	d	file:
s_7_28	languages/italian.cc	/^#define s_7_28 /;"	d	file:
s_7_29	languages/italian.cc	/^#define s_7_29 /;"	d	file:
s_7_3	languages/english.cc	/^#define s_7_3 /;"	d	file:
s_7_3	languages/finnish.cc	/^#define s_7_3 /;"	d	file:
s_7_3	languages/french.cc	/^#define s_7_3 /;"	d	file:
s_7_3	languages/italian.cc	/^#define s_7_3 /;"	d	file:
s_7_3	languages/portuguese.cc	/^#define s_7_3 /;"	d	file:
s_7_3	languages/russian.cc	/^#define s_7_3 /;"	d	file:
s_7_3	languages/spanish.cc	/^#define s_7_3 /;"	d	file:
s_7_30	languages/italian.cc	/^#define s_7_30 /;"	d	file:
s_7_31	languages/italian.cc	/^#define s_7_31 /;"	d	file:
s_7_32	languages/italian.cc	/^#define s_7_32 /;"	d	file:
s_7_33	languages/italian.cc	/^#define s_7_33 /;"	d	file:
s_7_34	languages/italian.cc	/^#define s_7_34 /;"	d	file:
s_7_35	languages/italian.cc	/^#define s_7_35 /;"	d	file:
s_7_36	languages/italian.cc	/^#define s_7_36 /;"	d	file:
s_7_37	languages/italian.cc	/^#define s_7_37 /;"	d	file:
s_7_38	languages/italian.cc	/^#define s_7_38 /;"	d	file:
s_7_39	languages/italian.cc	/^#define s_7_39 /;"	d	file:
s_7_4	languages/english.cc	/^#define s_7_4 /;"	d	file:
s_7_4	languages/finnish.cc	/^#define s_7_4 /;"	d	file:
s_7_4	languages/french.cc	/^#define s_7_4 /;"	d	file:
s_7_4	languages/italian.cc	/^#define s_7_4 /;"	d	file:
s_7_4	languages/portuguese.cc	/^#define s_7_4 /;"	d	file:
s_7_4	languages/spanish.cc	/^#define s_7_4 /;"	d	file:
s_7_40	languages/italian.cc	/^#define s_7_40 /;"	d	file:
s_7_41	languages/italian.cc	/^#define s_7_41 /;"	d	file:
s_7_42	languages/italian.cc	/^#define s_7_42 /;"	d	file:
s_7_43	languages/italian.cc	/^#define s_7_43 /;"	d	file:
s_7_44	languages/italian.cc	/^#define s_7_44 /;"	d	file:
s_7_45	languages/italian.cc	/^#define s_7_45 /;"	d	file:
s_7_46	languages/italian.cc	/^#define s_7_46 /;"	d	file:
s_7_47	languages/italian.cc	/^#define s_7_47 /;"	d	file:
s_7_48	languages/italian.cc	/^#define s_7_48 /;"	d	file:
s_7_49	languages/italian.cc	/^#define s_7_49 /;"	d	file:
s_7_5	languages/english.cc	/^#define s_7_5 /;"	d	file:
s_7_5	languages/finnish.cc	/^#define s_7_5 /;"	d	file:
s_7_5	languages/french.cc	/^#define s_7_5 /;"	d	file:
s_7_5	languages/italian.cc	/^#define s_7_5 /;"	d	file:
s_7_5	languages/portuguese.cc	/^#define s_7_5 /;"	d	file:
s_7_5	languages/spanish.cc	/^#define s_7_5 /;"	d	file:
s_7_50	languages/italian.cc	/^#define s_7_50 /;"	d	file:
s_7_51	languages/italian.cc	/^#define s_7_51 /;"	d	file:
s_7_52	languages/italian.cc	/^#define s_7_52 /;"	d	file:
s_7_53	languages/italian.cc	/^#define s_7_53 /;"	d	file:
s_7_54	languages/italian.cc	/^#define s_7_54 /;"	d	file:
s_7_55	languages/italian.cc	/^#define s_7_55 /;"	d	file:
s_7_56	languages/italian.cc	/^#define s_7_56 /;"	d	file:
s_7_57	languages/italian.cc	/^#define s_7_57 /;"	d	file:
s_7_58	languages/italian.cc	/^#define s_7_58 /;"	d	file:
s_7_59	languages/italian.cc	/^#define s_7_59 /;"	d	file:
s_7_6	languages/english.cc	/^#define s_7_6 /;"	d	file:
s_7_6	languages/finnish.cc	/^#define s_7_6 /;"	d	file:
s_7_6	languages/french.cc	/^#define s_7_6 /;"	d	file:
s_7_6	languages/italian.cc	/^#define s_7_6 /;"	d	file:
s_7_6	languages/portuguese.cc	/^#define s_7_6 /;"	d	file:
s_7_6	languages/spanish.cc	/^#define s_7_6 /;"	d	file:
s_7_60	languages/italian.cc	/^#define s_7_60 /;"	d	file:
s_7_61	languages/italian.cc	/^#define s_7_61 /;"	d	file:
s_7_62	languages/italian.cc	/^#define s_7_62 /;"	d	file:
s_7_63	languages/italian.cc	/^#define s_7_63 /;"	d	file:
s_7_64	languages/italian.cc	/^#define s_7_64 /;"	d	file:
s_7_65	languages/italian.cc	/^#define s_7_65 /;"	d	file:
s_7_66	languages/italian.cc	/^#define s_7_66 /;"	d	file:
s_7_67	languages/italian.cc	/^#define s_7_67 /;"	d	file:
s_7_68	languages/italian.cc	/^#define s_7_68 /;"	d	file:
s_7_69	languages/italian.cc	/^#define s_7_69 /;"	d	file:
s_7_7	languages/english.cc	/^#define s_7_7 /;"	d	file:
s_7_7	languages/finnish.cc	/^#define s_7_7 /;"	d	file:
s_7_7	languages/italian.cc	/^#define s_7_7 /;"	d	file:
s_7_7	languages/spanish.cc	/^#define s_7_7 /;"	d	file:
s_7_70	languages/italian.cc	/^#define s_7_70 /;"	d	file:
s_7_71	languages/italian.cc	/^#define s_7_71 /;"	d	file:
s_7_72	languages/italian.cc	/^#define s_7_72 /;"	d	file:
s_7_73	languages/italian.cc	/^#define s_7_73 /;"	d	file:
s_7_74	languages/italian.cc	/^#define s_7_74 /;"	d	file:
s_7_75	languages/italian.cc	/^#define s_7_75 /;"	d	file:
s_7_76	languages/italian.cc	/^#define s_7_76 /;"	d	file:
s_7_77	languages/italian.cc	/^#define s_7_77 /;"	d	file:
s_7_78	languages/italian.cc	/^#define s_7_78 /;"	d	file:
s_7_79	languages/italian.cc	/^#define s_7_79 /;"	d	file:
s_7_8	languages/english.cc	/^#define s_7_8 /;"	d	file:
s_7_8	languages/finnish.cc	/^#define s_7_8 /;"	d	file:
s_7_8	languages/italian.cc	/^#define s_7_8 /;"	d	file:
s_7_8	languages/spanish.cc	/^#define s_7_8 /;"	d	file:
s_7_80	languages/italian.cc	/^#define s_7_80 /;"	d	file:
s_7_81	languages/italian.cc	/^#define s_7_81 /;"	d	file:
s_7_82	languages/italian.cc	/^#define s_7_82 /;"	d	file:
s_7_83	languages/italian.cc	/^#define s_7_83 /;"	d	file:
s_7_84	languages/italian.cc	/^#define s_7_84 /;"	d	file:
s_7_85	languages/italian.cc	/^#define s_7_85 /;"	d	file:
s_7_86	languages/italian.cc	/^#define s_7_86 /;"	d	file:
s_7_9	languages/english.cc	/^#define s_7_9 /;"	d	file:
s_7_9	languages/finnish.cc	/^#define s_7_9 /;"	d	file:
s_7_9	languages/italian.cc	/^#define s_7_9 /;"	d	file:
s_7_9	languages/spanish.cc	/^#define s_7_9 /;"	d	file:
s_8	languages/dutch.cc	/^static const symbol s_8[] = { 'y' };$/;"	v	file:
s_8	languages/english.cc	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	languages/french.cc	/^static const symbol s_8[] = { 'i', 'c' };$/;"	v	file:
s_8	languages/german.cc	/^static const symbol s_8[] = { 'u' };$/;"	v	file:
s_8	languages/german2.cc	/^static const symbol s_8[] = { 'a' };$/;"	v	file:
s_8	languages/hungarian.cc	/^static const symbol s_8[] = { 'e' };$/;"	v	file:
s_8	languages/italian.cc	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	languages/kraaij_pohlmann.cc	/^static const symbol s_8[] = { 'h', 'e', 'd' };$/;"	v	file:
s_8	languages/lovins.cc	/^static const symbol s_8[] = { 'r', 'b' };$/;"	v	file:
s_8	languages/porter.cc	/^static const symbol s_8[] = { 'a', 'n', 'c', 'e' };$/;"	v	file:
s_8	languages/portuguese.cc	/^static const symbol s_8[] = { 'a', 't' };$/;"	v	file:
s_8	languages/romanian.cc	/^static const symbol s_8[] = { 'i' };$/;"	v	file:
s_8	languages/russian.cc	/^static const symbol s_8[] = { 0xD0, 0xBD };$/;"	v	file:
s_8	languages/spanish.cc	/^static const symbol s_8[] = { 'e', 'r' };$/;"	v	file:
s_8	languages/turkish.cc	/^static const symbol s_8[] = { 'k' };$/;"	v	file:
s_8_0	languages/english.cc	/^#define s_8_0 /;"	d	file:
s_8_0	languages/finnish.cc	/^#define s_8_0 /;"	d	file:
s_8_0	languages/french.cc	/^#define s_8_0 /;"	d	file:
s_8_0	languages/hungarian.cc	/^#define s_8_0 /;"	d	file:
s_8_0	languages/portuguese.cc	/^#define s_8_0 /;"	d	file:
s_8_0	languages/spanish.cc	/^#define s_8_0 /;"	d	file:
s_8_0	languages/turkish.cc	/^#define s_8_0 /;"	d	file:
s_8_1	languages/english.cc	/^#define s_8_1 /;"	d	file:
s_8_1	languages/finnish.cc	/^#define s_8_1 /;"	d	file:
s_8_1	languages/french.cc	/^#define s_8_1 /;"	d	file:
s_8_1	languages/hungarian.cc	/^#define s_8_1 /;"	d	file:
s_8_1	languages/portuguese.cc	/^#define s_8_1 /;"	d	file:
s_8_1	languages/spanish.cc	/^#define s_8_1 /;"	d	file:
s_8_1	languages/turkish.cc	/^#define s_8_1 /;"	d	file:
s_8_10	languages/spanish.cc	/^#define s_8_10 /;"	d	file:
s_8_11	languages/spanish.cc	/^#define s_8_11 /;"	d	file:
s_8_12	languages/spanish.cc	/^#define s_8_12 /;"	d	file:
s_8_13	languages/spanish.cc	/^#define s_8_13 /;"	d	file:
s_8_14	languages/spanish.cc	/^#define s_8_14 /;"	d	file:
s_8_15	languages/spanish.cc	/^#define s_8_15 /;"	d	file:
s_8_16	languages/spanish.cc	/^#define s_8_16 /;"	d	file:
s_8_17	languages/spanish.cc	/^#define s_8_17 /;"	d	file:
s_8_18	languages/spanish.cc	/^#define s_8_18 /;"	d	file:
s_8_19	languages/spanish.cc	/^#define s_8_19 /;"	d	file:
s_8_2	languages/french.cc	/^#define s_8_2 /;"	d	file:
s_8_2	languages/hungarian.cc	/^#define s_8_2 /;"	d	file:
s_8_2	languages/portuguese.cc	/^#define s_8_2 /;"	d	file:
s_8_2	languages/spanish.cc	/^#define s_8_2 /;"	d	file:
s_8_2	languages/turkish.cc	/^#define s_8_2 /;"	d	file:
s_8_20	languages/spanish.cc	/^#define s_8_20 /;"	d	file:
s_8_21	languages/spanish.cc	/^#define s_8_21 /;"	d	file:
s_8_22	languages/spanish.cc	/^#define s_8_22 /;"	d	file:
s_8_23	languages/spanish.cc	/^#define s_8_23 /;"	d	file:
s_8_24	languages/spanish.cc	/^#define s_8_24 /;"	d	file:
s_8_25	languages/spanish.cc	/^#define s_8_25 /;"	d	file:
s_8_26	languages/spanish.cc	/^#define s_8_26 /;"	d	file:
s_8_27	languages/spanish.cc	/^#define s_8_27 /;"	d	file:
s_8_28	languages/spanish.cc	/^#define s_8_28 /;"	d	file:
s_8_29	languages/spanish.cc	/^#define s_8_29 /;"	d	file:
s_8_3	languages/french.cc	/^#define s_8_3 /;"	d	file:
s_8_3	languages/hungarian.cc	/^#define s_8_3 /;"	d	file:
s_8_3	languages/portuguese.cc	/^#define s_8_3 /;"	d	file:
s_8_3	languages/spanish.cc	/^#define s_8_3 /;"	d	file:
s_8_3	languages/turkish.cc	/^#define s_8_3 /;"	d	file:
s_8_30	languages/spanish.cc	/^#define s_8_30 /;"	d	file:
s_8_31	languages/spanish.cc	/^#define s_8_31 /;"	d	file:
s_8_32	languages/spanish.cc	/^#define s_8_32 /;"	d	file:
s_8_33	languages/spanish.cc	/^#define s_8_33 /;"	d	file:
s_8_34	languages/spanish.cc	/^#define s_8_34 /;"	d	file:
s_8_35	languages/spanish.cc	/^#define s_8_35 /;"	d	file:
s_8_36	languages/spanish.cc	/^#define s_8_36 /;"	d	file:
s_8_37	languages/spanish.cc	/^#define s_8_37 /;"	d	file:
s_8_38	languages/spanish.cc	/^#define s_8_38 /;"	d	file:
s_8_39	languages/spanish.cc	/^#define s_8_39 /;"	d	file:
s_8_4	languages/french.cc	/^#define s_8_4 /;"	d	file:
s_8_4	languages/hungarian.cc	/^#define s_8_4 /;"	d	file:
s_8_4	languages/spanish.cc	/^#define s_8_4 /;"	d	file:
s_8_40	languages/spanish.cc	/^#define s_8_40 /;"	d	file:
s_8_41	languages/spanish.cc	/^#define s_8_41 /;"	d	file:
s_8_42	languages/spanish.cc	/^#define s_8_42 /;"	d	file:
s_8_43	languages/spanish.cc	/^#define s_8_43 /;"	d	file:
s_8_44	languages/spanish.cc	/^#define s_8_44 /;"	d	file:
s_8_45	languages/spanish.cc	/^#define s_8_45 /;"	d	file:
s_8_46	languages/spanish.cc	/^#define s_8_46 /;"	d	file:
s_8_47	languages/spanish.cc	/^#define s_8_47 /;"	d	file:
s_8_48	languages/spanish.cc	/^#define s_8_48 /;"	d	file:
s_8_49	languages/spanish.cc	/^#define s_8_49 /;"	d	file:
s_8_5	languages/hungarian.cc	/^#define s_8_5 /;"	d	file:
s_8_5	languages/spanish.cc	/^#define s_8_5 /;"	d	file:
s_8_50	languages/spanish.cc	/^#define s_8_50 /;"	d	file:
s_8_51	languages/spanish.cc	/^#define s_8_51 /;"	d	file:
s_8_52	languages/spanish.cc	/^#define s_8_52 /;"	d	file:
s_8_53	languages/spanish.cc	/^#define s_8_53 /;"	d	file:
s_8_54	languages/spanish.cc	/^#define s_8_54 /;"	d	file:
s_8_55	languages/spanish.cc	/^#define s_8_55 /;"	d	file:
s_8_56	languages/spanish.cc	/^#define s_8_56 /;"	d	file:
s_8_57	languages/spanish.cc	/^#define s_8_57 /;"	d	file:
s_8_58	languages/spanish.cc	/^#define s_8_58 /;"	d	file:
s_8_59	languages/spanish.cc	/^#define s_8_59 /;"	d	file:
s_8_6	languages/hungarian.cc	/^#define s_8_6 /;"	d	file:
s_8_6	languages/spanish.cc	/^#define s_8_6 /;"	d	file:
s_8_60	languages/spanish.cc	/^#define s_8_60 /;"	d	file:
s_8_61	languages/spanish.cc	/^#define s_8_61 /;"	d	file:
s_8_62	languages/spanish.cc	/^#define s_8_62 /;"	d	file:
s_8_63	languages/spanish.cc	/^#define s_8_63 /;"	d	file:
s_8_64	languages/spanish.cc	/^#define s_8_64 /;"	d	file:
s_8_65	languages/spanish.cc	/^#define s_8_65 /;"	d	file:
s_8_66	languages/spanish.cc	/^#define s_8_66 /;"	d	file:
s_8_67	languages/spanish.cc	/^#define s_8_67 /;"	d	file:
s_8_68	languages/spanish.cc	/^#define s_8_68 /;"	d	file:
s_8_69	languages/spanish.cc	/^#define s_8_69 /;"	d	file:
s_8_7	languages/spanish.cc	/^#define s_8_7 /;"	d	file:
s_8_70	languages/spanish.cc	/^#define s_8_70 /;"	d	file:
s_8_71	languages/spanish.cc	/^#define s_8_71 /;"	d	file:
s_8_72	languages/spanish.cc	/^#define s_8_72 /;"	d	file:
s_8_73	languages/spanish.cc	/^#define s_8_73 /;"	d	file:
s_8_74	languages/spanish.cc	/^#define s_8_74 /;"	d	file:
s_8_75	languages/spanish.cc	/^#define s_8_75 /;"	d	file:
s_8_76	languages/spanish.cc	/^#define s_8_76 /;"	d	file:
s_8_77	languages/spanish.cc	/^#define s_8_77 /;"	d	file:
s_8_78	languages/spanish.cc	/^#define s_8_78 /;"	d	file:
s_8_79	languages/spanish.cc	/^#define s_8_79 /;"	d	file:
s_8_8	languages/spanish.cc	/^#define s_8_8 /;"	d	file:
s_8_80	languages/spanish.cc	/^#define s_8_80 /;"	d	file:
s_8_81	languages/spanish.cc	/^#define s_8_81 /;"	d	file:
s_8_82	languages/spanish.cc	/^#define s_8_82 /;"	d	file:
s_8_83	languages/spanish.cc	/^#define s_8_83 /;"	d	file:
s_8_84	languages/spanish.cc	/^#define s_8_84 /;"	d	file:
s_8_85	languages/spanish.cc	/^#define s_8_85 /;"	d	file:
s_8_86	languages/spanish.cc	/^#define s_8_86 /;"	d	file:
s_8_87	languages/spanish.cc	/^#define s_8_87 /;"	d	file:
s_8_88	languages/spanish.cc	/^#define s_8_88 /;"	d	file:
s_8_89	languages/spanish.cc	/^#define s_8_89 /;"	d	file:
s_8_9	languages/spanish.cc	/^#define s_8_9 /;"	d	file:
s_8_90	languages/spanish.cc	/^#define s_8_90 /;"	d	file:
s_8_91	languages/spanish.cc	/^#define s_8_91 /;"	d	file:
s_8_92	languages/spanish.cc	/^#define s_8_92 /;"	d	file:
s_8_93	languages/spanish.cc	/^#define s_8_93 /;"	d	file:
s_8_94	languages/spanish.cc	/^#define s_8_94 /;"	d	file:
s_8_95	languages/spanish.cc	/^#define s_8_95 /;"	d	file:
s_9	languages/dutch.cc	/^static const symbol s_9[] = { 'i' };$/;"	v	file:
s_9	languages/english.cc	/^static const symbol s_9[] = { 't', 'i', 'o', 'n' };$/;"	v	file:
s_9	languages/french.cc	/^static const symbol s_9[] = { 'i', 'q', 'U' };$/;"	v	file:
s_9	languages/german.cc	/^static const symbol s_9[] = { 'n', 'i', 's' };$/;"	v	file:
s_9	languages/german2.cc	/^static const symbol s_9[] = { 'o' };$/;"	v	file:
s_9	languages/hungarian.cc	/^static const symbol s_9[] = { 'e' };$/;"	v	file:
s_9	languages/italian.cc	/^static const symbol s_9[] = { 'u' };$/;"	v	file:
s_9	languages/kraaij_pohlmann.cc	/^static const symbol s_9[] = { 'h', 'e', 'i', 'd' };$/;"	v	file:
s_9	languages/lovins.cc	/^static const symbol s_9[] = { 'u', 'r' };$/;"	v	file:
s_9	languages/porter.cc	/^static const symbol s_9[] = { 'a', 'b', 'l', 'e' };$/;"	v	file:
s_9	languages/portuguese.cc	/^static const symbol s_9[] = { 'i', 'r' };$/;"	v	file:
s_9	languages/romanian.cc	/^static const symbol s_9[] = { 'a', 't' };$/;"	v	file:
s_9	languages/russian.cc	/^static const symbol s_9[] = { 0xD0, 0xB8 };$/;"	v	file:
s_9	languages/spanish.cc	/^static const symbol s_9[] = { 'i', 'r' };$/;"	v	file:
s_9	languages/turkish.cc	/^static const symbol s_9[] = { 0xC4, 0xB1 };$/;"	v	file:
s_9_0	languages/english.cc	/^#define s_9_0 /;"	d	file:
s_9_0	languages/finnish.cc	/^#define s_9_0 /;"	d	file:
s_9_0	languages/hungarian.cc	/^#define s_9_0 /;"	d	file:
s_9_0	languages/spanish.cc	/^#define s_9_0 /;"	d	file:
s_9_0	languages/turkish.cc	/^#define s_9_0 /;"	d	file:
s_9_1	languages/english.cc	/^#define s_9_1 /;"	d	file:
s_9_1	languages/finnish.cc	/^#define s_9_1 /;"	d	file:
s_9_1	languages/hungarian.cc	/^#define s_9_1 /;"	d	file:
s_9_1	languages/spanish.cc	/^#define s_9_1 /;"	d	file:
s_9_1	languages/turkish.cc	/^#define s_9_1 /;"	d	file:
s_9_10	languages/hungarian.cc	/^#define s_9_10 /;"	d	file:
s_9_11	languages/hungarian.cc	/^#define s_9_11 /;"	d	file:
s_9_2	languages/english.cc	/^#define s_9_2 /;"	d	file:
s_9_2	languages/hungarian.cc	/^#define s_9_2 /;"	d	file:
s_9_2	languages/spanish.cc	/^#define s_9_2 /;"	d	file:
s_9_3	languages/english.cc	/^#define s_9_3 /;"	d	file:
s_9_3	languages/hungarian.cc	/^#define s_9_3 /;"	d	file:
s_9_3	languages/spanish.cc	/^#define s_9_3 /;"	d	file:
s_9_4	languages/english.cc	/^#define s_9_4 /;"	d	file:
s_9_4	languages/hungarian.cc	/^#define s_9_4 /;"	d	file:
s_9_4	languages/spanish.cc	/^#define s_9_4 /;"	d	file:
s_9_5	languages/english.cc	/^#define s_9_5 /;"	d	file:
s_9_5	languages/hungarian.cc	/^#define s_9_5 /;"	d	file:
s_9_5	languages/spanish.cc	/^#define s_9_5 /;"	d	file:
s_9_6	languages/english.cc	/^#define s_9_6 /;"	d	file:
s_9_6	languages/hungarian.cc	/^#define s_9_6 /;"	d	file:
s_9_6	languages/spanish.cc	/^#define s_9_6 /;"	d	file:
s_9_7	languages/english.cc	/^#define s_9_7 /;"	d	file:
s_9_7	languages/hungarian.cc	/^#define s_9_7 /;"	d	file:
s_9_7	languages/spanish.cc	/^#define s_9_7 /;"	d	file:
s_9_8	languages/hungarian.cc	/^#define s_9_8 /;"	d	file:
s_9_9	languages/hungarian.cc	/^#define s_9_9 /;"	d	file:
s_options	queryparser/lemon.c	/^struct s_options {$/;"	s	file:
s_pool	languages/danish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/dutch.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/english.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/finnish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/french.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/german.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/german2.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/hungarian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/italian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/kraaij_pohlmann.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/lovins.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/norwegian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/porter.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/portuguese.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/romanian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/russian.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/spanish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/swedish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_pool	languages/turkish.cc	/^static const symbol s_pool[] = {$/;"	v	file:
s_size	languages/compiler/tokeniser.c	/^    int s_size;   \/* size of system word *\/$/;"	m	struct:system_word	file:
s_size	languages/steminternal.h	/^    int s_size;		\/* length of search string (in symbols) *\/$/;"	m	struct:among
s_x1	queryparser/lemon.c	/^struct s_x1 {$/;"	s	file:
s_x1node	queryparser/lemon.c	/^typedef struct s_x1node {$/;"	s	file:
s_x2	queryparser/lemon.c	/^struct s_x2 {$/;"	s	file:
s_x2node	queryparser/lemon.c	/^typedef struct s_x2node {$/;"	s	file:
s_x3	queryparser/lemon.c	/^struct s_x3 {$/;"	s	file:
s_x3node	queryparser/lemon.c	/^typedef struct s_x3node {$/;"	s	file:
s_x4	queryparser/lemon.c	/^struct s_x4 {$/;"	s	file:
s_x4node	queryparser/lemon.c	/^typedef struct s_x4node {$/;"	s	file:
same_symbol	queryparser/lemon.c	/^int same_symbol(a,b)$/;"	f
sb	api/compactor.cc	/^    struct stat sb;$/;"	m	class:Xapian::Compactor::Internal	typeref:struct:Xapian::Compactor::Internal::stat	file:
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	docs/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	tests/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scale_factor	tests/api_db.cc	/^    double scale_factor;$/;"	m	class:MyWeight	file:
search_end	tests/perftest/perftest.cc	/^PerfTestLogger::search_end(const Xapian::Query & query,$/;"	f	class:PerfTestLogger
search_start	tests/perftest/perftest.cc	/^PerfTestLogger::search_start()$/;"	f	class:PerfTestLogger
searching_end	tests/perftest/perftest.cc	/^PerfTestLogger::searching_end()$/;"	f	class:PerfTestLogger
searching_start	tests/perftest/perftest.cc	/^PerfTestLogger::searching_start(const string & description)$/;"	f	class:PerfTestLogger
searching_started	tests/perftest/perftest.h	/^    bool searching_started;$/;"	m	class:PerfTestLogger
searching_timer	tests/perftest/perftest.h	/^    double searching_timer;$/;"	m	class:PerfTestLogger
second	include/xapian/expanddecider.h	/^    const ExpandDecider &first, &second;$/;"	m	class:Xapian::ExpandDeciderAnd
seed	tests/stemtest.cc	/^static int seed;$/;"	v	file:
seed_str	tests/soaktest/soaktest.cc	/^    string seed_str;$/;"	m	class:SoakTestRunner	file:
seen	tests/api_matchspy.cc	/^    std::vector<std::string> seen;$/;"	m	class:SimpleMatchSpy	file:
send_file	net/remoteconnection.cc	/^RemoteConnection::send_file(char type, int fd, double end_time)$/;"	f	class:RemoteConnection
send_global_stats	backends/remote/remote-database.cc	/^RemoteDatabase::send_global_stats(Xapian::doccount first,$/;"	f	class:RemoteDatabase
send_message	backends/remote/remote-database.cc	/^RemoteDatabase::send_message(message_type type, const string &message) const$/;"	f	class:RemoteDatabase
send_message	common/remoteserver.h	/^    void send_message(reply_type type, const std::string &message,$/;"	f	class:RemoteServer
send_message	net/remoteconnection.cc	/^RemoteConnection::send_message(char type, const string &message,$/;"	f	class:RemoteConnection
send_message	net/remoteserver.cc	/^RemoteServer::send_message(reply_type type, const string &message)$/;"	f	class:RemoteServer
send_whole_database	backends/brass/brass_database.cc	/^BrassDatabase::send_whole_database(RemoteConnection & conn, double end_time)$/;"	f	class:BrassDatabase
send_whole_database	backends/chert/chert_database.cc	/^ChertDatabase::send_whole_database(RemoteConnection & conn, double end_time)$/;"	f	class:ChertDatabase
send_whole_database	backends/flint/flint_database.cc	/^FlintDatabase::send_whole_database(RemoteConnection & conn, double end_time)$/;"	f	class:FlintDatabase
separator	examples/delve.cc	/^static char separator = ' ';$/;"	v	file:
seq1	api/editdistance.cc	/^    edist_seq<CHR> seq1;$/;"	m	class:edist_state	file:
seq2	api/editdistance.cc	/^    edist_seq<CHR> seq2;$/;"	m	class:edist_state	file:
seq_count	backends/brass/brass_table.h	/^	int seq_count;$/;"	m	class:BrassTable
seq_count	backends/chert/chert_table.h	/^	int seq_count;$/;"	m	class:ChertTable
seq_count	backends/flint/flint_table.h	/^	int seq_count;$/;"	m	class:FlintTable
seqcmp_editdist	api/editdistance.cc	/^seqcmp_editdist(const CHR * ptr1, int len1, const CHR * ptr2, int len2,$/;"	f	file:
seqlen	include/xapian/unicode.h	/^    mutable unsigned seqlen;$/;"	m	class:Xapian::Utf8Iterator
sequential	backends/brass/brass_btreebase.h	/^	bool sequential;$/;"	m	class:BrassTable_base
sequential	backends/brass/brass_table.h	/^	bool sequential;$/;"	m	class:BrassTable
sequential	backends/chert/chert_btreebase.h	/^	bool sequential;$/;"	m	class:ChertTable_base
sequential	backends/chert/chert_table.h	/^	bool sequential;$/;"	m	class:ChertTable
sequential	backends/flint/flint_btreebase.h	/^	bool sequential;$/;"	m	class:FlintTable_base
sequential	backends/flint/flint_table.h	/^	bool sequential;$/;"	m	class:FlintTable
serialise	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::serialise() const {$/;"	f	class:DecreasingValueWeightPostingSource
serialise	api/matchspy.cc	/^MatchSpy::serialise() const {$/;"	f	class:MatchSpy
serialise	api/matchspy.cc	/^ValueCountMatchSpy::serialise() const {$/;"	f	class:ValueCountMatchSpy
serialise	api/omdocument.cc	/^Document::serialise() const$/;"	f	class:Xapian::Document
serialise	api/omquery.cc	/^Query::serialise() const$/;"	f	class:Xapian::Query
serialise	api/omqueryinternal.cc	/^Xapian::Query::Internal::serialise(Xapian::termpos & curpos) const$/;"	f	class:Xapian::Query::Internal
serialise	api/postingsource.cc	/^FixedWeightPostingSource::serialise() const$/;"	f	class:Xapian::FixedWeightPostingSource
serialise	api/postingsource.cc	/^PostingSource::serialise() const$/;"	f	class:Xapian::PostingSource
serialise	api/postingsource.cc	/^ValueMapPostingSource::serialise() const$/;"	f	class:Xapian::ValueMapPostingSource
serialise	api/postingsource.cc	/^ValueWeightPostingSource::serialise() const$/;"	f	class:Xapian::ValueWeightPostingSource
serialise	include/xapian/query.h	/^	std::string serialise() const {$/;"	f	class:Xapian::Query::Internal
serialise	tests/api_db.cc	/^    string serialise() const { return string(); }$/;"	f	class:MyWeight
serialise	tests/api_serialise.cc	/^    std::string serialise() const {$/;"	f	class:MyPostingSource2
serialise	weight/bm25weight.cc	/^BM25Weight::serialise() const$/;"	f	class:Xapian::BM25Weight
serialise	weight/boolweight.cc	/^BoolWeight::serialise() const$/;"	f	class:Xapian::BoolWeight
serialise	weight/tradweight.cc	/^TradWeight::serialise() const$/;"	f	class:Xapian::TradWeight
serialise	weight/weight.cc	/^Weight::serialise() const$/;"	f	class:Xapian::Weight
serialise_document	net/serialise.cc	/^serialise_document(const Xapian::Document &doc)$/;"	f
serialise_double	common/serialise-double.cc	/^std::string serialise_double(double v)$/;"	f
serialise_error	net/serialise.cc	/^serialise_error(const Xapian::Error &e)$/;"	f
serialise_mset	net/serialise.cc	/^serialise_mset(const Xapian::MSet &mset)$/;"	f
serialise_results	api/matchspy.cc	/^MatchSpy::serialise_results() const {$/;"	f	class:MatchSpy
serialise_results	api/matchspy.cc	/^ValueCountMatchSpy::serialise_results() const {$/;"	f	class:ValueCountMatchSpy
serialise_rset	net/serialise.cc	/^serialise_rset(const Xapian::RSet &rset)$/;"	f
serialise_stats	net/serialise.cc	/^serialise_stats(const Xapian::Weight::Internal &stats)$/;"	f
serialisequery1_helper	tests/internaltest.cc	/^serialisequery1_helper(const Xapian::Query & query)$/;"	f	file:
server	net/tcpserver.cc	/^    TcpServer *server;$/;"	m	struct:thread_param	file:
setD	backends/brass/brass_table.h	/^#define setD(/;"	d
setD	backends/chert/chert_table.h	/^#define setD(/;"	d
setD	backends/flint/flint_table.h	/^#define setD(/;"	d
set_F_to_extra_ldflags	xapian-config	/^set_F_to_extra_ldflags() {$/;"	f
set_I_for_uninstalled	xapian-config	/^set_I_for_uninstalled() {$/;"	f
set_L_to_library_path	xapian-config	/^set_L_to_library_path() {$/;"	f
set_all_values	common/document.h	/^	void set_all_values(map<Xapian::valueno, string> & values_) {$/;"	f	class:Xapian::Document::Internal
set_bit	languages/compiler/generator.c	/^static void set_bit(symbol * b, int i) { b[i\/8] |= 1 << i%8; }$/;"	f	file:
set_block_given_by	backends/brass/brass_table.h	/^    void set_block_given_by(uint4 n) {$/;"	f	class:Brass::Item_wr
set_block_given_by	backends/chert/chert_table.h	/^    void set_block_given_by(uint4 n) {$/;"	f	class:Item_wr
set_block_given_by	backends/flint/flint_table.h	/^    void set_block_given_by(uint4 n) {$/;"	f	class:Item_wr_
set_block_size	api/compactor.cc	/^Compactor::set_block_size(size_t block_size)$/;"	f	class:Xapian::Compactor
set_block_size	backends/brass/brass_btreebase.h	/^	void set_block_size(uint4 block_size_) {$/;"	f	class:BrassTable_base
set_block_size	backends/brass/brass_table.cc	/^BrassTable::set_block_size(unsigned int block_size_)$/;"	f	class:BrassTable
set_block_size	backends/chert/chert_btreebase.h	/^	void set_block_size(uint4 block_size_) {$/;"	f	class:ChertTable_base
set_block_size	backends/chert/chert_table.cc	/^ChertTable::set_block_size(unsigned int block_size_)$/;"	f	class:ChertTable
set_block_size	backends/flint/flint_btreebase.h	/^	void set_block_size(uint4 block_size_) {$/;"	f	class:FlintTable_base
set_block_size	backends/flint/flint_table.cc	/^FlintTable::set_block_size(unsigned int block_size_)$/;"	f	class:FlintTable
set_bounds_from_db	common/weightinternal.h	/^    void set_bounds_from_db(const Xapian::Database &db_) { db = db_; }$/;"	f	class:Xapian::Weight::Internal
set_collapse_key	api/omenquire.cc	/^Enquire::set_collapse_key(Xapian::valueno collapse_key, Xapian::doccount collapse_max)$/;"	f	class:Xapian::Enquire
set_compaction_level	api/compactor.cc	/^Compactor::set_compaction_level(compaction_level compaction)$/;"	f	class:Xapian::Compactor
set_component_of	backends/brass/brass_table.h	/^    void set_component_of(int i) {$/;"	f	class:Brass::Item_wr
set_component_of	backends/chert/chert_table.h	/^    void set_component_of(int i) {$/;"	f	class:Item_wr
set_component_of	backends/flint/flint_table.h	/^    void set_component_of(int i) {$/;"	f	class:Item_wr_
set_components_of	backends/brass/brass_table.h	/^    void set_components_of(int m) {$/;"	f	class:Brass::Item_wr
set_components_of	backends/chert/chert_table.h	/^    void set_components_of(int m) {$/;"	f	class:Item_wr
set_components_of	backends/flint/flint_table.h	/^    void set_components_of(int m) {$/;"	f	class:Item_wr_
set_cutoff	api/omenquire.cc	/^Enquire::set_cutoff(Xapian::percent percent_cutoff, Xapian::weight weight_cutoff)$/;"	f	class:Xapian::Enquire
set_data	api/omdocument.cc	/^Document::set_data(const string &data)$/;"	f	class:Xapian::Document
set_data	api/omdocument.cc	/^Xapian::Document::Internal::set_data(const string &data_)$/;"	f	class:Xapian::Document::Internal
set_data	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::set_data(const OmDocumentTerm::term_positions & positions_)$/;"	f	class:InMemoryPositionList
set_database	queryparser/queryparser.cc	/^QueryParser::set_database(const Database &db) {$/;"	f	class:QueryParser
set_database	queryparser/termgenerator.cc	/^TermGenerator::set_database(const Xapian::WritableDatabase &db)$/;"	f	class:TermGenerator
set_datadir	tests/harness/backendmanager.h	/^    void set_datadir(const std::string &datadir_) { datadir = datadir_; }$/;"	f	class:BackendManager
set_dbl_parameter	api/omqueryinternal.cc	/^Xapian::Query::Internal::set_dbl_parameter(double dbl_parameter_)$/;"	f	class:Xapian::Query::Internal
set_default_op	queryparser/queryparser.cc	/^QueryParser::set_default_op(Query::op default_op)$/;"	f	class:QueryParser
set_default_weight	api/postingsource.cc	/^ValueMapPostingSource::set_default_weight(double wt)$/;"	f	class:Xapian::ValueMapPostingSource
set_destdir	api/compactor.cc	/^Compactor::Internal::set_destdir(const string & destdir_) {$/;"	f	class:Xapian::Compactor::Internal
set_destdir	api/compactor.cc	/^Compactor::set_destdir(const string & destdir)$/;"	f	class:Xapian::Compactor
set_docid_order	api/omenquire.cc	/^Enquire::set_docid_order(Enquire::docid_order order)$/;"	f	class:Xapian::Enquire
set_doclength	backends/brass/brass_inverter.h	/^    void set_doclength(Xapian::docid did, Xapian::termcount doclen, bool add) {$/;"	f	class:Inverter
set_document	matcher/valuestreamdocument.h	/^    void set_document(Xapian::docid did_) {$/;"	f	class:ValueStreamDocument
set_document	queryparser/termgenerator.cc	/^TermGenerator::set_document(const Xapian::Document & doc)$/;"	f	class:TermGenerator
set_empty_ok	queryparser/queryparser_internal.cc	/^    void set_empty_ok() { empty_ok = true; }$/;"	f	class:TermGroup
set_encoded_values	backends/flint/flint_values.cc	/^FlintValueTable::set_encoded_values(Xapian::docid did, const string & enc)$/;"	f	class:FlintValueTable
set_f_kp	api/editdistance.cc	/^    void set_f_kp(int k, int p, int val) {$/;"	f	class:edist_state
set_flags	queryparser/termgenerator.cc	/^TermGenerator::set_flags(flags toggle, flags mask)$/;"	f	class:TermGenerator
set_full_compaction	backends/brass/brass_table.cc	/^BrassTable::set_full_compaction(bool parity)$/;"	f	class:BrassTable
set_full_compaction	backends/chert/chert_table.cc	/^ChertTable::set_full_compaction(bool parity)$/;"	f	class:ChertTable
set_full_compaction	backends/flint/flint_table.cc	/^FlintTable::set_full_compaction(bool parity)$/;"	f	class:FlintTable
set_have_fakeroot	backends/brass/brass_btreebase.h	/^	void set_have_fakeroot(bool have_fakeroot_) {$/;"	f	class:BrassTable_base
set_have_fakeroot	backends/chert/chert_btreebase.h	/^	void set_have_fakeroot(bool have_fakeroot_) {$/;"	f	class:ChertTable_base
set_have_fakeroot	backends/flint/flint_btreebase.h	/^	void set_have_fakeroot(bool have_fakeroot_) {$/;"	f	class:FlintTable_base
set_item_count	backends/brass/brass_btreebase.h	/^	void set_item_count(brass_tablesize_t item_count_) {$/;"	f	class:BrassTable_base
set_item_count	backends/chert/chert_btreebase.h	/^	void set_item_count(chert_tablesize_t item_count_) {$/;"	f	class:ChertTable_base
set_item_count	backends/flint/flint_btreebase.h	/^	void set_item_count(uint4 item_count_) {$/;"	f	class:FlintTable_base
set_key_and_block	backends/brass/brass_table.h	/^    void set_key_and_block(Key newkey, int truncate_size, uint4 n) {$/;"	f	class:Brass::Item_wr
set_key_and_block	backends/chert/chert_table.h	/^    void set_key_and_block(Key newkey, int truncate_size, uint4 n) {$/;"	f	class:Item_wr
set_key_and_block	backends/flint/flint_table.h	/^    void set_key_and_block(Key_ newkey, int truncate_size, uint4 n) {$/;"	f	class:Item_wr_
set_key_len	backends/brass/brass_table.h	/^    void set_key_len(int x) { setint1(p, I2, x); }$/;"	f	class:Brass::Item_wr
set_key_len	backends/chert/chert_table.h	/^    void set_key_len(int x) { setint1(p, I2, x); }$/;"	f	class:Item_wr
set_key_len	backends/flint/flint_table.h	/^    void set_key_len(int x) { setint1(p, I2, x); }$/;"	f	class:Item_wr_
set_last_docid	backends/brass/brass_dbstats.h	/^    void set_last_docid(Xapian::docid did) { last_docid = did; }$/;"	f	class:BrassDatabaseStats
set_last_docid	backends/chert/chert_dbstats.h	/^    void set_last_docid(Xapian::docid did) { last_docid = did; }$/;"	f	class:ChertDatabaseStats
set_level	backends/brass/brass_btreebase.h	/^	void set_level(uint4 level_) {$/;"	f	class:BrassTable_base
set_level	backends/chert/chert_btreebase.h	/^	void set_level(uint4 level_) {$/;"	f	class:ChertTable_base
set_level	backends/flint/flint_btreebase.h	/^	void set_level(uint4 level_) {$/;"	f	class:FlintTable_base
set_max_changesets	tests/api_replicate.cc	/^# define set_max_changesets(/;"	d	file:
set_max_item_size	backends/brass/brass_table.h	/^	void set_max_item_size(size_t block_capacity) {$/;"	f	class:BrassTable
set_max_item_size	backends/chert/chert_table.h	/^	void set_max_item_size(size_t block_capacity) {$/;"	f	class:ChertTable
set_max_item_size	backends/flint/flint_table.h	/^	void set_max_item_size(size_t block_capacity) {$/;"	f	class:FlintTable
set_max_wildcard_expansion	queryparser/queryparser.cc	/^QueryParser::set_max_wildcard_expansion(Xapian::termcount max)$/;"	f	class:QueryParser
set_max_word_length	queryparser/termgenerator.cc	/^TermGenerator::set_max_word_length(unsigned max_word_length)$/;"	f	class:TermGenerator
set_maxweight	api/postingsource.cc	/^PostingSource::set_maxweight(Xapian::weight max_weight)$/;"	f	class:Xapian::PostingSource
set_metadata	api/omdatabase.cc	/^WritableDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:Xapian::WritableDatabase
set_metadata	backends/brass/brass_database.cc	/^BrassWritableDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:BrassWritableDatabase
set_metadata	backends/chert/chert_database.cc	/^ChertWritableDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:ChertWritableDatabase
set_metadata	backends/database.cc	/^Database::Internal::set_metadata(const string &, const string &)$/;"	f	class:Xapian::Database::Internal
set_metadata	backends/flint/flint_database.cc	/^FlintWritableDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:FlintWritableDatabase
set_metadata	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::set_metadata(const std::string & key,$/;"	f	class:InMemoryDatabase
set_metadata	backends/remote/remote-database.cc	/^RemoteDatabase::set_metadata(const string & key, const string & value)$/;"	f	class:RemoteDatabase
set_metadata	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::set_metadata(const string &, const string &)$/;"	f	class:ConstDatabaseWrapper
set_multipass	api/compactor.cc	/^Compactor::set_multipass(bool multipass)$/;"	f	class:Xapian::Compactor
set_oldest_changeset	backends/brass/brass_dbstats.h	/^    void set_oldest_changeset(brass_revision_number_t changeset) { oldest_changeset = changeset; }$/;"	f	class:BrassDatabaseStats
set_overwritten	backends/brass/brass_table.cc	/^BrassTable::set_overwritten() const$/;"	f	class:BrassTable
set_overwritten	backends/chert/chert_table.cc	/^ChertTable::set_overwritten() const$/;"	f	class:ChertTable
set_overwritten	backends/flint/flint_table.cc	/^FlintTable::set_overwritten() const$/;"	f	class:FlintTable
set_positionlist	backends/brass/brass_positionlist.cc	/^BrassPositionListTable::set_positionlist(Xapian::docid did,$/;"	f	class:BrassPositionListTable
set_positionlist	backends/chert/chert_positionlist.cc	/^ChertPositionListTable::set_positionlist(Xapian::docid did,$/;"	f	class:ChertPositionListTable
set_positionlist	backends/flint/flint_positionlist.cc	/^FlintPositionListTable::set_positionlist(Xapian::docid did,$/;"	f	class:FlintPositionListTable
set_properties	tests/harness/testrunner.cc	/^TestRunner::set_properties(const string & properties)$/;"	f	class:TestRunner
set_properties_for_backend	tests/harness/testrunner.cc	/^TestRunner::set_properties_for_backend(const string & backend_name)$/;"	f	class:TestRunner
set_query	api/omenquire.cc	/^Enquire::Internal::set_query(const Query &query_, termcount qlen_)$/;"	f	class:Xapian::Enquire::Internal
set_query	api/omenquire.cc	/^Enquire::set_query(const Query & query, termcount len)$/;"	f	class:Xapian::Enquire
set_query	backends/remote/remote-database.cc	/^RemoteDatabase::set_query(const Xapian::Query::Internal *query,$/;"	f	class:RemoteDatabase
set_quiet	bin/xapian-compact.cc	/^    void set_quiet(bool quiet_) { quiet = quiet_; }$/;"	f	class:MyCompactor
set_read_fd	api/replication.cc	/^DatabaseReplica::Internal::set_read_fd(int fd)$/;"	f	class:DatabaseReplica::Internal
set_read_fd	api/replication.cc	/^DatabaseReplica::set_read_fd(int fd)$/;"	f	class:DatabaseReplica
set_registry	common/remoteserver.h	/^    void set_registry(const Xapian::Registry & reg_) { reg = reg_; }$/;"	f	class:RemoteServer
set_renumber	api/compactor.cc	/^Compactor::set_renumber(bool renumber)$/;"	f	class:Xapian::Compactor
set_revision	backends/brass/brass_btreebase.h	/^	void set_revision(uint4 revision_) {$/;"	f	class:BrassTable_base
set_revision	backends/chert/chert_btreebase.h	/^	void set_revision(uint4 revision_) {$/;"	f	class:ChertTable_base
set_revision	backends/flint/flint_btreebase.h	/^	void set_revision(uint4 revision_) {$/;"	f	class:FlintTable_base
set_revision_number	backends/brass/brass_database.cc	/^BrassDatabase::set_revision_number(brass_revision_number_t new_revision)$/;"	f	class:BrassDatabase
set_revision_number	backends/chert/chert_database.cc	/^ChertDatabase::set_revision_number(chert_revision_number_t new_revision)$/;"	f	class:ChertDatabase
set_revision_number	backends/flint/flint_database.cc	/^FlintDatabase::set_revision_number(flint_revision_number_t new_revision)$/;"	f	class:FlintDatabase
set_root	backends/brass/brass_btreebase.h	/^	void set_root(uint4 root_) {$/;"	f	class:BrassTable_base
set_root	backends/chert/chert_btreebase.h	/^	void set_root(uint4 root_) {$/;"	f	class:ChertTable_base
set_root	backends/flint/flint_btreebase.h	/^	void set_root(uint4 root_) {$/;"	f	class:FlintTable_base
set_sequential	backends/brass/brass_btreebase.h	/^	void set_sequential(bool sequential_) {$/;"	f	class:BrassTable_base
set_sequential	backends/chert/chert_btreebase.h	/^	void set_sequential(bool sequential_) {$/;"	f	class:ChertTable_base
set_sequential	backends/flint/flint_btreebase.h	/^	void set_sequential(bool sequential_) {$/;"	f	class:FlintTable_base
set_size	backends/brass/brass_table.h	/^    void set_size(int l) {$/;"	f	class:Brass::Item_wr
set_size	backends/chert/chert_table.h	/^    void set_size(int l) {$/;"	f	class:Item_wr
set_size	backends/flint/flint_table.h	/^    void set_size(int l) { setint2(p, 0, l); }$/;"	f	class:Item_wr_
set_sort_by_key	api/omenquire.cc	/^Enquire::set_sort_by_key(KeyMaker * sorter, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_key	include/xapian/enquire.h	/^Enquire::set_sort_by_key(Xapian::KeyMaker * sorter)$/;"	f	class:Xapian::Enquire
set_sort_by_key_then_relevance	api/omenquire.cc	/^Enquire::set_sort_by_key_then_relevance(KeyMaker * sorter, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_key_then_relevance	include/xapian/enquire.h	/^Enquire::set_sort_by_key_then_relevance(Xapian::KeyMaker * sorter)$/;"	f	class:Xapian::Enquire
set_sort_by_relevance	api/omenquire.cc	/^Enquire::set_sort_by_relevance()$/;"	f	class:Xapian::Enquire
set_sort_by_relevance_then_key	api/omenquire.cc	/^Enquire::set_sort_by_relevance_then_key(KeyMaker * sorter, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_relevance_then_key	include/xapian/enquire.h	/^Enquire::set_sort_by_relevance_then_key(Xapian::KeyMaker * sorter)$/;"	f	class:Xapian::Enquire
set_sort_by_relevance_then_value	api/omenquire.cc	/^Enquire::set_sort_by_relevance_then_value(valueno sort_key, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_relevance_then_value	include/xapian/enquire.h	/^Enquire::set_sort_by_relevance_then_value(Xapian::valueno sort_key)$/;"	f	class:Xapian::Enquire
set_sort_by_value	api/omenquire.cc	/^Enquire::set_sort_by_value(valueno sort_key, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_value	include/xapian/enquire.h	/^Enquire::set_sort_by_value(Xapian::valueno sort_key)$/;"	f	class:Xapian::Enquire
set_sort_by_value_then_relevance	api/omenquire.cc	/^Enquire::set_sort_by_value_then_relevance(valueno sort_key, bool ascending)$/;"	f	class:Xapian::Enquire
set_sort_by_value_then_relevance	include/xapian/enquire.h	/^Enquire::set_sort_by_value_then_relevance(Xapian::valueno sort_key)$/;"	f	class:Xapian::Enquire
set_status	api/compactor.cc	/^Compactor::set_status(const string & table, const string & status)$/;"	f	class:Xapian::Compactor
set_status	bin/xapian-compact.cc	/^MyCompactor::set_status(const string & table, const string & status)$/;"	f	class:MyCompactor
set_stemmer	queryparser/queryparser.cc	/^QueryParser::set_stemmer(const Xapian::Stem & stemmer)$/;"	f	class:QueryParser
set_stemmer	queryparser/termgenerator.cc	/^TermGenerator::set_stemmer(const Xapian::Stem & stemmer)$/;"	f	class:TermGenerator
set_stemming_strategy	queryparser/queryparser.cc	/^QueryParser::set_stemming_strategy(stem_strategy strategy)$/;"	f	class:QueryParser
set_stemming_strategy	queryparser/termgenerator.cc	/^TermGenerator::set_stemming_strategy(stem_strategy strategy)$/;"	f	class:TermGenerator
set_stopper	queryparser/queryparser.cc	/^QueryParser::set_stopper(const Stopper * stopper)$/;"	f	class:QueryParser
set_stopper	queryparser/termgenerator.cc	/^TermGenerator::set_stopper(const Xapian::Stopper * stopper)$/;"	f	class:TermGenerator
set_tag	backends/brass/brass_table.h	/^    void set_tag(int cd, const char *start, int len, bool compressed) {$/;"	f	class:Brass::Item_wr
set_tag	backends/chert/chert_table.h	/^    void set_tag(int cd, const char *start, int len, bool compressed) {$/;"	f	class:Item_wr
set_tag	backends/flint/flint_table.h	/^    void set_tag(int cd, const char *start, int len, bool compressed) {$/;"	f	class:Item_wr_
set_termlist	backends/brass/brass_termlisttable.cc	/^BrassTermListTable::set_termlist(Xapian::docid did,$/;"	f	class:BrassTermListTable
set_termlist	backends/chert/chert_termlisttable.cc	/^ChertTermListTable::set_termlist(Xapian::docid did,$/;"	f	class:ChertTermListTable
set_termlist	backends/flint/flint_termlisttable.cc	/^FlintTermListTable::set_termlist(Xapian::docid did,$/;"	f	class:FlintTermListTable
set_termpos	queryparser/termgenerator.cc	/^TermGenerator::set_termpos(Xapian::termcount termpos)$/;"	f	class:TermGenerator
set_termweight	api/leafpostlist.cc	/^LeafPostList::set_termweight(const Xapian::Weight * weight_)$/;"	f	class:LeafPostList
set_value_stats	backends/brass/brass_values.cc	/^BrassValueManager::set_value_stats(map<Xapian::valueno, ValueStats> & value_stats)$/;"	f	class:BrassValueManager
set_value_stats	backends/chert/chert_values.cc	/^ChertValueManager::set_value_stats(map<Xapian::valueno, ValueStats> & value_stats)$/;"	f	class:ChertValueManager
set_weight	matcher/synonympostlist.cc	/^SynonymPostList::set_weight(const Xapian::Weight * wt_)$/;"	f	class:SynonymPostList
set_weighting_scheme	api/omenquire.cc	/^Enquire::set_weighting_scheme(const Weight &weight_)$/;"	f	class:Xapian::Enquire
setint1	common/unaligned.h	/^setint1(unsigned char *p, int c, int x)$/;"	f
setint2	common/unaligned.h	/^setint2(unsigned char *p, int c, int x)$/;"	f
setint4	common/unaligned.h	/^setint4(unsigned char *p, int c, int x)$/;"	f
setup	tests/api_closedb.cc	/^    void setup(Xapian::Database db_) {$/;"	f	struct:closedb1_iterators
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	docs/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	tests/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
short_opts	tests/harness/testsuite.cc	/^map<int, string *> test_driver::short_opts;$/;"	m	class:test_driver	file:
short_opts	tests/harness/testsuite.h	/^	static std::map<int, std::string *> short_opts;$/;"	m	class:test_driver
should_stem	queryparser/queryparser_internal.cc	/^should_stem(const string & term)$/;"	f
should_stem	queryparser/termgenerator_internal.cc	/^should_stem(const std::string & term)$/;"	f	namespace:Xapian
show_db_stats	examples/delve.cc	/^show_db_stats(Database &db)$/;"	f	file:
show_docdata	examples/delve.cc	/^show_docdata(Database &db, docid docid, char sep)$/;"	f	file:
show_docdata	examples/delve.cc	/^show_docdata(Database &db,$/;"	f	file:
show_help	bin/xapian-inspect.cc	/^show_help()$/;"	f	file:
show_termlist	examples/delve.cc	/^show_termlist(const Database &db, Xapian::docid did,$/;"	f	file:
show_termlists	examples/delve.cc	/^show_termlists(Database &db,$/;"	f	file:
show_usage	bin/xapian-check.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-chert-update.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-compact.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-inspect.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-progsrv.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-replicate-server.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-replicate.cc	/^static void show_usage() {$/;"	f	file:
show_usage	bin/xapian-tcpsrv.cc	/^static void show_usage() {$/;"	f	file:
show_usage	examples/copydatabase.cc	/^show_usage(int rc)$/;"	f	file:
show_usage	examples/delve.cc	/^static void show_usage() {$/;"	f	file:
show_usage	examples/quest.cc	/^static void show_usage() {$/;"	f	file:
show_usage	examples/xapian-metadata.cc	/^static void show_usage() {$/;"	f	file:
show_usage	xapian-config	/^show_usage() {$/;"	f
show_value	examples/delve.cc	/^show_value(Database &db,$/;"	f	file:
show_values	examples/delve.cc	/^show_values(Database &db, docid docid, char sep)$/;"	f	file:
show_values	examples/delve.cc	/^show_values(Database &db,$/;"	f	file:
showdocdata	examples/delve.cc	/^static bool showdocdata = false;$/;"	v	file:
showvalues	examples/delve.cc	/^static bool showvalues = false;$/;"	v	file:
sigaddr	tests/harness/testsuite.cc	/^static void * sigaddr = NULL;$/;"	v	file:
signum	tests/harness/testsuite.cc	/^static int signum = 0;$/;"	v	file:
simplify_matchnothing	api/omqueryinternal.cc	/^Xapian::Query::Internal::simplify_matchnothing()$/;"	f	class:Xapian::Query::Internal
simplify_query	api/omqueryinternal.cc	/^Xapian::Query::Internal::simplify_query()$/;"	f	class:Xapian::Query::Internal
size	api/omenquire.cc	/^ESet::size() const$/;"	f	class:Xapian::ESet
size	api/omenquire.cc	/^MSet::size() const$/;"	f	class:Xapian::MSet
size	api/omenquire.cc	/^RSet::size() const$/;"	f	class:Xapian::RSet
size	backends/brass/brass_table.h	/^    int size() const {$/;"	f	class:Brass::Item_base
size	backends/chert/chert_table.h	/^    int size() const {$/;"	f	class:Item_base
size	backends/flint/flint_table.h	/^    int size() const { return getint2(p, 0) & 0x7fff; } \/* I in diagram above *\/$/;"	f	class:Item_base_
size	languages/compiler/header.h	/^    int size;        \/* - and its size *\/$/;"	m	struct:amongvec
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x1	file:
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x2	file:
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x3	file:
size	queryparser/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x4	file:
size	queryparser/lemon.c	/^static int size = 0;$/;"	v	file:
size_type	include/xapian/enquire.h	/^	typedef Xapian::doccount size_type;$/;"	t	class:Xapian::MSet
skip_deletes	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::skip_deletes(Xapian::weight w_min)$/;"	f	class:ChertAllDocsModifiedPostList
skip_deletes	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::skip_deletes(Xapian::weight w_min)$/;"	f	class:ChertModifiedPostList
skip_deletes	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::skip_deletes(Xapian::weight w_min)$/;"	f	class:FlintModifiedPostList
skip_if_in_range	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::skip_if_in_range(Xapian::weight min_wt)$/;"	f	class:DecreasingValueWeightPostingSource
skip_test_for_backend	tests/apitest.cc	/^skip_test_for_backend(const std::string & backend_prefix)$/;"	f
skip_test_unless_backend	tests/apitest.cc	/^skip_test_unless_backend(const std::string & backend_prefix)$/;"	f
skip_to	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::skip_to(Xapian::docid min_docid,$/;"	f	class:DecreasingValueWeightPostingSource
skip_to	api/documentvaluelist.cc	/^DocumentValueList::skip_to(Xapian::docid slot)$/;"	f	class:DocumentValueList
skip_to	api/emptypostlist.cc	/^EmptyPostList::skip_to(Xapian::docid, Xapian::weight)$/;"	f	class:EmptyPostList
skip_to	api/maptermlist.h	/^	TermList * skip_to(const std::string & term) {$/;"	f	class:MapTermList
skip_to	api/matchspy.cc	/^    TermList * skip_to(const string & term) {$/;"	f	class:StringAndFreqTermList
skip_to	api/matchspy.cc	/^    TermList * skip_to(const string & term) {$/;"	f	class:ValueCountTermList
skip_to	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::skip_to(Xapian::termpos pos)$/;"	f	class:Xapian::PositionIterator
skip_to	api/ompostlistiterator.cc	/^Xapian::PostingIterator::skip_to(Xapian::docid did)$/;"	f	class:Xapian::PostingIterator
skip_to	api/omtermlistiterator.cc	/^Xapian::TermIterator::skip_to(const string & tname)$/;"	f	class:Xapian::TermIterator
skip_to	api/postingsource.cc	/^FixedWeightPostingSource::skip_to(Xapian::docid min_docid,$/;"	f	class:Xapian::FixedWeightPostingSource
skip_to	api/postingsource.cc	/^PostingSource::skip_to(Xapian::docid did, Xapian::weight min_wt)$/;"	f	class:Xapian::PostingSource
skip_to	api/postingsource.cc	/^ValuePostingSource::skip_to(Xapian::docid min_docid, Xapian::weight min_wt)$/;"	f	class:Xapian::ValuePostingSource
skip_to	api/valueiterator.cc	/^ValueIterator::skip_to(Xapian::docid docid_or_slot)$/;"	f	class:Xapian::ValueIterator
skip_to	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::skip_to(const string &term)$/;"	f	class:BrassAllTermsList
skip_to	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::skip_to(const string &key)$/;"	f	class:BrassMetadataTermList
skip_to	backends/brass/brass_positionlist.cc	/^BrassPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:BrassPositionList
skip_to	backends/brass/brass_postlist.cc	/^BrassPostList::skip_to(Xapian::docid desired_did, Xapian::weight w_min)$/;"	f	class:BrassPostList
skip_to	backends/brass/brass_spelling.cc	/^BrassSpellingTermList::skip_to(const string & term)$/;"	f	class:BrassSpellingTermList
skip_to	backends/brass/brass_spellingwordslist.cc	/^BrassSpellingWordsList::skip_to(const string &tname)$/;"	f	class:BrassSpellingWordsList
skip_to	backends/brass/brass_synonym.cc	/^BrassSynonymTermList::skip_to(const string &tname)$/;"	f	class:BrassSynonymTermList
skip_to	backends/brass/brass_termlist.cc	/^BrassTermList::skip_to(const string & term)$/;"	f	class:BrassTermList
skip_to	backends/brass/brass_valuelist.cc	/^BrassValueList::skip_to(Xapian::docid did)$/;"	f	class:BrassValueList
skip_to	backends/brass/brass_values.cc	/^ValueChunkReader::skip_to(Xapian::docid target)$/;"	f	class:ValueChunkReader
skip_to	backends/chert/chert_alldocsmodifiedpostlist.cc	/^ChertAllDocsModifiedPostList::skip_to(Xapian::docid desired_did,$/;"	f	class:ChertAllDocsModifiedPostList
skip_to	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::skip_to(const string &term)$/;"	f	class:ChertAllTermsList
skip_to	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::skip_to(const string &key)$/;"	f	class:ChertMetadataTermList
skip_to	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::skip_to(Xapian::docid desired_did, Xapian::weight w_min)$/;"	f	class:ChertModifiedPostList
skip_to	backends/chert/chert_positionlist.cc	/^ChertPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:ChertPositionList
skip_to	backends/chert/chert_postlist.cc	/^ChertPostList::skip_to(Xapian::docid desired_did, Xapian::weight w_min)$/;"	f	class:ChertPostList
skip_to	backends/chert/chert_spelling.cc	/^ChertSpellingTermList::skip_to(const string & term)$/;"	f	class:ChertSpellingTermList
skip_to	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::skip_to(const string &tname)$/;"	f	class:ChertSpellingWordsList
skip_to	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::skip_to(const string &tname)$/;"	f	class:ChertSynonymTermList
skip_to	backends/chert/chert_termlist.cc	/^ChertTermList::skip_to(const string & term)$/;"	f	class:ChertTermList
skip_to	backends/chert/chert_valuelist.cc	/^ChertValueList::skip_to(Xapian::docid did)$/;"	f	class:ChertValueList
skip_to	backends/chert/chert_values.cc	/^ValueChunkReader::skip_to(Xapian::docid target)$/;"	f	class:ValueChunkReader
skip_to	backends/contiguousalldocspostlist.cc	/^ContiguousAllDocsPostList::skip_to(Xapian::docid target, Xapian::weight)$/;"	f	class:ContiguousAllDocsPostList
skip_to	backends/flint/flint_alldocspostlist.cc	/^FlintAllDocsPostList::skip_to(Xapian::docid did, Xapian::weight \/*w_min*\/)$/;"	f	class:FlintAllDocsPostList
skip_to	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::skip_to(const string &term)$/;"	f	class:FlintAllTermsList
skip_to	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::skip_to(const string &key)$/;"	f	class:FlintMetadataTermList
skip_to	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::skip_to(Xapian::docid desired_did, Xapian::weight w_min)$/;"	f	class:FlintModifiedPostList
skip_to	backends/flint/flint_positionlist.cc	/^FlintPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:FlintPositionList
skip_to	backends/flint/flint_postlist.cc	/^FlintPostList::skip_to(Xapian::docid desired_did, Xapian::weight w_min)$/;"	f	class:FlintPostList
skip_to	backends/flint/flint_spelling.cc	/^FlintSpellingTermList::skip_to(const string & term)$/;"	f	class:FlintSpellingTermList
skip_to	backends/flint/flint_spellingwordslist.cc	/^FlintSpellingWordsList::skip_to(const string &tname)$/;"	f	class:FlintSpellingWordsList
skip_to	backends/flint/flint_synonym.cc	/^FlintSynonymTermList::skip_to(const string &tname)$/;"	f	class:FlintSynonymTermList
skip_to	backends/flint/flint_termlist.cc	/^FlintTermList::skip_to(const string & term)$/;"	f	class:FlintTermList
skip_to	backends/inmemory/inmemory_alltermslist.cc	/^InMemoryAllTermsList::skip_to(const string &tname_)$/;"	f	class:InMemoryAllTermsList
skip_to	backends/inmemory/inmemory_database.cc	/^InMemoryAllDocsPostList::skip_to(Xapian::docid did_, Xapian::weight \/*w_min*\/)$/;"	f	class:InMemoryAllDocsPostList
skip_to	backends/inmemory/inmemory_database.cc	/^InMemoryPostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:InMemoryPostList
skip_to	backends/inmemory/inmemory_database.cc	/^InMemoryTermList::skip_to(const string & term)$/;"	f	class:InMemoryTermList
skip_to	backends/inmemory/inmemory_positionlist.cc	/^InMemoryPositionList::skip_to(Xapian::termpos termpos)$/;"	f	class:InMemoryPositionList
skip_to	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::skip_to(const std::string &term)$/;"	f	class:MultiAllTermsList
skip_to	backends/multi/multi_postlist.cc	/^MultiPostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:MultiPostList
skip_to	backends/multi/multi_termlist.cc	/^TermList * MultiTermList::skip_to(const string & term)$/;"	f	class:MultiTermList
skip_to	backends/multi/multi_valuelist.cc	/^    void skip_to(Xapian::docid did, size_t multiplier) {$/;"	f	struct:SubValueList
skip_to	backends/multi/multi_valuelist.cc	/^MultiValueList::skip_to(Xapian::docid did)$/;"	f	class:MultiValueList
skip_to	backends/remote/net_postlist.cc	/^NetworkPostList::skip_to(Xapian::docid did, Xapian::weight min_weight)$/;"	f	class:NetworkPostList
skip_to	backends/remote/net_termlist.cc	/^NetworkTermList::skip_to(const string & term)$/;"	f	class:NetworkTermList
skip_to	backends/slowvaluelist.cc	/^SlowValueList::skip_to(Xapian::docid did)$/;"	f	class:SlowValueList
skip_to	common/postlist.h	/^    Internal * skip_to(Xapian::docid did) { return skip_to(did, 0.0); }$/;"	f	class:Xapian::PostingIterator::Internal
skip_to	common/vectortermlist.h	/^	TermList *skip_to(const string &\/*tname*\/) {$/;"	f	class:VectorTermList
skip_to	expand/ortermlist.cc	/^OrTermList::skip_to(const string & term)$/;"	f	class:OrTermList
skip_to	matcher/andmaybepostlist.cc	/^AndMaybePostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:AndMaybePostList
skip_to	matcher/andnotpostlist.cc	/^AndNotPostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:AndNotPostList
skip_to	matcher/externalpostlist.cc	/^ExternalPostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:ExternalPostList
skip_to	matcher/extraweightpostlist.h	/^	PostList *skip_to(Xapian::docid did, Xapian::weight w_min) {$/;"	f	class:ExtraWeightPostList
skip_to	matcher/mergepostlist.cc	/^MergePostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:MergePostList
skip_to	matcher/msetpostlist.cc	/^MSetPostList::skip_to(Xapian::docid, Xapian::weight)$/;"	f	class:MSetPostList
skip_to	matcher/multiandpostlist.cc	/^MultiAndPostList::skip_to(Xapian::docid did_min, Xapian::weight w_min)$/;"	f	class:MultiAndPostList
skip_to	matcher/multixorpostlist.cc	/^MultiXorPostList::skip_to(Xapian::docid did_min, Xapian::weight w_min)$/;"	f	class:MultiXorPostList
skip_to	matcher/orpostlist.cc	/^OrPostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:OrPostList
skip_to	matcher/selectpostlist.cc	/^SelectPostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:SelectPostList
skip_to	matcher/synonympostlist.cc	/^SynonymPostList::skip_to(Xapian::docid did, Xapian::weight w_min)$/;"	f	class:SynonymPostList
skip_to	matcher/valuegepostlist.cc	/^ValueGePostList::skip_to(Xapian::docid did, Xapian::weight)$/;"	f	class:ValueGePostList
skip_to	matcher/valuerangepostlist.cc	/^ValueRangePostList::skip_to(Xapian::docid did, Xapian::weight)$/;"	f	class:ValueRangePostList
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, Xapian::weight wt) {$/;"	f	class:MyDontAskWeightPostingSource
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, Xapian::weight wt) {$/;"	f	class:MyOddPostingSource
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, Xapian::weight wt) {$/;"	f	class:MyOddWeightingPostingSource
skip_to	tests/api_postingsource.cc	/^    void skip_to(Xapian::docid to_did, Xapian::weight) {$/;"	f	class:ChangeMaxweightPostingSource
skip_to	tests/api_serialise.cc	/^    void skip_to(Xapian::docid, Xapian::weight) { }$/;"	f	class:ExceptionalPostingSource
skip_to_handling_prune	matcher/branchpostlist.h	/^skip_to_handling_prune(PostList * & pl, Xapian::docid did, Xapian::weight w_min,$/;"	f
skip_to_helper	matcher/multiandpostlist.h	/^    void skip_to_helper(size_t n, Xapian::docid did_min, Xapian::weight w_min) {$/;"	f	class:MultiAndPostList
skip_utf8	languages/steminternal.cc	/^extern int skip_utf8(const symbol * p, int c, int lb, int l, int n) {$/;"	f
skipped	tests/harness/testsuite.h	/^	    unsigned int skipped;$/;"	m	struct:test_driver::result
slash	common/fileutils.cc	/^inline bool slash(char ch)$/;"	f
sleep	common/realtime.h	/^inline void sleep(double t) {$/;"	f	namespace:RealTime
sleep	common/safeunistd.h	/^sleep(unsigned int seconds)$/;"	f
slice_check	languages/steminternal.cc	/^int SnowballStemImplementation::slice_check() {$/;"	f	class:Xapian::SnowballStemImplementation
slice_del	languages/steminternal.h	/^    int slice_del() { return slice_from_s(0, 0); }$/;"	f	class:Xapian::SnowballStemImplementation
slice_from_s	languages/steminternal.cc	/^int SnowballStemImplementation::slice_from_s(int s_size, const symbol * s) {$/;"	f	class:Xapian::SnowballStemImplementation
slice_from_v	languages/steminternal.h	/^    int slice_from_v(const symbol * v) { return slice_from_s(SIZE(v), v); }$/;"	f	class:Xapian::SnowballStemImplementation
slice_to	languages/steminternal.cc	/^symbol * SnowballStemImplementation::slice_to(symbol * v) {$/;"	f	class:Xapian::SnowballStemImplementation
slot	backends/brass/brass_valuelist.h	/^    Xapian::valueno slot;$/;"	m	class:BrassValueList
slot	backends/brass/brass_values.cc	/^    Xapian::valueno slot;$/;"	m	class:Brass::ValueUpdater	file:
slot	backends/chert/chert_valuelist.h	/^    Xapian::valueno slot;$/;"	m	class:ChertValueList
slot	backends/chert/chert_values.cc	/^    Xapian::valueno slot;$/;"	m	class:ValueUpdater	file:
slot	backends/slowvaluelist.h	/^    Xapian::valueno slot;$/;"	m	class:SlowValueList
slot	common/multivaluelist.h	/^    Xapian::valueno slot;$/;"	m	class:MultiValueList
slot	include/xapian/matchspy.h	/^	Xapian::valueno slot;$/;"	m	struct:Xapian::ValueCountMatchSpy::Internal
slot	include/xapian/postingsource.h	/^    Xapian::valueno slot;$/;"	m	class:Xapian::ValuePostingSource
slot	matcher/collapser.h	/^    Xapian::valueno slot;$/;"	m	class:Collapser
slot	matcher/valuerangepostlist.h	/^    Xapian::valueno slot;$/;"	m	class:ValueRangePostList
slot	queryparser/queryparser_internal.cc	/^    Xapian::valueno slot;$/;"	m	struct:filter_group_id	file:
slots	backends/brass/brass_values.h	/^    std::map<Xapian::docid, std::string> slots;$/;"	m	class:BrassValueManager
slots	backends/chert/chert_values.h	/^    std::map<Xapian::docid, std::string> slots;$/;"	m	class:ChertValueManager
slots	include/xapian/keymaker.h	/^    std::vector<std::pair<Xapian::valueno, bool> > slots;$/;"	m	class:Xapian::MultiValueKeyMaker
slots	include/xapian/keymaker.h	/^    std::vector<std::pair<Xapian::valueno, bool> > slots;$/;"	m	class:Xapian::MultiValueSorter
smaller	languages/compiler/tokeniser.c	/^static int smaller(int a, int b) { return a < b ? a : b; }$/;"	f	file:
smallest_ch	languages/compiler/header.h	/^    int smallest_ch;          \/* character with min code *\/$/;"	m	struct:grouping
sniff_next_message_type	net/remoteconnection.cc	/^RemoteConnection::sniff_next_message_type(double end_time)$/;"	f	class:RemoteConnection
snowball_algorithms	Makefile	/^snowball_algorithms = \\$/;"	m
snowball_algorithms	languages/Makefile.mk	/^snowball_algorithms =\\$/;"	m
snowball_built_sources	Makefile	/^snowball_built_sources = \\$/;"	m
snowball_built_sources	languages/Makefile.mk	/^snowball_built_sources =\\$/;"	m
snowball_headers	Makefile	/^snowball_headers = \\$/;"	m
snowball_headers	languages/Makefile.mk	/^snowball_headers =\\$/;"	m
snowball_sources	Makefile	/^snowball_sources = \\$/;"	m
snowball_sources	languages/Makefile.mk	/^snowball_sources =\\$/;"	m
soaktest_soaktest_DEPENDENCIES	tests/Makefile	/^soaktest_soaktest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
soaktest_soaktest_LDADD	tests/Makefile	/^soaktest_soaktest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
soaktest_soaktest_LDADD	tests/soaktest/Makefile.mk	/^soaktest_soaktest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
soaktest_soaktest_LDFLAGS	tests/Makefile	/^soaktest_soaktest_LDFLAGS = -no-install $(ldflags)$/;"	m
soaktest_soaktest_LDFLAGS	tests/soaktest/Makefile.mk	/^soaktest_soaktest_LDFLAGS = -no-install $(ldflags)$/;"	m
soaktest_soaktest_LINK	tests/Makefile	/^soaktest_soaktest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
soaktest_soaktest_OBJECTS	tests/Makefile	/^soaktest_soaktest_OBJECTS = $(am_soaktest_soaktest_OBJECTS)$/;"	m
soaktest_soaktest_SOURCES	tests/Makefile	/^soaktest_soaktest_SOURCES = \\$/;"	m
soaktest_soaktest_SOURCES	tests/soaktest/Makefile.mk	/^soaktest_soaktest_SOURCES = \\$/;"	m
socket	common/replicatetcpclient.h	/^    int socket;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
socket_errno	common/remoteconnection.h	/^# define socket_errno(/;"	d
socket_errno	common/remoteconnection.h	/^inline int socket_errno() {$/;"	f
sort_by	common/multimatch.h	/^	Xapian::Enquire::Internal::sort_setting sort_by;$/;"	m	class:MultiMatch
sort_by	common/omenquireinternal.h	/^	sort_setting sort_by;$/;"	m	class:Xapian::Enquire::Internal
sort_key	common/multimatch.h	/^	Xapian::valueno sort_key;$/;"	m	class:MultiMatch
sort_key	common/omenquireinternal.h	/^	Xapian::valueno sort_key;$/;"	m	class:Xapian::Enquire::Internal
sort_key	common/omenquireinternal.h	/^	string sort_key;$/;"	m	class:Xapian::Internal::MSetItem
sort_setting	common/omenquireinternal.h	/^	typedef enum { REL, VAL, VAL_REL, REL_VAL } sort_setting;$/;"	t	class:Xapian::Enquire::Internal	typeref:enum:Xapian::Enquire::Internal::__anon10
sort_value_forward	common/multimatch.h	/^	bool sort_value_forward;$/;"	m	class:MultiMatch
sort_value_forward	common/omenquireinternal.h	/^	bool sort_value_forward;$/;"	m	class:Xapian::Enquire::Internal
sortable_serialise	api/sortable-serialise.cc	/^Xapian::sortable_serialise(double value)$/;"	f	class:Xapian
sortable_unserialise	api/sortable-serialise.cc	/^Xapian::sortable_unserialise(const std::string & value)$/;"	f	class:Xapian
sorted	queryparser/lemon.c	/^  struct state **sorted;   \/* Table of states sorted by state number *\/$/;"	m	struct:lemon	typeref:struct:lemon::state	file:
sorter	common/omenquireinternal.h	/^	KeyMaker * sorter;$/;"	m	class:Xapian::Enquire::Internal
source	matcher/externalpostlist.h	/^    Xapian::PostingSource * source;$/;"	m	class:ExternalPostList
source	matcher/selectpostlist.h	/^	PostList *source;$/;"	m	class:SelectPostList
source_is_owned	matcher/externalpostlist.h	/^    bool source_is_owned;$/;"	m	class:ExternalPostList
sources	api/compactor.cc	/^    vector<string> sources;$/;"	m	class:Xapian::Compactor::Internal	file:
sp	queryparser/lemon.c	/^  struct symbol *sp;       \/* The look-ahead symbol *\/$/;"	m	struct:action	typeref:struct:action::symbol	file:
space_count	languages/compiler/space.c	/^int space_count = 0;$/;"	v
special_labels	languages/compiler/generator.c	/^enum special_labels {$/;"	g	file:
spelling	tests/harness/testrunner.h	/^    bool spelling;$/;"	m	class:TestRunner
spelling_table	backends/brass/brass_database.h	/^	mutable BrassSpellingTable spelling_table;$/;"	m	class:BrassDatabase
spelling_table	backends/chert/chert_database.h	/^	mutable ChertSpellingTable spelling_table;$/;"	m	class:ChertDatabase
spelling_table	backends/flint/flint_database.h	/^	mutable FlintSpellingTable spelling_table;$/;"	m	class:FlintDatabase
spellings_begin	api/omdatabase.cc	/^Database::spellings_begin() const$/;"	f	class:Xapian::Database
spellings_end	include/xapian/database.h	/^	Xapian::TermIterator spellings_end() const {$/;"	f	class:Xapian::Database
spies	common/omenquireinternal.h	/^	vector<MatchSpy *> spies;$/;"	m	class:Xapian::Enquire::Internal
spies	matcher/multimatch.cc	/^    const std::vector<Xapian::MatchSpy *> & spies;$/;"	m	class:MultipleMatchSpy	file:
spies	net/remoteserver.cc	/^    vector<Xapian::MatchSpy *> spies;$/;"	m	struct:MatchSpyList	file:
split_p	backends/brass/brass_table.h	/^	byte * split_p;$/;"	m	class:BrassTable
split_p	backends/chert/chert_table.h	/^	byte * split_p;$/;"	m	class:ChertTable
split_p	backends/flint/flint_table.h	/^	byte * split_p;$/;"	m	class:FlintTable
split_root	backends/brass/brass_table.cc	/^BrassTable::split_root(uint4 split_n)$/;"	f	class:BrassTable
split_root	backends/chert/chert_table.cc	/^ChertTable::split_root(uint4 split_n)$/;"	f	class:ChertTable
split_root	backends/flint/flint_table.cc	/^FlintTable::split_root(uint4 split_n)$/;"	f	class:FlintTable
split_rset_by_db	matcher/multimatch.cc	/^split_rset_by_db(const Xapian::RSet * rset,$/;"	f	file:
split_words	net/progclient.cc	/^split_words(const string &text, vector<string> &words, char ws = ' ')$/;"	f	file:
spy	api/matchspy.cc	/^    Xapian::Internal::RefCntPtr<Xapian::ValueCountMatchSpy::Internal> spy;$/;"	m	class:ValueCountTermList	file:
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	docs/Makefile	/^srcdir = .$/;"	m
srcdir	tests/Makefile	/^srcdir = .$/;"	m
srcdir	tests/harness/testrunner.h	/^    std::string srcdir;$/;"	m	class:TestRunner
srcdir	tests/stemtest.cc	/^static string srcdir;$/;"	v	file:
stacksize	queryparser/lemon.c	/^  char *stacksize;         \/* Size of the parser stack *\/$/;"	m	struct:lemon	file:
start	queryparser/lemon.c	/^  char *start;             \/* Name of the start symbol for the grammar *\/$/;"	m	struct:lemon	file:
start	tests/harness/cputimer.h	/^    double start;$/;"	m	class:CPUTimer
start_construction	api/omquery.cc	/^Query::start_construction(Query::op op_, termcount parameter)$/;"	f	class:Xapian::Query
start_match	matcher/localsubmatch.cc	/^LocalSubMatch::start_match(Xapian::doccount first,$/;"	f	class:LocalSubMatch
start_match	matcher/remotesubmatch.cc	/^RemoteSubMatch::start_match(Xapian::doccount first,$/;"	f	class:RemoteSubMatch
start_position_list	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::start_position_list(unsigned i)$/;"	f	class:ExactPhrasePostList
started	api/maptermlist.h	/^	bool started;$/;"	m	class:MapTermList
started	api/matchspy.cc	/^    bool started;$/;"	m	class:StringAndFreqTermList	file:
started	api/matchspy.cc	/^    bool started;$/;"	m	class:ValueCountTermList	file:
started	backends/brass/brass_postlist.cc	/^	bool started;$/;"	m	class:Brass::PostlistChunkWriter	file:
started	backends/chert/chert_postlist.cc	/^	bool started;$/;"	m	class:Chert::PostlistChunkWriter	file:
started	backends/flint/flint_postlist.cc	/^	bool started;$/;"	m	class:FlintPostlistChunkWriter	file:
started	backends/inmemory/inmemory_database.h	/^	bool started;$/;"	m	class:InMemoryPostList
started	backends/inmemory/inmemory_database.h	/^	bool started;$/;"	m	class:InMemoryTermList
started	backends/remote/net_postlist.h	/^    bool started;$/;"	m	class:NetworkPostList
started	backends/remote/net_termlist.h	/^	bool started;$/;"	m	class:NetworkTermList
started	include/xapian/postingsource.h	/^    bool started;$/;"	m	class:Xapian::FixedWeightPostingSource
started	include/xapian/postingsource.h	/^    bool started;$/;"	m	class:Xapian::ValuePostingSource
started	tests/api_percentages.cc	/^    bool started;$/;"	m	class:MyPostingSource	file:
starter	languages/compiler/header.h	/^    struct node * starter;    \/* i.e. among( (starter) 'string' ... ) *\/$/;"	m	struct:among	typeref:struct:among::node
startswith	common/stringutils.h	/^startswith(const std::string & s, char pfx)$/;"	f
startswith	common/stringutils.h	/^startswith(const std::string & s, const char * pfx)$/;"	f
startswith	common/stringutils.h	/^startswith(const std::string & s, const char * pfx, size_t len)$/;"	f
startswith	common/stringutils.h	/^startswith(const std::string & s, const std::string & pfx)$/;"	f
stat	common/safesysstat.h	/^# undef stat$/;"	d
stat	common/safesysstat.h	/^#define stat /;"	d
stat	common/utils.h	/^inline int stat(const string &filename, struct stat *buf) {$/;"	f
stat_flags	include/xapian/weight.h	/^    } stat_flags;$/;"	t	class:Xapian::Weight	typeref:enum:Xapian::Weight::__anon19
state	queryparser/lemon.c	/^  } state;                   \/* The state of the parser *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_state	file:
state	queryparser/lemon.c	/^struct state {$/;"	s	file:
state	queryparser/queryparser_internal.cc	/^    State * state;$/;"	m	class:Term	file:
stateResortCompare	queryparser/lemon.c	/^static int stateResortCompare(const void *a, const void *b){$/;"	f	file:
statecmp	queryparser/lemon.c	/^PRIVATE int statecmp(a,b)$/;"	f
statehash	queryparser/lemon.c	/^PRIVATE int statehash(a)$/;"	f
stateno	queryparser/queryparser_internal.cc	/^  YYACTIONTYPE stateno;  \/* The state-number *\/$/;"	m	struct:yyStackEntry	file:
statenum	queryparser/lemon.c	/^  int statenum;            \/* Sequential number for this state *\/$/;"	m	struct:state	file:
stats	backends/brass/brass_database.h	/^	BrassDatabaseStats stats;$/;"	m	class:BrassDatabase
stats	backends/chert/chert_database.h	/^	ChertDatabaseStats stats;$/;"	m	class:ChertDatabase
stats	matcher/localsubmatch.h	/^    const Xapian::Weight::Internal * stats;$/;"	m	class:LocalSubMatch
stats_needed	include/xapian/weight.h	/^    stat_flags stats_needed;$/;"	m	class:Xapian::Weight
status	queryparser/lemon.c	/^  } status;$/;"	m	struct:config	typeref:enum:config::__anon25	file:
stdout_to_string	tests/perftest/runprocess.cc	/^stdout_to_string(const string &cmd)$/;"	f
stem	languages/danish.cc	/^int Xapian::InternalStemDanish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDanish
stem	languages/dutch.cc	/^int Xapian::InternalStemDutch::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemDutch
stem	languages/english.cc	/^int Xapian::InternalStemEnglish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemEnglish
stem	languages/finnish.cc	/^int Xapian::InternalStemFinnish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFinnish
stem	languages/french.cc	/^int Xapian::InternalStemFrench::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemFrench
stem	languages/german.cc	/^int Xapian::InternalStemGerman::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman
stem	languages/german2.cc	/^int Xapian::InternalStemGerman2::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemGerman2
stem	languages/hungarian.cc	/^int Xapian::InternalStemHungarian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemHungarian
stem	languages/italian.cc	/^int Xapian::InternalStemItalian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemItalian
stem	languages/kraaij_pohlmann.cc	/^int Xapian::InternalStemKraaij_pohlmann::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
stem	languages/lovins.cc	/^int Xapian::InternalStemLovins::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemLovins
stem	languages/norwegian.cc	/^int Xapian::InternalStemNorwegian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemNorwegian
stem	languages/porter.cc	/^int Xapian::InternalStemPorter::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPorter
stem	languages/portuguese.cc	/^int Xapian::InternalStemPortuguese::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemPortuguese
stem	languages/romanian.cc	/^int Xapian::InternalStemRomanian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRomanian
stem	languages/russian.cc	/^int Xapian::InternalStemRussian::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemRussian
stem	languages/spanish.cc	/^int Xapian::InternalStemSpanish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSpanish
stem	languages/swedish.cc	/^int Xapian::InternalStemSwedish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemSwedish
stem	languages/turkish.cc	/^int Xapian::InternalStemTurkish::stem() { \/* forwardmode *\/$/;"	f	class:Xapian::InternalStemTurkish
stem	queryparser/queryparser_internal.cc	/^    QueryParser::stem_strategy stem;$/;"	m	class:Term	file:
stem_action	queryparser/queryparser_internal.h	/^    stem_strategy stem_action;$/;"	m	class:Xapian::QueryParser::Internal
stem_strategy	include/xapian/queryparser.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	t	class:Xapian::QueryParser	typeref:enum:Xapian::QueryParser::__anon16
stem_strategy	include/xapian/termgenerator.h	/^    typedef enum { STEM_NONE, STEM_SOME, STEM_ALL, STEM_ALL_Z } stem_strategy;$/;"	t	class:Xapian::TermGenerator	typeref:enum:Xapian::TermGenerator::__anon17
stem_term	queryparser/queryparser_internal.cc	/^    string stem_term(const string &term) {$/;"	f	class:State
stemmer	examples/delve.cc	/^static Stem stemmer;$/;"	v	file:
stemmer	queryparser/queryparser_internal.h	/^    Stem stemmer;$/;"	m	class:Xapian::QueryParser::Internal
stemmer	queryparser/termgenerator_internal.h	/^    Stem stemmer;$/;"	m	class:Xapian::TermGenerator::Internal
stemmer	tests/stemtest.cc	/^static Xapian::Stem stemmer;$/;"	v	file:
stemtest_DEPENDENCIES	tests/Makefile	/^stemtest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
stemtest_LDADD	tests/Makefile	/^stemtest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
stemtest_LDFLAGS	tests/Makefile	/^stemtest_LDFLAGS = -no-fast-install $(ldflags)$/;"	m
stemtest_LINK	tests/Makefile	/^stemtest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
stemtest_OBJECTS	tests/Makefile	/^stemtest_OBJECTS = $(am_stemtest_OBJECTS)$/;"	m
stemtest_SOURCES	tests/Makefile	/^stemtest_SOURCES = stemtest.cc $(testharness_sources)$/;"	m
stop_words	include/xapian/queryparser.h	/^    std::set<std::string> stop_words;$/;"	m	class:Xapian::SimpleStopper
stoplist	queryparser/queryparser_internal.h	/^    list<string> stoplist;$/;"	m	class:Xapian::QueryParser::Internal
stoplist_begin	queryparser/queryparser.cc	/^QueryParser::stoplist_begin() const$/;"	f	class:QueryParser
stoplist_end	include/xapian/queryparser.h	/^    TermIterator stoplist_end() const {$/;"	f	class:Xapian::QueryParser
stoplist_resize	queryparser/queryparser_internal.cc	/^    void stoplist_resize(size_t s) {$/;"	f	class:State
stoplist_size	queryparser/queryparser_internal.cc	/^    size_t stoplist_size() const {$/;"	f	class:State
stopper	queryparser/queryparser_internal.h	/^    const Stopper * stopper;$/;"	m	class:Xapian::QueryParser::Internal
stopper	queryparser/termgenerator_internal.h	/^    const Stopper * stopper;$/;"	m	class:Xapian::TermGenerator::Internal
stp	queryparser/lemon.c	/^    struct state *stp;     \/* The new state, if a shift *\/$/;"	m	union:action::__anon26	typeref:struct:action::__anon26::state	file:
stp	queryparser/lemon.c	/^  struct state *stp;       \/* Pointer to state which contains this *\/$/;"	m	struct:config	typeref:struct:config::state	file:
stp	queryparser/lemon.c	/^  struct state *stp;   \/* A pointer to a state *\/$/;"	m	struct:axset	typeref:struct:axset::state	file:
str	api/matchspy.cc	/^    std::string str;$/;"	m	class:StringAndFrequency	file:
str	common/str.cc	/^str(const void * value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(double value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(int value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(long long value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(long value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(unsigned int value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(unsigned long long value)$/;"	f	namespace:Xapian::Internal
str	common/str.cc	/^str(unsigned long value)$/;"	f	namespace:Xapian::Internal
str	common/str.h	/^inline std::string str(bool value) {$/;"	f	namespace:Xapian::Internal
str	common/str.h	/^inline std::string str(const char * value) { return value; }$/;"	f	namespace:Xapian::Internal
str	common/str.h	/^inline std::string str(const std::string & value) { return value; }$/;"	f	namespace:Xapian::Internal
str	include/xapian/queryparser.h	/^    std::string str;$/;"	m	class:Xapian::StringValueRangeProcessor
str	languages/compiler/space.c	/^struct str {$/;"	s	file:
str_append	languages/compiler/space.c	/^extern void str_append(struct str * str, struct str * add) {$/;"	f
str_append_b	languages/compiler/space.c	/^extern void str_append_b(struct str * str, symbol * q) {$/;"	f
str_append_ch	languages/compiler/space.c	/^extern void str_append_ch(struct str * str, char add) {$/;"	f
str_append_int	languages/compiler/space.c	/^extern void str_append_int(struct str * str, int i) {$/;"	f
str_append_string	languages/compiler/space.c	/^extern void str_append_string(struct str * str, const char * s) {$/;"	f
str_assign	languages/compiler/space.c	/^extern void str_assign(struct str * str, char * s) {$/;"	f
str_clear	languages/compiler/space.c	/^extern void str_clear(struct str * str) {$/;"	f
str_copy	languages/compiler/space.c	/^extern struct str * str_copy(struct str * old) {$/;"	f
str_data	languages/compiler/space.c	/^extern symbol * str_data(struct str * str) {$/;"	f
str_delete	languages/compiler/space.c	/^extern void str_delete(struct str * str) {$/;"	f
str_len	languages/compiler/space.c	/^extern int str_len(struct str * str) {$/;"	f
str_new	languages/compiler/space.c	/^extern struct str * str_new() {$/;"	f
str_parameter	include/xapian/query.h	/^	std::string str_parameter;$/;"	m	class:Xapian::Query::Internal
strategy	queryparser/termgenerator_internal.h	/^    stem_strategy strategy;$/;"	m	class:Xapian::TermGenerator::Internal
strhash	queryparser/lemon.c	/^PRIVATE int strhash(x)$/;"	f
subdir	Makefile	/^subdir = .$/;"	m
subdir	docs/Makefile	/^subdir = docs$/;"	m
subdir	tests/Makefile	/^subdir = tests$/;"	m
submission_path	tests/submitperftest	/^submission_path = "http:\/\/tartarus.org\/richard\/perftest\/upload.cgi"$/;"	v
submission_path	tests/submitperftest.in	/^submission_path = "http:\/\/tartarus.org\/richard\/perftest\/upload.cgi"$/;"	v
submit_perftest	tests/submitperftest	/^def submit_perftest(filepath):$/;"	f
submit_perftest	tests/submitperftest.in	/^def submit_perftest(filepath):$/;"	f
subqs	include/xapian/query.h	/^	subquery_list subqs;$/;"	m	class:Xapian::Query::Internal
subquery_list	include/xapian/query.h	/^	typedef std::vector<Internal *> subquery_list;$/;"	t	class:Xapian::Query::Internal
substring	languages/compiler/header.h	/^    struct node * substring;  \/* i.e. substring ... among ( ... ) *\/$/;"	m	struct:among	typeref:struct:among::node
substring	languages/compiler/header.h	/^    struct node * substring;  \/* pending 'substring' in current routine definition *\/$/;"	m	struct:analyser	typeref:struct:analyser::node
substring_i	languages/steminternal.h	/^    int substring_i;	\/* index to longest matching substring *\/$/;"	m	struct:among
subsym	queryparser/lemon.c	/^  struct symbol **subsym;  \/* Array of constituent symbols *\/$/;"	m	struct:symbol	typeref:struct:symbol::symbol	file:
subtotal	tests/harness/testsuite.cc	/^test_driver::result test_driver::subtotal;$/;"	m	class:test_driver	file:
subtotal	tests/harness/testsuite.h	/^	static result subtotal;$/;"	m	class:test_driver
subtree	matcher/synonympostlist.h	/^    PostList * subtree;$/;"	m	class:SynonymPostList
subtype	tests/harness/backendmanager_multi.h	/^    std::string subtype;$/;"	m	class:BackendManagerMulti
succeeded	tests/harness/testsuite.h	/^	    unsigned int succeeded;$/;"	m	struct:test_driver::result
sum	tests/api_weight.cc	/^    Xapian::termcount & sum;$/;"	m	class:CheckStatsWeight	file:
sum_squares	tests/api_weight.cc	/^    Xapian::termcount & sum_squares;$/;"	m	class:CheckStatsWeight	file:
sw	examples/quest.cc	/^static const char * sw[] = {$/;"	v	file:
swap	api/omenquire.cc	/^ESet::swap(ESet & other)$/;"	f	class:Xapian::ESet
swap	api/omenquire.cc	/^MSet::swap(MSet & other)$/;"	f	class:Xapian::MSet
swap	backends/brass/brass_btreebase.cc	/^BrassTable_base::swap(BrassTable_base &other)$/;"	f	class:BrassTable_base
swap	backends/chert/chert_btreebase.cc	/^ChertTable_base::swap(ChertTable_base &other)$/;"	f	class:ChertTable_base
swap	backends/flint/flint_btreebase.cc	/^FlintTable_base::swap(FlintTable_base &other)$/;"	f	class:FlintTable_base
swap	common/esetinternal.h	/^    void swap(ExpandTerm & o) {$/;"	f	class:Xapian::Internal::ExpandTerm
swap	common/omenquireinternal.h	/^	void swap(MSetItem & o) {$/;"	f	class:Xapian::Internal::MSetItem
symbol	languages/compiler/header.h	/^typedef unsigned short symbol;$/;"	t
symbol	languages/steminternal.h	/^typedef unsigned char symbol;$/;"	t
symbol	queryparser/lemon.c	/^struct symbol {$/;"	s	file:
symbols	queryparser/lemon.c	/^  struct symbol **symbols; \/* Sorted array of pointers to symbols *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
sync_and_skip_to	matcher/andnotpostlist.cc	/^AndNotPostList::sync_and_skip_to(Xapian::docid id,$/;"	f	class:AndNotPostList
sync_rhs	matcher/andmaybepostlist.cc	/^AndMaybePostList::sync_rhs(Xapian::weight w_min)$/;"	f	class:AndMaybePostList
synonym_keys_begin	api/omdatabase.cc	/^Database::synonym_keys_begin(const std::string &prefix) const$/;"	f	class:Xapian::Database
synonym_keys_end	include/xapian/database.h	/^	Xapian::TermIterator synonym_keys_end(const std::string & = std::string()) const {$/;"	f	class:Xapian::Database
synonym_table	backends/brass/brass_database.h	/^	mutable BrassSynonymTable synonym_table;$/;"	m	class:BrassDatabase
synonym_table	backends/chert/chert_database.h	/^	mutable ChertSynonymTable synonym_table;$/;"	m	class:ChertDatabase
synonym_table	backends/flint/flint_database.h	/^	mutable FlintSynonymTable synonym_table;$/;"	m	class:FlintDatabase
synonyms	tests/harness/testrunner.h	/^    bool synonyms;$/;"	m	class:TestRunner
synonyms_begin	api/omdatabase.cc	/^Database::synonyms_begin(const std::string &term) const$/;"	f	class:Xapian::Database
synonyms_end	include/xapian/database.h	/^	Xapian::TermIterator synonyms_end(const std::string &) const {$/;"	f	class:Xapian::Database
syntax_tree	languages/compiler/header.h	/^    byte syntax_tree;$/;"	m	struct:options
sys	tests/submitperftest	/^import sys$/;"	i
sys	tests/submitperftest.in	/^import sys$/;"	i
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	docs/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	tests/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
system	common/utils.h	/^inline int system(const string &command) { return system(command.c_str()); }$/;"	f
system_word	languages/compiler/tokeniser.c	/^struct system_word {$/;"	s	file:
t_boolean	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_external	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_grouping	languages/compiler/header.h	/^    t_grouping = 5$/;"	e	enum:name_types
t_integer	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_routine	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
t_size	languages/compiler/header.h	/^    t_size = 6,$/;"	e	enum:name_types
t_string	languages/compiler/header.h	/^    t_string = 0, t_boolean = 1, t_integer = 2, t_routine = 3, t_external = 4,$/;"	e	enum:name_types
table	backends/brass/brass_values.cc	/^    BrassPostListTable * table;$/;"	m	class:Brass::ValueUpdater	file:
table	backends/chert/chert_values.cc	/^    ChertPostListTable * table;$/;"	m	class:ValueUpdater	file:
table	matcher/collapser.h	/^    std::map<std::string, CollapseData> table;$/;"	m	class:Collapser
tablename	backends/brass/brass_table.h	/^	const char * tablename;$/;"	m	class:BrassTable
tablename	backends/chert/chert_table.h	/^	const char * tablename;$/;"	m	class:ChertTable
tablename	backends/flint/flint_table.h	/^	const char * tablename;$/;"	m	class:FlintTable
tablesize	queryparser/lemon.c	/^  int tablesize;           \/* Size of the parse tables *\/$/;"	m	struct:lemon	file:
tag	backends/brass/brass_compact.cc	/^    string key, tag;$/;"	m	class:BrassCompact::PostlistCursor	file:
tag	backends/brass/brass_values.cc	/^    string tag;$/;"	m	class:Brass::ValueUpdater	file:
tag	backends/chert/chert_compact.cc	/^    string key, tag;$/;"	m	class:ChertCompact::PostlistCursor	file:
tag	backends/chert/chert_values.cc	/^    string tag;$/;"	m	class:ValueUpdater	file:
tag	backends/flint/flint_compact.cc	/^    string key, tag;$/;"	m	class:FlintCompact::PostlistCursor	file:
tag_status	backends/brass/brass_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	m	class:BrassCursor	typeref:enum:BrassCursor::__anon3
tag_status	backends/chert/chert_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	m	class:ChertCursor	typeref:enum:ChertCursor::__anon4
tag_status	backends/flint/flint_cursor.h	/^	enum { UNREAD, UNCOMPRESSED, COMPRESSED } tag_status;$/;"	m	class:FlintCursor	typeref:enum:FlintCursor::__anon5
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	docs/Makefile	/^target_alias = $/;"	m
target_alias	tests/Makefile	/^target_alias = $/;"	m
tbl	queryparser/lemon.c	/^  struct s_x1node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
tbl	queryparser/lemon.c	/^  struct s_x2node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
tbl	queryparser/lemon.c	/^  struct s_x3node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
tbl	queryparser/lemon.c	/^  struct s_x4node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
term	common/esetinternal.h	/^    std::string term;$/;"	m	class:Xapian::Internal::ExpandTerm
term	common/leafpostlist.h	/^    std::string term;$/;"	m	class:LeafPostList
term	tests/api_weight.cc	/^    string term;$/;"	m	class:CheckStatsWeight	file:
term_exists	api/omdatabase.cc	/^Database::term_exists(const string & tname) const$/;"	f	class:Xapian::Database
term_exists	backends/brass/brass_database.cc	/^BrassDatabase::term_exists(const string & term) const$/;"	f	class:BrassDatabase
term_exists	backends/brass/brass_database.cc	/^BrassWritableDatabase::term_exists(const string & tname) const$/;"	f	class:BrassWritableDatabase
term_exists	backends/brass/brass_postlist.h	/^	bool term_exists(const string & term) const {$/;"	f	class:BrassPostListTable
term_exists	backends/chert/chert_database.cc	/^ChertDatabase::term_exists(const string & term) const$/;"	f	class:ChertDatabase
term_exists	backends/chert/chert_database.cc	/^ChertWritableDatabase::term_exists(const string & tname) const$/;"	f	class:ChertWritableDatabase
term_exists	backends/chert/chert_postlist.h	/^	bool term_exists(const string & term) const {$/;"	f	class:ChertPostListTable
term_exists	backends/flint/flint_database.cc	/^FlintDatabase::term_exists(const string & term) const$/;"	f	class:FlintDatabase
term_exists	backends/flint/flint_database.cc	/^FlintWritableDatabase::term_exists(const string & tname) const$/;"	f	class:FlintWritableDatabase
term_exists	backends/flint/flint_postlist.h	/^	bool term_exists(const string & term) const {$/;"	f	class:FlintPostListTable
term_exists	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::term_exists(const string & tname) const$/;"	f	class:InMemoryDatabase
term_exists	backends/remote/remote-database.cc	/^RemoteDatabase::term_exists(const string & tname) const$/;"	f	class:RemoteDatabase
term_exists	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::term_exists(const string & tname) const$/;"	f	class:ConstDatabaseWrapper
term_freq	backends/inmemory/inmemory_database.h	/^	Xapian::termcount term_freq;$/;"	m	class:InMemoryTerm
term_info	matcher/localsubmatch.h	/^	     Xapian::MSet::Internal::TermFreqAndWeight> * term_info;$/;"	m	class:LocalSubMatch
term_pos	include/xapian/query.h	/^	Xapian::termpos term_pos;$/;"	m	class:Xapian::Query::Internal
term_positions	common/documentterm.h	/^    typedef vector<Xapian::termpos> term_positions;$/;"	t	class:OmDocumentTerm
term_positions_modified	common/document.h	/^	bool term_positions_modified() const {$/;"	f	class:Xapian::Document::Internal
termcount	include/xapian/types.h	/^typedef unsigned termcount;$/;"	t	namespace:Xapian
termcount_diff	include/xapian/types.h	/^typedef int termcount_diff; \/* FIXME: can overflow with more than 2^31 terms. *\/$/;"	t	namespace:Xapian
termfreq	backends/brass/brass_alltermslist.h	/^    mutable Xapian::doccount termfreq;$/;"	m	class:BrassAllTermsList
termfreq	backends/brass/brass_spellingwordslist.h	/^    mutable Xapian::termcount termfreq;$/;"	m	class:BrassSpellingWordsList
termfreq	backends/chert/chert_alltermslist.h	/^    mutable Xapian::doccount termfreq;$/;"	m	class:ChertAllTermsList
termfreq	backends/chert/chert_spellingwordslist.h	/^    mutable Xapian::termcount termfreq;$/;"	m	class:ChertSpellingWordsList
termfreq	backends/flint/flint_alltermslist.h	/^    mutable Xapian::doccount termfreq;$/;"	m	class:FlintAllTermsList
termfreq	backends/flint/flint_spellingwordslist.h	/^    mutable Xapian::termcount termfreq;$/;"	m	class:FlintSpellingWordsList
termfreq	backends/inmemory/inmemory_database.h	/^	Xapian::doccount termfreq;$/;"	m	class:InMemoryPostList
termfreq	backends/remote/net_postlist.h	/^    Xapian::doccount termfreq;$/;"	m	class:NetworkPostList
termfreq	backends/remote/net_termlist.h	/^	Xapian::doccount termfreq;$/;"	m	class:NetworkTermListItem
termfreq	common/expandweight.h	/^    Xapian::doccount termfreq;$/;"	m	class:Xapian::Internal::ExpandStats
termfreq	common/omenquireinternal.h	/^	    Xapian::doccount termfreq;$/;"	m	struct:Xapian::MSet::Internal::TermFreqAndWeight
termfreq	common/weightinternal.h	/^    Xapian::doccount termfreq;$/;"	m	struct:TermFreqs
termfreq	include/xapian/postingsource.h	/^    Xapian::doccount termfreq;$/;"	m	class:Xapian::FixedWeightPostingSource
termfreq_	include/xapian/weight.h	/^    Xapian::doccount termfreq_;$/;"	m	class:Xapian::Weight
termfreq_est	include/xapian/postingsource.h	/^    Xapian::doccount termfreq_est;$/;"	m	class:Xapian::ValuePostingSource
termfreq_factor	backends/multi/multi_termlist.h	/^	double termfreq_factor;$/;"	m	class:MultiTermList
termfreq_max	include/xapian/postingsource.h	/^    Xapian::doccount termfreq_max;$/;"	m	class:Xapian::ValuePostingSource
termfreq_min	include/xapian/postingsource.h	/^    Xapian::doccount termfreq_min;$/;"	m	class:Xapian::ValuePostingSource
termfreqandwts	common/omenquireinternal.h	/^	map<string, TermFreqAndWeight> termfreqandwts;$/;"	m	class:Xapian::MSet::Internal
termfreqs	common/weightinternal.h	/^    std::map<std::string, TermFreqs> termfreqs;$/;"	m	class:Xapian::Weight::Internal
termgentest_DEPENDENCIES	tests/Makefile	/^termgentest_DEPENDENCIES = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
termgentest_LDADD	tests/Makefile	/^termgentest_LDADD = ..\/libgetopt.la ..\/$(libxapian_la)$/;"	m
termgentest_LDFLAGS	tests/Makefile	/^termgentest_LDFLAGS = -no-fast-install $(ldflags)$/;"	m
termgentest_LINK	tests/Makefile	/^termgentest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
termgentest_OBJECTS	tests/Makefile	/^termgentest_OBJECTS = $(am_termgentest_OBJECTS)$/;"	m
termgentest_SOURCES	tests/Makefile	/^termgentest_SOURCES = termgentest.cc $(testharness_sources)$/;"	m
termlist_begin	api/omdatabase.cc	/^Database::termlist_begin(Xapian::docid did) const$/;"	f	class:Xapian::Database
termlist_begin	api/omdocument.cc	/^Document::termlist_begin() const$/;"	f	class:Xapian::Document
termlist_count	api/omdocument.cc	/^Document::termlist_count() const {$/;"	f	class:Xapian::Document
termlist_count	api/omdocument.cc	/^Xapian::Document::Internal::termlist_count() const$/;"	f	class:Xapian::Document::Internal
termlist_deltas	backends/brass/brass_spelling.h	/^    std::map<Brass::fragment, std::set<std::string> > termlist_deltas;$/;"	m	class:BrassSpellingTable
termlist_deltas	backends/chert/chert_spelling.h	/^    std::map<fragment, std::set<std::string> > termlist_deltas;$/;"	m	class:ChertSpellingTable
termlist_deltas	backends/flint/flint_spelling.h	/^    std::map<F_fragment, std::set<std::string> > termlist_deltas;$/;"	m	class:FlintSpellingTable
termlist_end	include/xapian/database.h	/^	TermIterator termlist_end(Xapian::docid) const {$/;"	f	class:Xapian::Database
termlist_end	include/xapian/document.h	/^	TermIterator termlist_end() const {$/;"	f	class:Xapian::Document
termlist_size	backends/brass/brass_termlist.h	/^    Xapian::termcount termlist_size;$/;"	m	class:BrassTermList
termlist_size	backends/chert/chert_termlist.h	/^    Xapian::termcount termlist_size;$/;"	m	class:ChertTermList
termlist_size	backends/flint/flint_termlist.h	/^    Xapian::termcount termlist_size;$/;"	m	class:FlintTermList
termlist_table	backends/brass/brass_database.h	/^	BrassTermListTable termlist_table;$/;"	m	class:BrassDatabase
termlist_table	backends/brass/brass_values.h	/^    BrassTermListTable * termlist_table;$/;"	m	class:BrassValueManager
termlist_table	backends/chert/chert_database.h	/^	ChertTermListTable termlist_table;$/;"	m	class:ChertDatabase
termlist_table	backends/chert/chert_values.h	/^    ChertTermListTable * termlist_table;$/;"	m	class:ChertValueManager
termlist_table	backends/flint/flint_database.h	/^	FlintTermListTable termlist_table;$/;"	m	class:FlintDatabase
termlists	backends/inmemory/inmemory_database.h	/^    vector<InMemoryDoc> termlists;$/;"	m	class:InMemoryDatabase
termlists	common/multialltermslist.h	/^    std::vector<TermList *> termlists;$/;"	m	class:MultiAllTermsList
termpos	include/xapian/types.h	/^typedef unsigned termpos;$/;"	t	namespace:Xapian
termpos	queryparser/termgenerator_internal.h	/^    termcount termpos;$/;"	m	class:Xapian::TermGenerator::Internal
termpos_diff	include/xapian/types.h	/^typedef int termpos_diff; \/* FIXME: can overflow. *\/$/;"	t	namespace:Xapian
terms	backends/inmemory/inmemory_database.h	/^	Xapian::termcount terms;$/;"	m	class:InMemoryTermList
terms	backends/inmemory/inmemory_database.h	/^	vector<InMemoryTermEntry> terms;$/;"	m	class:InMemoryDoc
terms	common/document.h	/^	mutable document_terms terms;$/;"	m	class:Xapian::Document::Internal
terms	common/vectortermlist.h	/^	vector<string> terms;$/;"	m	class:VectorTermList
terms	matcher/exactphrasepostlist.cc	/^    vector<PostList *> & terms;$/;"	m	class:TermCompare	file:
terms	matcher/exactphrasepostlist.h	/^    std::vector<PostList*> terms;$/;"	m	class:ExactPhrasePostList
terms	matcher/phrasepostlist.h	/^	std::vector<PostList *> terms;$/;"	m	class:NearPostList
terms	matcher/phrasepostlist.h	/^	std::vector<PostList *> terms;$/;"	m	class:PhrasePostList
terms	queryparser/queryparser_internal.cc	/^    vector<Term *> terms;$/;"	m	class:TermGroup	file:
terms	queryparser/queryparser_internal.cc	/^    vector<Term *> terms;$/;"	m	class:Terms	file:
terms_here	common/document.h	/^	mutable bool terms_here;$/;"	m	class:Xapian::Document::Internal
terms_modified	common/document.h	/^	bool terms_modified() const {$/;"	f	class:Xapian::Document::Internal
termstats_to_string	tests/dbcheck.cc	/^termstats_to_string(const Xapian::Database & db, const string & term)$/;"	f
termweight	common/omenquireinternal.h	/^	    Xapian::weight termweight;$/;"	m	struct:Xapian::MSet::Internal::TermFreqAndWeight
termweight	include/xapian/weight.h	/^    mutable Xapian::weight termweight;$/;"	m	class:Xapian::BM25Weight
termweight	include/xapian/weight.h	/^    mutable Xapian::weight termweight;$/;"	m	class:Xapian::TradWeight
test	tests/api_qpbackend.cc	/^struct test {$/;"	s	file:
test	tests/internaltest.cc	/^	Xapian::Internal::RefCntPtr<const test_refcnt> test() {$/;"	f	class:test_refcnt
test	tests/queryparsertest.cc	/^struct test {$/;"	s	file:
test	tests/termgentest.cc	/^struct test {$/;"	s	file:
test_and_queries	tests/queryparsertest.cc	/^static const test test_and_queries[] = {$/;"	v	file:
test_autoptr	tests/internaltest.cc	/^    test_autoptr(bool &deleted_) : deleted(deleted_) {$/;"	f	class:test_autoptr
test_autoptr	tests/internaltest.cc	/^class test_autoptr {$/;"	c	file:
test_autoptr1	tests/internaltest.cc	/^static bool test_autoptr1()$/;"	f	file:
test_desc	tests/harness/testsuite.h	/^struct test_desc {$/;"	s
test_doc	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::test_doc()$/;"	f	class:ExactPhrasePostList
test_doc	matcher/phrasepostlist.cc	/^NearPostList::test_doc()$/;"	f	class:NearPostList
test_doc	matcher/phrasepostlist.cc	/^PhrasePostList::test_doc()$/;"	f	class:PhrasePostList
test_driver	tests/harness/testsuite.cc	/^test_driver::test_driver(const test_desc *tests_)$/;"	f	class:test_driver
test_driver	tests/harness/testsuite.h	/^class test_driver {$/;"	c
test_emptyterm1_helper	tests/api_anydb.cc	/^static void test_emptyterm1_helper(Xapian::Database & db)$/;"	f	file:
test_emptyterm2_helper	tests/api_wrdb.cc	/^static void test_emptyterm2_helper(Xapian::WritableDatabase & db)$/;"	f	file:
test_except1	tests/internaltest.cc	/^static bool test_except1()$/;"	f	file:
test_exception1	tests/internaltest.cc	/^static bool test_exception1()$/;"	f	file:
test_func	tests/harness/testsuite.h	/^typedef bool (*test_func)();$/;"	t
test_mispelled_partial_queries	tests/queryparsertest.cc	/^static const test test_mispelled_partial_queries[] = {$/;"	v	file:
test_mispelled_queries	tests/queryparsertest.cc	/^static const test test_mispelled_queries[] = {$/;"	v	file:
test_mispelled_wildcard_queries	tests/queryparsertest.cc	/^static const test test_mispelled_wildcard_queries[] = {$/;"	v	file:
test_mset_order_equal	tests/harness/testutils.cc	/^test_mset_order_equal(const Xapian::MSet &mset1, const Xapian::MSet &mset2)$/;"	f
test_multi_synonym_queries	tests/queryparsertest.cc	/^static const test test_multi_synonym_queries[] = {$/;"	v	file:
test_names	tests/harness/testsuite.cc	/^vector<string> test_driver::test_names;$/;"	m	class:test_driver	file:
test_names	tests/harness/testsuite.h	/^	static std::vector<std::string> test_names;$/;"	m	class:test_driver
test_near_queries	tests/queryparsertest.cc	/^static const test test_near_queries[] = {$/;"	v	file:
test_or_queries	tests/queryparsertest.cc	/^static const test test_or_queries[] = {$/;"	v	file:
test_pack_uint_preserving_sort1	tests/internaltest.cc	/^static bool test_pack_uint_preserving_sort1()$/;"	f	file:
test_phrase_queries	tests/queryparsertest.cc	/^static const test test_phrase_queries[] = {$/;"	v	file:
test_pure_not_queries	tests/queryparsertest.cc	/^static const test test_pure_not_queries[] = {$/;"	v	file:
test_qp_default_op1	tests/queryparsertest.cc	/^static bool test_qp_default_op1()$/;"	f	file:
test_qp_default_op2	tests/queryparsertest.cc	/^static bool test_qp_default_op2()$/;"	f	file:
test_qp_default_prefix1	tests/queryparsertest.cc	/^static bool test_qp_default_prefix1()$/;"	f	file:
test_qp_default_prefix2	tests/queryparsertest.cc	/^static bool test_qp_default_prefix2()$/;"	f	file:
test_qp_flag_bool_any_case1	tests/queryparsertest.cc	/^static bool test_qp_flag_bool_any_case1()$/;"	f	file:
test_qp_flag_partial1	tests/queryparsertest.cc	/^static bool test_qp_flag_partial1()$/;"	f	file:
test_qp_flag_pure_not1	tests/queryparsertest.cc	/^static bool test_qp_flag_pure_not1()$/;"	f	file:
test_qp_flag_wildcard1	tests/queryparsertest.cc	/^static bool test_qp_flag_wildcard1()$/;"	f	file:
test_qp_flag_wildcard1_helper	tests/queryparsertest.cc	/^test_qp_flag_wildcard1_helper(const Xapian::Database &db,$/;"	f	file:
test_qp_flag_wildcard2	tests/queryparsertest.cc	/^static bool test_qp_flag_wildcard2()$/;"	f	file:
test_qp_flag_wildcard3	tests/queryparsertest.cc	/^static bool test_qp_flag_wildcard3()$/;"	f	file:
test_qp_near1	tests/queryparsertest.cc	/^static bool test_qp_near1()$/;"	f	file:
test_qp_odd_chars1	tests/queryparsertest.cc	/^static bool test_qp_odd_chars1()$/;"	f	file:
test_qp_phrase1	tests/queryparsertest.cc	/^static bool test_qp_phrase1()$/;"	f	file:
test_qp_scale1	tests/queryparsertest.cc	/^static bool test_qp_scale1()$/;"	f	file:
test_qp_spell1	tests/queryparsertest.cc	/^static bool test_qp_spell1()$/;"	f	file:
test_qp_spell2	tests/queryparsertest.cc	/^static bool test_qp_spell2()$/;"	f	file:
test_qp_spellpartial1	tests/queryparsertest.cc	/^static bool test_qp_spellpartial1()$/;"	f	file:
test_qp_spellwild1	tests/queryparsertest.cc	/^static bool test_qp_spellwild1()$/;"	f	file:
test_qp_stem_all1	tests/queryparsertest.cc	/^static bool test_qp_stem_all1()$/;"	f	file:
test_qp_stem_all_z1	tests/queryparsertest.cc	/^static bool test_qp_stem_all_z1()$/;"	f	file:
test_qp_stoplist1	tests/queryparsertest.cc	/^static bool test_qp_stoplist1()$/;"	f	file:
test_qp_stopper1	tests/queryparsertest.cc	/^static bool test_qp_stopper1()$/;"	f	file:
test_qp_stopword_group1	tests/queryparsertest.cc	/^static bool test_qp_stopword_group1()$/;"	f	file:
test_qp_synonym1	tests/queryparsertest.cc	/^static bool test_qp_synonym1()$/;"	f	file:
test_qp_synonym2	tests/queryparsertest.cc	/^static bool test_qp_synonym2()$/;"	f	file:
test_qp_synonym3	tests/queryparsertest.cc	/^static bool test_qp_synonym3()$/;"	f	file:
test_qp_unstem_boolean_prefix	tests/queryparsertest.cc	/^static bool test_qp_unstem_boolean_prefix()$/;"	f	file:
test_qp_value_customrange1	tests/queryparsertest.cc	/^static bool test_qp_value_customrange1()$/;"	f	file:
test_qp_value_daterange1	tests/queryparsertest.cc	/^static bool test_qp_value_daterange1()$/;"	f	file:
test_qp_value_daterange2	tests/queryparsertest.cc	/^static bool test_qp_value_daterange2()$/;"	f	file:
test_qp_value_range1	tests/queryparsertest.cc	/^static bool test_qp_value_range1()$/;"	f	file:
test_qp_value_range2	tests/queryparsertest.cc	/^static bool test_qp_value_range2()$/;"	f	file:
test_qp_value_range3	tests/queryparsertest.cc	/^static bool test_qp_value_range3()$/;"	f	file:
test_qp_value_range4	tests/queryparsertest.cc	/^static bool test_qp_value_range4()$/;"	f	file:
test_qp_value_stringrange1	tests/queryparsertest.cc	/^static bool test_qp_value_stringrange1()$/;"	f	file:
test_queryparser1	tests/queryparsertest.cc	/^static bool test_queryparser1()$/;"	f	file:
test_refcnt	tests/internaltest.cc	/^	test_refcnt(bool &deleted_) : deleted(deleted_) {$/;"	f	class:test_refcnt
test_refcnt	tests/internaltest.cc	/^class test_refcnt : public Xapian::Internal::RefCntBase {$/;"	c	file:
test_refcnt1	tests/internaltest.cc	/^static bool test_refcnt1()$/;"	f	file:
test_refcnt2	tests/internaltest.cc	/^static bool test_refcnt2()$/;"	f	file:
test_resolverelativepath1	tests/unittest.cc	/^static bool test_resolverelativepath1()$/;"	f	file:
test_result	tests/harness/testsuite.h	/^	typedef enum { PASS = 1, FAIL = 0, SKIP = -1 } test_result;$/;"	t	class:test_driver	typeref:enum:test_driver::__anon34
test_scalability	tests/harness/scalability.cc	/^test_scalability(double (*func)(unsigned), unsigned n, double threshold)$/;"	f
test_serialisedoc1	tests/internaltest.cc	/^static bool test_serialisedoc1()$/;"	f	file:
test_serialisedouble1	tests/internaltest.cc	/^static bool test_serialisedouble1()$/;"	f	file:
test_serialiseerror1	tests/internaltest.cc	/^static bool test_serialiseerror1()$/;"	f	file:
test_serialiselength1	tests/internaltest.cc	/^static bool test_serialiselength1()$/;"	f	file:
test_serialiselength2	tests/internaltest.cc	/^static bool test_serialiselength2()$/;"	f	file:
test_serialisequery1	tests/internaltest.cc	/^static bool test_serialisequery1()$/;"	f	file:
test_simple	tests/termgentest.cc	/^static const test test_simple[] = {$/;"	v	file:
test_static_assert1	tests/internaltest.cc	/^static bool test_static_assert1()$/;"	f	file:
test_stem_all_queries	tests/queryparsertest.cc	/^static const test test_stem_all_queries[] = {$/;"	v	file:
test_stem_all_z_queries	tests/queryparsertest.cc	/^static const test test_stem_all_z_queries[] = {$/;"	v	file:
test_stemdict	tests/stemtest.cc	/^test_stemdict()$/;"	f	file:
test_stemjunk	tests/stemtest.cc	/^test_stemjunk()$/;"	f	file:
test_stemrandom	tests/stemtest.cc	/^test_stemrandom()$/;"	f	file:
test_stop_queries	tests/queryparsertest.cc	/^static const test test_stop_queries[] = {$/;"	v	file:
test_stopword_group_and_queries	tests/queryparsertest.cc	/^static const test test_stopword_group_and_queries[] = {$/;"	v	file:
test_stopword_group_or_queries	tests/queryparsertest.cc	/^static const test test_stopword_group_or_queries[] = {$/;"	v	file:
test_strbool1	tests/internaltest.cc	/^static bool test_strbool1()$/;"	f	file:
test_stringcomp1	tests/internaltest.cc	/^static bool test_stringcomp1()$/;"	f	file:
test_synonym_op_queries	tests/queryparsertest.cc	/^static const test test_synonym_op_queries[] = {$/;"	v	file:
test_synonym_queries	tests/queryparsertest.cc	/^static const test test_synonym_queries[] = {$/;"	v	file:
test_temporarydtor1	tests/internaltest.cc	/^static bool test_temporarydtor1()$/;"	f	file:
test_termgen1	tests/termgentest.cc	/^static bool test_termgen1()$/;"	f	file:
test_termlist3_helper	tests/api_anydb.cc	/^test_termlist3_helper()$/;"	f	file:
test_tg_max_word_length1	tests/termgentest.cc	/^static bool test_tg_max_word_length1()$/;"	f	file:
test_tg_spell1	tests/termgentest.cc	/^static bool test_tg_spell1()$/;"	f	file:
test_tg_spell2	tests/termgentest.cc	/^static bool test_tg_spell2()$/;"	f	file:
test_tostring1	tests/internaltest.cc	/^static bool test_tostring1()$/;"	f	file:
test_value_customrange1_queries	tests/queryparsertest.cc	/^static const test test_value_customrange1_queries[] = {$/;"	v	file:
test_value_daterange1_queries	tests/queryparsertest.cc	/^static const test test_value_daterange1_queries[] = {$/;"	v	file:
test_value_daterange2_queries	tests/queryparsertest.cc	/^static const test test_value_daterange2_queries[] = {$/;"	v	file:
test_value_range1_queries	tests/queryparsertest.cc	/^static const test test_value_range1_queries[] = {$/;"	v	file:
test_value_range2_queries	tests/queryparsertest.cc	/^static const test test_value_range2_queries[] = {$/;"	v	file:
test_value_range4_queries	tests/queryparsertest.cc	/^static const test test_value_range4_queries[] = {$/;"	v	file:
test_value_range_numbers	tests/queryparsertest.cc	/^static const double test_value_range_numbers[] = {$/;"	v	file:
test_value_range_serialise1	tests/queryparsertest.cc	/^static bool test_value_range_serialise1()$/;"	f	file:
test_value_stringrange1_queries	tests/queryparsertest.cc	/^static const test test_value_stringrange1_queries[] = {$/;"	v	file:
testcase	tests/api_unicode.cc	/^struct testcase {$/;"	s	file:
testcase2	tests/api_unicode.cc	/^struct testcase2 {$/;"	s	file:
testcase_begin	tests/perftest/perftest.cc	/^PerfTestLogger::testcase_begin(const string & testcase)$/;"	f	class:PerfTestLogger
testcase_end	tests/perftest/perftest.cc	/^PerfTestLogger::testcase_end()$/;"	f	class:PerfTestLogger
testcase_started	tests/perftest/perftest.h	/^    bool testcase_started;$/;"	m	class:PerfTestLogger
testcases	tests/api_unicode.cc	/^static const testcase testcases[] = {$/;"	v	file:
testcases2	tests/api_unicode.cc	/^static const testcase2 testcases2[] = {$/;"	v	file:
testharness_sources	tests/Makefile	/^testharness_sources = harness\/backendmanager.cc \\$/;"	m
testharness_sources	tests/harness/Makefile.mk	/^testharness_sources =\\$/;"	m
tests	tests/harness/testsuite.h	/^	const test_desc *tests;$/;"	m	class:test_driver
tests	tests/internaltest.cc	/^static const test_desc tests[] = {$/;"	v	file:
tests	tests/queryparsertest.cc	/^static const test_desc tests[] = {$/;"	v	file:
tests	tests/stemtest.cc	/^static const test_desc tests[] = {$/;"	v	file:
tests	tests/termgentest.cc	/^static const test_desc tests[] = {$/;"	v	file:
testset	include/xapian/valuesetmatchdecider.h	/^    std::set<std::string> testset;$/;"	m	class:Xapian::ValueSetMatchDecider
text	tests/termgentest.cc	/^    const char *text;$/;"	m	struct:test	file:
tf	backends/brass/brass_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:BrassCompact::PostlistCursor	file:
tf	backends/chert/chert_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:ChertCompact::PostlistCursor	file:
tf	backends/flint/flint_compact.cc	/^    Xapian::termcount tf, cf;$/;"	m	class:FlintCompact::PostlistCursor	file:
tf_delta	backends/brass/brass_inverter.h	/^	Xapian::termcount_diff tf_delta;$/;"	m	class:Inverter::PostingChanges
this_db	backends/brass/brass_postlist.h	/^	Xapian::Internal::RefCntPtr<const BrassDatabase> this_db;$/;"	m	class:BrassPostList
this_db	backends/chert/chert_postlist.h	/^	Xapian::Internal::RefCntPtr<const ChertDatabase> this_db;$/;"	m	class:ChertPostList
this_db	backends/flint/flint_postlist.h	/^	Xapian::Internal::RefCntPtr<const FlintDatabase> this_db;$/;"	m	class:FlintPostList
this_db	backends/multi/multi_postlist.h	/^	const Xapian::Database &this_db;$/;"	m	class:MultiPostList
this_db	backends/remote/net_termlist.h	/^	Xapian::Internal::RefCntPtr<const RemoteDatabase> this_db;$/;"	m	class:NetworkTermList
this_ptr	common/debuglog.h	/^    const void * this_ptr;$/;"	m	class:DebugLogFunc
this_ptr	common/debuglog.h	/^    const void * this_ptr;$/;"	m	class:DebugLogFuncVoid
thread_param	net/tcpserver.cc	/^    thread_param(TcpServer *s, int c) : server(s), connected_socket(c) {}$/;"	f	struct:thread_param
thread_param	net/tcpserver.cc	/^struct thread_param$/;"	s	file:
throw_database_closed	backends/brass/brass_table.cc	/^BrassTable::throw_database_closed()$/;"	f	class:BrassTable
throw_database_closed	backends/chert/chert_table.cc	/^ChertTable::throw_database_closed()$/;"	f	class:ChertTable
throw_database_closed	backends/flint/flint_table.cc	/^FlintTable::throw_database_closed()$/;"	f	class:FlintTable
throw_database_closed	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::throw_database_closed()$/;"	f	class:InMemoryDatabase
throw_databaselockerror	backends/flint_lock.cc	/^FlintLock::throw_databaselockerror(FlintLock::reason why,$/;"	f	class:FlintLock
throw_termlist_table_close_exception	backends/brass/brass_database.cc	/^BrassDatabase::throw_termlist_table_close_exception() const$/;"	f	class:BrassDatabase
throw_termlist_table_close_exception	backends/chert/chert_database.cc	/^ChertDatabase::throw_termlist_table_close_exception() const$/;"	f	class:ChertDatabase
time_query_parse	tests/queryparsertest.cc	/^time_query_parse(const Xapian::Database & db, const string & q,$/;"	f	file:
timeout	common/remote-database.h	/^    double timeout;$/;"	m	class:RemoteDatabase
timeout	include/xapian/types.h	/^typedef unsigned timeout;$/;"	t	namespace:Xapian
tl	backends/multi/multi_termlist.h	/^	TermList *tl;$/;"	m	class:MultiTermList
tmap	api/omenquire.cc	/^    const tmap_t &tmap;$/;"	m	class:Xapian::ByQueryIndexCmp	file:
tmap	backends/inmemory/inmemory_alltermslist.h	/^	const std::map<string, InMemoryTerm> *tmap;$/;"	m	class:InMemoryAllTermsList
tmap_t	api/omenquire.cc	/^    typedef map<string, unsigned int> tmap_t;$/;"	t	class:Xapian::ByQueryIndexCmp	file:
tname	backends/brass/brass_postlist.cc	/^	string tname;$/;"	m	class:Brass::PostlistChunkWriter	file:
tname	backends/chert/chert_postlist.cc	/^	string tname;$/;"	m	class:Chert::PostlistChunkWriter	file:
tname	backends/flint/flint_postlist.cc	/^	string tname;$/;"	m	class:FlintPostlistChunkWriter	file:
tname	backends/inmemory/inmemory_database.h	/^	string tname;$/;"	m	class:InMemoryTermEntry
tname	backends/remote/net_termlist.h	/^	string tname;$/;"	m	class:NetworkTermListItem
tname	include/xapian/query.h	/^	std::string tname;$/;"	m	class:Xapian::Query::Internal
to_end	backends/brass/brass_cursor.h	/^	void to_end() { is_after_end = true; }$/;"	f	class:BrassCursor
to_end	backends/chert/chert_cursor.h	/^	void to_end() { is_after_end = true; }$/;"	f	class:ChertCursor
to_end	backends/flint/flint_cursor.h	/^	void to_end() { is_after_end = true; }$/;"	f	class:FlintCursor
to_utf8	include/xapian/unicode.h	/^inline unsigned to_utf8(unsigned ch, char *buf) {$/;"	f	namespace:Xapian::Unicode
toggle_fragment	backends/brass/brass_spelling.cc	/^BrassSpellingTable::toggle_fragment(fragment frag, const string & word)$/;"	f	class:BrassSpellingTable
toggle_fragment	backends/chert/chert_spelling.cc	/^ChertSpellingTable::toggle_fragment(fragment frag, const string & word)$/;"	f	class:ChertSpellingTable
toggle_fragment	backends/flint/flint_spelling.cc	/^FlintSpellingTable::toggle_fragment(F_fragment frag, const string & word)$/;"	f	class:FlintSpellingTable
toggle_word	backends/brass/brass_spelling.cc	/^BrassSpellingTable::toggle_word(const string & word)$/;"	f	class:BrassSpellingTable
toggle_word	backends/chert/chert_spelling.cc	/^ChertSpellingTable::toggle_word(const string & word)$/;"	f	class:ChertSpellingTable
toggle_word	backends/flint/flint_spelling.cc	/^FlintSpellingTable::toggle_word(const string & word)$/;"	f	class:FlintSpellingTable
token	languages/compiler/header.h	/^    int token;$/;"	m	struct:tokeniser
token_codes	languages/compiler/header.h	/^enum token_codes {$/;"	g
token_held	languages/compiler/header.h	/^    byte token_held;$/;"	m	struct:tokeniser
tokendest	queryparser/lemon.c	/^  char *tokendest;         \/* Code to execute to destroy token data *\/$/;"	m	struct:lemon	file:
tokeniser	languages/compiler/header.h	/^    struct tokeniser * tokeniser;$/;"	m	struct:analyser	typeref:struct:analyser::tokeniser
tokeniser	languages/compiler/header.h	/^struct tokeniser {$/;"	s
tokenlineno	queryparser/lemon.c	/^  int tokenlineno;      \/* Linenumber at which current token starts *\/$/;"	m	struct:pstate	file:
tokenprefix	queryparser/lemon.c	/^  char *tokenprefix;       \/* A prefix added to token names in the .h file *\/$/;"	m	struct:lemon	file:
tokenstart	queryparser/lemon.c	/^  char *tokenstart;     \/* Text of current token *\/$/;"	m	struct:pstate	file:
tokentype	queryparser/lemon.c	/^  char *tokentype;         \/* Type of terminal symbols in the parser stack *\/$/;"	m	struct:lemon	file:
tolower	include/xapian/unicode.h	/^inline unsigned tolower(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
tolower	include/xapian/unicode.h	/^tolower(const std::string &term)$/;"	f	namespace:Xapian::Unicode
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	docs/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	tests/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	docs/Makefile	/^top_builddir = ..$/;"	m
top_builddir	tests/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	docs/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	tests/Makefile	/^top_srcdir = ..$/;"	m
top_values_begin	api/matchspy.cc	/^ValueCountMatchSpy::top_values_begin(size_t maxvalues) const$/;"	f	class:ValueCountMatchSpy
top_values_end	include/xapian/matchspy.h	/^    TermIterator top_values_end(size_t) const {$/;"	f	class:Xapian::ValueCountMatchSpy
tostring	common/str.cc	/^tostring(T value)$/;"	f
tostring_unsigned	common/str.cc	/^tostring_unsigned(T value)$/;"	f
tot_off	api/compactor.cc	/^    Xapian::docid tot_off;$/;"	m	class:Xapian::Compactor::Internal	file:
total	include/xapian/matchspy.h	/^	Xapian::doccount total;$/;"	m	struct:Xapian::ValueCountMatchSpy::Internal
total	tests/harness/testsuite.cc	/^test_driver::result test_driver::total;$/;"	m	class:test_driver	file:
total	tests/harness/testsuite.h	/^	static result total;$/;"	m	class:test_driver
total_doclen	backends/brass/brass_dbstats.h	/^    totlen_t total_doclen;$/;"	m	class:BrassDatabaseStats
total_doclen	backends/chert/chert_dbstats.h	/^    totlen_t total_doclen;$/;"	m	class:ChertDatabaseStats
total_length	backends/flint/flint_database.h	/^	mutable totlen_t total_length;$/;"	m	class:FlintDatabase
total_length	common/remote-database.h	/^    mutable totlen_t total_length;$/;"	m	class:RemoteDatabase
total_length	common/weightinternal.h	/^    totlen_t total_length;$/;"	m	class:Xapian::Weight::Internal
total_subqs	matcher/queryoptimiser.h	/^    Xapian::termcount total_subqs;$/;"	m	class:QueryOptimiser
totdocs	backends/inmemory/inmemory_database.h	/^    Xapian::doccount totdocs;$/;"	m	class:InMemoryDatabase
totlen	backends/inmemory/inmemory_database.h	/^    totlen_t totlen;$/;"	m	class:InMemoryDatabase
totlen_t	common/internaltypes.h	/^typedef uint8 totlen_t;$/;"	t
touch	tests/harness/unixcmds.cc	/^void touch(const string &filename) {$/;"	f
toupper	include/xapian/unicode.h	/^inline unsigned toupper(unsigned ch) {$/;"	f	namespace:Xapian::Unicode
toupper	include/xapian/unicode.h	/^toupper(const std::string &term)$/;"	f	namespace:Xapian::Unicode
tout	tests/harness/testsuite.cc	/^std::ostringstream tout;$/;"	v
tplt_linedir	queryparser/lemon.c	/^PRIVATE void tplt_linedir(out,lineno,filename)$/;"	f
tplt_open	queryparser/lemon.c	/^PRIVATE FILE *tplt_open(lemp)$/;"	f
tplt_print	queryparser/lemon.c	/^PRIVATE void tplt_print(out,lemp,str,lineno)$/;"	f
tplt_xfer	queryparser/lemon.c	/^PRIVATE void tplt_xfer(name,in,out,lineno)$/;"	f
tr_A	languages/lovins.cc	/^static int tr_A(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_AA	languages/lovins.cc	/^static int tr_AA(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_B	languages/lovins.cc	/^static int tr_B(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_BB	languages/lovins.cc	/^static int tr_BB(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_C	languages/lovins.cc	/^static int tr_C(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_CC	languages/lovins.cc	/^static int tr_CC(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_D	languages/lovins.cc	/^static int tr_D(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_E	languages/lovins.cc	/^static int tr_E(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_F	languages/lovins.cc	/^static int tr_F(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_G	languages/lovins.cc	/^static int tr_G(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_H	languages/lovins.cc	/^static int tr_H(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_I	languages/lovins.cc	/^static int tr_I(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_J	languages/lovins.cc	/^static int tr_J(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_K	languages/lovins.cc	/^static int tr_K(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_L	languages/lovins.cc	/^static int tr_L(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_LONG	languages/finnish.cc	/^static int tr_LONG(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_M	languages/lovins.cc	/^static int tr_M(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_N	languages/lovins.cc	/^static int tr_N(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_O	languages/lovins.cc	/^static int tr_O(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_P	languages/lovins.cc	/^static int tr_P(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_Q	languages/lovins.cc	/^static int tr_Q(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_R	languages/lovins.cc	/^static int tr_R(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_S	languages/lovins.cc	/^static int tr_S(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_T	languages/lovins.cc	/^static int tr_T(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_U	languages/lovins.cc	/^static int tr_U(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_V	languages/lovins.cc	/^static int tr_V(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_VI	languages/finnish.cc	/^static int tr_VI(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_W	languages/lovins.cc	/^static int tr_W(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_X	languages/lovins.cc	/^static int tr_X(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_Y	languages/lovins.cc	/^static int tr_Y(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
tr_Z	languages/lovins.cc	/^static int tr_Z(Xapian::StemImplementation * this_ptr) {$/;"	f	file:
transaction_active	common/database.h	/^	bool transaction_active() const { return int(transaction_state) > 0; }$/;"	f	class:Xapian::Database::Internal
transaction_state	common/database.h	/^	} transaction_state;$/;"	m	class:Xapian::Database::Internal	typeref:enum:Xapian::Database::Internal::__anon7
transactions	tests/harness/testrunner.h	/^    bool transactions;$/;"	m	class:TestRunner
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	docs/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	tests/Makefile	/^transform = $(program_transform_name)$/;"	m
translate_code	queryparser/lemon.c	/^PRIVATE void translate_code(struct lemon *lemp, struct rule *rp){$/;"	f
true	languages/compiler/header.h	/^#define true /;"	d
truncated_copy	tests/api_replicate.cc	/^truncated_copy(const string & srcpath, const string & destpath, off_t tocopy)$/;"	f	file:
type	include/xapian/error.h	/^    const char * type;$/;"	m	class:Xapian::Error
type	languages/compiler/header.h	/^    int type;                   \/* t_string etc *\/$/;"	m	struct:name
type	languages/compiler/header.h	/^    int type;$/;"	m	struct:node
type	queryparser/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR} type;$/;"	m	struct:s_options	typeref:enum:s_options::__anon22	file:
type	queryparser/lemon.c	/^  } type;                  \/* Symbols are all either TERMINALS or NTs *\/$/;"	m	struct:symbol	typeref:enum:symbol::__anon24	file:
type	queryparser/lemon.c	/^  } type;$/;"	m	struct:action	typeref:enum:action::e_action	file:
type	queryparser/queryparser_internal.h	/^    filter_type type;$/;"	m	struct:PrefixInfo
typedef-members	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	docs/apidoc/html/types_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
uint4	common/internaltypes.h	/^typedef unsigned int uint4;$/;"	t
uint4	common/internaltypes.h	/^typedef unsigned long uint4;$/;"	t
uint8	common/internaltypes.h	/^typedef unsigned long long uint8;$/;"	t
uint8	common/internaltypes.h	/^typedef unsigned long uint8;$/;"	t
uncaught_exception	common/debuglog.h	/^    bool uncaught_exception;$/;"	m	class:DebugLogFunc
uncaught_exception	common/debuglog.h	/^    bool uncaught_exception;$/;"	m	class:DebugLogFuncVoid
uncollapsed_estimated	common/omenquireinternal.h	/^	Xapian::doccount uncollapsed_estimated;$/;"	m	class:Xapian::MSet::Internal
uncollapsed_lower_bound	common/omenquireinternal.h	/^	Xapian::doccount uncollapsed_lower_bound;$/;"	m	class:Xapian::MSet::Internal
uncollapsed_upper_bound	common/omenquireinternal.h	/^	Xapian::doccount uncollapsed_upper_bound;$/;"	m	class:Xapian::MSet::Internal
uncw_path	common/fileutils.cc	/^uncw_path(const string & path)$/;"	f	file:
uni::addPage	unicode/uniParse.tcl	/^proc uni::addPage {info} {$/;"	p
uni::buildTables	unicode/uniParse.tcl	/^proc uni::buildTables {data} {$/;"	p
uni::getGroup	unicode/uniParse.tcl	/^proc uni::getGroup {value} {$/;"	p
uni::getValue	unicode/uniParse.tcl	/^proc uni::getValue {items index} {$/;"	p
uni::main	unicode/uniParse.tcl	/^proc uni::main {} {$/;"	p
uniform_prefixes	queryparser/queryparser_internal.cc	/^    bool uniform_prefixes;$/;"	m	class:Terms	file:
unittest_LDADD	tests/Makefile	/^unittest_LDADD = $(LDADD)$/;"	m
unittest_LDFLAGS	tests/Makefile	/^unittest_LDFLAGS = -no-fast-install $(ldflags)$/;"	m
unittest_LINK	tests/Makefile	/^unittest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
unittest_OBJECTS	tests/Makefile	/^unittest_OBJECTS = $(am_unittest_OBJECTS)$/;"	m
unittest_SOURCES	tests/Makefile	/^unittest_SOURCES = unittest.cc$/;"	m
unless	languages/compiler/header.h	/^#define unless(/;"	d
unlink	common/utils.h	/^inline int unlink(const string &filename) { return unlink(filename.c_str()); }$/;"	f
unpack_bool	common/pack.h	/^unpack_bool(const char ** p, const char * end, bool * result)$/;"	f
unpack_entry	backends/flint/flint_values.cc	/^FlintValueTable::unpack_entry(const char ** pos,$/;"	f	class:FlintValueTable
unpack_string	common/pack.h	/^unpack_string(const char ** p, const char * end, std::string & result)$/;"	f
unpack_string_preserving_sort	common/pack.h	/^unpack_string_preserving_sort(const char ** p, const char * end,$/;"	f
unpack_uint	common/pack.h	/^unpack_uint(const char ** p, const char * end, U * result)$/;"	f
unpack_uint_last	common/pack.h	/^unpack_uint_last(const char ** p, const char * end, U * result)$/;"	f
unpack_uint_preserving_sort	common/pack.h	/^unpack_uint_preserving_sort(const char ** p, const char * end, U * result)$/;"	f
unreachable	languages/compiler/header.h	/^    int unreachable;           \/* 0 if code can be reached, 1 if current code$/;"	m	struct:generator
unserialise	api/decvalwtsource.cc	/^DecreasingValueWeightPostingSource::unserialise(const std::string &s) const {$/;"	f	class:DecreasingValueWeightPostingSource
unserialise	api/matchspy.cc	/^MatchSpy::unserialise(const string &, const Registry &) const {$/;"	f	class:MatchSpy
unserialise	api/matchspy.cc	/^ValueCountMatchSpy::unserialise(const string & s, const Registry &) const$/;"	f	class:ValueCountMatchSpy
unserialise	api/omdocument.cc	/^Document::unserialise(const std::string &s)$/;"	f	class:Xapian::Document
unserialise	api/omquery.cc	/^Query::unserialise(const std::string & s, const Registry & reg)$/;"	f	class:Xapian::Query
unserialise	api/omquery.cc	/^Query::unserialise(const std::string &s)$/;"	f	class:Xapian::Query
unserialise	api/omqueryinternal.cc	/^Xapian::Query::Internal::unserialise(const string &, const Xapian::Registry &)$/;"	f	class:Xapian::Query::Internal
unserialise	api/omqueryinternal.cc	/^Xapian::Query::Internal::unserialise(const string &s,$/;"	f	class:Xapian::Query::Internal
unserialise	api/postingsource.cc	/^FixedWeightPostingSource::unserialise(const string &s) const$/;"	f	class:Xapian::FixedWeightPostingSource
unserialise	api/postingsource.cc	/^PostingSource::unserialise(const string &) const$/;"	f	class:Xapian::PostingSource
unserialise	api/postingsource.cc	/^ValueMapPostingSource::unserialise(const string &s) const$/;"	f	class:Xapian::ValueMapPostingSource
unserialise	api/postingsource.cc	/^ValueWeightPostingSource::unserialise(const string &s) const$/;"	f	class:Xapian::ValueWeightPostingSource
unserialise	tests/api_db.cc	/^    MyWeight * unserialise(const string &) const { return new MyWeight; }$/;"	f	class:MyWeight
unserialise	tests/api_serialise.cc	/^    MyPostingSource2 * unserialise(const std::string & s) const {$/;"	f	class:MyPostingSource2
unserialise	weight/bm25weight.cc	/^BM25Weight::unserialise(const string & s) const$/;"	f	class:Xapian::BM25Weight
unserialise	weight/boolweight.cc	/^BoolWeight::unserialise(const string &) const$/;"	f	class:Xapian::BoolWeight
unserialise	weight/tradweight.cc	/^TradWeight::unserialise(const string & s) const$/;"	f	class:Xapian::TradWeight
unserialise	weight/weight.cc	/^Weight::unserialise(const string &) const$/;"	f	class:Xapian::Weight
unserialise_document	net/serialise.cc	/^unserialise_document(const string &s)$/;"	f
unserialise_double	common/serialise-double.cc	/^double unserialise_double(const char ** p, const char *end)$/;"	f
unserialise_error	net/serialise.cc	/^unserialise_error(const string &serialised_error, const string &prefix,$/;"	f
unserialise_mset	net/serialise.cc	/^unserialise_mset(const char * p, const char * p_end)$/;"	f
unserialise_rset	net/serialise.cc	/^unserialise_rset(const string &s)$/;"	f
unserialise_stats	net/serialise.cc	/^unserialise_stats(const string &s)$/;"	f
unset_max_changesets_helper_	tests/api_replicate.cc	/^    unset_max_changesets_helper_() { }$/;"	f	struct:unset_max_changesets_helper_
unset_max_changesets_helper_	tests/api_replicate.cc	/^struct unset_max_changesets_helper_ {$/;"	s	file:
unstem	queryparser/queryparser_internal.h	/^    multimap<string, string> unstem;$/;"	m	class:Xapian::QueryParser::Internal
unstem_begin	queryparser/queryparser.cc	/^QueryParser::unstem_begin(const string &term) const$/;"	f	class:QueryParser
unstem_end	include/xapian/queryparser.h	/^    TermIterator unstem_end(const std::string &) const {$/;"	f	class:Xapian::QueryParser
unstemmed	queryparser/queryparser_internal.cc	/^    string unstemmed;$/;"	m	class:Term	file:
unsupported_method	api/matchspy.cc	/^static void unsupported_method() {$/;"	f	file:
until	languages/compiler/header.h	/^#define until(/;"	d
up_tab	common/stringutils.cc	/^const unsigned char up_tab[257] =$/;"	m	namespace:Xapian::Internal	file:
update	backends/brass/brass_values.cc	/^    void update(Xapian::docid did, const string & value) {$/;"	f	class:Brass::ValueUpdater
update	backends/chert/chert_values.cc	/^    void update(Xapian::docid did, const string & value) {$/;"	f	class:ValueUpdater
update_after_advance	matcher/externalpostlist.cc	/^ExternalPostList::update_after_advance() {$/;"	f	class:ExternalPostList
update_from_master	net/replicatetcpclient.cc	/^ReplicateTcpClient::update_from_master(const std::string & path,$/;"	f	class:ReplicateTcpClient
update_if_required	tests/collate-test	/^sub update_if_required {$/;"	s
update_mod_plist	backends/chert/chert_database.cc	/^ChertWritableDatabase::update_mod_plist(Xapian::docid did,$/;"	f	class:ChertWritableDatabase
update_mod_plist	backends/flint/flint_database.cc	/^FlintWritableDatabase::update_mod_plist(Xapian::docid did,$/;"	f	class:FlintWritableDatabase
update_overlapped_offset	net/remoteconnection.cc	/^update_overlapped_offset(WSAOVERLAPPED & overlapped, DWORD n)$/;"	f
update_posting	backends/brass/brass_inverter.h	/^	void update_posting(Xapian::docid did, Xapian::termcount old_wdf,$/;"	f	class:Inverter::PostingChanges
update_posting	backends/brass/brass_inverter.h	/^    void update_posting(Xapian::docid did, const std::string & term,$/;"	f	class:Inverter
update_reader	backends/brass/brass_valuelist.cc	/^BrassValueList::update_reader()$/;"	f	class:BrassValueList
update_reader	backends/chert/chert_valuelist.cc	/^ChertValueList::update_reader()$/;"	f	class:ChertValueList
update_stats	backends/remote/remote-database.cc	/^RemoteDatabase::update_stats(message_type msg_code) const$/;"	f	class:RemoteDatabase
update_stub_database	api/replication.cc	/^DatabaseReplica::Internal::update_stub_database() const$/;"	f	class:DatabaseReplica::Internal
upper_bound	common/valuestats.h	/^    std::string upper_bound;$/;"	m	struct:ValueStats
urllib2	tests/submitperftest	/^import urllib2$/;"	i
urllib2	tests/submitperftest.in	/^import urllib2$/;"	i
urllib2_file	tests/submitperftest	/^import urllib2_file$/;"	i
urllib2_file	tests/submitperftest.in	/^import urllib2_file$/;"	i
usage	tests/harness/testsuite.cc	/^test_driver::usage()$/;"	f	class:test_driver
useCnt	queryparser/lemon.c	/^  int useCnt;              \/* Number of times used *\/$/;"	m	struct:symbol	file:
use_backend	tests/harness/testrunner.cc	/^TestRunner::use_backend(const string & backend_name)$/;"	f	class:TestRunner
use_cr	tests/harness/testsuite.cc	/^bool test_driver::use_cr = false;$/;"	m	class:test_driver	file:
use_cr	tests/harness/testsuite.h	/^	static bool use_cr;$/;"	m	class:test_driver
use_exact_termfreq	common/expandweight.h	/^    bool use_exact_termfreq;$/;"	m	class:Xapian::Internal::ExpandWeight
used	languages/compiler/header.h	/^    byte used;$/;"	m	struct:name
used_ranges	api/compactor.cc	/^    const vector<pair<Xapian::docid, Xapian::docid> > & used_ranges;$/;"	m	class:CmpByFirstUsed	file:
used_ranges	api/compactor.cc	/^    vector<pair<Xapian::docid, Xapian::docid> > used_ranges;$/;"	m	class:Xapian::Compactor::Internal	file:
user_backend	tests/harness/testrunner.h	/^    std::string user_backend;$/;"	m	class:TestRunner
usual	config.h	/^# define usual(/;"	d
utf8	languages/compiler/header.h	/^    byte utf8;$/;"	m	struct:analyser
utf8	languages/compiler/header.h	/^    byte utf8;$/;"	m	struct:options
utf8	languages/compiler/header.h	/^    byte utf8;$/;"	m	struct:tokeniser
uuid	backends/brass/brass_version.h	/^    mutable uuid_t uuid;$/;"	m	class:BrassVersion
uuid	backends/chert/chert_version.h	/^    mutable uuid_t uuid;$/;"	m	class:ChertVersion
uuid	backends/flint/flint_version.h	/^    mutable uuid_t uuid;$/;"	m	class:FlintVersion
uuid	common/remote-database.h	/^    mutable string uuid;$/;"	m	class:RemoteDatabase
uuid_clear	common/safeuuid.h	/^uuid_clear(uuid_t_ uu)$/;"	f
uuid_clear	common/win32_uuid.cc	/^void uuid_clear(uuid_t uu)$/;"	f
uuid_generate	common/safeuuid.h	/^uuid_generate(uuid_t_ out) {$/;"	f
uuid_generate	common/win32_uuid.cc	/^uuid_generate(uuid_t uu)$/;"	f
uuid_is_null	common/safeuuid.h	/^uuid_is_null(const uuid_t_ uu)$/;"	f
uuid_is_null	common/win32_uuid.cc	/^int uuid_is_null(const uuid_t uu)$/;"	f
uuid_parse	common/safeuuid.h	/^#  define uuid_parse(/;"	d
uuid_parse	common/safeuuid.h	/^uuid_parse(const char * in, uuid_t_ uu)$/;"	f
uuid_parse	common/win32_uuid.cc	/^uuid_parse(const char * in, uuid_t uu)$/;"	f
uuid_t	common/safeuuid.h	/^# define uuid_t /;"	d
uuid_t	common/win32_uuid.h	/^#undef uuid_t$/;"	d
uuid_t	common/win32_uuid.h	/^typedef unsigned char uuid_t[16];$/;"	t
uuid_t_	common/safeuuid.h	/^typedef unsigned char uuid_t_[16];$/;"	t
uuid_unparse_lower	common/safeuuid.h	/^inline void uuid_unparse_lower(uuid_t uu, char *out) {$/;"	f
uuid_unparse_lower	common/safeuuid.h	/^uuid_unparse_lower(const uuid_t_ uu, char * out)$/;"	f
uuid_unparse_lower	common/win32_uuid.cc	/^void uuid_unparse_lower(const uuid_t uu, char * out)$/;"	f
val	common/gnu_getopt.h	/^    int val;$/;"	m	struct:option
valid	backends/inmemory/inmemory_database.h	/^	bool valid;$/;"	m	class:InMemoryPosting
validate_query	api/omqueryinternal.cc	/^Xapian::Query::Internal::validate_query() const$/;"	f	class:Xapian::Query::Internal
valno	include/xapian/queryparser.h	/^    Xapian::valueno valno;$/;"	m	class:Xapian::StringValueRangeProcessor
valrangeprocs	queryparser/queryparser_internal.h	/^    list<ValueRangeProcessor *> valrangeprocs;$/;"	m	class:Xapian::QueryParser::Internal
value	backends/brass/brass_values.h	/^    std::string value;$/;"	m	class:Brass::ValueChunkReader
value	backends/chert/chert_values.h	/^    std::string value;$/;"	m	class:ValueChunkReader
value	languages/compiler/header.h	/^    symbol * value;$/;"	m	struct:m_pair
value	tests/internaltest.cc	/^	int value;$/;"	m	class:Test_Exception	file:
value_it	include/xapian/postingsource.h	/^    Xapian::ValueIterator value_it;$/;"	m	class:Xapian::ValuePostingSource
value_manager	backends/brass/brass_database.h	/^	mutable BrassValueManager value_manager;$/;"	m	class:BrassDatabase
value_manager	backends/brass/brass_document.h	/^    const BrassValueManager *value_manager;$/;"	m	class:BrassDocument
value_manager	backends/chert/chert_database.h	/^	mutable ChertValueManager value_manager;$/;"	m	class:ChertDatabase
value_manager	backends/chert/chert_document.h	/^    const ChertValueManager *value_manager;$/;"	m	class:ChertDocument
value_range	queryparser/queryparser_internal.cc	/^    Term * value_range(const string &a, const string &b) {$/;"	f	class:State
value_stats	backends/brass/brass_database.h	/^	mutable map<Xapian::valueno, ValueStats> value_stats;$/;"	m	class:BrassWritableDatabase
value_stats	backends/chert/chert_database.h	/^	mutable map<Xapian::valueno, ValueStats> value_stats;$/;"	m	class:ChertWritableDatabase
value_table	backends/flint/flint_database.h	/^	FlintValueTable value_table;$/;"	m	class:FlintDatabase
value_table	backends/flint/flint_document.h	/^	const FlintValueTable *value_table;$/;"	m	class:FlintDocument
value_type	include/xapian/enquire.h	/^	typedef MSetIterator value_type; \/\/ FIXME: not assignable...$/;"	t	class:Xapian::MSet
value_type	include/xapian/enquire.h	/^	typedef Xapian::docid value_type;$/;"	t	class:Xapian::MSetIterator
value_type	include/xapian/enquire.h	/^	typedef std::string value_type;$/;"	t	class:Xapian::ESetIterator
value_type	include/xapian/positioniterator.h	/^	typedef Xapian::termpos value_type;$/;"	t	class:Xapian::PositionIterator
value_type	include/xapian/postingiterator.h	/^	typedef Xapian::docid value_type;$/;"	t	class:Xapian::PostingIterator
value_type	include/xapian/termiterator.h	/^	typedef std::string value_type;$/;"	t	class:Xapian::TermIterator
value_type	include/xapian/unicode.h	/^    typedef unsigned value_type;$/;"	t	class:Xapian::Utf8Iterator
value_type	include/xapian/valueiterator.h	/^    typedef std::string value_type;$/;"	t	class:Xapian::ValueIterator
valuelist	backends/multi/multi_valuelist.cc	/^    ValueList * valuelist;$/;"	m	struct:SubValueList	file:
valuelist	matcher/valuerangepostlist.h	/^    ValueList * valuelist;$/;"	m	class:ValueRangePostList
valuelists	backends/inmemory/inmemory_database.h	/^    vector<std::map<Xapian::valueno, string> > valuelists;$/;"	m	class:InMemoryDatabase
valuelists	common/multivaluelist.h	/^    std::vector<SubValueList *> valuelists;$/;"	m	class:MultiValueList
valuelists	matcher/valuestreamdocument.h	/^    mutable std::map<Xapian::valueno, ValueList *> valuelists;$/;"	m	class:ValueStreamDocument
valueno	include/xapian/types.h	/^typedef unsigned valueno;$/;"	t	namespace:Xapian
valueno_diff	include/xapian/types.h	/^typedef int valueno_diff; \/* FIXME: can overflow. *\/$/;"	t	namespace:Xapian
valuenum	include/xapian/valuesetmatchdecider.h	/^    valueno valuenum;$/;"	m	class:Xapian::ValueSetMatchDecider
values	api/matchspy.cc	/^    vector<StringAndFrequency> values;$/;"	m	class:StringAndFreqTermList	file:
values	common/document.h	/^	mutable document_values values; \/\/ FIXME mutable is a hack$/;"	m	class:Xapian::Document::Internal
values	include/xapian/matchspy.h	/^	std::map<std::string, Xapian::doccount> values;$/;"	m	struct:Xapian::ValueCountMatchSpy::Internal
values_begin	api/matchspy.cc	/^ValueCountMatchSpy::values_begin() const$/;"	f	class:ValueCountMatchSpy
values_begin	api/omdocument.cc	/^Document::values_begin() const$/;"	f	class:Xapian::Document
values_count	api/omdocument.cc	/^Document::values_count() const {$/;"	f	class:Xapian::Document
values_count	api/omdocument.cc	/^Xapian::Document::Internal::values_count() const$/;"	f	class:Xapian::Document::Internal
values_end	include/xapian/document.h	/^	ValueIteratorEnd_ values_end() const {$/;"	f	class:Xapian::Document
values_end	include/xapian/matchspy.h	/^    TermIterator values_end() const {$/;"	f	class:Xapian::ValueCountMatchSpy
values_here	common/document.h	/^	mutable bool values_here; \/\/ FIXME mutable is a hack$/;"	m	class:Xapian::Document::Internal
values_modified	common/document.h	/^	bool values_modified() const {$/;"	f	class:Xapian::Document::Internal
values_to_repr	tests/api_matchspy.cc	/^static string values_to_repr(const Xapian::ValueCountMatchSpy & spy) {$/;"	f	file:
valuestats	backends/inmemory/inmemory_database.h	/^    std::map<Xapian::valueno, ValueStats> valuestats;$/;"	m	class:InMemoryDatabase
valuestats	tests/harness/testrunner.h	/^    bool valuestats;$/;"	m	class:TestRunner
valuestream_begin	api/omdatabase.cc	/^Database::valuestream_begin(Xapian::valueno slot) const$/;"	f	class:Xapian::Database
valuestream_end	include/xapian/database.h	/^	ValueIteratorEnd_ valuestream_end(Xapian::valueno) const {$/;"	f	class:Xapian::Database
var-members	docs/apidoc/html/database_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	docs/apidoc/html/namespaceXapian.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	docs/apidoc/html/types_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var_number	languages/compiler/header.h	/^    int var_number;            \/* Number of next variable to use. *\/$/;"	m	struct:generator
vardest	queryparser/lemon.c	/^  char *vardest;           \/* Code for the default non-terminal destructor *\/$/;"	m	struct:lemon	file:
variables_prefix	languages/compiler/header.h	/^    char * variables_prefix;$/;"	m	struct:options
vars	languages/compiler/generator.c	/^static const char * vars[] = { "p", "c", "l", "lb", "bra", "ket", NULL };$/;"	v	file:
vartype	queryparser/lemon.c	/^  char *vartype;           \/* The default type of non-terminal symbols *\/$/;"	m	struct:lemon	file:
verbose	common/tcpserver.h	/^    bool verbose;$/;"	m	class:SOCKET_INITIALIZER_MIXIN
verbose	examples/delve.cc	/^static int verbose = 0;$/;"	v	file:
verbose	tests/harness/testsuite.cc	/^int verbose;$/;"	v
version	backends/brass/brass_cursor.h	/^	unsigned long version;$/;"	m	class:BrassCursor
version	backends/chert/chert_cursor.h	/^	unsigned long version;$/;"	m	class:ChertCursor
version	backends/flint/flint_cursor.h	/^	unsigned long version;$/;"	m	class:FlintCursor
version_file	backends/brass/brass_database.h	/^	BrassVersion version_file;$/;"	m	class:BrassDatabase
version_file	backends/chert/chert_database.h	/^	ChertVersion version_file;$/;"	m	class:ChertDatabase
version_file	backends/flint/flint_database.h	/^	FlintVersion version_file;$/;"	m	class:FlintDatabase
version_string	api/version.cc	/^const char * version_string() { return XAPIAN_VERSION; }$/;"	f	namespace:Xapian
vet_dm	api/valuerangeproc.cc	/^vet_dm(int d, int m)$/;"	f	namespace:Xapian
vg_log_fd	tests/harness/testsuite.cc	/^static int vg_log_fd = -1;$/;"	v	file:
vocab	languages/compiler/syswords.h	/^static struct system_word vocab[80+1] = {$/;"	v	typeref:struct:system_word
vsdoc	matcher/mergepostlist.h	/^	ValueStreamDocument & vsdoc;$/;"	m	class:MergePostList
w	languages/compiler/generator.c	/^static void w(struct generator * g, const char * s) { wp(g, s, 0); }$/;"	f	file:
w_max	matcher/mergepostlist.h	/^	Xapian::weight w_max;$/;"	m	class:MergePostList
want_doclength	matcher/synonympostlist.h	/^    bool want_doclength;$/;"	m	class:SynonymPostList
want_wdf	matcher/synonympostlist.h	/^    bool want_wdf;$/;"	m	class:SynonymPostList
wbe	languages/compiler/generator.c	/^static void wbe(struct generator * g) {    \/* block end *\/$/;"	f	file:
wbs	languages/compiler/generator.c	/^static void wbs(struct generator * g) { \/* block start *\/$/;"	f	file:
wc	languages/compiler/generator.c	/^static void wc(struct generator * g, struct node * p) { \/* comment *\/$/;"	f	file:
wch	languages/compiler/generator.c	/^static void wch(struct generator * g, int ch) {$/;"	f	file:
wdb	common/remoteserver.h	/^    Xapian::WritableDatabase * wdb;$/;"	m	class:RemoteServer
wdf	backends/brass/brass_postlist.cc	/^    Xapian::termcount wdf;$/;"	m	class:Brass::PostlistChunkReader	file:
wdf	backends/brass/brass_postlist.h	/^	Xapian::termcount wdf;$/;"	m	class:BrassPostList
wdf	backends/chert/chert_postlist.cc	/^    Xapian::termcount wdf;$/;"	m	class:Chert::PostlistChunkReader	file:
wdf	backends/chert/chert_postlist.h	/^	Xapian::termcount wdf;$/;"	m	class:ChertPostList
wdf	backends/flint/flint_postlist.cc	/^	Xapian::termcount wdf;$/;"	m	class:FlintPostlistChunkReader	file:
wdf	backends/flint/flint_postlist.h	/^	Xapian::termcount wdf;$/;"	m	class:FlintPostList
wdf	backends/inmemory/inmemory_database.h	/^	Xapian::termcount wdf;$/;"	m	class:InMemoryPosting
wdf	backends/inmemory/inmemory_database.h	/^	Xapian::termcount wdf;$/;"	m	class:InMemoryTermEntry
wdf	backends/remote/net_termlist.h	/^	Xapian::termcount wdf;$/;"	m	class:NetworkTermListItem
wdf	common/documentterm.h	/^    Xapian::termcount wdf;$/;"	m	class:OmDocumentTerm
wdf_ubound	backends/brass/brass_dbstats.h	/^    Xapian::termcount wdf_ubound;$/;"	m	class:BrassDatabaseStats
wdf_ubound	backends/chert/chert_dbstats.h	/^    Xapian::termcount wdf_ubound;$/;"	m	class:ChertDatabaseStats
wdf_upper	tests/api_weight.cc	/^    mutable Xapian::termcount wdf_upper;$/;"	m	class:CheckStatsWeight	file:
wdf_upper_bound_	include/xapian/weight.h	/^    Xapian::termcount wdf_upper_bound_;$/;"	m	class:Xapian::Weight
weight	common/leafpostlist.h	/^    const Xapian::Weight * weight;$/;"	m	class:LeafPostList
weight	common/multimatch.h	/^	const Xapian::Weight * weight;$/;"	m	class:MultiMatch
weight	common/omenquireinternal.h	/^	mutable Weight * weight;$/;"	m	class:Xapian::Enquire::Internal
weight	include/xapian/types.h	/^typedef double weight;$/;"	t	namespace:Xapian
weight_cutoff	common/multimatch.h	/^	Xapian::weight weight_cutoff;$/;"	m	class:MultiMatch
weight_cutoff	common/omenquireinternal.h	/^	Xapian::weight weight_cutoff;$/;"	m	class:Xapian::Enquire::Internal
weight_map	include/xapian/postingsource.h	/^    std::map<std::string, double> weight_map;$/;"	m	class:Xapian::ValueMapPostingSource
weights	tests/api_percentages.cc	/^    vector<pair<Xapian::docid, Xapian::weight> > weights;$/;"	m	class:MyPostingSource	file:
wf	languages/compiler/generator.c	/^static void wf(struct generator * g, struct node * p) {          \/* fail *\/$/;"	f	file:
wgotol	languages/compiler/generator.c	/^static void wgotol(struct generator * g, int n) {$/;"	f	file:
wh	languages/compiler/generator.c	/^static void wh(struct generator * g, int i) {$/;"	f	file:
wh_ch	languages/compiler/generator.c	/^static void wh_ch(struct generator * g, int i) {$/;"	f	file:
white_space	languages/compiler/tokeniser.c	/^static int white_space(struct tokeniser * t, int ch) {$/;"	f	file:
wi	languages/compiler/generator.c	/^static void wi(struct generator * g, int i) {$/;"	f	file:
wi3	languages/compiler/generator.c	/^static void wi3(struct generator * g, int i) {$/;"	f	file:
widechars	languages/compiler/header.h	/^    byte widechars;$/;"	m	struct:options
widechars	languages/compiler/header.h	/^    byte widechars;$/;"	m	struct:tokeniser
wildcard	queryparser/lemon.c	/^  struct symbol *wildcard; \/* Token that matches anything *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
winc	languages/compiler/generator.c	/^static void winc(struct generator * g, struct node * p) {     \/* increment c *\/$/;"	f	file:
window	matcher/phrasepostlist.h	/^        Xapian::termpos window;$/;"	m	class:NearPostList
window	matcher/phrasepostlist.h	/^        Xapian::termpos window;$/;"	m	class:PhrasePostList
window	matcher/queryoptimiser.cc	/^    Xapian::termcount window;$/;"	m	struct:PosFilter	file:
window	queryparser/queryparser_internal.cc	/^    size_t window;$/;"	m	class:Terms	file:
within_DBL_EPSILON	common/utils.cc	/^bool within_DBL_EPSILON(double a, double b) {$/;"	f	namespace:Xapian::Internal
wk	languages/compiler/generator.c	/^static void wk(struct generator * g, struct node * p) {     \/* keep c *\/$/;"	f	file:
wlim	languages/compiler/generator.c	/^static void wlim(struct generator * g, struct node * p) {     \/* if at limit fail *\/$/;"	f	file:
wlitarray	languages/compiler/generator.c	/^static void wlitarray(struct generator * g, symbol * p) {  \/* write literal array *\/$/;"	f	file:
wlitref	languages/compiler/generator.c	/^static void wlitref(struct generator * g, symbol * p) {  \/* write ref to literal array *\/$/;"	f	file:
wm	languages/compiler/generator.c	/^static void wm(struct generator * g) {       \/* margin *\/$/;"	f	file:
wms	languages/compiler/generator.c	/^static void wms(struct generator * g, const char * s) {$/;"	f	file:
wnl	languages/compiler/generator.c	/^static void wnl(struct generator * g) {$/;"	f	file:
wordfreq_changes	backends/brass/brass_spelling.h	/^    std::map<std::string, Xapian::termcount> wordfreq_changes;$/;"	m	class:BrassSpellingTable
wordfreq_changes	backends/chert/chert_spelling.h	/^    std::map<std::string, Xapian::termcount> wordfreq_changes;$/;"	m	class:ChertSpellingTable
wordfreq_changes	backends/flint/flint_spelling.h	/^    std::map<std::string, Xapian::termcount> wordfreq_changes;$/;"	m	class:FlintSpellingTable
wp	languages/compiler/generator.c	/^static void wp(struct generator * g, const char * s, struct node * p) { \/* formatted write *\/$/;"	f	file:
wqf_	include/xapian/weight.h	/^    Xapian::termcount wqf_;$/;"	m	class:Xapian::Weight
wrestore	languages/compiler/generator.c	/^static void wrestore(struct generator * g, struct node * p, int keep_token) {     \/* restore c *\/$/;"	f	file:
wrestorelimit	languages/compiler/generator.c	/^static void wrestorelimit(struct generator * g, struct node * p, int keep_token) {     \/* restore limit c *\/$/;"	f	file:
writable	backends/brass/brass_table.h	/^	bool writable;$/;"	m	class:BrassTable
writable	backends/chert/chert_table.h	/^	bool writable;$/;"	m	class:ChertTable
writable	backends/flint/flint_table.h	/^	bool writable;$/;"	m	class:FlintTable
writable	common/remoteserver.h	/^    bool writable;$/;"	m	class:RemoteServer
writable	common/remotetcpserver.h	/^    bool writable;$/;"	m	class:RemoteTcpServer
writable	tests/harness/testrunner.h	/^    bool writable;$/;"	m	class:TestRunner
write	backends/brass/brass_dbstats.cc	/^BrassDatabaseStats::write(BrassPostListTable & postlist_table) const$/;"	f	class:BrassDatabaseStats
write	backends/chert/chert_dbstats.cc	/^ChertDatabaseStats::write(ChertPostListTable & postlist_table) const$/;"	f	class:ChertDatabaseStats
write	tests/perftest/perftest.cc	/^PerfTestLogger::write(const string & text)$/;"	f	class:PerfTestLogger
writeRuleText	queryparser/lemon.c	/^static void writeRuleText(FILE *out, struct rule *rp){$/;"	f	file:
write_all	net/remoteconnection.cc	/^write_all(int fd, const char * p, size_t n)$/;"	f	file:
write_and_clear_changes	common/replicate_utils.cc	/^write_and_clear_changes(int changes_fd, string & buf, size_t bytes)$/;"	f
write_and_clear_tout	tests/harness/testsuite.cc	/^test_driver::write_and_clear_tout()$/;"	f	class:test_driver
write_block	backends/brass/brass_table.cc	/^BrassTable::write_block(uint4 n, const byte * p) const$/;"	f	class:BrassTable
write_block	backends/chert/chert_table.cc	/^ChertTable::write_block(uint4 n, const byte * p) const$/;"	f	class:ChertTable
write_block	backends/flint/flint_table.cc	/^FlintTable::write_block(uint4 n, const byte * p) const$/;"	f	class:FlintTable
write_ch	common/pretty.h	/^inline void write_ch(std::ostream & os, unsigned char ch)$/;"	f
write_changed_blocks	backends/brass/brass_table.cc	/^BrassTable::write_changed_blocks(int changes_fd)$/;"	f	class:BrassTable
write_changed_blocks	backends/chert/chert_table.cc	/^ChertTable::write_changed_blocks(int changes_fd)$/;"	f	class:ChertTable
write_changed_blocks	backends/flint/flint_table.cc	/^FlintTable::write_changed_blocks(int changes_fd)$/;"	f	class:FlintTable
write_changesets_to_fd	api/replication.cc	/^DatabaseMaster::write_changesets_to_fd(int fd,$/;"	f	class:DatabaseMaster
write_changesets_to_fd	backends/brass/brass_database.cc	/^BrassDatabase::write_changesets_to_fd(int fd,$/;"	f	class:BrassDatabase
write_changesets_to_fd	backends/chert/chert_database.cc	/^ChertDatabase::write_changesets_to_fd(int fd,$/;"	f	class:ChertDatabase
write_changesets_to_fd	backends/database.cc	/^Database::Internal::write_changesets_to_fd(int, const string &, bool, ReplicationInfo *)$/;"	f	class:Xapian::Database::Internal
write_changesets_to_fd	backends/flint/flint_database.cc	/^FlintDatabase::write_changesets_to_fd(int fd,$/;"	f	class:FlintDatabase
write_changesets_to_fd	common/const_database_wrapper.cc	/^ConstDatabaseWrapper::write_changesets_to_fd(int, const std::string &, bool,$/;"	f	class:ConstDatabaseWrapper
write_start_of_chunk	backends/brass/brass_postlist.cc	/^write_start_of_chunk(string & chunk,$/;"	f	file:
write_start_of_chunk	backends/chert/chert_postlist.cc	/^write_start_of_chunk(string & chunk,$/;"	f	file:
write_start_of_chunk	backends/flint/flint_postlist.cc	/^static void write_start_of_chunk(string & chunk,$/;"	f	file:
write_tag	backends/brass/brass_values.cc	/^    void write_tag() {$/;"	f	class:Brass::ValueUpdater	file:
write_tag	backends/chert/chert_values.cc	/^    void write_tag() {$/;"	f	class:ValueUpdater	file:
write_to_file	backends/brass/brass_btreebase.cc	/^BrassTable_base::write_to_file(const string &filename,$/;"	f	class:BrassTable_base
write_to_file	backends/chert/chert_btreebase.cc	/^ChertTable_base::write_to_file(const string &filename,$/;"	f	class:ChertTable_base
write_to_file	backends/flint/flint_btreebase.cc	/^FlintTable_base::write_to_file(const string &filename,$/;"	f	class:FlintTable_base
ws	languages/compiler/generator.c	/^static void ws(struct generator * g, const char * s) {$/;"	f	file:
wsetl	languages/compiler/generator.c	/^static void wsetl(struct generator * g, int n) {$/;"	f	file:
wt	common/esetinternal.h	/^    Xapian::weight wt;$/;"	m	class:Xapian::Internal::ExpandTerm
wt	common/omenquireinternal.h	/^	Xapian::weight wt;$/;"	m	class:Xapian::Internal::MSetItem
wt	examples/quest.cc	/^struct wt { const char * s; int f; };$/;"	s	file:
wt	matcher/extraweightpostlist.h	/^	Xapian::Weight * wt;$/;"	m	class:ExtraWeightPostList
wt	matcher/selectpostlist.h	/^	mutable double wt;$/;"	m	class:SelectPostList
wt	matcher/synonympostlist.h	/^    const Xapian::Weight * wt;$/;"	m	class:SynonymPostList
wt_factory	matcher/localsubmatch.h	/^    const Xapian::Weight * wt_factory;$/;"	m	class:LocalSubMatch
wt_tab	examples/quest.cc	/^static wt wt_tab[] = {$/;"	v	file:
wtschemes	common/registryinternal.h	/^    std::map<std::string, Xapian::Weight *> wtschemes;$/;"	m	class:Xapian::Registry::Internal
wv	languages/compiler/generator.c	/^static void wv(struct generator * g, struct name * p) {  \/* reference to variable *\/$/;"	f	file:
wvn	languages/compiler/generator.c	/^static void wvn(struct generator * g, struct name * p) {  \/* variable name *\/$/;"	f	file:
x	queryparser/lemon.c	/^  } x;$/;"	m	struct:action	typeref:union:action::__anon26	file:
x1a	queryparser/lemon.c	/^static struct s_x1 *x1a;$/;"	v	typeref:struct:s_x1	file:
x1node	queryparser/lemon.c	/^} x1node;$/;"	t	typeref:struct:s_x1node	file:
x2a	queryparser/lemon.c	/^static struct s_x2 *x2a;$/;"	v	typeref:struct:s_x2	file:
x2node	queryparser/lemon.c	/^} x2node;$/;"	t	typeref:struct:s_x2node	file:
x3a	queryparser/lemon.c	/^static struct s_x3 *x3a;$/;"	v	typeref:struct:s_x3	file:
x3node	queryparser/lemon.c	/^} x3node;$/;"	t	typeref:struct:s_x3node	file:
x4a	queryparser/lemon.c	/^static struct s_x4 *x4a;$/;"	v	typeref:struct:s_x4	file:
x4node	queryparser/lemon.c	/^} x4node;$/;"	t	typeref:struct:s_x4node	file:
x_return	languages/compiler/generator.c	/^    x_return = -1$/;"	e	enum:special_labels	file:
xapian_FD_SET_	common/safesysselect.h	/^inline void xapian_FD_SET_(int fd, fd_set *set) {$/;"	f
xapian_sleep_milliseconds	common/safe.cc	/^xapian_sleep_milliseconds(unsigned int millisecs)$/;"	f
xapianinclude_HEADERS	Makefile	/^xapianinclude_HEADERS = include\/xapian\/base.h \\$/;"	m
xapianinclude_HEADERS	include/Makefile.mk	/^xapianinclude_HEADERS =\\$/;"	m
xapianincludedir	Makefile	/^xapianincludedir = $(incdir)\/xapian$/;"	m
xapianincludedir	include/Makefile.mk	/^xapianincludedir = $(incdir)\/xapian$/;"	m
yy0	queryparser/queryparser_internal.cc	/^  ParseTOKENTYPE yy0;$/;"	m	union:__anon28	file:
yy14	queryparser/queryparser_internal.cc	/^  TermGroup * yy14;$/;"	m	union:__anon28	file:
yy32	queryparser/queryparser_internal.cc	/^  Terms * yy32;$/;"	m	union:__anon28	file:
yy39	queryparser/queryparser_internal.cc	/^  Query * yy39;$/;"	m	union:__anon28	file:
yy40	queryparser/queryparser_internal.cc	/^  ProbQuery * yy40;$/;"	m	union:__anon28	file:
yy46	queryparser/queryparser_internal.cc	/^  int yy46;$/;"	m	union:__anon28	file:
yyFallback	queryparser/queryparser_internal.cc	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyParser	queryparser/queryparser_internal.cc	/^struct yyParser {$/;"	s	file:
yyParser	queryparser/queryparser_internal.cc	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	queryparser/queryparser_internal.cc	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon29	file:
yyRuleName	queryparser/queryparser_internal.cc	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyStackEntry	queryparser/queryparser_internal.cc	/^  yyStackEntry() {$/;"	f	struct:yyStackEntry
yyStackEntry	queryparser/queryparser_internal.cc	/^  yyStackEntry(YYACTIONTYPE stateno_, YYCODETYPE major_, YYMINORTYPE minor_) {$/;"	f	struct:yyStackEntry
yyStackEntry	queryparser/queryparser_internal.cc	/^struct yyStackEntry {$/;"	s	file:
yyTokenName	queryparser/queryparser_internal.cc	/^static const char *const yyTokenName[] = {$/;"	v	file:
yy_accept	queryparser/queryparser_internal.cc	/^static void yy_accept($/;"	f	file:
yy_action	queryparser/queryparser_internal.cc	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_default	queryparser/queryparser_internal.cc	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_destructor	queryparser/queryparser_internal.cc	/^static void yy_destructor($/;"	f	file:
yy_find_reduce_action	queryparser/queryparser_internal.cc	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_shift_action	queryparser/queryparser_internal.cc	/^static int yy_find_shift_action($/;"	f	file:
yy_lookahead	queryparser/queryparser_internal.cc	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_parse_failed	queryparser/queryparser_internal.cc	/^static void yy_parse_failed($/;"	f	file:
yy_pop_parser_stack	queryparser/queryparser_internal.cc	/^static int yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_reduce	queryparser/queryparser_internal.cc	/^static void yy_reduce($/;"	f	file:
yy_reduce_ofst	queryparser/queryparser_internal.cc	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_shift	queryparser/queryparser_internal.cc	/^static void yy_shift($/;"	f	file:
yy_shift_ofst	queryparser/queryparser_internal.cc	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_syntax_error	queryparser/queryparser_internal.cc	/^static void yy_syntax_error($/;"	f	file:
yyerrcnt	queryparser/queryparser_internal.cc	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyinit	queryparser/queryparser_internal.cc	/^  int yyinit;$/;"	m	union:__anon28	file:
yystack	queryparser/queryparser_internal.cc	/^  vector<yyStackEntry> yystack; \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yytestcase	queryparser/queryparser_internal.cc	/^# define yytestcase(/;"	d	file:
zero	backends/brass/brass_dbstats.h	/^    void zero() {$/;"	f	class:BrassDatabaseStats
zero	backends/chert/chert_dbstats.h	/^    void zero() {$/;"	f	class:ChertDatabaseStats
zero_inits	tests/api_weight.cc	/^    unsigned & zero_inits, & non_zero_inits;$/;"	m	class:CheckInitWeight	file:
zeroed_new	backends/brass/brass_table.cc	/^static inline byte *zeroed_new(size_t size)$/;"	f	file:
zeroed_new	backends/chert/chert_table.cc	/^static inline byte *zeroed_new(size_t size)$/;"	f	file:
zeroed_new	backends/flint/flint_table.cc	/^static inline byte *zeroed_new(size_t size)$/;"	f	file:
~BackendManager	tests/harness/backendmanager.cc	/^BackendManager::~BackendManager() { }$/;"	f	class:BackendManager
~BackendManagerRemoteTcp	tests/harness/backendmanager_remotetcp.cc	/^BackendManagerRemoteTcp::~BackendManagerRemoteTcp() {$/;"	f	class:BackendManagerRemoteTcp
~BranchPostList	matcher/branchpostlist.cc	/^BranchPostList::~BranchPostList()$/;"	f	class:BranchPostList
~BrassAllTermsList	backends/brass/brass_alltermslist.cc	/^BrassAllTermsList::~BrassAllTermsList()$/;"	f	class:BrassAllTermsList
~BrassCursor	backends/brass/brass_cursor.cc	/^BrassCursor::~BrassCursor()$/;"	f	class:BrassCursor
~BrassDatabase	backends/brass/brass_database.cc	/^BrassDatabase::~BrassDatabase()$/;"	f	class:BrassDatabase
~BrassMetadataTermList	backends/brass/brass_metadata.cc	/^BrassMetadataTermList::~BrassMetadataTermList()$/;"	f	class:BrassMetadataTermList
~BrassPostList	backends/brass/brass_postlist.cc	/^BrassPostList::~BrassPostList()$/;"	f	class:BrassPostList
~BrassSpellingWordsList	backends/brass/brass_spellingwordslist.cc	/^BrassSpellingWordsList::~BrassSpellingWordsList()$/;"	f	class:BrassSpellingWordsList
~BrassSynonymTermList	backends/brass/brass_synonym.cc	/^BrassSynonymTermList::~BrassSynonymTermList()$/;"	f	class:BrassSynonymTermList
~BrassTable	backends/brass/brass_table.cc	/^BrassTable::~BrassTable() {$/;"	f	class:BrassTable
~BrassTable_base	backends/brass/brass_btreebase.cc	/^BrassTable_base::~BrassTable_base()$/;"	f	class:BrassTable_base
~BrassValueList	backends/brass/brass_valuelist.cc	/^BrassValueList::~BrassValueList()$/;"	f	class:BrassValueList
~BrassWritableDatabase	backends/brass/brass_database.cc	/^BrassWritableDatabase::~BrassWritableDatabase()$/;"	f	class:BrassWritableDatabase
~ChertAllTermsList	backends/chert/chert_alltermslist.cc	/^ChertAllTermsList::~ChertAllTermsList()$/;"	f	class:ChertAllTermsList
~ChertCursor	backends/chert/chert_cursor.cc	/^ChertCursor::~ChertCursor()$/;"	f	class:ChertCursor
~ChertDatabase	backends/chert/chert_database.cc	/^ChertDatabase::~ChertDatabase()$/;"	f	class:ChertDatabase
~ChertMetadataTermList	backends/chert/chert_metadata.cc	/^ChertMetadataTermList::~ChertMetadataTermList()$/;"	f	class:ChertMetadataTermList
~ChertModifiedPostList	backends/chert/chert_modifiedpostlist.cc	/^ChertModifiedPostList::~ChertModifiedPostList()$/;"	f	class:ChertModifiedPostList
~ChertPostList	backends/chert/chert_postlist.cc	/^ChertPostList::~ChertPostList()$/;"	f	class:ChertPostList
~ChertSpellingWordsList	backends/chert/chert_spellingwordslist.cc	/^ChertSpellingWordsList::~ChertSpellingWordsList()$/;"	f	class:ChertSpellingWordsList
~ChertSynonymTermList	backends/chert/chert_synonym.cc	/^ChertSynonymTermList::~ChertSynonymTermList()$/;"	f	class:ChertSynonymTermList
~ChertTable	backends/chert/chert_table.cc	/^ChertTable::~ChertTable() {$/;"	f	class:ChertTable
~ChertTable_base	backends/chert/chert_btreebase.cc	/^ChertTable_base::~ChertTable_base()$/;"	f	class:ChertTable_base
~ChertValueList	backends/chert/chert_valuelist.cc	/^ChertValueList::~ChertValueList()$/;"	f	class:ChertValueList
~ChertWritableDatabase	backends/chert/chert_database.cc	/^ChertWritableDatabase::~ChertWritableDatabase()$/;"	f	class:ChertWritableDatabase
~Compactor	api/compactor.cc	/^Compactor::~Compactor() { }$/;"	f	class:Xapian::Compactor
~Database	api/omdatabase.cc	/^Database::~Database()$/;"	f	class:Xapian::Database
~DatabaseReplica	api/replication.cc	/^DatabaseReplica::~DatabaseReplica()$/;"	f	class:DatabaseReplica
~DatabaseReplicator	backends/databasereplicator.cc	/^DatabaseReplicator::~DatabaseReplicator()$/;"	f	class:Xapian::DatabaseReplicator
~DebugLogFunc	common/debuglog.h	/^    ~DebugLogFunc() {$/;"	f	class:DebugLogFunc
~DebugLogFuncVoid	common/debuglog.h	/^    ~DebugLogFuncVoid() {$/;"	f	class:DebugLogFuncVoid
~DebugLogger	common/debuglog.cc	/^DebugLogger::~DebugLogger()$/;"	f	class:DebugLogger
~Document	api/omdocument.cc	/^Document::~Document()$/;"	f	class:Xapian::Document
~ESet	api/omenquire.cc	/^ESet::~ESet()$/;"	f	class:Xapian::ESet
~Enquire	api/omenquire.cc	/^Enquire::~Enquire()$/;"	f	class:Xapian::Enquire
~ErrorHandler	api/errorhandler.cc	/^Xapian::ErrorHandler::~ErrorHandler() { }$/;"	f	class:Xapian::ErrorHandler
~ExactPhrasePostList	matcher/exactphrasepostlist.cc	/^ExactPhrasePostList::~ExactPhrasePostList()$/;"	f	class:ExactPhrasePostList
~ExpandDecider	api/expanddecider.cc	/^ExpandDecider::~ExpandDecider() { }$/;"	f	class:Xapian::ExpandDecider
~ExternalPostList	matcher/externalpostlist.cc	/^ExternalPostList::~ExternalPostList()$/;"	f	class:ExternalPostList
~ExtraWeightPostList	matcher/extraweightpostlist.h	/^	~ExtraWeightPostList() {$/;"	f	class:ExtraWeightPostList
~FDTracker	tests/harness/fdtracker.cc	/^FDTracker::~FDTracker()$/;"	f	class:FDTracker
~FlintAllTermsList	backends/flint/flint_alltermslist.cc	/^FlintAllTermsList::~FlintAllTermsList()$/;"	f	class:FlintAllTermsList
~FlintCursor	backends/flint/flint_cursor.cc	/^FlintCursor::~FlintCursor()$/;"	f	class:FlintCursor
~FlintDatabase	backends/flint/flint_database.cc	/^FlintDatabase::~FlintDatabase()$/;"	f	class:FlintDatabase
~FlintLock	backends/flint_lock.h	/^    ~FlintLock() { release(); }$/;"	f	class:FlintLock
~FlintMetadataTermList	backends/flint/flint_metadata.cc	/^FlintMetadataTermList::~FlintMetadataTermList()$/;"	f	class:FlintMetadataTermList
~FlintModifiedPostList	backends/flint/flint_modifiedpostlist.cc	/^FlintModifiedPostList::~FlintModifiedPostList()$/;"	f	class:FlintModifiedPostList
~FlintPostList	backends/flint/flint_postlist.cc	/^FlintPostList::~FlintPostList()$/;"	f	class:FlintPostList
~FlintSpellingWordsList	backends/flint/flint_spellingwordslist.cc	/^FlintSpellingWordsList::~FlintSpellingWordsList()$/;"	f	class:FlintSpellingWordsList
~FlintSynonymTermList	backends/flint/flint_synonym.cc	/^FlintSynonymTermList::~FlintSynonymTermList()$/;"	f	class:FlintSynonymTermList
~FlintTable	backends/flint/flint_table.cc	/^FlintTable::~FlintTable() {$/;"	f	class:FlintTable
~FlintTable_base	backends/flint/flint_btreebase.cc	/^FlintTable_base::~FlintTable_base()$/;"	f	class:FlintTable_base
~FlintWritableDatabase	backends/flint/flint_database.cc	/^FlintWritableDatabase::~FlintWritableDatabase()$/;"	f	class:FlintWritableDatabase
~InMemoryDatabase	backends/inmemory/inmemory_database.cc	/^InMemoryDatabase::~InMemoryDatabase()$/;"	f	class:InMemoryDatabase
~Internal	api/omdocument.cc	/^Xapian::Document::Internal::~Internal()$/;"	f	class:Xapian::Document::Internal
~Internal	api/omenquire.cc	/^Enquire::Internal::~Internal()$/;"	f	class:Xapian::Enquire::Internal
~Internal	api/omqueryinternal.cc	/^Xapian::Query::Internal::~Internal()$/;"	f	class:Xapian::Query::Internal
~Internal	api/postlist.cc	/^PostingIterator::Internal::~Internal() { }$/;"	f	class:Xapian::PostingIterator::Internal
~Internal	api/registry.cc	/^Registry::Internal::~Internal()$/;"	f	class:Xapian::Registry::Internal
~Internal	api/replication.cc	/^    ~Internal() { delete conn; }$/;"	f	class:DatabaseReplica::Internal
~Internal	api/termlist.cc	/^TermIterator::Internal::~Internal() { }$/;"	f	class:Xapian::TermIterator::Internal
~Internal	backends/database.cc	/^Database::Internal::~Internal()$/;"	f	class:Xapian::Database::Internal
~Internal	backends/valuelist.cc	/^ValueIterator::Internal::~Internal() { }$/;"	f	class:Xapian::ValueIterator::Internal
~Internal	common/positionlist.h	/^	virtual ~Internal() { }$/;"	f	class:Xapian::PositionIterator::Internal
~InternalStemDanish	languages/danish.cc	/^Xapian::InternalStemDanish::~InternalStemDanish()$/;"	f	class:Xapian::InternalStemDanish
~InternalStemDutch	languages/dutch.cc	/^Xapian::InternalStemDutch::~InternalStemDutch()$/;"	f	class:Xapian::InternalStemDutch
~InternalStemEnglish	languages/english.cc	/^Xapian::InternalStemEnglish::~InternalStemEnglish()$/;"	f	class:Xapian::InternalStemEnglish
~InternalStemFinnish	languages/finnish.cc	/^Xapian::InternalStemFinnish::~InternalStemFinnish()$/;"	f	class:Xapian::InternalStemFinnish
~InternalStemFrench	languages/french.cc	/^Xapian::InternalStemFrench::~InternalStemFrench()$/;"	f	class:Xapian::InternalStemFrench
~InternalStemGerman	languages/german.cc	/^Xapian::InternalStemGerman::~InternalStemGerman()$/;"	f	class:Xapian::InternalStemGerman
~InternalStemGerman2	languages/german2.cc	/^Xapian::InternalStemGerman2::~InternalStemGerman2()$/;"	f	class:Xapian::InternalStemGerman2
~InternalStemHungarian	languages/hungarian.cc	/^Xapian::InternalStemHungarian::~InternalStemHungarian()$/;"	f	class:Xapian::InternalStemHungarian
~InternalStemItalian	languages/italian.cc	/^Xapian::InternalStemItalian::~InternalStemItalian()$/;"	f	class:Xapian::InternalStemItalian
~InternalStemKraaij_pohlmann	languages/kraaij_pohlmann.cc	/^Xapian::InternalStemKraaij_pohlmann::~InternalStemKraaij_pohlmann()$/;"	f	class:Xapian::InternalStemKraaij_pohlmann
~InternalStemLovins	languages/lovins.cc	/^Xapian::InternalStemLovins::~InternalStemLovins()$/;"	f	class:Xapian::InternalStemLovins
~InternalStemNorwegian	languages/norwegian.cc	/^Xapian::InternalStemNorwegian::~InternalStemNorwegian()$/;"	f	class:Xapian::InternalStemNorwegian
~InternalStemPorter	languages/porter.cc	/^Xapian::InternalStemPorter::~InternalStemPorter()$/;"	f	class:Xapian::InternalStemPorter
~InternalStemPortuguese	languages/portuguese.cc	/^Xapian::InternalStemPortuguese::~InternalStemPortuguese()$/;"	f	class:Xapian::InternalStemPortuguese
~InternalStemRomanian	languages/romanian.cc	/^Xapian::InternalStemRomanian::~InternalStemRomanian()$/;"	f	class:Xapian::InternalStemRomanian
~InternalStemRussian	languages/russian.cc	/^Xapian::InternalStemRussian::~InternalStemRussian()$/;"	f	class:Xapian::InternalStemRussian
~InternalStemSpanish	languages/spanish.cc	/^Xapian::InternalStemSpanish::~InternalStemSpanish()$/;"	f	class:Xapian::InternalStemSpanish
~InternalStemSwedish	languages/swedish.cc	/^Xapian::InternalStemSwedish::~InternalStemSwedish()$/;"	f	class:Xapian::InternalStemSwedish
~InternalStemTurkish	languages/turkish.cc	/^Xapian::InternalStemTurkish::~InternalStemTurkish()$/;"	f	class:Xapian::InternalStemTurkish
~KeyMaker	api/keymaker.cc	/^KeyMaker::~KeyMaker() { }$/;"	f	class:Xapian::KeyMaker
~LeafPostList	api/leafpostlist.cc	/^LeafPostList::~LeafPostList()$/;"	f	class:LeafPostList
~MSVCIgnoreInvalidParameter	common/socket_utils.cc	/^    ~MSVCIgnoreInvalidParameter() {$/;"	f	class:MSVCIgnoreInvalidParameter
~MSet	api/omenquire.cc	/^MSet::~MSet()$/;"	f	class:Xapian::MSet
~MatchDecider	api/omenquire.cc	/^MatchDecider::~MatchDecider() { }$/;"	f	class:Xapian::MatchDecider
~MatchSpy	api/matchspy.cc	/^MatchSpy::~MatchSpy() {}$/;"	f	class:MatchSpy
~MatchSpyList	net/remoteserver.cc	/^    ~MatchSpyList() {$/;"	f	struct:MatchSpyList
~MergeCursor	backends/brass/brass_compact.cc	/^    ~MergeCursor() {$/;"	f	struct:BrassCompact::MergeCursor
~MergeCursor	backends/chert/chert_compact.cc	/^    ~MergeCursor() {$/;"	f	struct:ChertCompact::MergeCursor
~MergeCursor	backends/flint/flint_compact.cc	/^    ~MergeCursor() {$/;"	f	struct:FlintCompact::MergeCursor
~MergePostList	matcher/mergepostlist.cc	/^MergePostList::~MergePostList()$/;"	f	class:MergePostList
~MultiAllTermsList	backends/multi/multi_alltermslist.cc	/^MultiAllTermsList::~MultiAllTermsList()$/;"	f	class:MultiAllTermsList
~MultiAndPostList	matcher/multiandpostlist.cc	/^MultiAndPostList::~MultiAndPostList()$/;"	f	class:MultiAndPostList
~MultiPostList	backends/multi/multi_postlist.cc	/^MultiPostList::~MultiPostList()$/;"	f	class:MultiPostList
~MultiTermList	backends/multi/multi_termlist.cc	/^MultiTermList::~MultiTermList()$/;"	f	class:MultiTermList
~MultiValueList	backends/multi/multi_valuelist.cc	/^MultiValueList::~MultiValueList()$/;"	f	class:MultiValueList
~MultiXorPostList	matcher/multixorpostlist.cc	/^MultiXorPostList::~MultiXorPostList()$/;"	f	class:MultiXorPostList
~MyWeight	tests/api_db.cc	/^    ~MyWeight() { }$/;"	f	class:MyWeight
~OrTermList	expand/ortermlist.cc	/^OrTermList::~OrTermList()$/;"	f	class:OrTermList
~ParserHandler	queryparser/queryparser_internal.cc	/^    ~ParserHandler() { ParseFree(parser); }$/;"	f	class:ParserHandler
~PerfTestLogger	tests/perftest/perftest.cc	/^PerfTestLogger::~PerfTestLogger()$/;"	f	class:PerfTestLogger
~PositionIterator	api/ompositionlistiterator.cc	/^Xapian::PositionIterator::~PositionIterator()$/;"	f	class:Xapian::PositionIterator
~PostingIterator	api/ompostlistiterator.cc	/^Xapian::PostingIterator::~PostingIterator() {$/;"	f	class:Xapian::PostingIterator
~PostingSource	api/postingsource.cc	/^PostingSource::~PostingSource() { }$/;"	f	class:Xapian::PostingSource
~PostlistCursor	backends/brass/brass_compact.cc	/^    ~PostlistCursor()$/;"	f	class:BrassCompact::PostlistCursor
~PostlistCursor	backends/chert/chert_compact.cc	/^    ~PostlistCursor()$/;"	f	class:ChertCompact::PostlistCursor
~PostlistCursor	backends/flint/flint_compact.cc	/^    ~PostlistCursor()$/;"	f	class:FlintCompact::PostlistCursor
~ProbQuery	queryparser/queryparser_internal.cc	/^    ~ProbQuery() {$/;"	f	struct:ProbQuery
~ProgClient	net/progclient.cc	/^ProgClient::~ProgClient()$/;"	f	class:ProgClient
~Query	api/omquery.cc	/^Query::~Query()$/;"	f	class:Xapian::Query
~QueryParser	queryparser/queryparser.cc	/^QueryParser::~QueryParser() { }$/;"	f	class:QueryParser
~RSet	api/omenquire.cc	/^RSet::~RSet()$/;"	f	class:Xapian::RSet
~RefCntPtr	include/xapian/base.h	/^inline RefCntPtr<T>::~RefCntPtr()$/;"	f	class:Xapian::Internal::RefCntPtr
~Registry	api/registry.cc	/^Registry::~Registry()$/;"	f	class:Xapian::Registry
~RemoteConnection	net/remoteconnection.cc	/^RemoteConnection::~RemoteConnection()$/;"	f	class:RemoteConnection
~RemoteServer	net/remoteserver.cc	/^RemoteServer::~RemoteServer()$/;"	f	class:RemoteServer
~RemoteTcpClient	net/remotetcpclient.cc	/^RemoteTcpClient::~RemoteTcpClient()$/;"	f	class:RemoteTcpClient
~ReplicateTcpClient	net/replicatetcpclient.cc	/^ReplicateTcpClient::~ReplicateTcpClient()$/;"	f	class:ReplicateTcpClient
~ReplicateTcpServer	net/replicatetcpserver.cc	/^ReplicateTcpServer::~ReplicateTcpServer() {$/;"	f	class:ReplicateTcpServer
~SelectPostList	matcher/selectpostlist.h	/^        ~SelectPostList() { delete source; }$/;"	f	class:SelectPostList
~SignalRedirector	tests/harness/testsuite.cc	/^    ~SignalRedirector() {$/;"	f	class:SignalRedirector
~SnowballStemImplementation	languages/steminternal.cc	/^SnowballStemImplementation::~SnowballStemImplementation()$/;"	f	class:Xapian::SnowballStemImplementation
~Stem	languages/stem.cc	/^Stem::~Stem() { }$/;"	f	class:Xapian::Stem
~StemImplementation	languages/steminternal.cc	/^StemImplementation::~StemImplementation() { }$/;"	f	class:Xapian::StemImplementation
~Stopper	include/xapian/queryparser.h	/^    virtual ~Stopper() { }$/;"	f	class:Xapian::Stopper
~SubMatch	common/submatch.h	/^    virtual ~SubMatch() { }$/;"	f	class:SubMatch
~SubValueList	backends/multi/multi_valuelist.cc	/^    ~SubValueList() {$/;"	f	struct:SubValueList
~SynonymPostList	matcher/synonympostlist.cc	/^SynonymPostList::~SynonymPostList()$/;"	f	class:SynonymPostList
~TcpServer	net/tcpserver.cc	/^TcpServer::~TcpServer()$/;"	f	class:TcpServer
~TempDtorTest	tests/internaltest.cc	/^    ~TempDtorTest() { --count; }$/;"	f	struct:TempDtorTest
~TermGenerator	queryparser/termgenerator.cc	/^TermGenerator::~TermGenerator() { }$/;"	f	class:TermGenerator
~TermGroup	queryparser/queryparser_internal.cc	/^    ~TermGroup() {$/;"	f	class:TermGroup
~TermIterator	api/omtermlistiterator.cc	/^Xapian::TermIterator::~TermIterator() {$/;"	f	class:Xapian::TermIterator
~Terms	queryparser/queryparser_internal.cc	/^    ~Terms() {$/;"	f	class:Terms
~TestRunner	tests/harness/testrunner.cc	/^TestRunner::~TestRunner() { }$/;"	f	class:TestRunner
~ValueIterator	api/valueiterator.cc	/^ValueIterator::~ValueIterator() { }$/;"	f	class:Xapian::ValueIterator
~ValueRangePostList	matcher/valuerangepostlist.cc	/^ValueRangePostList::~ValueRangePostList()$/;"	f	class:ValueRangePostList
~ValueRangeProcessor	queryparser/queryparser.cc	/^ValueRangeProcessor::~ValueRangeProcessor() { }$/;"	f	class:ValueRangeProcessor
~ValueStreamDocument	matcher/valuestreamdocument.cc	/^ValueStreamDocument::~ValueStreamDocument()$/;"	f	class:ValueStreamDocument
~ValueUpdater	backends/brass/brass_values.cc	/^    ~ValueUpdater() {$/;"	f	class:Brass::ValueUpdater
~ValueUpdater	backends/chert/chert_values.cc	/^    ~ValueUpdater() {$/;"	f	class:ValueUpdater
~Weight	weight/weight.cc	/^Weight::~Weight() { }$/;"	f	class:Xapian::Weight
~WinsockInitializer	common/remoteconnection.h	/^    ~WinsockInitializer() {$/;"	f	struct:WinsockInitializer
~WritableDatabase	api/omdatabase.cc	/^WritableDatabase::~WritableDatabase()$/;"	f	class:Xapian::WritableDatabase
~dircloser	common/utils.cc	/^    ~dircloser() {$/;"	f	class:dircloser
~edist_state	api/editdistance.cc	/^edist_state<CHR>::~edist_state() {$/;"	f	class:edist_state
~fdcloser	common/utils.h	/^	~fdcloser() {$/;"	f	class:fdcloser
~test_autoptr	tests/internaltest.cc	/^    ~test_autoptr() {$/;"	f	class:test_autoptr
~test_refcnt	tests/internaltest.cc	/^	~test_refcnt() {$/;"	f	class:test_refcnt
~unset_max_changesets_helper_	tests/api_replicate.cc	/^    ~unset_max_changesets_helper_() { set_max_changesets(0); }$/;"	f	struct:unset_max_changesets_helper_
